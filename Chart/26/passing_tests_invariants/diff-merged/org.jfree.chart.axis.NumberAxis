{
    "org.jfree.chart.axis.NumberAxis": [
        {
            "refreshTicksHorizontal(java.awt.Graphics2D, java.awt.geom.Rectangle2D, org.jfree.chart.util.RectangleEdge)": [
                {
                    "ENTER": [
                        {
                            "Patch93.inv.output": {
                                "invs": [
                                    "edge.name has only one value",
                                    "edge.name.toString == \"RectangleEdge.BOTTOM\"",
                                    "edge has only one value"
                                ]
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": [
                                    "edge.name.toString one of { \"RectangleEdge.BOTTOM\", \"RectangleEdge.TOP\" }"
                                ]
                            }
                        }
                    ]
                },
                {
                    "EXIT": [
                        {
                            "Patch93.inv.output": {
                                "invs": [
                                    "edge.name has only one value",
                                    "edge.name.toString == \"RectangleEdge.BOTTOM\""
                                ]
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": [
                                    "edge.name.toString one of { \"RectangleEdge.BOTTOM\", \"RectangleEdge.TOP\" }"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "draw(java.awt.Graphics2D, double, java.awt.geom.Rectangle2D, java.awt.geom.Rectangle2D, org.jfree.chart.util.RectangleEdge, org.jfree.chart.plot.PlotRenderingInfo)": [
                {
                    "ENTER": [
                        {
                            "Patch93.inv.output": {
                                "invs": [
                                    "edge.name.toString one of { \"RectangleEdge.BOTTOM\", \"RectangleEdge.LEFT\" }",
                                    "plotState.owner.chartArea has only one value",
                                    "plotState.dataArea has only one value",
                                    "plotState.owner has only one value",
                                    "plotState.owner.entities has only one value",
                                    "plotState.subplotInfo has only one value",
                                    "plotState.owner.plotInfo has only one value",
                                    "plotState.plotArea has only one value"
                                ]
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": [
                                    "edge.name.toString one of { \"RectangleEdge.BOTTOM\", \"RectangleEdge.LEFT\", \"RectangleEdge.TOP\" }"
                                ]
                            }
                        }
                    ]
                },
                {
                    "EXIT": [
                        {
                            "Patch93.inv.output": {
                                "invs": [
                                    "edge.name.toString one of { \"RectangleEdge.BOTTOM\", \"RectangleEdge.LEFT\" }",
                                    "plotState.owner.chartArea has only one value",
                                    "plotState.owner.entities has only one value",
                                    "plotState.owner has only one value",
                                    "plotState.dataArea has only one value",
                                    "plotState.subplotInfo has only one value",
                                    "plotState.owner.plotInfo has only one value",
                                    "plotState.plotArea has only one value"
                                ]
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": [
                                    "edge.name.toString one of { \"RectangleEdge.BOTTOM\", \"RectangleEdge.LEFT\", \"RectangleEdge.TOP\" }"
                                ]
                            }
                        }
                    ]
                },
                {
                    "EXITNN": [
                        {
                            "683": [
                                {
                                    "Patch93.inv.output": {
                                        "invs": []
                                    }
                                },
                                {
                                    "b.inv.output": {
                                        "invs": []
                                    }
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "refreshTicks(java.awt.Graphics2D, org.jfree.chart.axis.AxisState, java.awt.geom.Rectangle2D, org.jfree.chart.util.RectangleEdge)": [
                {
                    "ENTER": [
                        {
                            "Patch93.inv.output": {
                                "invs": [
                                    "edge.name.toString one of { \"RectangleEdge.BOTTOM\", \"RectangleEdge.LEFT\" }"
                                ]
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": [
                                    "edge.name.toString one of { \"RectangleEdge.BOTTOM\", \"RectangleEdge.LEFT\", \"RectangleEdge.TOP\" }"
                                ]
                            }
                        }
                    ]
                },
                {
                    "EXIT": [
                        {
                            "Patch93.inv.output": {
                                "invs": [
                                    "edge.name.toString one of { \"RectangleEdge.BOTTOM\", \"RectangleEdge.LEFT\" }"
                                ]
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": [
                                    "edge.name.toString one of { \"RectangleEdge.BOTTOM\", \"RectangleEdge.LEFT\", \"RectangleEdge.TOP\" }"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "selectAutoTickUnit(java.awt.Graphics2D, java.awt.geom.Rectangle2D, org.jfree.chart.util.RectangleEdge)": [
                {
                    "ENTER": [
                        {
                            "Patch93.inv.output": {
                                "invs": [
                                    "edge.name.toString one of { \"RectangleEdge.BOTTOM\", \"RectangleEdge.LEFT\" }"
                                ]
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": [
                                    "edge.name.toString one of { \"RectangleEdge.BOTTOM\", \"RectangleEdge.LEFT\", \"RectangleEdge.TOP\" }"
                                ]
                            }
                        }
                    ]
                },
                {
                    "EXIT": [
                        {
                            "Patch93.inv.output": {
                                "invs": [
                                    "edge.name.toString one of { \"RectangleEdge.BOTTOM\", \"RectangleEdge.LEFT\" }"
                                ]
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": [
                                    "edge.name.toString one of { \"RectangleEdge.BOTTOM\", \"RectangleEdge.LEFT\", \"RectangleEdge.TOP\" }"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "valueToJava2D(double, java.awt.geom.Rectangle2D, org.jfree.chart.util.RectangleEdge)": [
                {
                    "ENTER": [
                        {
                            "Patch93.inv.output": {
                                "invs": [
                                    "edge.name.toString one of { \"RectangleEdge.BOTTOM\", \"RectangleEdge.LEFT\" }"
                                ]
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": [
                                    "edge.name.toString one of { \"RectangleEdge.BOTTOM\", \"RectangleEdge.LEFT\", \"RectangleEdge.TOP\" }"
                                ]
                            }
                        }
                    ]
                },
                {
                    "EXIT": [
                        {
                            "Patch93.inv.output": {
                                "invs": [
                                    "edge.name.toString one of { \"RectangleEdge.BOTTOM\", \"RectangleEdge.LEFT\" }"
                                ]
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": [
                                    "edge.name.toString one of { \"RectangleEdge.BOTTOM\", \"RectangleEdge.LEFT\", \"RectangleEdge.TOP\" }"
                                ]
                            }
                        }
                    ]
                },
                {
                    "EXITNN": [
                        {
                            "544": [
                                {
                                    "Patch93.inv.output": {
                                        "invs": []
                                    }
                                },
                                {
                                    "b.inv.output": {
                                        "invs": []
                                    }
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "selectHorizontalAutoTickUnit(java.awt.Graphics2D, java.awt.geom.Rectangle2D, org.jfree.chart.util.RectangleEdge)": [
                {
                    "ENTER": [
                        {
                            "Patch93.inv.output": {
                                "invs": [
                                    "edge.name has only one value",
                                    "edge.name.toString == \"RectangleEdge.BOTTOM\"",
                                    "edge has only one value"
                                ]
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": [
                                    "edge.name.toString one of { \"RectangleEdge.BOTTOM\", \"RectangleEdge.TOP\" }"
                                ]
                            }
                        }
                    ]
                },
                {
                    "EXIT": [
                        {
                            "Patch93.inv.output": {
                                "invs": [
                                    "edge.name has only one value",
                                    "edge.name.toString == \"RectangleEdge.BOTTOM\""
                                ]
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": [
                                    "edge.name.toString one of { \"RectangleEdge.BOTTOM\", \"RectangleEdge.TOP\" }"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "hashCode()": [
                {
                    "ENTER": [
                        {
                            "Patch93.inv.output": {
                                "invs": [
                                    "this.plot.getClass().getName() == org.jfree.chart.plot.XYPlot.class"
                                ]
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": [
                                    "this.tickUnit.size >= 0.25"
                                ]
                            }
                        }
                    ]
                },
                {
                    "EXIT": [
                        {
                            "Patch93.inv.output": {
                                "invs": [
                                    "this.plot.getClass().getName() == org.jfree.chart.plot.XYPlot.class"
                                ]
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": [
                                    "this.tickUnit.size >= 0.25"
                                ]
                            }
                        }
                    ]
                },
                {
                    "EXITNN": [
                        {
                            "1369": [
                                {
                                    "Patch93.inv.output": {
                                        "invs": []
                                    }
                                },
                                {
                                    "b.inv.output": {
                                        "invs": []
                                    }
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}