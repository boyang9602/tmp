{
    "org.jfree.chart.axis.CategoryAxis": [
        {
            "equalPaintMaps(java.util.Map, java.util.Map)": [
                {
                    "ENTER": [
                        {
                            "Patch93.inv.output": {
                                "invs": []
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": [
                                    "this.plot.foregroundAlpha == 1.0"
                                ]
                            }
                        },
                        {
                            "Patch18.inv.output": {
                                "invs": []
                            }
                        }
                    ]
                },
                {
                    "EXIT": [
                        {
                            "Patch93.inv.output": {
                                "invs": []
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": [
                                    "this.plot.foregroundAlpha == 1.0"
                                ]
                            }
                        },
                        {
                            "Patch18.inv.output": {
                                "invs": []
                            }
                        }
                    ]
                },
                {
                    "EXITNN": [
                        {
                            "1290": [
                                {
                                    "Patch93.inv.output": {
                                        "invs": []
                                    }
                                },
                                {
                                    "b.inv.output": {
                                        "invs": []
                                    }
                                },
                                {
                                    "Patch18.inv.output": {
                                        "invs": []
                                    }
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "configure()": [
                {
                    "ENTER": [
                        {
                            "Patch93.inv.output": {
                                "invs": []
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": [
                                    "this.plot.foregroundAlpha == 1.0"
                                ]
                            }
                        },
                        {
                            "Patch18.inv.output": {
                                "invs": []
                            }
                        }
                    ]
                },
                {
                    "EXIT": [
                        {
                            "Patch93.inv.output": {
                                "invs": []
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": [
                                    "this.plot.foregroundAlpha == 1.0"
                                ]
                            }
                        },
                        {
                            "Patch18.inv.output": {
                                "invs": []
                            }
                        }
                    ]
                }
            ]
        },
        {
            "reserveSpace(java.awt.Graphics2D, org.jfree.chart.plot.Plot, java.awt.geom.Rectangle2D, org.jfree.chart.util.RectangleEdge, org.jfree.chart.axis.AxisSpace)": [
                {
                    "EXITNN": [
                        {
                            "781": [
                                {
                                    "Patch93.inv.output": "N/A"
                                },
                                {
                                    "b.inv.output": {
                                        "invs": []
                                    }
                                },
                                {
                                    "Patch18.inv.output": "N/A"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "writeObject(java.io.ObjectOutputStream)": [
                {
                    "ENTER": [
                        {
                            "Patch93.inv.output": {
                                "invs": []
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": [
                                    "this.plot.foregroundAlpha == 1.0"
                                ]
                            }
                        },
                        {
                            "Patch18.inv.output": {
                                "invs": []
                            }
                        }
                    ]
                },
                {
                    "EXIT": [
                        {
                            "Patch93.inv.output": {
                                "invs": []
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": [
                                    "this.plot.foregroundAlpha == 1.0"
                                ]
                            }
                        },
                        {
                            "Patch18.inv.output": {
                                "invs": []
                            }
                        }
                    ]
                }
            ]
        },
        {
            "writePaintMap(java.util.Map, java.io.ObjectOutputStream)": [
                {
                    "ENTER": [
                        {
                            "Patch93.inv.output": {
                                "invs": []
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": [
                                    "this.plot.foregroundAlpha == 1.0"
                                ]
                            }
                        },
                        {
                            "Patch18.inv.output": {
                                "invs": []
                            }
                        }
                    ]
                },
                {
                    "EXIT": [
                        {
                            "Patch93.inv.output": {
                                "invs": []
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": [
                                    "this.plot.foregroundAlpha == 1.0"
                                ]
                            }
                        },
                        {
                            "Patch18.inv.output": {
                                "invs": []
                            }
                        }
                    ]
                }
            ]
        },
        {
            "refreshTicks(java.awt.Graphics2D, org.jfree.chart.axis.AxisState, java.awt.geom.Rectangle2D, org.jfree.chart.util.RectangleEdge)": [
                {
                    "EXITNN": [
                        {
                            "1027": [
                                {
                                    "Patch93.inv.output": "N/A"
                                },
                                {
                                    "b.inv.output": {
                                        "invs": []
                                    }
                                },
                                {
                                    "Patch18.inv.output": "N/A"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "equals(java.lang.Object)": [
                {
                    "ENTER": [
                        {
                            "Patch93.inv.output": {
                                "invs": []
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": [
                                    "this.plot.foregroundAlpha == 1.0"
                                ]
                            }
                        },
                        {
                            "Patch18.inv.output": {
                                "invs": []
                            }
                        }
                    ]
                },
                {
                    "EXIT": [
                        {
                            "Patch93.inv.output": {
                                "invs": []
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": [
                                    "this.plot.foregroundAlpha == 1.0"
                                ]
                            }
                        },
                        {
                            "Patch18.inv.output": {
                                "invs": []
                            }
                        }
                    ]
                },
                {
                    "EXITNN": [
                        {
                            "1165": [
                                {
                                    "Patch93.inv.output": {
                                        "invs": []
                                    }
                                },
                                {
                                    "b.inv.output": {
                                        "invs": []
                                    }
                                },
                                {
                                    "Patch18.inv.output": {
                                        "invs": []
                                    }
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "getLowerMargin()": [
                {
                    "ENTER": [
                        {
                            "f.inv.output": {
                                "invs": []
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": [
                                    "this.label.toString one of { \"Category\", \"Category Axis\", \"X\" }",
                                    "this.plot.foregroundAlpha == 1.0",
                                    "this.categoryMargin == 0.2"
                                ]
                            }
                        }
                    ]
                },
                {
                    "EXIT": [
                        {
                            "f.inv.output": {
                                "invs": []
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": [
                                    "this.categoryMargin == 0.2",
                                    "this.label.toString one of { \"Category\", \"Category Axis\", \"X\" }",
                                    "this.plot.foregroundAlpha == 1.0"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "getCategoryMargin()": [
                {
                    "ENTER": [
                        {
                            "f.inv.output": {
                                "invs": [
                                    "this.label.toString one of { \"Category\", \"Domain\" }"
                                ]
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": [
                                    "this.categoryMargin == 0.2",
                                    "this.plot.foregroundAlpha == 1.0",
                                    "this.label.toString == \"Category\"",
                                    "this.label has only one value"
                                ]
                            }
                        }
                    ]
                },
                {
                    "EXIT": [
                        {
                            "f.inv.output": {
                                "invs": [
                                    "return one of { 0.0, 0.2 }",
                                    "this.label.toString one of { \"Category\", \"Domain\" }"
                                ]
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": [
                                    "return == 0.2",
                                    "this.categoryMargin == 0.2",
                                    "this.plot.foregroundAlpha == 1.0",
                                    "this.label.toString == \"Category\"",
                                    "this.label has only one value"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "calculateCategoryGapSize(int, java.awt.geom.Rectangle2D, org.jfree.chart.util.RectangleEdge)": [
                {
                    "ENTER": [
                        {
                            "f.inv.output": {
                                "invs": [
                                    "edge.name.toString one of { \"RectangleEdge.BOTTOM\", \"RectangleEdge.LEFT\" }",
                                    "this.label.toString one of { \"Category\", \"Domain\" }",
                                    "categoryCount >= 1"
                                ]
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": [
                                    "edge.name has only one value",
                                    "this.categoryMargin == 0.2",
                                    "edge.name.toString == \"RectangleEdge.BOTTOM\"",
                                    "this.plot.foregroundAlpha == 1.0",
                                    "edge has only one value",
                                    "this.label.toString == \"Category\"",
                                    "this.label has only one value",
                                    "categoryCount one of { 1, 2, 3 }"
                                ]
                            }
                        }
                    ]
                },
                {
                    "EXIT": [
                        {
                            "f.inv.output": {
                                "invs": [
                                    "edge.name.toString one of { \"RectangleEdge.BOTTOM\", \"RectangleEdge.LEFT\" }",
                                    "this.label.toString one of { \"Category\", \"Domain\" }"
                                ]
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": [
                                    "return >= 0.0",
                                    "edge.name has only one value",
                                    "this.categoryMargin == 0.2",
                                    "edge.name.toString == \"RectangleEdge.BOTTOM\"",
                                    "this.plot.foregroundAlpha == 1.0",
                                    "this.label.toString == \"Category\"",
                                    "this.label has only one value"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "getCategoryStart(int, int, java.awt.geom.Rectangle2D, org.jfree.chart.util.RectangleEdge)": [
                {
                    "ENTER": [
                        {
                            "f.inv.output": {
                                "invs": [
                                    "edge.name.toString one of { \"RectangleEdge.BOTTOM\", \"RectangleEdge.LEFT\" }",
                                    "this.label.toString one of { \"Category\", \"Domain\" }",
                                    "category >= 0",
                                    "categoryCount >= 1"
                                ]
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": [
                                    "category one of { 0, 1, 2 }",
                                    "edge.name has only one value",
                                    "this.categoryMargin == 0.2",
                                    "edge.name.toString == \"RectangleEdge.BOTTOM\"",
                                    "this.plot.foregroundAlpha == 1.0",
                                    "edge has only one value",
                                    "this.label.toString == \"Category\"",
                                    "this.label has only one value",
                                    "categoryCount one of { 1, 2, 3 }"
                                ]
                            }
                        }
                    ]
                },
                {
                    "EXIT": [
                        {
                            "f.inv.output": {
                                "invs": [
                                    "edge.name.toString one of { \"RectangleEdge.BOTTOM\", \"RectangleEdge.LEFT\" }",
                                    "this.label.toString one of { \"Category\", \"Domain\" }"
                                ]
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": [
                                    "edge.name has only one value",
                                    "this.categoryMargin == 0.2",
                                    "edge.name.toString == \"RectangleEdge.BOTTOM\"",
                                    "this.plot.foregroundAlpha == 1.0",
                                    "this.label.toString == \"Category\"",
                                    "this.label has only one value"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "calculateCategorySize(int, java.awt.geom.Rectangle2D, org.jfree.chart.util.RectangleEdge)": [
                {
                    "ENTER": [
                        {
                            "f.inv.output": {
                                "invs": [
                                    "edge.name.toString one of { \"RectangleEdge.BOTTOM\", \"RectangleEdge.LEFT\" }"
                                ]
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": [
                                    "this.label.toString one of { \"Category\", \"Category Axis\", \"X\" }",
                                    "edge.name has only one value",
                                    "this.categoryMargin == 0.2",
                                    "edge.name.toString == \"RectangleEdge.BOTTOM\"",
                                    "this.plot.foregroundAlpha == 1.0",
                                    "edge has only one value"
                                ]
                            }
                        }
                    ]
                },
                {
                    "EXIT": [
                        {
                            "f.inv.output": {
                                "invs": [
                                    "edge.name.toString one of { \"RectangleEdge.BOTTOM\", \"RectangleEdge.LEFT\" }",
                                    "return != 0"
                                ]
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": [
                                    "this.label.toString one of { \"Category\", \"Category Axis\", \"X\" }",
                                    "edge.name has only one value",
                                    "this.categoryMargin == 0.2",
                                    "edge.name.toString == \"RectangleEdge.BOTTOM\"",
                                    "this.plot.foregroundAlpha == 1.0"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "drawCategoryLabels(java.awt.Graphics2D, java.awt.geom.Rectangle2D, java.awt.geom.Rectangle2D, org.jfree.chart.util.RectangleEdge, org.jfree.chart.axis.AxisState, org.jfree.chart.plot.PlotRenderingInfo)": [
                {
                    "ENTER": [
                        {
                            "f.inv.output": {
                                "invs": [
                                    "org.jfree.chart.util.RectangleEdge.BOTTOM != null",
                                    "this.categoryLabelToolTips != null",
                                    "state.ticks != null",
                                    "g2 != null",
                                    "org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener != null",
                                    "plotArea != null",
                                    "org.jfree.chart.util.RectangleEdge.RIGHT.name != null",
                                    "plotState.subplotInfo != null",
                                    "this.tickLabelPaintMap != null",
                                    "org.jfree.chart.util.RectangleEdge.LEFT.name != null",
                                    "org.jfree.chart.util.RectangleEdge.TOP.name != null",
                                    "dataArea != null",
                                    "plotState.dataArea != null",
                                    "edge.name != null",
                                    "org.jfree.chart.axis.Axis.class$org$jfree$chart$event$AxisChangeListener != null",
                                    "plotState != null",
                                    "org.jfree.chart.util.RectangleEdge.TOP != null",
                                    "org.jfree.chart.util.RectangleEdge.RIGHT != null",
                                    "org.jfree.chart.util.RectangleEdge.BOTTOM.name != null",
                                    "this.categoryLabelPositions != null",
                                    "org.jfree.chart.util.RectangleEdge.LEFT != null",
                                    "edge != null",
                                    "state != null",
                                    "edge.name.toString one of { \"RectangleEdge.BOTTOM\", \"RectangleEdge.LEFT\" }",
                                    "plotState.plotArea != null",
                                    "this.tickLabelFontMap != null",
                                    "this.plot != null"
                                ]
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": [
                                    "this.plot.foregroundAlpha == 1.0",
                                    "edge has only one value",
                                    "this.categoryMargin == 0.2",
                                    "edge.name.toString == \"RectangleEdge.BOTTOM\"",
                                    "state.cursor one of { 72.03125, 132.421875, 172.03125 }",
                                    "this.label.toString one of { \"Category\", \"Category Axis\", \"X\" }",
                                    "edge.name has only one value"
                                ]
                            }
                        }
                    ]
                },
                {
                    "EXIT": [
                        {
                            "f.inv.output": {
                                "invs": [
                                    "state.cursor != orig(state.cursor)",
                                    "org.jfree.chart.util.RectangleEdge.BOTTOM != null",
                                    "this.categoryLabelToolTips != null",
                                    "state.ticks != null",
                                    "org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener != null",
                                    "org.jfree.chart.util.RectangleEdge.RIGHT.name != null",
                                    "plotState.subplotInfo != null",
                                    "this.tickLabelPaintMap != null",
                                    "return.ticks[] elements != null",
                                    "org.jfree.chart.util.RectangleEdge.LEFT.name != null",
                                    "org.jfree.chart.util.RectangleEdge.TOP.name != null",
                                    "state.ticks[] elements != null",
                                    "plotState.dataArea != null",
                                    "edge.name != null",
                                    "org.jfree.chart.axis.Axis.class$org$jfree$chart$event$AxisChangeListener != null",
                                    "return.ticks != null",
                                    "org.jfree.chart.util.RectangleEdge.TOP != null",
                                    "org.jfree.chart.util.RectangleEdge.RIGHT != null",
                                    "return != null",
                                    "org.jfree.chart.util.RectangleEdge.BOTTOM.name != null",
                                    "this.categoryLabelPositions != null",
                                    "org.jfree.chart.util.RectangleEdge.LEFT != null",
                                    "state.max >= 0.0",
                                    "edge.name.toString one of { \"RectangleEdge.BOTTOM\", \"RectangleEdge.LEFT\" }",
                                    "plotState.plotArea != null",
                                    "this.tickLabelFontMap != null",
                                    "return.max >= 0.0",
                                    "this.plot != null"
                                ]
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": [
                                    "this.plot.foregroundAlpha == 1.0",
                                    "return.max one of { 0.0, 15.640625 }",
                                    "state.cursor one of { 76.03125, 152.0625, 176.03125 }",
                                    "this.categoryMargin == 0.2",
                                    "edge.name.toString == \"RectangleEdge.BOTTOM\"",
                                    "this.label.toString one of { \"Category\", \"Category Axis\", \"X\" }",
                                    "edge.name has only one value",
                                    "state.cursor > orig(state.cursor)",
                                    "return.cursor one of { 76.03125, 152.0625, 176.03125 }",
                                    "state.max one of { 0.0, 15.640625 }"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "getUpperMargin()": [
                {
                    "ENTER": [
                        {
                            "f.inv.output": {
                                "invs": []
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": [
                                    "this.label.toString one of { \"Category\", \"Category Axis\", \"X\" }",
                                    "this.plot.foregroundAlpha == 1.0",
                                    "this.categoryMargin == 0.2"
                                ]
                            }
                        }
                    ]
                },
                {
                    "EXIT": [
                        {
                            "f.inv.output": {
                                "invs": []
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": [
                                    "this.categoryMargin == 0.2",
                                    "this.label.toString one of { \"Category\", \"Category Axis\", \"X\" }",
                                    "this.plot.foregroundAlpha == 1.0"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "getCategoryEnd(int, int, java.awt.geom.Rectangle2D, org.jfree.chart.util.RectangleEdge)": [
                {
                    "ENTER": [
                        {
                            "f.inv.output": {
                                "invs": [
                                    "edge.name.toString one of { \"RectangleEdge.BOTTOM\", \"RectangleEdge.LEFT\" }",
                                    "this.label.toString one of { \"Category\", \"Domain\" }",
                                    "category >= 0",
                                    "categoryCount >= 1"
                                ]
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": [
                                    "category one of { 0, 1, 2 }",
                                    "edge.name has only one value",
                                    "this.categoryMargin == 0.2",
                                    "edge.name.toString == \"RectangleEdge.BOTTOM\"",
                                    "this.plot.foregroundAlpha == 1.0",
                                    "edge has only one value",
                                    "this.label.toString == \"Category\"",
                                    "this.label has only one value",
                                    "categoryCount one of { 1, 2, 3 }"
                                ]
                            }
                        }
                    ]
                },
                {
                    "EXIT": [
                        {
                            "f.inv.output": {
                                "invs": [
                                    "edge.name.toString one of { \"RectangleEdge.BOTTOM\", \"RectangleEdge.LEFT\" }",
                                    "this.label.toString one of { \"Category\", \"Domain\" }"
                                ]
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": [
                                    "edge.name has only one value",
                                    "this.categoryMargin == 0.2",
                                    "edge.name.toString == \"RectangleEdge.BOTTOM\"",
                                    "this.plot.foregroundAlpha == 1.0",
                                    "this.label.toString == \"Category\"",
                                    "this.label has only one value"
                                ]
                            }
                        }
                    ]
                }
            ]
        }
    ]
}