{
    "org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset": [
        {
            "getRowCount()": [
                {
                    "ENTER": [
                        {
                            "f.inv.output": {
                                "invs": [
                                    "this.minimumRangeValueColumn one of { -1, 0 }",
                                    "this.maximumRangeValue one of { 5.5, 100.0, Double.NaN }",
                                    "this.minimumRangeValue one of { -0.5, 1.0, Double.NaN }",
                                    "this.rangeBounds.upper one of { 5.5, 8.0, 100.0 }",
                                    "this.rangeBounds.lower one of { -0.5, 1.0, 7.0 }"
                                ]
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": [
                                    "this.maximumRangeValueRow == 0",
                                    "this.minimumRangeValueColumn == 0",
                                    "this.minimumRangeValue one of { -0.5, 1.0 }",
                                    "this.rangeBounds.upper one of { 5.5, 100.0 }",
                                    "this.maximumRangeValueColumn == 0",
                                    "this.rangeBounds.lower one of { -0.5, 1.0 }",
                                    "this.minimumRangeValueRow == 0",
                                    "this.rangeBounds.lower != 0",
                                    "this.maximumRangeValue one of { 5.5, 100.0 }"
                                ]
                            }
                        }
                    ]
                },
                {
                    "EXIT": [
                        {
                            "f.inv.output": {
                                "invs": [
                                    "this.minimumRangeValueColumn one of { -1, 0 }",
                                    "this.maximumRangeValue one of { 5.5, 100.0, Double.NaN }",
                                    "this.minimumRangeValue one of { -0.5, 1.0, Double.NaN }",
                                    "this.rangeBounds.upper one of { 5.5, 8.0, 100.0 }",
                                    "this.rangeBounds.lower one of { -0.5, 1.0, 7.0 }"
                                ]
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": [
                                    "this.maximumRangeValueRow == 0",
                                    "this.minimumRangeValueColumn == 0",
                                    "this.minimumRangeValue one of { -0.5, 1.0 }",
                                    "this.rangeBounds.upper one of { 5.5, 100.0 }",
                                    "this.minimumRangeValue == orig(this.minimumRangeValue)",
                                    "this.maximumRangeValueColumn == 0",
                                    "this.rangeBounds.lower one of { -0.5, 1.0 }",
                                    "this.minimumRangeValueRow == 0",
                                    "this.maximumRangeValue == orig(this.maximumRangeValue)",
                                    "this.rangeBounds.lower != 0",
                                    "this.maximumRangeValue one of { 5.5, 100.0 }"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "getColumnCount()": [
                {
                    "ENTER": [
                        {
                            "f.inv.output": {
                                "invs": [
                                    "this.minimumRangeValueColumn one of { -1, 0 }",
                                    "this.maximumRangeValue one of { 5.5, 100.0, Double.NaN }",
                                    "this.minimumRangeValue one of { -0.5, 1.0, Double.NaN }",
                                    "this.rangeBounds.upper one of { 5.5, 8.0, 100.0 }",
                                    "this.rangeBounds.lower one of { -0.5, 1.0, 7.0 }"
                                ]
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": [
                                    "this.maximumRangeValueRow == 0",
                                    "this.minimumRangeValueColumn == 0",
                                    "this.minimumRangeValue one of { -0.5, 1.0 }",
                                    "this.rangeBounds.upper one of { 5.5, 100.0 }",
                                    "this.maximumRangeValueColumn == 0",
                                    "this.rangeBounds.lower one of { -0.5, 1.0 }",
                                    "this.minimumRangeValueRow == 0",
                                    "this.rangeBounds.lower != 0",
                                    "this.maximumRangeValue one of { 5.5, 100.0 }"
                                ]
                            }
                        }
                    ]
                },
                {
                    "EXIT": [
                        {
                            "f.inv.output": {
                                "invs": [
                                    "this.minimumRangeValueColumn one of { -1, 0 }",
                                    "this.maximumRangeValue one of { 5.5, 100.0, Double.NaN }",
                                    "this.minimumRangeValue one of { -0.5, 1.0, Double.NaN }",
                                    "this.rangeBounds.upper one of { 5.5, 8.0, 100.0 }",
                                    "this.rangeBounds.lower one of { -0.5, 1.0, 7.0 }"
                                ]
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": [
                                    "this.maximumRangeValueRow == 0",
                                    "this.minimumRangeValueColumn == 0",
                                    "this.minimumRangeValue one of { -0.5, 1.0 }",
                                    "this.rangeBounds.upper one of { 5.5, 100.0 }",
                                    "this.minimumRangeValue == orig(this.minimumRangeValue)",
                                    "this.maximumRangeValueColumn == 0",
                                    "this.rangeBounds.lower one of { -0.5, 1.0 }",
                                    "this.minimumRangeValueRow == 0",
                                    "this.maximumRangeValue == orig(this.maximumRangeValue)",
                                    "this.rangeBounds.lower != 0",
                                    "this.maximumRangeValue one of { 5.5, 100.0 }"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "updateBounds()": [
                {
                    "ENTER": [
                        {
                            "f.inv.output": {
                                "invs": []
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": []
                            }
                        }
                    ]
                },
                {
                    "EXIT": [
                        {
                            "f.inv.output": {
                                "invs": [
                                    "this.maximumRangeValue == 8.5",
                                    "this.minimumRangeValue == 7.5"
                                ]
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": [
                                    "this.minimumRangeValue == Double.NaN",
                                    "this.maximumRangeValue == Double.NaN"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "equals(java.lang.Object)": [
                {
                    "ENTER": [
                        {
                            "f.inv.output": {
                                "invs": []
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": []
                            }
                        }
                    ]
                },
                {
                    "EXIT": [
                        {
                            "f.inv.output": {
                                "invs": []
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": []
                            }
                        }
                    ]
                },
                {
                    "EXITNN": [
                        {
                            "758": [
                                {
                                    "f.inv.output": "N/A"
                                },
                                {
                                    "b.inv.output": {
                                        "invs": [
                                            "(this.data.rowKeys[] contains no nulls and has only one value, of length 2)  <==>  (this.data.rows[].getClass().getName() == [org.jfree.data.KeyedObjects, org.jfree.data.KeyedObjects])",
                                            "(this.data.rowKeys[] contains no nulls and has only one value, of length 2)  ==>  (org.jfree.data.general.AbstractDataset.class$org$jfree$data$general$DatasetChangeListener == null)",
                                            "(this.data.rowKeys[] contains no nulls and has only one value, of length 1)  <==>  (this.data.rowKeys[].getClass().getName() == [java.lang.String])",
                                            "(this.data.rowKeys[] contains no nulls and has only one value, of length 2)  <==>  (this.data.rowKeys[].getClass().getName() == [java.lang.String, java.lang.String])",
                                            "(this.data.rowKeys[] contains no nulls and has only one value, of length 2)  ==>  (this.listenerList has only one value)",
                                            "(this.data.rowKeys[] contains no nulls and has only one value, of length 2)  <==>  (return == false)",
                                            "(this.data.rowKeys[] contains no nulls and has only one value, of length 1)  <==>  (size(this.data.rowKeys[]) == 1)",
                                            "(this.data.rowKeys[] contains no nulls and has only one value, of length 2)  ==>  (this.data.rowKeys has only one value)",
                                            "(this.data.rowKeys[] contains no nulls and has only one value, of length 1)  <==>  (this.data.rows[].getClass().getName() == [org.jfree.data.KeyedObjects])",
                                            "(this.data.rowKeys[] contains no nulls and has only one value, of length 2)  <==>  (size(this.data.rowKeys[]) == 2)",
                                            "(this.data.rowKeys[] contains no nulls and has only one value, of length 2)  ==>  (this.group has only one value)",
                                            "(this.data.rowKeys[] contains no nulls and has only one value, of length 2)  ==>  (this.data.rows[] contains no nulls and has only one value, of length 2)",
                                            "(this.data.rowKeys[] contains no nulls and has only one value, of length 2)  ==>  (orig(this) has only one value)",
                                            "(this.data.rowKeys[] contains no nulls and has only one value, of length 1)  ==>  (this.data.rowKeys[] elements has only one value)",
                                            "(this.data.rowKeys[] contains no nulls and has only one value, of length 2)  <==>  (size(this.data.rows[]) == 2)",
                                            "(this.data.rowKeys[] contains no nulls and has only one value, of length 2)  ==>  (this.data has only one value)",
                                            "(this.data.rowKeys[] contains no nulls and has only one value, of length 1)  <==>  (size(this.data.rows[]) == 1)",
                                            "(this.data.rowKeys[] contains no nulls and has only one value, of length 1)  <==>  (return == true)",
                                            "(this.data.rowKeys[] contains no nulls and has only one value, of length 2)  ==>  (this.data.rows has only one value)",
                                            "(this.data.rowKeys[] contains no nulls and has only one value, of length 2)  ==>  (orig(obj) has only one value)",
                                            "(this.data.rowKeys[] contains no nulls and has only one value, of length 2)  ==>  (this.data.columnKeys has only one value)",
                                            "(this.data.rowKeys[] contains no nulls and has only one value, of length 2)  ==>  (this.rangeBounds has only one value)"
                                        ]
                                    }
                                }
                            ]
                        },
                        {
                            "797": [
                                {
                                    "b.inv.output": "N/A"
                                },
                                {
                                    "f.inv.output": {
                                        "invs": [
                                            "(this.data.rowKeys[] contains no nulls and has only one value, of length 2)  <==>  (this.data.rows[].getClass().getName() == [org.jfree.data.KeyedObjects, org.jfree.data.KeyedObjects])",
                                            "(this.data.rowKeys[] contains no nulls and has only one value, of length 2)  ==>  (org.jfree.data.general.AbstractDataset.class$org$jfree$data$general$DatasetChangeListener == null)",
                                            "(this.data.rowKeys[] contains no nulls and has only one value, of length 1)  <==>  (this.data.rowKeys[].getClass().getName() == [java.lang.String])",
                                            "(this.data.rowKeys[] contains no nulls and has only one value, of length 2)  <==>  (this.data.rowKeys[].getClass().getName() == [java.lang.String, java.lang.String])",
                                            "(this.data.rowKeys[] contains no nulls and has only one value, of length 2)  ==>  (this.listenerList has only one value)",
                                            "(this.data.rowKeys[] contains no nulls and has only one value, of length 2)  <==>  (return == false)",
                                            "(this.data.rowKeys[] contains no nulls and has only one value, of length 1)  <==>  (size(this.data.rowKeys[]) == 1)",
                                            "(this.data.rowKeys[] contains no nulls and has only one value, of length 2)  ==>  (this.data.rowKeys has only one value)",
                                            "(this.data.rowKeys[] contains no nulls and has only one value, of length 1)  <==>  (this.data.rows[].getClass().getName() == [org.jfree.data.KeyedObjects])",
                                            "(this.data.rowKeys[] contains no nulls and has only one value, of length 2)  <==>  (size(this.data.rowKeys[]) == 2)",
                                            "(this.data.rowKeys[] contains no nulls and has only one value, of length 2)  ==>  (this.group has only one value)",
                                            "(this.data.rowKeys[] contains no nulls and has only one value, of length 2)  ==>  (this.data.rows[] contains no nulls and has only one value, of length 2)",
                                            "(this.data.rowKeys[] contains no nulls and has only one value, of length 2)  ==>  (orig(this) has only one value)",
                                            "(this.data.rowKeys[] contains no nulls and has only one value, of length 1)  ==>  (this.data.rowKeys[] elements has only one value)",
                                            "(this.data.rowKeys[] contains no nulls and has only one value, of length 2)  <==>  (size(this.data.rows[]) == 2)",
                                            "(this.data.rowKeys[] contains no nulls and has only one value, of length 2)  ==>  (this.data has only one value)",
                                            "(this.data.rowKeys[] contains no nulls and has only one value, of length 1)  <==>  (size(this.data.rows[]) == 1)",
                                            "(this.data.rowKeys[] contains no nulls and has only one value, of length 1)  <==>  (return == true)",
                                            "(this.data.rowKeys[] contains no nulls and has only one value, of length 2)  ==>  (this.data.rows has only one value)",
                                            "(this.data.rowKeys[] contains no nulls and has only one value, of length 2)  ==>  (orig(obj) has only one value)",
                                            "(this.data.rowKeys[] contains no nulls and has only one value, of length 2)  ==>  (this.data.columnKeys has only one value)",
                                            "(this.data.rowKeys[] contains no nulls and has only one value, of length 2)  ==>  (this.rangeBounds has only one value)"
                                        ]
                                    }
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}