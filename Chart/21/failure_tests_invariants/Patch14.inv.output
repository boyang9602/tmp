===========================================================================
org.jfree.data.KeyedObject:::CLASS
===========================================================================
org.jfree.data.KeyedObject:::OBJECT
this.key has only one value
this.key.getClass().getName() == java.lang.String.class
this.object.getClass().getName() == org.jfree.data.statistics.BoxAndWhiskerItem.class
===========================================================================
org.jfree.data.KeyedObject.KeyedObject(java.lang.Comparable, java.lang.Object):::ENTER
key has only one value
key.getClass().getName() == java.lang.String.class
object.getClass().getName() == org.jfree.data.statistics.BoxAndWhiskerItem.class
===========================================================================
org.jfree.data.KeyedObject.KeyedObject(java.lang.Comparable, java.lang.Object):::EXIT
===========================================================================
org.jfree.data.KeyedObject.getKey():::ENTER
this has only one value
===========================================================================
org.jfree.data.KeyedObject.getKey():::EXIT
this.key == orig(this.key)
this.key.getClass().getName() == orig(this.key.getClass().getName())
this.object == orig(this.object)
this.object.getClass().getName() == orig(this.object.getClass().getName())
return has only one value
return.getClass().getName() == java.lang.String.class
===========================================================================
org.jfree.data.KeyedObject.setObject(java.lang.Object):::ENTER
this has only one value
object.getClass().getName() == org.jfree.data.statistics.BoxAndWhiskerItem.class
===========================================================================
org.jfree.data.KeyedObject.setObject(java.lang.Object):::EXIT
this.key == orig(this.key)
this.key.getClass().getName() == orig(this.key.getClass().getName())
this.object.getClass().getName() == orig(this.object.getClass().getName())
===========================================================================
org.jfree.data.KeyedObjects:::CLASS
===========================================================================
org.jfree.data.KeyedObjects:::OBJECT
this.data != null
this.data[] elements != null
this.data[].getClass().getName() elements == org.jfree.data.KeyedObject.class
this.data[].getClass().getName() one of { [], [org.jfree.data.KeyedObject] }
this.data.getClass().getName() == java.util.ArrayList.class
size(this.data[]) one of { 0, 1 }
===========================================================================
org.jfree.data.KeyedObjects2D:::CLASS
===========================================================================
org.jfree.data.KeyedObjects2D:::OBJECT
this has only one value
this.rowKeys has only one value
this.rowKeys != null
this.rowKeys[] elements != null
this.rowKeys[].getClass().getName() elements == java.lang.String.class
this.rowKeys.getClass().getName() == java.util.ArrayList.class
this.columnKeys has only one value
this.columnKeys != null
this.columnKeys[] elements has only one value
this.columnKeys[] elements != null
this.columnKeys[].getClass().getName() elements == java.lang.String.class
this.columnKeys[].getClass().getName() one of { [], [java.lang.String] }
this.columnKeys.getClass().getName() == java.util.ArrayList.class
this.rows has only one value
this.rows != null
this.rows[] elements != null
this.rows[].getClass().getName() elements == org.jfree.data.KeyedObjects.class
this.rows.getClass().getName() == java.util.ArrayList.class
size(this.rowKeys[]) one of { 0, 1, 2 }
size(this.columnKeys[]) one of { 0, 1 }
size(this.rows[]) one of { 0, 1, 2 }
===========================================================================
org.jfree.data.KeyedObjects2D.KeyedObjects2D():::EXIT
this.rowKeys[] == []
this.rowKeys[].getClass().getName() == []
this.columnKeys[] == []
this.columnKeys[].getClass().getName() == []
this.rows[] == []
this.rows[].getClass().getName() == []
===========================================================================
org.jfree.data.KeyedObjects2D.addObject(java.lang.Object, java.lang.Comparable, java.lang.Comparable):::ENTER
object.getClass().getName() == org.jfree.data.statistics.BoxAndWhiskerItem.class
rowKey.getClass().getName() == java.lang.String.class
columnKey has only one value
columnKey.getClass().getName() == java.lang.String.class
===========================================================================
org.jfree.data.KeyedObjects2D.addObject(java.lang.Object, java.lang.Comparable, java.lang.Comparable):::EXIT
this.rowKeys == orig(this.rowKeys)
this.rowKeys.getClass().getName() == orig(this.rowKeys.getClass().getName())
this.columnKeys == orig(this.columnKeys)
this.columnKeys.getClass().getName() == orig(this.columnKeys.getClass().getName())
this.rows == orig(this.rows)
this.rows.getClass().getName() == orig(this.rows.getClass().getName())
this.rowKeys[].getClass().getName() one of { [java.lang.String], [java.lang.String, java.lang.String] }
this.columnKeys[] contains no nulls and has only one value, of length 1
this.columnKeys[].getClass().getName() == [java.lang.String]
this.rows[].getClass().getName() one of { [org.jfree.data.KeyedObjects], [org.jfree.data.KeyedObjects, org.jfree.data.KeyedObjects] }
size(this.rowKeys[]) one of { 1, 2 }
size(this.columnKeys[]) == 1
size(this.rows[]) one of { 1, 2 }
===========================================================================
org.jfree.data.KeyedObjects2D.getColumnIndex(java.lang.Comparable):::ENTER
this.rowKeys[].getClass().getName() one of { [java.lang.String], [java.lang.String, java.lang.String] }
this.columnKeys[] contains no nulls and has only one value, of length 1
this.columnKeys[].getClass().getName() == [java.lang.String]
this.rows[].getClass().getName() one of { [org.jfree.data.KeyedObjects], [org.jfree.data.KeyedObjects, org.jfree.data.KeyedObjects] }
key has only one value
key.getClass().getName() == java.lang.String.class
size(this.rowKeys[]) one of { 1, 2 }
size(this.columnKeys[]) == 1
size(this.rows[]) one of { 1, 2 }
===========================================================================
org.jfree.data.KeyedObjects2D.getColumnIndex(java.lang.Comparable):::EXIT
this.rowKeys == orig(this.rowKeys)
this.rowKeys[] == orig(this.rowKeys[])
this.rowKeys.getClass().getName() == orig(this.rowKeys.getClass().getName())
this.columnKeys == orig(this.columnKeys)
this.columnKeys[] == orig(this.columnKeys[])
this.columnKeys.getClass().getName() == orig(this.columnKeys.getClass().getName())
this.rows == orig(this.rows)
this.rows[] == orig(this.rows[])
this.rows.getClass().getName() == orig(this.rows.getClass().getName())
this.rowKeys[].getClass().getName() one of { [java.lang.String], [java.lang.String, java.lang.String] }
this.columnKeys[] contains no nulls and has only one value, of length 1
this.columnKeys[].getClass().getName() == [java.lang.String]
this.rows[].getClass().getName() one of { [org.jfree.data.KeyedObjects], [org.jfree.data.KeyedObjects, org.jfree.data.KeyedObjects] }
return == 0
size(this.rowKeys[]) one of { 1, 2 }
size(this.columnKeys[]) == 1
size(this.rows[]) one of { 1, 2 }
===========================================================================
org.jfree.data.KeyedObjects2D.getRowIndex(java.lang.Comparable):::ENTER
this.rowKeys[].getClass().getName() one of { [java.lang.String], [java.lang.String, java.lang.String] }
this.columnKeys[] contains no nulls and has only one value, of length 1
this.columnKeys[].getClass().getName() == [java.lang.String]
this.rows[].getClass().getName() one of { [org.jfree.data.KeyedObjects], [org.jfree.data.KeyedObjects, org.jfree.data.KeyedObjects] }
key.getClass().getName() == java.lang.String.class
size(this.rowKeys[]) one of { 1, 2 }
size(this.columnKeys[]) == 1
size(this.rows[]) one of { 1, 2 }
===========================================================================
org.jfree.data.KeyedObjects2D.getRowIndex(java.lang.Comparable):::EXIT
this.rowKeys == orig(this.rowKeys)
this.rowKeys[] == orig(this.rowKeys[])
this.rowKeys.getClass().getName() == orig(this.rowKeys.getClass().getName())
this.columnKeys == orig(this.columnKeys)
this.columnKeys[] == orig(this.columnKeys[])
this.columnKeys.getClass().getName() == orig(this.columnKeys.getClass().getName())
this.rows == orig(this.rows)
this.rows[] == orig(this.rows[])
this.rows.getClass().getName() == orig(this.rows.getClass().getName())
this.rowKeys[].getClass().getName() one of { [java.lang.String], [java.lang.String, java.lang.String] }
this.columnKeys[] contains no nulls and has only one value, of length 1
this.columnKeys[].getClass().getName() == [java.lang.String]
this.rows[].getClass().getName() one of { [org.jfree.data.KeyedObjects], [org.jfree.data.KeyedObjects, org.jfree.data.KeyedObjects] }
return one of { 0, 1 }
size(this.rowKeys[]) one of { 1, 2 }
size(this.columnKeys[]) == 1
size(this.rows[]) one of { 1, 2 }
===========================================================================
org.jfree.data.KeyedObjects2D.setObject(java.lang.Object, java.lang.Comparable, java.lang.Comparable):::ENTER
object.getClass().getName() == org.jfree.data.statistics.BoxAndWhiskerItem.class
rowKey.getClass().getName() == java.lang.String.class
columnKey has only one value
columnKey.getClass().getName() == java.lang.String.class
===========================================================================
org.jfree.data.KeyedObjects2D.setObject(java.lang.Object, java.lang.Comparable, java.lang.Comparable):::EXIT
this.rowKeys == orig(this.rowKeys)
this.rowKeys.getClass().getName() == orig(this.rowKeys.getClass().getName())
this.columnKeys == orig(this.columnKeys)
this.columnKeys.getClass().getName() == orig(this.columnKeys.getClass().getName())
this.rows == orig(this.rows)
this.rows.getClass().getName() == orig(this.rows.getClass().getName())
this.rowKeys[].getClass().getName() one of { [java.lang.String], [java.lang.String, java.lang.String] }
this.columnKeys[] contains no nulls and has only one value, of length 1
this.columnKeys[].getClass().getName() == [java.lang.String]
this.rows[].getClass().getName() one of { [org.jfree.data.KeyedObjects], [org.jfree.data.KeyedObjects, org.jfree.data.KeyedObjects] }
size(this.rowKeys[]) one of { 1, 2 }
size(this.columnKeys[]) == 1
size(this.rows[]) one of { 1, 2 }
===========================================================================
org.jfree.data.KeyedObjects.KeyedObjects():::EXIT
this.data[] == []
this.data[].getClass().getName() == []
===========================================================================
org.jfree.data.KeyedObjects.getIndex(java.lang.Comparable):::ENTER
this.data[] elements has only one value
key has only one value
key.getClass().getName() == java.lang.String.class
===========================================================================
org.jfree.data.KeyedObjects.getIndex(java.lang.Comparable):::EXIT136
this.data has only one value
this.data[] contains no nulls and has only one value, of length 1
this.data[].getClass().getName() == [org.jfree.data.KeyedObject]
return == 0
orig(this) has only one value
size(this.data[]) == 1
===========================================================================
org.jfree.data.KeyedObjects.getIndex(java.lang.Comparable):::EXIT140
this.data[] == []
this.data[].getClass().getName() == []
return == -1
===========================================================================
org.jfree.data.KeyedObjects.getIndex(java.lang.Comparable):::EXIT
this.data == orig(this.data)
this.data[] == orig(this.data[])
this.data.getClass().getName() == orig(this.data.getClass().getName())
(this.data[] == [])  <==>  (return == -1)
(this.data[] == [])  <==>  (this.data[].getClass().getName() == [])
(this.data[] contains no nulls and has only one value, of length 1)  <==>  (return == 0)
(this.data[] contains no nulls and has only one value, of length 1)  <==>  (size(this.data[]) == 1)
(this.data[] contains no nulls and has only one value, of length 1)  <==>  (this.data[].getClass().getName() == [org.jfree.data.KeyedObject])
(this.data[] contains no nulls and has only one value, of length 1)  ==>  (orig(this) has only one value)
(this.data[] contains no nulls and has only one value, of length 1)  ==>  (this.data has only one value)
(this.data[] contains no nulls and has only one value, of length 1)  ==>  (this.data[] elements has only one value)
(this.data[] contains no nulls and has only one value, of length 1)  ==>  (this.data[].getClass().getName() elements == org.jfree.data.KeyedObject.class)
this.data[] elements has only one value
return one of { -1, 0 }
===========================================================================
org.jfree.data.KeyedObjects.setObject(java.lang.Comparable, java.lang.Object):::ENTER
this.data[] elements has only one value
key has only one value
key.getClass().getName() == java.lang.String.class
object.getClass().getName() == org.jfree.data.statistics.BoxAndWhiskerItem.class
===========================================================================
org.jfree.data.KeyedObjects.setObject(java.lang.Comparable, java.lang.Object):::EXIT
this.data == orig(this.data)
this.data.getClass().getName() == orig(this.data.getClass().getName())
this.data[].getClass().getName() == [org.jfree.data.KeyedObject]
size(this.data[]) == 1
===========================================================================
org.jfree.data.Range:::CLASS
===========================================================================
org.jfree.data.Range:::OBJECT
===========================================================================
org.jfree.data.Range.Range(double, double):::ENTER
===========================================================================
org.jfree.data.Range.Range(double, double):::EXIT
===========================================================================
org.jfree.data.Range.equals(java.lang.Object):::ENTER
this.lower one of { 7.0, 7.5, 8.5 }
obj.getClass().getName() == org.jfree.data.Range.class
===========================================================================
org.jfree.data.Range.equals(java.lang.Object):::EXIT341
===========================================================================
org.jfree.data.Range.equals(java.lang.Object):::EXIT341;condition="return == true"
===========================================================================
org.jfree.data.Range.equals(java.lang.Object):::EXIT
this.lower == orig(this.lower)
this.upper == orig(this.upper)
this.lower one of { 7.0, 7.5, 8.5 }
return == true
===========================================================================
org.jfree.data.Range.equals(java.lang.Object):::EXIT;condition="return == true"
===========================================================================
org.jfree.data.general.AbstractDataset:::CLASS
org.jfree.data.general.AbstractDataset.class$org$jfree$data$general$DatasetChangeListener == null
===========================================================================
org.jfree.data.general.AbstractDataset:::OBJECT
this has only one value
this.getClass().getName() == org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset.class
this.group has only one value
this.group != null
this.group.id has only one value
this.group.id != null
this.group.id.toString == "NOID"
this.listenerList has only one value
this.listenerList != null
===========================================================================
org.jfree.data.general.AbstractDataset.AbstractDataset():::EXIT
===========================================================================
org.jfree.data.general.AbstractDataset.fireDatasetChanged():::ENTER
===========================================================================
org.jfree.data.general.AbstractDataset.fireDatasetChanged():::EXIT
this.group == orig(this.group)
this.group.id == orig(this.group.id)
this.group.id.toString == orig(this.group.id.toString)
this.listenerList == orig(this.listenerList)
org.jfree.data.general.AbstractDataset.class$org$jfree$data$general$DatasetChangeListener == orig(org.jfree.data.general.AbstractDataset.class$org$jfree$data$general$DatasetChangeListener)
===========================================================================
org.jfree.data.general.AbstractDataset.notifyListeners(org.jfree.data.general.DatasetChangeEvent):::ENTER
event.dataset has only one value
event.dataset.getClass().getName() == org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset.class
===========================================================================
org.jfree.data.general.AbstractDataset.notifyListeners(org.jfree.data.general.DatasetChangeEvent):::EXIT
this.group == orig(this.group)
this.group.id == orig(this.group.id)
this.group.id.toString == orig(this.group.id.toString)
this.listenerList == orig(this.listenerList)
org.jfree.data.general.AbstractDataset.class$org$jfree$data$general$DatasetChangeListener == orig(org.jfree.data.general.AbstractDataset.class$org$jfree$data$general$DatasetChangeListener)
event.dataset == orig(event.dataset)
event.dataset.getClass().getName() == orig(event.dataset.getClass().getName())
event.dataset has only one value
event.dataset.getClass().getName() == org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset.class
===========================================================================
org.jfree.data.general.DatasetChangeEvent:::OBJECT
this.dataset has only one value
this.dataset.getClass().getName() == org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset.class
===========================================================================
org.jfree.data.general.DatasetChangeEvent.DatasetChangeEvent(java.lang.Object, org.jfree.data.general.Dataset):::ENTER
source has only one value
source.getClass().getName() == org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset.class
dataset has only one value
dataset.getClass().getName() == org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset.class
===========================================================================
org.jfree.data.general.DatasetChangeEvent.DatasetChangeEvent(java.lang.Object, org.jfree.data.general.Dataset):::EXIT
===========================================================================
org.jfree.data.general.DatasetGroup:::CLASS
===========================================================================
org.jfree.data.general.DatasetGroup:::OBJECT
this has only one value
this.id has only one value
this.id.toString == "NOID"
===========================================================================
org.jfree.data.general.DatasetGroup.DatasetGroup():::EXIT
===========================================================================
org.jfree.data.statistics.BoxAndWhiskerItem:::CLASS
===========================================================================
org.jfree.data.statistics.BoxAndWhiskerItem:::OBJECT
this.mean != null
this.mean.getClass().getName() == java.lang.Double.class
this.median != null
this.median.getClass().getName() == java.lang.Double.class
this.q1 != null
this.q1.getClass().getName() == java.lang.Double.class
this.q3 != null
this.q3.getClass().getName() == java.lang.Double.class
this.minRegularValue != null
this.minRegularValue.getClass().getName() == java.lang.Double.class
this.maxRegularValue != null
this.maxRegularValue.getClass().getName() == java.lang.Double.class
this.minOutlier != null
this.minOutlier.getClass().getName() == java.lang.Double.class
this.maxOutlier != null
this.maxOutlier.getClass().getName() == java.lang.Double.class
this.outliers != null
this.outliers[] == []
this.outliers[].getClass().getName() == []
this.outliers.getClass().getName() == java.util.ArrayList.class
===========================================================================
org.jfree.data.statistics.BoxAndWhiskerItem.BoxAndWhiskerItem(double, double, double, double, double, double, double, double, java.util.List):::ENTER
mean one of { 1.0, 1.5, 2.5 }
median one of { 2.0, 2.5, 3.5 }
q1 one of { 3.0, 3.5, 4.5 }
q3 one of { 4.0, 4.5, 5.5 }
minRegularValue one of { 5.0, 5.5, 6.5 }
maxRegularValue one of { 6.0, 6.5, 7.5 }
outliers[] == []
outliers[].getClass().getName() == []
outliers.getClass().getName() == java.util.ArrayList.class
===========================================================================
org.jfree.data.statistics.BoxAndWhiskerItem.BoxAndWhiskerItem(double, double, double, double, double, double, double, double, java.util.List):::EXIT
outliers[] == orig(outliers[])
outliers[] == []
outliers[].getClass().getName() == []
===========================================================================
org.jfree.data.statistics.BoxAndWhiskerItem.BoxAndWhiskerItem(java.lang.Number, java.lang.Number, java.lang.Number, java.lang.Number, java.lang.Number, java.lang.Number, java.lang.Number, java.lang.Number, java.util.List):::ENTER
mean.getClass().getName() == java.lang.Double.class
median.getClass().getName() == java.lang.Double.class
q1.getClass().getName() == java.lang.Double.class
q3.getClass().getName() == java.lang.Double.class
minRegularValue.getClass().getName() == java.lang.Double.class
maxRegularValue.getClass().getName() == java.lang.Double.class
minOutlier.getClass().getName() == java.lang.Double.class
maxOutlier.getClass().getName() == java.lang.Double.class
outliers[] == []
outliers[].getClass().getName() == []
outliers.getClass().getName() == java.util.ArrayList.class
===========================================================================
org.jfree.data.statistics.BoxAndWhiskerItem.BoxAndWhiskerItem(java.lang.Number, java.lang.Number, java.lang.Number, java.lang.Number, java.lang.Number, java.lang.Number, java.lang.Number, java.lang.Number, java.util.List):::EXIT
outliers[] == orig(outliers[])
outliers[] == []
outliers[].getClass().getName() == []
===========================================================================
org.jfree.data.statistics.BoxAndWhiskerItem.getMaxOutlier():::ENTER
===========================================================================
org.jfree.data.statistics.BoxAndWhiskerItem.getMaxOutlier():::EXIT
this.mean == orig(this.mean)
this.mean.getClass().getName() == orig(this.mean.getClass().getName())
this.median == orig(this.median)
this.median.getClass().getName() == orig(this.median.getClass().getName())
this.q1 == orig(this.q1)
this.q1.getClass().getName() == orig(this.q1.getClass().getName())
this.q3 == orig(this.q3)
this.q3.getClass().getName() == orig(this.q3.getClass().getName())
this.minRegularValue == orig(this.minRegularValue)
this.minRegularValue.getClass().getName() == orig(this.minRegularValue.getClass().getName())
this.maxRegularValue == orig(this.maxRegularValue)
this.maxRegularValue.getClass().getName() == orig(this.maxRegularValue.getClass().getName())
this.minOutlier == orig(this.minOutlier)
this.minOutlier.getClass().getName() == orig(this.minOutlier.getClass().getName())
this.maxOutlier == orig(this.maxOutlier)
this.maxOutlier.getClass().getName() == orig(this.maxOutlier.getClass().getName())
this.outliers == orig(this.outliers)
this.outliers[] == orig(this.outliers[])
this.outliers.getClass().getName() == orig(this.outliers.getClass().getName())
return.getClass().getName() == java.lang.Double.class
===========================================================================
org.jfree.data.statistics.BoxAndWhiskerItem.getMinOutlier():::ENTER
===========================================================================
org.jfree.data.statistics.BoxAndWhiskerItem.getMinOutlier():::EXIT
this.mean == orig(this.mean)
this.mean.getClass().getName() == orig(this.mean.getClass().getName())
this.median == orig(this.median)
this.median.getClass().getName() == orig(this.median.getClass().getName())
this.q1 == orig(this.q1)
this.q1.getClass().getName() == orig(this.q1.getClass().getName())
this.q3 == orig(this.q3)
this.q3.getClass().getName() == orig(this.q3.getClass().getName())
this.minRegularValue == orig(this.minRegularValue)
this.minRegularValue.getClass().getName() == orig(this.minRegularValue.getClass().getName())
this.maxRegularValue == orig(this.maxRegularValue)
this.maxRegularValue.getClass().getName() == orig(this.maxRegularValue.getClass().getName())
this.minOutlier == orig(this.minOutlier)
this.minOutlier.getClass().getName() == orig(this.minOutlier.getClass().getName())
this.maxOutlier == orig(this.maxOutlier)
this.maxOutlier.getClass().getName() == orig(this.maxOutlier.getClass().getName())
this.outliers == orig(this.outliers)
this.outliers[] == orig(this.outliers[])
this.outliers.getClass().getName() == orig(this.outliers.getClass().getName())
return.getClass().getName() == java.lang.Double.class
===========================================================================
org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset:::CLASS
org.jfree.data.general.AbstractDataset.class$org$jfree$data$general$DatasetChangeListener == null
===========================================================================
org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset:::OBJECT
this has only one value
this.data has only one value
this.data != null
this.data.rowKeys has only one value
this.data.rowKeys != null
this.data.rowKeys[] elements != null
this.data.rowKeys[].getClass().getName() elements == java.lang.String.class
this.data.rowKeys.getClass().getName() == java.util.ArrayList.class
this.data.columnKeys has only one value
this.data.columnKeys != null
this.data.columnKeys[] elements has only one value
this.data.columnKeys[] elements != null
this.data.columnKeys[].getClass().getName() elements == java.lang.String.class
this.data.columnKeys[].getClass().getName() one of { [], [java.lang.String] }
this.data.columnKeys.getClass().getName() == java.util.ArrayList.class
this.data.rows has only one value
this.data.rows != null
this.data.rows[] elements != null
this.data.rows[].getClass().getName() elements == org.jfree.data.KeyedObjects.class
this.data.rows.getClass().getName() == java.util.ArrayList.class
this.minimumRangeValueRow one of { -1, 0 }
this.minimumRangeValueColumn one of { -1, 0 }
this.maximumRangeValueRow one of { -1, 0, 1 }
this.maximumRangeValueColumn one of { -1, 0 }
this.rangeBounds != null
this.group has only one value
this.group != null
this.group.id has only one value
this.group.id != null
this.group.id.toString == "NOID"
this.listenerList has only one value
this.listenerList != null
size(this.data.rowKeys[]) one of { 0, 1, 2 }
size(this.data.columnKeys[]) one of { 0, 1 }
size(this.data.rows[]) one of { 0, 1, 2 }
===========================================================================
org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset.DefaultBoxAndWhiskerCategoryDataset():::EXIT
this.data.rowKeys[] == []
this.data.rowKeys[].getClass().getName() == []
this.data.columnKeys[] == []
this.data.columnKeys[].getClass().getName() == []
this.data.rows[] == []
this.data.rows[].getClass().getName() == []
this.minimumRangeValue == Double.NaN
this.minimumRangeValueRow == -1
this.minimumRangeValueColumn == -1
this.maximumRangeValue == Double.NaN
this.maximumRangeValueRow == -1
this.maximumRangeValueColumn == -1
this.rangeBounds has only one value
this.rangeBounds.lower == 0.0
this.rangeBounds.upper == 0.0
===========================================================================
org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset.add(org.jfree.data.statistics.BoxAndWhiskerItem, java.lang.Comparable, java.lang.Comparable):::ENTER
this.minimumRangeValue one of { 7.0, 7.5, Double.NaN }
this.rangeBounds.lower one of { 0.0, 7.0, 7.5 }
item.mean.getClass().getName() == java.lang.Double.class
item.median.getClass().getName() == java.lang.Double.class
item.q1.getClass().getName() == java.lang.Double.class
item.q3.getClass().getName() == java.lang.Double.class
item.minRegularValue.getClass().getName() == java.lang.Double.class
item.maxRegularValue.getClass().getName() == java.lang.Double.class
item.minOutlier.getClass().getName() == java.lang.Double.class
item.maxOutlier.getClass().getName() == java.lang.Double.class
item.outliers[] == []
item.outliers[].getClass().getName() == []
item.outliers.getClass().getName() == java.util.ArrayList.class
rowKey.getClass().getName() == java.lang.String.class
columnKey has only one value
columnKey.getClass().getName() == java.lang.String.class
===========================================================================
org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset.add(org.jfree.data.statistics.BoxAndWhiskerItem, java.lang.Comparable, java.lang.Comparable):::EXIT
this.data == orig(this.data)
this.data.rowKeys == orig(this.data.rowKeys)
this.data.rowKeys.getClass().getName() == orig(this.data.rowKeys.getClass().getName())
this.data.columnKeys == orig(this.data.columnKeys)
this.data.columnKeys.getClass().getName() == orig(this.data.columnKeys.getClass().getName())
this.data.rows == orig(this.data.rows)
this.data.rows.getClass().getName() == orig(this.data.rows.getClass().getName())
this.group == orig(this.group)
this.group.id == orig(this.group.id)
this.group.id.toString == orig(this.group.id.toString)
this.listenerList == orig(this.listenerList)
org.jfree.data.general.AbstractDataset.class$org$jfree$data$general$DatasetChangeListener == orig(org.jfree.data.general.AbstractDataset.class$org$jfree$data$general$DatasetChangeListener)
item.mean == orig(item.mean)
item.mean.getClass().getName() == orig(item.mean.getClass().getName())
item.median == orig(item.median)
item.median.getClass().getName() == orig(item.median.getClass().getName())
item.q1 == orig(item.q1)
item.q1.getClass().getName() == orig(item.q1.getClass().getName())
item.q3 == orig(item.q3)
item.q3.getClass().getName() == orig(item.q3.getClass().getName())
item.minRegularValue == orig(item.minRegularValue)
item.minRegularValue.getClass().getName() == orig(item.minRegularValue.getClass().getName())
item.maxRegularValue == orig(item.maxRegularValue)
item.maxRegularValue.getClass().getName() == orig(item.maxRegularValue.getClass().getName())
item.minOutlier == orig(item.minOutlier)
item.minOutlier.getClass().getName() == orig(item.minOutlier.getClass().getName())
item.maxOutlier == orig(item.maxOutlier)
item.maxOutlier.getClass().getName() == orig(item.maxOutlier.getClass().getName())
item.outliers == orig(item.outliers)
item.outliers[] == orig(item.outliers[])
item.outliers.getClass().getName() == orig(item.outliers.getClass().getName())
this.data.rowKeys[].getClass().getName() one of { [java.lang.String], [java.lang.String, java.lang.String] }
this.data.columnKeys[] contains no nulls and has only one value, of length 1
this.data.columnKeys[].getClass().getName() == [java.lang.String]
this.data.rows[].getClass().getName() one of { [org.jfree.data.KeyedObjects], [org.jfree.data.KeyedObjects, org.jfree.data.KeyedObjects] }
this.minimumRangeValue one of { 7.0, 7.5, 8.6 }
this.minimumRangeValueRow == 0
this.minimumRangeValueColumn == 0
this.maximumRangeValueRow one of { 0, 1 }
this.maximumRangeValueColumn == 0
this.rangeBounds.lower one of { 7.0, 7.5, 8.6 }
item.mean.getClass().getName() == java.lang.Double.class
item.median.getClass().getName() == java.lang.Double.class
item.q1.getClass().getName() == java.lang.Double.class
item.q3.getClass().getName() == java.lang.Double.class
item.minRegularValue.getClass().getName() == java.lang.Double.class
item.maxRegularValue.getClass().getName() == java.lang.Double.class
item.minOutlier.getClass().getName() == java.lang.Double.class
item.maxOutlier.getClass().getName() == java.lang.Double.class
item.outliers[] == []
item.outliers[].getClass().getName() == []
item.outliers.getClass().getName() == java.util.ArrayList.class
size(this.data.rowKeys[]) one of { 1, 2 }
size(this.data.columnKeys[]) == 1
size(this.data.rows[]) one of { 1, 2 }
===========================================================================
org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset.getRangeBounds(boolean):::ENTER
this.data.rowKeys[].getClass().getName() one of { [java.lang.String], [java.lang.String, java.lang.String] }
this.data.columnKeys[] contains no nulls and has only one value, of length 1
this.data.columnKeys[].getClass().getName() == [java.lang.String]
this.data.rows[].getClass().getName() one of { [org.jfree.data.KeyedObjects], [org.jfree.data.KeyedObjects, org.jfree.data.KeyedObjects] }
this.minimumRangeValue one of { 7.0, 7.5, 8.6 }
this.minimumRangeValueRow == 0
this.minimumRangeValueColumn == 0
this.maximumRangeValueRow one of { 0, 1 }
this.maximumRangeValueColumn == 0
this.rangeBounds.lower one of { 7.0, 7.5, 8.6 }
size(this.data.rowKeys[]) one of { 1, 2 }
size(this.data.columnKeys[]) == 1
size(this.data.rows[]) one of { 1, 2 }
===========================================================================
org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset.getRangeBounds(boolean):::EXIT
this.data == orig(this.data)
this.data.rowKeys == orig(this.data.rowKeys)
this.data.rowKeys[] == orig(this.data.rowKeys[])
this.data.rowKeys.getClass().getName() == orig(this.data.rowKeys.getClass().getName())
this.data.columnKeys == orig(this.data.columnKeys)
this.data.columnKeys[] == orig(this.data.columnKeys[])
this.data.columnKeys.getClass().getName() == orig(this.data.columnKeys.getClass().getName())
this.data.rows == orig(this.data.rows)
this.data.rows[] == orig(this.data.rows[])
this.data.rows.getClass().getName() == orig(this.data.rows.getClass().getName())
this.minimumRangeValue == orig(this.minimumRangeValue)
this.minimumRangeValueRow == orig(this.minimumRangeValueRow)
this.minimumRangeValueColumn == orig(this.minimumRangeValueColumn)
this.maximumRangeValue == orig(this.maximumRangeValue)
this.maximumRangeValueRow == orig(this.maximumRangeValueRow)
this.maximumRangeValueColumn == orig(this.maximumRangeValueColumn)
this.rangeBounds == orig(this.rangeBounds)
this.rangeBounds.lower == orig(this.rangeBounds.lower)
this.rangeBounds.upper == orig(this.rangeBounds.upper)
this.group == orig(this.group)
this.group.id == orig(this.group.id)
this.group.id.toString == orig(this.group.id.toString)
this.listenerList == orig(this.listenerList)
org.jfree.data.general.AbstractDataset.class$org$jfree$data$general$DatasetChangeListener == orig(org.jfree.data.general.AbstractDataset.class$org$jfree$data$general$DatasetChangeListener)
this.data.rowKeys[].getClass().getName() one of { [java.lang.String], [java.lang.String, java.lang.String] }
this.data.columnKeys[] contains no nulls and has only one value, of length 1
this.data.columnKeys[].getClass().getName() == [java.lang.String]
this.data.rows[].getClass().getName() one of { [org.jfree.data.KeyedObjects], [org.jfree.data.KeyedObjects, org.jfree.data.KeyedObjects] }
this.minimumRangeValue one of { 7.0, 7.5, 8.6 }
this.minimumRangeValueRow == 0
this.minimumRangeValueColumn == 0
this.maximumRangeValueRow one of { 0, 1 }
this.maximumRangeValueColumn == 0
this.rangeBounds.lower one of { 7.0, 7.5, 8.6 }
return.lower one of { 7.0, 7.5, 8.6 }
size(this.data.rowKeys[]) one of { 1, 2 }
size(this.data.columnKeys[]) == 1
size(this.data.rows[]) one of { 1, 2 }
===========================================================================
org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset.updateBounds():::ENTER
this.data.rowKeys[].getClass().getName() one of { [java.lang.String], [java.lang.String, java.lang.String] }
this.data.columnKeys[] contains no nulls and has only one value, of length 1
this.data.columnKeys[].getClass().getName() == [java.lang.String]
this.data.rows[].getClass().getName() one of { [org.jfree.data.KeyedObjects], [org.jfree.data.KeyedObjects, org.jfree.data.KeyedObjects] }
this.minimumRangeValue one of { 7.0, 7.5 }
this.minimumRangeValueRow == 0
this.minimumRangeValueColumn == 0
this.maximumRangeValue one of { 8.0, 9.5 }
this.maximumRangeValueRow one of { 0, 1 }
this.maximumRangeValueColumn == 0
this.rangeBounds.lower one of { 7.0, 7.5 }
this.rangeBounds.upper one of { 8.0, 9.5 }
size(this.data.rowKeys[]) one of { 1, 2 }
size(this.data.columnKeys[]) == 1
size(this.data.rows[]) one of { 1, 2 }
===========================================================================
org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset.updateBounds():::EXIT
this.data == orig(this.data)
this.data.rowKeys == orig(this.data.rowKeys)
this.data.rowKeys[] == orig(this.data.rowKeys[])
this.data.rowKeys.getClass().getName() == orig(this.data.rowKeys.getClass().getName())
this.data.columnKeys == orig(this.data.columnKeys)
this.data.columnKeys[] == orig(this.data.columnKeys[])
this.data.columnKeys.getClass().getName() == orig(this.data.columnKeys.getClass().getName())
this.data.rows == orig(this.data.rows)
this.data.rows[] == orig(this.data.rows[])
this.data.rows.getClass().getName() == orig(this.data.rows.getClass().getName())
this.minimumRangeValueRow == orig(this.minimumRangeValueRow)
this.minimumRangeValueColumn == orig(this.minimumRangeValueColumn)
this.maximumRangeValueRow == orig(this.maximumRangeValueRow)
this.maximumRangeValueColumn == orig(this.maximumRangeValueColumn)
this.rangeBounds == orig(this.rangeBounds)
this.rangeBounds.lower == orig(this.rangeBounds.lower)
this.rangeBounds.upper == orig(this.rangeBounds.upper)
this.group == orig(this.group)
this.group.id == orig(this.group.id)
this.group.id.toString == orig(this.group.id.toString)
this.listenerList == orig(this.listenerList)
org.jfree.data.general.AbstractDataset.class$org$jfree$data$general$DatasetChangeListener == orig(org.jfree.data.general.AbstractDataset.class$org$jfree$data$general$DatasetChangeListener)
this.data.rowKeys[].getClass().getName() one of { [java.lang.String], [java.lang.String, java.lang.String] }
this.data.columnKeys[] contains no nulls and has only one value, of length 1
this.data.columnKeys[].getClass().getName() == [java.lang.String]
this.data.rows[].getClass().getName() one of { [org.jfree.data.KeyedObjects], [org.jfree.data.KeyedObjects, org.jfree.data.KeyedObjects] }
this.minimumRangeValue == Double.NaN
this.minimumRangeValueRow == 0
this.minimumRangeValueColumn == 0
this.maximumRangeValue == Double.NaN
this.maximumRangeValueRow one of { 0, 1 }
this.maximumRangeValueColumn == 0
this.rangeBounds.lower one of { 7.0, 7.5 }
this.rangeBounds.upper one of { 8.0, 9.5 }
size(this.data.rowKeys[]) one of { 1, 2 }
size(this.data.columnKeys[]) == 1
size(this.data.rows[]) one of { 1, 2 }
===========================================================================
org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests:::CLASS
===========================================================================
org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests:::OBJECT
org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests.class$org$jfree$data$statistics$junit$DefaultBoxAndWhiskerCategoryDatasetTests has only one value
===========================================================================
org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests.DefaultBoxAndWhiskerCategoryDatasetTests(java.lang.String):::ENTER
===========================================================================
org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests.DefaultBoxAndWhiskerCategoryDatasetTests(java.lang.String):::EXIT
name.toString == orig(name.toString)
===========================================================================
org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests.class$(java.lang.String):::ENTER
org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests.class$org$jfree$data$statistics$junit$DefaultBoxAndWhiskerCategoryDatasetTests == null
x0 has only one value
x0.toString == "org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests"
===========================================================================
org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests.class$(java.lang.String):::EXIT
org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests.class$org$jfree$data$statistics$junit$DefaultBoxAndWhiskerCategoryDatasetTests == orig(org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests.class$org$jfree$data$statistics$junit$DefaultBoxAndWhiskerCategoryDatasetTests)
x0.toString == orig(x0.toString)
org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests.class$org$jfree$data$statistics$junit$DefaultBoxAndWhiskerCategoryDatasetTests == null
x0.toString == "org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests"
return has only one value
===========================================================================
org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests.suite():::ENTER
org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests.class$org$jfree$data$statistics$junit$DefaultBoxAndWhiskerCategoryDatasetTests == null
===========================================================================
org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests.suite():::EXIT
org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests.class$org$jfree$data$statistics$junit$DefaultBoxAndWhiskerCategoryDatasetTests has only one value
return has only one value
return.getClass().getName() == junit.framework.TestSuite.class
===========================================================================
org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests.testGetRangeBounds():::ENTER
this has only one value
===========================================================================
org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests.testGetRangeBounds():::EXIT
org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests.class$org$jfree$data$statistics$junit$DefaultBoxAndWhiskerCategoryDatasetTests == orig(org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests.class$org$jfree$data$statistics$junit$DefaultBoxAndWhiskerCategoryDatasetTests)
