{
    "org.jfree.chart.plot.PieLabelRecord": [
        {
            "getAngle()": [
                {
                    "ENTER": [
                        {
                            "Patch13.inv.output": {
                                "invs": []
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": []
                            }
                        },
                        {
                            "Patch12.inv.output": "N/A"
                        }
                    ]
                },
                {
                    "EXIT": [
                        {
                            "Patch13.inv.output": {
                                "invs": [
                                    "this.label.textBlock == orig(this.label.textBlock)",
                                    "this.label.interiorGap.unitType == orig(this.label.interiorGap.unitType)",
                                    "this.label.interiorGap.bottom == orig(this.label.interiorGap.bottom)",
                                    "this.label.shadowXOffset == orig(this.label.shadowXOffset)",
                                    "this.key == orig(this.key)",
                                    "this.label.textBlock.lines == orig(this.label.textBlock.lines)",
                                    "this.label.shadowPaint.getClass().getName() == orig(this.label.shadowPaint.getClass().getName())",
                                    "org.jfree.chart.util.RectangleInsets.ZERO_INSETS == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS)",
                                    "this.allocatedY == orig(this.allocatedY)",
                                    "this.label.backgroundPaint.getClass().getName() == orig(this.label.backgroundPaint.getClass().getName())",
                                    "this.label.textBlock.lineAlignment == orig(this.label.textBlock.lineAlignment)",
                                    "this.baseY == orig(this.baseY)",
                                    "return one of { -3.2098881460591366, -0.06829549246934341 }",
                                    "this.labelHeight == orig(this.labelHeight)",
                                    "this.gap == orig(this.gap)",
                                    "this.label.outlinePaint == orig(this.label.outlinePaint)",
                                    "this.label.textBlock.lines.getClass().getName() == orig(this.label.textBlock.lines.getClass().getName())",
                                    "this.label.outlinePaint.getClass().getName() == orig(this.label.outlinePaint.getClass().getName())",
                                    "this.label.shadowPaint == orig(this.label.shadowPaint)",
                                    "this.label.shadowYOffset == orig(this.label.shadowYOffset)",
                                    "this.label.textBlock.lines[] == orig(this.label.textBlock.lines[])",
                                    "this.label.interiorGap.right == orig(this.label.interiorGap.right)",
                                    "this.label.backgroundPaint == orig(this.label.backgroundPaint)",
                                    "this.key.getClass().getName() == orig(this.key.getClass().getName())",
                                    "this.linkPercent == orig(this.linkPercent)",
                                    "this.label.interiorGap == orig(this.label.interiorGap)",
                                    "this.label.outlineStroke.getClass().getName() == orig(this.label.outlineStroke.getClass().getName())",
                                    "this.angle == orig(this.angle)",
                                    "this.label.outlineStroke == orig(this.label.outlineStroke)",
                                    "this.label.interiorGap.left == orig(this.label.interiorGap.left)",
                                    "this.label.interiorGap.top == orig(this.label.interiorGap.top)",
                                    "this.label == orig(this.label)"
                                ]
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": [
                                    "this.label.textBlock == orig(this.label.textBlock)",
                                    "this.label.interiorGap.unitType == orig(this.label.interiorGap.unitType)",
                                    "this.label.interiorGap.bottom == orig(this.label.interiorGap.bottom)",
                                    "this.label.shadowXOffset == orig(this.label.shadowXOffset)",
                                    "this.key == orig(this.key)",
                                    "this.label.textBlock.lines == orig(this.label.textBlock.lines)",
                                    "this.label.shadowPaint.getClass().getName() == orig(this.label.shadowPaint.getClass().getName())",
                                    "org.jfree.chart.util.RectangleInsets.ZERO_INSETS == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS)",
                                    "this.allocatedY == orig(this.allocatedY)",
                                    "this.label.backgroundPaint.getClass().getName() == orig(this.label.backgroundPaint.getClass().getName())",
                                    "this.label.textBlock.lineAlignment == orig(this.label.textBlock.lineAlignment)",
                                    "this.baseY == orig(this.baseY)",
                                    "this.labelHeight == orig(this.labelHeight)",
                                    "this.gap == orig(this.gap)",
                                    "this.label.outlinePaint == orig(this.label.outlinePaint)",
                                    "this.label.textBlock.lines.getClass().getName() == orig(this.label.textBlock.lines.getClass().getName())",
                                    "this.label.outlinePaint.getClass().getName() == orig(this.label.outlinePaint.getClass().getName())",
                                    "this.label.shadowPaint == orig(this.label.shadowPaint)",
                                    "this.label.shadowYOffset == orig(this.label.shadowYOffset)",
                                    "this.label.textBlock.lines[] == orig(this.label.textBlock.lines[])",
                                    "this.label.interiorGap.right == orig(this.label.interiorGap.right)",
                                    "this.label.backgroundPaint == orig(this.label.backgroundPaint)",
                                    "this.key.getClass().getName() == orig(this.key.getClass().getName())",
                                    "this.linkPercent == orig(this.linkPercent)",
                                    "this.label.interiorGap == orig(this.label.interiorGap)",
                                    "this.label.outlineStroke.getClass().getName() == orig(this.label.outlineStroke.getClass().getName())",
                                    "this.angle == orig(this.angle)",
                                    "this.label.outlineStroke == orig(this.label.outlineStroke)",
                                    "this.label.interiorGap.left == orig(this.label.interiorGap.left)",
                                    "this.label.interiorGap.top == orig(this.label.interiorGap.top)",
                                    "this.label == orig(this.label)"
                                ]
                            }
                        },
                        {
                            "Patch12.inv.output": "N/A"
                        }
                    ]
                }
            ]
        },
        {
            "getGap()": [
                {
                    "ENTER": [
                        {
                            "Patch13.inv.output": {
                                "invs": []
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": []
                            }
                        },
                        {
                            "Patch12.inv.output": "N/A"
                        }
                    ]
                },
                {
                    "EXIT": [
                        {
                            "Patch13.inv.output": {
                                "invs": [
                                    "this.label.textBlock == orig(this.label.textBlock)",
                                    "this.label.interiorGap.unitType == orig(this.label.interiorGap.unitType)",
                                    "this.label.interiorGap.bottom == orig(this.label.interiorGap.bottom)",
                                    "this.label.shadowXOffset == orig(this.label.shadowXOffset)",
                                    "this.key == orig(this.key)",
                                    "this.label.textBlock.lines == orig(this.label.textBlock.lines)",
                                    "this.label.shadowPaint.getClass().getName() == orig(this.label.shadowPaint.getClass().getName())",
                                    "org.jfree.chart.util.RectangleInsets.ZERO_INSETS == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS)",
                                    "this.allocatedY == orig(this.allocatedY)",
                                    "return == 4.74446332682753",
                                    "this.label.backgroundPaint.getClass().getName() == orig(this.label.backgroundPaint.getClass().getName())",
                                    "this.label.textBlock.lineAlignment == orig(this.label.textBlock.lineAlignment)",
                                    "this.baseY == orig(this.baseY)",
                                    "this.labelHeight == orig(this.labelHeight)",
                                    "this.gap == orig(this.gap)",
                                    "this.label.outlinePaint == orig(this.label.outlinePaint)",
                                    "this.label.textBlock.lines.getClass().getName() == orig(this.label.textBlock.lines.getClass().getName())",
                                    "this.label.outlinePaint.getClass().getName() == orig(this.label.outlinePaint.getClass().getName())",
                                    "this.label.shadowPaint == orig(this.label.shadowPaint)",
                                    "this.label.shadowYOffset == orig(this.label.shadowYOffset)",
                                    "this.label.textBlock.lines[] == orig(this.label.textBlock.lines[])",
                                    "this.label.interiorGap.right == orig(this.label.interiorGap.right)",
                                    "this.label.backgroundPaint == orig(this.label.backgroundPaint)",
                                    "this.key.getClass().getName() == orig(this.key.getClass().getName())",
                                    "this.linkPercent == orig(this.linkPercent)",
                                    "this.label.interiorGap == orig(this.label.interiorGap)",
                                    "this.label.outlineStroke.getClass().getName() == orig(this.label.outlineStroke.getClass().getName())",
                                    "this.angle == orig(this.angle)",
                                    "this.label.outlineStroke == orig(this.label.outlineStroke)",
                                    "this.label.interiorGap.left == orig(this.label.interiorGap.left)",
                                    "this.label.interiorGap.top == orig(this.label.interiorGap.top)",
                                    "this.label == orig(this.label)"
                                ]
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": [
                                    "this.label.textBlock == orig(this.label.textBlock)",
                                    "this.label.interiorGap.unitType == orig(this.label.interiorGap.unitType)",
                                    "this.label.interiorGap.bottom == orig(this.label.interiorGap.bottom)",
                                    "this.label.shadowXOffset == orig(this.label.shadowXOffset)",
                                    "this.key == orig(this.key)",
                                    "this.label.textBlock.lines == orig(this.label.textBlock.lines)",
                                    "this.label.shadowPaint.getClass().getName() == orig(this.label.shadowPaint.getClass().getName())",
                                    "org.jfree.chart.util.RectangleInsets.ZERO_INSETS == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS)",
                                    "this.allocatedY == orig(this.allocatedY)",
                                    "this.label.backgroundPaint.getClass().getName() == orig(this.label.backgroundPaint.getClass().getName())",
                                    "this.label.textBlock.lineAlignment == orig(this.label.textBlock.lineAlignment)",
                                    "this.baseY == orig(this.baseY)",
                                    "this.labelHeight == orig(this.labelHeight)",
                                    "this.gap == orig(this.gap)",
                                    "this.label.outlinePaint == orig(this.label.outlinePaint)",
                                    "this.label.textBlock.lines.getClass().getName() == orig(this.label.textBlock.lines.getClass().getName())",
                                    "this.label.outlinePaint.getClass().getName() == orig(this.label.outlinePaint.getClass().getName())",
                                    "this.label.shadowPaint == orig(this.label.shadowPaint)",
                                    "this.label.shadowYOffset == orig(this.label.shadowYOffset)",
                                    "this.label.textBlock.lines[] == orig(this.label.textBlock.lines[])",
                                    "this.label.interiorGap.right == orig(this.label.interiorGap.right)",
                                    "return one of { 2.3750000000000004, 4.743359018305303, 4.74446332682753 }",
                                    "this.label.backgroundPaint == orig(this.label.backgroundPaint)",
                                    "this.key.getClass().getName() == orig(this.key.getClass().getName())",
                                    "this.linkPercent == orig(this.linkPercent)",
                                    "this.label.interiorGap == orig(this.label.interiorGap)",
                                    "this.label.outlineStroke.getClass().getName() == orig(this.label.outlineStroke.getClass().getName())",
                                    "this.angle == orig(this.angle)",
                                    "this.label.outlineStroke == orig(this.label.outlineStroke)",
                                    "this.label.interiorGap.left == orig(this.label.interiorGap.left)",
                                    "this.label.interiorGap.top == orig(this.label.interiorGap.top)",
                                    "this.label == orig(this.label)"
                                ]
                            }
                        },
                        {
                            "Patch12.inv.output": "N/A"
                        }
                    ]
                }
            ]
        },
        {
            "getLabel()": [
                {
                    "ENTER": [
                        {
                            "Patch13.inv.output": {
                                "invs": []
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": []
                            }
                        },
                        {
                            "Patch12.inv.output": "N/A"
                        }
                    ]
                },
                {
                    "EXIT": [
                        {
                            "Patch13.inv.output": {
                                "invs": [
                                    "this.label.textBlock == orig(this.label.textBlock)",
                                    "return.outlinePaint.getClass().getName() == java.awt.Color.class",
                                    "this.label.interiorGap.unitType == orig(this.label.interiorGap.unitType)",
                                    "this.label.interiorGap.bottom == orig(this.label.interiorGap.bottom)",
                                    "this.label.shadowXOffset == orig(this.label.shadowXOffset)",
                                    "return.interiorGap.bottom == 2.0",
                                    "return.outlineStroke.getClass().getName() == java.awt.BasicStroke.class",
                                    "this.key == orig(this.key)",
                                    "this.label.textBlock.lines == orig(this.label.textBlock.lines)",
                                    "return.textBlock.lines.getClass().getName() == java.util.ArrayList.class",
                                    "this.label.shadowPaint.getClass().getName() == orig(this.label.shadowPaint.getClass().getName())",
                                    "return.interiorGap.top == 2.0",
                                    "org.jfree.chart.util.RectangleInsets.ZERO_INSETS == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS)",
                                    "return.shadowPaint has only one value",
                                    "return.outlineStroke has only one value",
                                    "this.allocatedY == orig(this.allocatedY)",
                                    "this.label.backgroundPaint.getClass().getName() == orig(this.label.backgroundPaint.getClass().getName())",
                                    "this.label.textBlock.lineAlignment == orig(this.label.textBlock.lineAlignment)",
                                    "this.baseY == orig(this.baseY)",
                                    "this.labelHeight == orig(this.labelHeight)",
                                    "this.gap == orig(this.gap)",
                                    "return.shadowYOffset == 2.0",
                                    "this.label.outlinePaint == orig(this.label.outlinePaint)",
                                    "return.outlinePaint has only one value",
                                    "this.label.textBlock.lines.getClass().getName() == orig(this.label.textBlock.lines.getClass().getName())",
                                    "return.textBlock.lineAlignment has only one value",
                                    "return.textBlock.lines[].getClass().getName() elements == org.jfree.chart.text.TextLine.class",
                                    "this.label.outlinePaint.getClass().getName() == orig(this.label.outlinePaint.getClass().getName())",
                                    "this.label.shadowPaint == orig(this.label.shadowPaint)",
                                    "this.label.interiorGap.top == orig(this.label.interiorGap.top)",
                                    "return.textBlock.lines[].getClass().getName() == [org.jfree.chart.text.TextLine]",
                                    "return.interiorGap has only one value",
                                    "this.label.shadowYOffset == orig(this.label.shadowYOffset)",
                                    "this.label.textBlock.lines[] == orig(this.label.textBlock.lines[])",
                                    "this.label.interiorGap.right == orig(this.label.interiorGap.right)",
                                    "return.shadowXOffset == 2.0",
                                    "this.label.backgroundPaint == orig(this.label.backgroundPaint)",
                                    "this.key.getClass().getName() == orig(this.key.getClass().getName())",
                                    "this.linkPercent == orig(this.linkPercent)",
                                    "return.shadowPaint.getClass().getName() == java.awt.Color.class",
                                    "this.label.interiorGap == orig(this.label.interiorGap)",
                                    "return.backgroundPaint.getClass().getName() == java.awt.Color.class",
                                    "this.label.outlineStroke.getClass().getName() == orig(this.label.outlineStroke.getClass().getName())",
                                    "this.angle == orig(this.angle)",
                                    "this.label.outlineStroke == orig(this.label.outlineStroke)",
                                    "size(return.textBlock.lines[]) == 1",
                                    "return.backgroundPaint has only one value",
                                    "return.interiorGap.unitType has only one value",
                                    "this.label.interiorGap.left == orig(this.label.interiorGap.left)",
                                    "return.interiorGap.left == 2.0",
                                    "this.label == orig(this.label)",
                                    "return.interiorGap.right == 2.0"
                                ]
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": [
                                    "this.label.textBlock == orig(this.label.textBlock)",
                                    "return.outlinePaint.getClass().getName() == java.awt.Color.class",
                                    "this.label.interiorGap.unitType == orig(this.label.interiorGap.unitType)",
                                    "this.label.interiorGap.bottom == orig(this.label.interiorGap.bottom)",
                                    "this.label.shadowXOffset == orig(this.label.shadowXOffset)",
                                    "return.interiorGap.bottom == 2.0",
                                    "return.outlineStroke.getClass().getName() == java.awt.BasicStroke.class",
                                    "this.key == orig(this.key)",
                                    "this.label.textBlock.lines == orig(this.label.textBlock.lines)",
                                    "return.textBlock.lines[].getClass().getName() one of { [org.jfree.chart.text.TextLine], [org.jfree.chart.text.TextLine, org.jfree.chart.text.TextLine, org.jfree.chart.text.TextLine] }",
                                    "return.textBlock.lines.getClass().getName() == java.util.ArrayList.class",
                                    "this.label.shadowPaint.getClass().getName() == orig(this.label.shadowPaint.getClass().getName())",
                                    "return.interiorGap.top == 2.0",
                                    "org.jfree.chart.util.RectangleInsets.ZERO_INSETS == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS)",
                                    "return.shadowPaint has only one value",
                                    "return.outlineStroke has only one value",
                                    "this.allocatedY == orig(this.allocatedY)",
                                    "this.label.backgroundPaint.getClass().getName() == orig(this.label.backgroundPaint.getClass().getName())",
                                    "this.label.textBlock.lineAlignment == orig(this.label.textBlock.lineAlignment)",
                                    "this.baseY == orig(this.baseY)",
                                    "this.labelHeight == orig(this.labelHeight)",
                                    "this.gap == orig(this.gap)",
                                    "return.shadowYOffset == 2.0",
                                    "this.label.outlinePaint == orig(this.label.outlinePaint)",
                                    "return.outlinePaint has only one value",
                                    "this.label.textBlock.lines.getClass().getName() == orig(this.label.textBlock.lines.getClass().getName())",
                                    "return.textBlock.lineAlignment has only one value",
                                    "return.textBlock.lines[].getClass().getName() elements == org.jfree.chart.text.TextLine.class",
                                    "this.label.outlinePaint.getClass().getName() == orig(this.label.outlinePaint.getClass().getName())",
                                    "this.label.shadowPaint == orig(this.label.shadowPaint)",
                                    "this.label.interiorGap.top == orig(this.label.interiorGap.top)",
                                    "this.label.shadowYOffset == orig(this.label.shadowYOffset)",
                                    "this.label.textBlock.lines[] == orig(this.label.textBlock.lines[])",
                                    "this.label.interiorGap.right == orig(this.label.interiorGap.right)",
                                    "return.shadowXOffset == 2.0",
                                    "this.label.backgroundPaint == orig(this.label.backgroundPaint)",
                                    "this.key.getClass().getName() == orig(this.key.getClass().getName())",
                                    "this.linkPercent == orig(this.linkPercent)",
                                    "return.shadowPaint.getClass().getName() == java.awt.Color.class",
                                    "this.label.interiorGap == orig(this.label.interiorGap)",
                                    "return.backgroundPaint.getClass().getName() == java.awt.Color.class",
                                    "this.label.outlineStroke.getClass().getName() == orig(this.label.outlineStroke.getClass().getName())",
                                    "this.angle == orig(this.angle)",
                                    "this.label.outlineStroke == orig(this.label.outlineStroke)",
                                    "return.backgroundPaint has only one value",
                                    "return.interiorGap.unitType has only one value",
                                    "this.label.interiorGap.left == orig(this.label.interiorGap.left)",
                                    "return.interiorGap.left == 2.0",
                                    "this.label == orig(this.label)",
                                    "return.interiorGap.right == 2.0",
                                    "size(return.textBlock.lines[]) one of { 1, 3 }"
                                ]
                            }
                        },
                        {
                            "Patch12.inv.output": "N/A"
                        }
                    ]
                }
            ]
        },
        {
            "PieLabelRecord(java.lang.Comparable, double, double, org.jfree.chart.text.TextBox, double, double, double)": [
                {
                    "ENTER": [
                        {
                            "Patch13.inv.output": {
                                "invs": [
                                    "gap == 4.74446332682753",
                                    "label.outlinePaint has only one value",
                                    "labelHeight == 15.640625",
                                    "label.shadowXOffset == 2.0",
                                    "label.shadowPaint.getClass().getName() == java.awt.Color.class",
                                    "label.backgroundPaint.getClass().getName() == java.awt.Color.class",
                                    "label.backgroundPaint has only one value",
                                    "label.shadowPaint has only one value",
                                    "label.textBlock.lines.getClass().getName() == java.util.ArrayList.class",
                                    "angle one of { -3.2098881460591366, -0.06829549246934341 }",
                                    "label.outlineStroke has only one value",
                                    "key.getClass().getName() == java.lang.String.class",
                                    "label.interiorGap.bottom == 2.0",
                                    "label.interiorGap has only one value",
                                    "org.jfree.chart.util.RectangleInsets.ZERO_INSETS has only one value",
                                    "label.shadowYOffset == 2.0",
                                    "linkPercent == 0.9",
                                    "label.interiorGap.unitType has only one value",
                                    "label.interiorGap.top == 2.0",
                                    "baseY one of { 56.91156839733923, 61.04155660266077 }",
                                    "label.interiorGap.left == 2.0",
                                    "size(label.textBlock.lines[]) == 1",
                                    "label.outlineStroke.getClass().getName() == java.awt.BasicStroke.class",
                                    "label.interiorGap.right == 2.0",
                                    "label.textBlock.lines[].getClass().getName() elements == org.jfree.chart.text.TextLine.class",
                                    "label.textBlock.lines[].getClass().getName() == [org.jfree.chart.text.TextLine]",
                                    "label.textBlock.lineAlignment has only one value",
                                    "label.outlinePaint.getClass().getName() == java.awt.Color.class"
                                ]
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": [
                                    "gap one of { 2.3750000000000004, 4.743359018305303, 4.74446332682753 }",
                                    "label.outlinePaint has only one value",
                                    "label.textBlock.lines[].getClass().getName() one of { [org.jfree.chart.text.TextLine], [org.jfree.chart.text.TextLine, org.jfree.chart.text.TextLine, org.jfree.chart.text.TextLine] }",
                                    "label.shadowXOffset == 2.0",
                                    "size(label.textBlock.lines[]) one of { 1, 3 }",
                                    "label.shadowPaint.getClass().getName() == java.awt.Color.class",
                                    "label.backgroundPaint.getClass().getName() == java.awt.Color.class",
                                    "label.backgroundPaint has only one value",
                                    "label.shadowPaint has only one value",
                                    "label.textBlock.lines.getClass().getName() == java.util.ArrayList.class",
                                    "label.outlineStroke has only one value",
                                    "key.getClass().getName() == java.lang.String.class",
                                    "label.interiorGap.bottom == 2.0",
                                    "org.jfree.chart.util.RectangleInsets.ZERO_INSETS has only one value",
                                    "label.shadowYOffset == 2.0",
                                    "linkPercent == 0.9",
                                    "label.interiorGap.unitType has only one value",
                                    "label.interiorGap.top == 2.0",
                                    "label.interiorGap.left == 2.0",
                                    "label.outlineStroke.getClass().getName() == java.awt.BasicStroke.class",
                                    "label.interiorGap.right == 2.0",
                                    "labelHeight one of { 15.640625, 38.921875 }",
                                    "label.textBlock.lines[].getClass().getName() elements == org.jfree.chart.text.TextLine.class",
                                    "label.textBlock.lineAlignment has only one value",
                                    "label.outlinePaint.getClass().getName() == java.awt.Color.class"
                                ]
                            }
                        },
                        {
                            "Patch12.inv.output": "N/A"
                        }
                    ]
                },
                {
                    "EXIT": [
                        {
                            "Patch13.inv.output": {
                                "invs": [
                                    "label.textBlock.lines[] == orig(label.textBlock.lines[])",
                                    "label.outlinePaint has only one value",
                                    "label.shadowXOffset == 2.0",
                                    "label.outlineStroke.getClass().getName() == orig(label.outlineStroke.getClass().getName())",
                                    "label.shadowPaint.getClass().getName() == java.awt.Color.class",
                                    "label.backgroundPaint.getClass().getName() == java.awt.Color.class",
                                    "label.backgroundPaint has only one value",
                                    "label.shadowXOffset == orig(label.shadowXOffset)",
                                    "label.shadowPaint has only one value",
                                    "label.textBlock.lines.getClass().getName() == java.util.ArrayList.class",
                                    "org.jfree.chart.util.RectangleInsets.ZERO_INSETS == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS)",
                                    "label.outlineStroke has only one value",
                                    "label.backgroundPaint.getClass().getName() == orig(label.backgroundPaint.getClass().getName())",
                                    "label.textBlock.lines == orig(label.textBlock.lines)",
                                    "label.outlinePaint == orig(label.outlinePaint)",
                                    "label.textBlock.lineAlignment == orig(label.textBlock.lineAlignment)",
                                    "label.interiorGap.bottom == 2.0",
                                    "label.shadowYOffset == orig(label.shadowYOffset)",
                                    "label.textBlock.lines.getClass().getName() == orig(label.textBlock.lines.getClass().getName())",
                                    "label.interiorGap has only one value",
                                    "label.shadowPaint.getClass().getName() == orig(label.shadowPaint.getClass().getName())",
                                    "label.backgroundPaint == orig(label.backgroundPaint)",
                                    "label.interiorGap.left == orig(label.interiorGap.left)",
                                    "label.shadowYOffset == 2.0",
                                    "label.interiorGap.bottom == orig(label.interiorGap.bottom)",
                                    "label.interiorGap.unitType has only one value",
                                    "label.interiorGap.unitType == orig(label.interiorGap.unitType)",
                                    "label.outlineStroke == orig(label.outlineStroke)",
                                    "label.interiorGap.right == orig(label.interiorGap.right)",
                                    "label.interiorGap.top == 2.0",
                                    "label.interiorGap.left == 2.0",
                                    "label.interiorGap == orig(label.interiorGap)",
                                    "size(label.textBlock.lines[]) == 1",
                                    "label.outlinePaint.getClass().getName() == orig(label.outlinePaint.getClass().getName())",
                                    "label.outlineStroke.getClass().getName() == java.awt.BasicStroke.class",
                                    "label.interiorGap.right == 2.0",
                                    "label.textBlock == orig(label.textBlock)",
                                    "label.interiorGap.top == orig(label.interiorGap.top)",
                                    "label.textBlock.lines[].getClass().getName() elements == org.jfree.chart.text.TextLine.class",
                                    "label.textBlock.lines[].getClass().getName() == [org.jfree.chart.text.TextLine]",
                                    "label.textBlock.lineAlignment has only one value",
                                    "label.shadowPaint == orig(label.shadowPaint)",
                                    "label.outlinePaint.getClass().getName() == java.awt.Color.class"
                                ]
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": [
                                    "label.textBlock.lines[] == orig(label.textBlock.lines[])",
                                    "label.outlinePaint has only one value",
                                    "label.textBlock.lines[].getClass().getName() one of { [org.jfree.chart.text.TextLine], [org.jfree.chart.text.TextLine, org.jfree.chart.text.TextLine, org.jfree.chart.text.TextLine] }",
                                    "label.shadowXOffset == 2.0",
                                    "label.outlineStroke.getClass().getName() == orig(label.outlineStroke.getClass().getName())",
                                    "size(label.textBlock.lines[]) one of { 1, 3 }",
                                    "label.shadowPaint.getClass().getName() == java.awt.Color.class",
                                    "label.backgroundPaint.getClass().getName() == java.awt.Color.class",
                                    "label.backgroundPaint has only one value",
                                    "label.shadowXOffset == orig(label.shadowXOffset)",
                                    "label.shadowPaint has only one value",
                                    "label.textBlock.lines.getClass().getName() == java.util.ArrayList.class",
                                    "org.jfree.chart.util.RectangleInsets.ZERO_INSETS == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS)",
                                    "label.outlineStroke has only one value",
                                    "label.backgroundPaint.getClass().getName() == orig(label.backgroundPaint.getClass().getName())",
                                    "label.textBlock.lines == orig(label.textBlock.lines)",
                                    "label.outlinePaint == orig(label.outlinePaint)",
                                    "label.textBlock.lineAlignment == orig(label.textBlock.lineAlignment)",
                                    "label.interiorGap.bottom == 2.0",
                                    "label.shadowYOffset == orig(label.shadowYOffset)",
                                    "label.textBlock.lines.getClass().getName() == orig(label.textBlock.lines.getClass().getName())",
                                    "label.shadowPaint.getClass().getName() == orig(label.shadowPaint.getClass().getName())",
                                    "label.backgroundPaint == orig(label.backgroundPaint)",
                                    "label.interiorGap.left == orig(label.interiorGap.left)",
                                    "label.shadowYOffset == 2.0",
                                    "label.interiorGap.bottom == orig(label.interiorGap.bottom)",
                                    "label.interiorGap.unitType has only one value",
                                    "label.interiorGap.unitType == orig(label.interiorGap.unitType)",
                                    "label.outlineStroke == orig(label.outlineStroke)",
                                    "label.interiorGap.right == orig(label.interiorGap.right)",
                                    "label.interiorGap.top == 2.0",
                                    "label.interiorGap.left == 2.0",
                                    "label.interiorGap == orig(label.interiorGap)",
                                    "label.outlinePaint.getClass().getName() == orig(label.outlinePaint.getClass().getName())",
                                    "label.outlineStroke.getClass().getName() == java.awt.BasicStroke.class",
                                    "label.interiorGap.right == 2.0",
                                    "label.textBlock == orig(label.textBlock)",
                                    "label.interiorGap.top == orig(label.interiorGap.top)",
                                    "label.textBlock.lines[].getClass().getName() elements == org.jfree.chart.text.TextLine.class",
                                    "label.textBlock.lineAlignment has only one value",
                                    "label.shadowPaint == orig(label.shadowPaint)",
                                    "label.outlinePaint.getClass().getName() == java.awt.Color.class"
                                ]
                            }
                        },
                        {
                            "Patch12.inv.output": "N/A"
                        }
                    ]
                }
            ]
        },
        {
            "getLowerY()": [
                {
                    "ENTER": [
                        {
                            "Patch13.inv.output": {
                                "invs": []
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": []
                            }
                        },
                        {
                            "Patch12.inv.output": "N/A"
                        }
                    ]
                },
                {
                    "EXIT": [
                        {
                            "Patch13.inv.output": {
                                "invs": [
                                    "this.label.textBlock == orig(this.label.textBlock)",
                                    "this.label.interiorGap.unitType == orig(this.label.interiorGap.unitType)",
                                    "this.label.interiorGap.bottom == orig(this.label.interiorGap.bottom)",
                                    "this.label.shadowXOffset == orig(this.label.shadowXOffset)",
                                    "this.key == orig(this.key)",
                                    "this.label.textBlock.lines == orig(this.label.textBlock.lines)",
                                    "this.label.shadowPaint.getClass().getName() == orig(this.label.shadowPaint.getClass().getName())",
                                    "org.jfree.chart.util.RectangleInsets.ZERO_INSETS == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS)",
                                    "this.allocatedY == orig(this.allocatedY)",
                                    "this.label.backgroundPaint.getClass().getName() == orig(this.label.backgroundPaint.getClass().getName())",
                                    "this.label.textBlock.lineAlignment == orig(this.label.textBlock.lineAlignment)",
                                    "this.baseY == orig(this.baseY)",
                                    "this.labelHeight == orig(this.labelHeight)",
                                    "this.gap == orig(this.gap)",
                                    "this.label.outlinePaint == orig(this.label.outlinePaint)",
                                    "this.label.textBlock.lines.getClass().getName() == orig(this.label.textBlock.lines.getClass().getName())",
                                    "this.label.outlinePaint.getClass().getName() == orig(this.label.outlinePaint.getClass().getName())",
                                    "this.label.shadowPaint == orig(this.label.shadowPaint)",
                                    "return one of { 49.09125589733923, 53.22124410266077 }",
                                    "this.label.shadowYOffset == orig(this.label.shadowYOffset)",
                                    "this.label.textBlock.lines[] == orig(this.label.textBlock.lines[])",
                                    "this.label.interiorGap.right == orig(this.label.interiorGap.right)",
                                    "this.label.backgroundPaint == orig(this.label.backgroundPaint)",
                                    "this.key.getClass().getName() == orig(this.key.getClass().getName())",
                                    "this.linkPercent == orig(this.linkPercent)",
                                    "this.label.interiorGap == orig(this.label.interiorGap)",
                                    "this.label.outlineStroke.getClass().getName() == orig(this.label.outlineStroke.getClass().getName())",
                                    "this.angle == orig(this.angle)",
                                    "this.label.outlineStroke == orig(this.label.outlineStroke)",
                                    "this.label.interiorGap.left == orig(this.label.interiorGap.left)",
                                    "this.label.interiorGap.top == orig(this.label.interiorGap.top)",
                                    "this.label == orig(this.label)"
                                ]
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": [
                                    "this.label.textBlock == orig(this.label.textBlock)",
                                    "this.label.interiorGap.unitType == orig(this.label.interiorGap.unitType)",
                                    "this.label.interiorGap.bottom == orig(this.label.interiorGap.bottom)",
                                    "this.label.shadowXOffset == orig(this.label.shadowXOffset)",
                                    "this.key == orig(this.key)",
                                    "this.label.textBlock.lines == orig(this.label.textBlock.lines)",
                                    "this.label.shadowPaint.getClass().getName() == orig(this.label.shadowPaint.getClass().getName())",
                                    "org.jfree.chart.util.RectangleInsets.ZERO_INSETS == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS)",
                                    "this.allocatedY == orig(this.allocatedY)",
                                    "this.label.backgroundPaint.getClass().getName() == orig(this.label.backgroundPaint.getClass().getName())",
                                    "this.label.textBlock.lineAlignment == orig(this.label.textBlock.lineAlignment)",
                                    "this.baseY == orig(this.baseY)",
                                    "this.labelHeight == orig(this.labelHeight)",
                                    "this.gap == orig(this.gap)",
                                    "this.label.outlinePaint == orig(this.label.outlinePaint)",
                                    "this.label.textBlock.lines.getClass().getName() == orig(this.label.textBlock.lines.getClass().getName())",
                                    "this.label.outlinePaint.getClass().getName() == orig(this.label.outlinePaint.getClass().getName())",
                                    "this.label.shadowPaint == orig(this.label.shadowPaint)",
                                    "this.label.shadowYOffset == orig(this.label.shadowYOffset)",
                                    "this.label.textBlock.lines[] == orig(this.label.textBlock.lines[])",
                                    "this.label.interiorGap.right == orig(this.label.interiorGap.right)",
                                    "this.label.backgroundPaint == orig(this.label.backgroundPaint)",
                                    "this.key.getClass().getName() == orig(this.key.getClass().getName())",
                                    "this.linkPercent == orig(this.linkPercent)",
                                    "this.label.interiorGap == orig(this.label.interiorGap)",
                                    "this.label.outlineStroke.getClass().getName() == orig(this.label.outlineStroke.getClass().getName())",
                                    "this.angle == orig(this.angle)",
                                    "this.label.outlineStroke == orig(this.label.outlineStroke)",
                                    "this.label.interiorGap.left == orig(this.label.interiorGap.left)",
                                    "this.label.interiorGap.top == orig(this.label.interiorGap.top)",
                                    "this.label == orig(this.label)"
                                ]
                            }
                        },
                        {
                            "Patch12.inv.output": "N/A"
                        }
                    ]
                }
            ]
        },
        {
            "getUpperY()": [
                {
                    "ENTER": [
                        {
                            "Patch13.inv.output": {
                                "invs": []
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": []
                            }
                        },
                        {
                            "Patch12.inv.output": "N/A"
                        }
                    ]
                },
                {
                    "EXIT": [
                        {
                            "Patch13.inv.output": {
                                "invs": [
                                    "this.label.textBlock == orig(this.label.textBlock)",
                                    "this.label.interiorGap.unitType == orig(this.label.interiorGap.unitType)",
                                    "this.label.interiorGap.bottom == orig(this.label.interiorGap.bottom)",
                                    "this.label.shadowXOffset == orig(this.label.shadowXOffset)",
                                    "this.key == orig(this.key)",
                                    "this.label.textBlock.lines == orig(this.label.textBlock.lines)",
                                    "this.label.shadowPaint.getClass().getName() == orig(this.label.shadowPaint.getClass().getName())",
                                    "org.jfree.chart.util.RectangleInsets.ZERO_INSETS == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS)",
                                    "this.allocatedY == orig(this.allocatedY)",
                                    "this.label.backgroundPaint.getClass().getName() == orig(this.label.backgroundPaint.getClass().getName())",
                                    "this.label.textBlock.lineAlignment == orig(this.label.textBlock.lineAlignment)",
                                    "this.baseY == orig(this.baseY)",
                                    "this.labelHeight == orig(this.labelHeight)",
                                    "this.gap == orig(this.gap)",
                                    "this.label.outlinePaint == orig(this.label.outlinePaint)",
                                    "this.label.textBlock.lines.getClass().getName() == orig(this.label.textBlock.lines.getClass().getName())",
                                    "this.label.outlinePaint.getClass().getName() == orig(this.label.outlinePaint.getClass().getName())",
                                    "return one of { 64.73188089733924, 68.86186910266076 }",
                                    "this.label.shadowPaint == orig(this.label.shadowPaint)",
                                    "this.label.shadowYOffset == orig(this.label.shadowYOffset)",
                                    "this.label.textBlock.lines[] == orig(this.label.textBlock.lines[])",
                                    "this.label.interiorGap.right == orig(this.label.interiorGap.right)",
                                    "this.label.backgroundPaint == orig(this.label.backgroundPaint)",
                                    "this.key.getClass().getName() == orig(this.key.getClass().getName())",
                                    "this.linkPercent == orig(this.linkPercent)",
                                    "this.label.interiorGap == orig(this.label.interiorGap)",
                                    "this.label.outlineStroke.getClass().getName() == orig(this.label.outlineStroke.getClass().getName())",
                                    "this.angle == orig(this.angle)",
                                    "this.label.outlineStroke == orig(this.label.outlineStroke)",
                                    "this.label.interiorGap.left == orig(this.label.interiorGap.left)",
                                    "this.label.interiorGap.top == orig(this.label.interiorGap.top)",
                                    "this.label == orig(this.label)"
                                ]
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": [
                                    "this.label.textBlock == orig(this.label.textBlock)",
                                    "this.label.interiorGap.unitType == orig(this.label.interiorGap.unitType)",
                                    "this.label.interiorGap.bottom == orig(this.label.interiorGap.bottom)",
                                    "this.label.shadowXOffset == orig(this.label.shadowXOffset)",
                                    "this.key == orig(this.key)",
                                    "this.label.textBlock.lines == orig(this.label.textBlock.lines)",
                                    "this.label.shadowPaint.getClass().getName() == orig(this.label.shadowPaint.getClass().getName())",
                                    "org.jfree.chart.util.RectangleInsets.ZERO_INSETS == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS)",
                                    "this.allocatedY == orig(this.allocatedY)",
                                    "this.label.backgroundPaint.getClass().getName() == orig(this.label.backgroundPaint.getClass().getName())",
                                    "this.label.textBlock.lineAlignment == orig(this.label.textBlock.lineAlignment)",
                                    "this.baseY == orig(this.baseY)",
                                    "this.labelHeight == orig(this.labelHeight)",
                                    "this.gap == orig(this.gap)",
                                    "this.label.outlinePaint == orig(this.label.outlinePaint)",
                                    "this.label.textBlock.lines.getClass().getName() == orig(this.label.textBlock.lines.getClass().getName())",
                                    "this.label.outlinePaint.getClass().getName() == orig(this.label.outlinePaint.getClass().getName())",
                                    "this.label.shadowPaint == orig(this.label.shadowPaint)",
                                    "this.label.shadowYOffset == orig(this.label.shadowYOffset)",
                                    "this.label.textBlock.lines[] == orig(this.label.textBlock.lines[])",
                                    "this.label.interiorGap.right == orig(this.label.interiorGap.right)",
                                    "this.label.backgroundPaint == orig(this.label.backgroundPaint)",
                                    "this.key.getClass().getName() == orig(this.key.getClass().getName())",
                                    "this.linkPercent == orig(this.linkPercent)",
                                    "this.label.interiorGap == orig(this.label.interiorGap)",
                                    "this.label.outlineStroke.getClass().getName() == orig(this.label.outlineStroke.getClass().getName())",
                                    "this.angle == orig(this.angle)",
                                    "this.label.outlineStroke == orig(this.label.outlineStroke)",
                                    "this.label.interiorGap.left == orig(this.label.interiorGap.left)",
                                    "this.label.interiorGap.top == orig(this.label.interiorGap.top)",
                                    "this.label == orig(this.label)"
                                ]
                            }
                        },
                        {
                            "Patch12.inv.output": "N/A"
                        }
                    ]
                }
            ]
        },
        {
            "getAllocatedY()": [
                {
                    "ENTER": [
                        {
                            "Patch13.inv.output": {
                                "invs": []
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": []
                            }
                        },
                        {
                            "Patch12.inv.output": "N/A"
                        }
                    ]
                },
                {
                    "EXIT": [
                        {
                            "Patch13.inv.output": {
                                "invs": [
                                    "this.label.textBlock == orig(this.label.textBlock)",
                                    "this.label.interiorGap.unitType == orig(this.label.interiorGap.unitType)",
                                    "this.label.interiorGap.bottom == orig(this.label.interiorGap.bottom)",
                                    "this.label.shadowXOffset == orig(this.label.shadowXOffset)",
                                    "this.key == orig(this.key)",
                                    "this.label.textBlock.lines == orig(this.label.textBlock.lines)",
                                    "this.label.shadowPaint.getClass().getName() == orig(this.label.shadowPaint.getClass().getName())",
                                    "org.jfree.chart.util.RectangleInsets.ZERO_INSETS == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS)",
                                    "this.allocatedY == orig(this.allocatedY)",
                                    "this.label.backgroundPaint.getClass().getName() == orig(this.label.backgroundPaint.getClass().getName())",
                                    "this.label.textBlock.lineAlignment == orig(this.label.textBlock.lineAlignment)",
                                    "return one of { 56.91156839733923, 61.04155660266077 }",
                                    "this.baseY == orig(this.baseY)",
                                    "this.labelHeight == orig(this.labelHeight)",
                                    "this.gap == orig(this.gap)",
                                    "this.label.outlinePaint == orig(this.label.outlinePaint)",
                                    "this.label.textBlock.lines.getClass().getName() == orig(this.label.textBlock.lines.getClass().getName())",
                                    "this.label.outlinePaint.getClass().getName() == orig(this.label.outlinePaint.getClass().getName())",
                                    "this.label.shadowPaint == orig(this.label.shadowPaint)",
                                    "this.label.shadowYOffset == orig(this.label.shadowYOffset)",
                                    "this.label.textBlock.lines[] == orig(this.label.textBlock.lines[])",
                                    "this.label.interiorGap.right == orig(this.label.interiorGap.right)",
                                    "this.label.backgroundPaint == orig(this.label.backgroundPaint)",
                                    "this.key.getClass().getName() == orig(this.key.getClass().getName())",
                                    "this.linkPercent == orig(this.linkPercent)",
                                    "this.label.interiorGap == orig(this.label.interiorGap)",
                                    "this.label.outlineStroke.getClass().getName() == orig(this.label.outlineStroke.getClass().getName())",
                                    "this.angle == orig(this.angle)",
                                    "this.label.outlineStroke == orig(this.label.outlineStroke)",
                                    "this.label.interiorGap.left == orig(this.label.interiorGap.left)",
                                    "this.label.interiorGap.top == orig(this.label.interiorGap.top)",
                                    "this.label == orig(this.label)"
                                ]
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": [
                                    "this.label.textBlock == orig(this.label.textBlock)",
                                    "this.label.interiorGap.unitType == orig(this.label.interiorGap.unitType)",
                                    "this.label.interiorGap.bottom == orig(this.label.interiorGap.bottom)",
                                    "this.label.shadowXOffset == orig(this.label.shadowXOffset)",
                                    "this.key == orig(this.key)",
                                    "this.label.textBlock.lines == orig(this.label.textBlock.lines)",
                                    "this.label.shadowPaint.getClass().getName() == orig(this.label.shadowPaint.getClass().getName())",
                                    "org.jfree.chart.util.RectangleInsets.ZERO_INSETS == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS)",
                                    "this.allocatedY == orig(this.allocatedY)",
                                    "this.label.backgroundPaint.getClass().getName() == orig(this.label.backgroundPaint.getClass().getName())",
                                    "this.label.textBlock.lineAlignment == orig(this.label.textBlock.lineAlignment)",
                                    "this.baseY == orig(this.baseY)",
                                    "this.labelHeight == orig(this.labelHeight)",
                                    "this.gap == orig(this.gap)",
                                    "this.label.outlinePaint == orig(this.label.outlinePaint)",
                                    "this.label.textBlock.lines.getClass().getName() == orig(this.label.textBlock.lines.getClass().getName())",
                                    "this.label.outlinePaint.getClass().getName() == orig(this.label.outlinePaint.getClass().getName())",
                                    "this.label.shadowPaint == orig(this.label.shadowPaint)",
                                    "this.label.shadowYOffset == orig(this.label.shadowYOffset)",
                                    "this.label.textBlock.lines[] == orig(this.label.textBlock.lines[])",
                                    "this.label.interiorGap.right == orig(this.label.interiorGap.right)",
                                    "this.label.backgroundPaint == orig(this.label.backgroundPaint)",
                                    "this.key.getClass().getName() == orig(this.key.getClass().getName())",
                                    "this.linkPercent == orig(this.linkPercent)",
                                    "this.label.interiorGap == orig(this.label.interiorGap)",
                                    "this.label.outlineStroke.getClass().getName() == orig(this.label.outlineStroke.getClass().getName())",
                                    "this.angle == orig(this.angle)",
                                    "this.label.outlineStroke == orig(this.label.outlineStroke)",
                                    "this.label.interiorGap.left == orig(this.label.interiorGap.left)",
                                    "this.label.interiorGap.top == orig(this.label.interiorGap.top)",
                                    "this.label == orig(this.label)"
                                ]
                            }
                        },
                        {
                            "Patch12.inv.output": "N/A"
                        }
                    ]
                }
            ]
        },
        {
            "OBJECT": [
                {
                    "Patch12.inv.output": "N/A"
                },
                {
                    "b.inv.output": {
                        "invs": [
                            "this.label.backgroundPaint.getClass().getName() == java.awt.Color.class",
                            "this.label.shadowPaint.getClass().getName() == java.awt.Color.class",
                            "this.label.interiorGap.unitType has only one value",
                            "this.label.outlineStroke.getClass().getName() == java.awt.BasicStroke.class",
                            "this.label != null",
                            "this.label.interiorGap.top == 2.0",
                            "this.key != null",
                            "this.label.outlinePaint has only one value",
                            "this.label.textBlock.lines[] elements != null",
                            "this.label.textBlock.lines[].getClass().getName() one of { [org.jfree.chart.text.TextLine], [org.jfree.chart.text.TextLine, org.jfree.chart.text.TextLine, org.jfree.chart.text.TextLine] }",
                            "this.label.shadowYOffset == 2.0",
                            "this.label.backgroundPaint has only one value",
                            "this.label.outlinePaint != null",
                            "this.angle != 0",
                            "this.label.interiorGap.right == 2.0",
                            "this.label.textBlock.lineAlignment != null",
                            "this.label.textBlock.lines != null",
                            "this.label.shadowPaint has only one value",
                            "this.label.backgroundPaint != null",
                            "this.gap one of { 2.3750000000000004, 4.743359018305303, 4.74446332682753 }",
                            "this.label.interiorGap.bottom == 2.0",
                            "size(this.label.textBlock.lines[]) one of { 1, 3 }",
                            "this.label.interiorGap.unitType != null",
                            "org.jfree.chart.util.RectangleInsets.ZERO_INSETS has only one value",
                            "org.jfree.chart.util.RectangleInsets.ZERO_INSETS != null",
                            "this.label.outlinePaint.getClass().getName() == java.awt.Color.class",
                            "this.label.interiorGap != null",
                            "this.label.shadowXOffset == 2.0",
                            "this.labelHeight one of { 15.640625, 38.921875 }",
                            "this.label.outlineStroke != null",
                            "this.key.getClass().getName() == java.lang.String.class",
                            "this.label.outlineStroke has only one value",
                            "this.linkPercent == 0.9",
                            "this.label.textBlock.lines[].getClass().getName() elements == org.jfree.chart.text.TextLine.class",
                            "this.label.textBlock != null",
                            "this.label.interiorGap.left == 2.0",
                            "this.label.textBlock.lineAlignment has only one value",
                            "this.label.shadowPaint != null",
                            "this.label.textBlock.lines.getClass().getName() == java.util.ArrayList.class"
                        ]
                    }
                }
            ]
        },
        {
            "getLinkPercent()": [
                {
                    "ENTER": [
                        {
                            "Patch12.inv.output": "N/A"
                        },
                        {
                            "b.inv.output": {
                                "invs": []
                            }
                        }
                    ]
                },
                {
                    "EXIT": [
                        {
                            "Patch12.inv.output": "N/A"
                        },
                        {
                            "b.inv.output": {
                                "invs": [
                                    "this.label.textBlock == orig(this.label.textBlock)",
                                    "this.label.interiorGap.unitType == orig(this.label.interiorGap.unitType)",
                                    "this.label.interiorGap.bottom == orig(this.label.interiorGap.bottom)",
                                    "this.label.shadowXOffset == orig(this.label.shadowXOffset)",
                                    "this.key == orig(this.key)",
                                    "this.label.textBlock.lines == orig(this.label.textBlock.lines)",
                                    "this.label.shadowPaint.getClass().getName() == orig(this.label.shadowPaint.getClass().getName())",
                                    "org.jfree.chart.util.RectangleInsets.ZERO_INSETS == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS)",
                                    "this.allocatedY == orig(this.allocatedY)",
                                    "this.label.backgroundPaint.getClass().getName() == orig(this.label.backgroundPaint.getClass().getName())",
                                    "this.label.textBlock.lineAlignment == orig(this.label.textBlock.lineAlignment)",
                                    "this.baseY == orig(this.baseY)",
                                    "this.labelHeight == orig(this.labelHeight)",
                                    "this.gap == orig(this.gap)",
                                    "this.label.outlinePaint == orig(this.label.outlinePaint)",
                                    "this.label.textBlock.lines.getClass().getName() == orig(this.label.textBlock.lines.getClass().getName())",
                                    "this.label.outlinePaint.getClass().getName() == orig(this.label.outlinePaint.getClass().getName())",
                                    "this.label.shadowPaint == orig(this.label.shadowPaint)",
                                    "this.label.shadowYOffset == orig(this.label.shadowYOffset)",
                                    "this.label.textBlock.lines[] == orig(this.label.textBlock.lines[])",
                                    "this.label.interiorGap.right == orig(this.label.interiorGap.right)",
                                    "this.label.backgroundPaint == orig(this.label.backgroundPaint)",
                                    "this.key.getClass().getName() == orig(this.key.getClass().getName())",
                                    "this.linkPercent == orig(this.linkPercent)",
                                    "this.label.interiorGap == orig(this.label.interiorGap)",
                                    "this.label.outlineStroke.getClass().getName() == orig(this.label.outlineStroke.getClass().getName())",
                                    "this.angle == orig(this.angle)",
                                    "return == 0.9",
                                    "this.label.outlineStroke == orig(this.label.outlineStroke)",
                                    "this.label.interiorGap.left == orig(this.label.interiorGap.left)",
                                    "this.label.interiorGap.top == orig(this.label.interiorGap.top)",
                                    "this.label == orig(this.label)"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "compareTo(java.lang.Object)": [
                {
                    "ENTER": [
                        {
                            "Patch12.inv.output": "N/A"
                        },
                        {
                            "b.inv.output": {
                                "invs": [
                                    "this.baseY == 25.201875",
                                    "this.label.textBlock.lines[].getClass().getName() == [org.jfree.chart.text.TextLine, org.jfree.chart.text.TextLine, org.jfree.chart.text.TextLine]",
                                    "this.gap == 2.3750000000000004",
                                    "size(this.label.textBlock.lines[]) == 3",
                                    "this.labelHeight == 38.921875",
                                    "this.key has only one value",
                                    "this.label.interiorGap has only one value",
                                    "obj.getClass().getName() == org.jfree.chart.plot.PieLabelRecord.class",
                                    "this.angle == -4.71238898038469",
                                    "this.allocatedY == 25.201875"
                                ]
                            }
                        }
                    ]
                },
                {
                    "EXIT": [
                        {
                            "Patch12.inv.output": "N/A"
                        },
                        {
                            "b.inv.output": {
                                "invs": [
                                    "this.label.textBlock == orig(this.label.textBlock)",
                                    "this.baseY == 25.201875",
                                    "this.label.textBlock.lines[].getClass().getName() == [org.jfree.chart.text.TextLine, org.jfree.chart.text.TextLine, org.jfree.chart.text.TextLine]",
                                    "size(this.label.textBlock.lines[]) == 3",
                                    "this.label.interiorGap.unitType == orig(this.label.interiorGap.unitType)",
                                    "this.label.interiorGap.bottom == orig(this.label.interiorGap.bottom)",
                                    "this.key has only one value",
                                    "this.label.shadowXOffset == orig(this.label.shadowXOffset)",
                                    "this.key == orig(this.key)",
                                    "this.label.textBlock.lines == orig(this.label.textBlock.lines)",
                                    "this.label.shadowPaint.getClass().getName() == orig(this.label.shadowPaint.getClass().getName())",
                                    "return == -1",
                                    "org.jfree.chart.util.RectangleInsets.ZERO_INSETS == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS)",
                                    "this.allocatedY == orig(this.allocatedY)",
                                    "this.label.backgroundPaint.getClass().getName() == orig(this.label.backgroundPaint.getClass().getName())",
                                    "this.label.textBlock.lineAlignment == orig(this.label.textBlock.lineAlignment)",
                                    "this.baseY == orig(this.baseY)",
                                    "this.label.interiorGap has only one value",
                                    "this.labelHeight == orig(this.labelHeight)",
                                    "this.gap == orig(this.gap)",
                                    "this.label.outlinePaint == orig(this.label.outlinePaint)",
                                    "this.allocatedY == 25.201875",
                                    "this.label.textBlock.lines.getClass().getName() == orig(this.label.textBlock.lines.getClass().getName())",
                                    "this.label.outlinePaint.getClass().getName() == orig(this.label.outlinePaint.getClass().getName())",
                                    "this.label.shadowPaint == orig(this.label.shadowPaint)",
                                    "this.labelHeight == 38.921875",
                                    "this.label.shadowYOffset == orig(this.label.shadowYOffset)",
                                    "this.label.textBlock.lines[] == orig(this.label.textBlock.lines[])",
                                    "this.angle == -4.71238898038469",
                                    "this.label.interiorGap.right == orig(this.label.interiorGap.right)",
                                    "this.label.backgroundPaint == orig(this.label.backgroundPaint)",
                                    "this.key.getClass().getName() == orig(this.key.getClass().getName())",
                                    "this.gap == 2.3750000000000004",
                                    "this.linkPercent == orig(this.linkPercent)",
                                    "this.label.interiorGap == orig(this.label.interiorGap)",
                                    "this.label.outlineStroke.getClass().getName() == orig(this.label.outlineStroke.getClass().getName())",
                                    "this.angle == orig(this.angle)",
                                    "this.label.outlineStroke == orig(this.label.outlineStroke)",
                                    "this.label.interiorGap.left == orig(this.label.interiorGap.left)",
                                    "this.label.interiorGap.top == orig(this.label.interiorGap.top)",
                                    "this.label == orig(this.label)"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "setAllocatedY(double)": [
                {
                    "ENTER": [
                        {
                            "Patch12.inv.output": "N/A"
                        },
                        {
                            "b.inv.output": {
                                "invs": [
                                    "this.label.textBlock.lines[].getClass().getName() == [org.jfree.chart.text.TextLine, org.jfree.chart.text.TextLine, org.jfree.chart.text.TextLine]",
                                    "y == 68.12375",
                                    "size(this.label.textBlock.lines[]) == 3",
                                    "this.baseY == 36.81534122066405",
                                    "this.labelHeight == 38.921875",
                                    "this.key has only one value",
                                    "this.label.interiorGap has only one value",
                                    "this.allocatedY == 36.81534122066405",
                                    "this.gap == 4.743359018305303",
                                    "this.angle == -3.066792828504322"
                                ]
                            }
                        }
                    ]
                },
                {
                    "EXIT": [
                        {
                            "Patch12.inv.output": "N/A"
                        },
                        {
                            "b.inv.output": {
                                "invs": [
                                    "this.label.textBlock == orig(this.label.textBlock)",
                                    "this.label.textBlock.lines[].getClass().getName() == [org.jfree.chart.text.TextLine, org.jfree.chart.text.TextLine, org.jfree.chart.text.TextLine]",
                                    "this.angle == -3.066792828504322",
                                    "size(this.label.textBlock.lines[]) == 3",
                                    "this.label.interiorGap.unitType == orig(this.label.interiorGap.unitType)",
                                    "this.label.interiorGap.bottom == orig(this.label.interiorGap.bottom)",
                                    "this.key has only one value",
                                    "this.label.shadowXOffset == orig(this.label.shadowXOffset)",
                                    "this.gap == 4.743359018305303",
                                    "this.key == orig(this.key)",
                                    "this.label.textBlock.lines == orig(this.label.textBlock.lines)",
                                    "this.label.shadowPaint.getClass().getName() == orig(this.label.shadowPaint.getClass().getName())",
                                    "this.allocatedY == 68.12375",
                                    "org.jfree.chart.util.RectangleInsets.ZERO_INSETS == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS)",
                                    "this.baseY == 36.81534122066405",
                                    "this.label.backgroundPaint.getClass().getName() == orig(this.label.backgroundPaint.getClass().getName())",
                                    "this.label.textBlock.lineAlignment == orig(this.label.textBlock.lineAlignment)",
                                    "this.baseY == orig(this.baseY)",
                                    "this.label.interiorGap has only one value",
                                    "this.labelHeight == orig(this.labelHeight)",
                                    "this.gap == orig(this.gap)",
                                    "this.label.outlinePaint == orig(this.label.outlinePaint)",
                                    "this.label.textBlock.lines.getClass().getName() == orig(this.label.textBlock.lines.getClass().getName())",
                                    "this.label.outlinePaint.getClass().getName() == orig(this.label.outlinePaint.getClass().getName())",
                                    "this.label.shadowPaint == orig(this.label.shadowPaint)",
                                    "this.labelHeight == 38.921875",
                                    "this.label.shadowYOffset == orig(this.label.shadowYOffset)",
                                    "this.label.textBlock.lines[] == orig(this.label.textBlock.lines[])",
                                    "this.label.interiorGap.right == orig(this.label.interiorGap.right)",
                                    "this.label.backgroundPaint == orig(this.label.backgroundPaint)",
                                    "this.key.getClass().getName() == orig(this.key.getClass().getName())",
                                    "this.linkPercent == orig(this.linkPercent)",
                                    "this.label.interiorGap == orig(this.label.interiorGap)",
                                    "this.label.outlineStroke.getClass().getName() == orig(this.label.outlineStroke.getClass().getName())",
                                    "this.angle == orig(this.angle)",
                                    "this.label.outlineStroke == orig(this.label.outlineStroke)",
                                    "this.label.interiorGap.left == orig(this.label.interiorGap.left)",
                                    "this.label.interiorGap.top == orig(this.label.interiorGap.top)",
                                    "this.label == orig(this.label)"
                                ]
                            }
                        }
                    ]
                }
            ]
        }
    ]
}