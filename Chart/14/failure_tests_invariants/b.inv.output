===========================================================================
org.jfree.chart.ChartColor:::CLASS
org.jfree.chart.ChartColor.VERY_DARK_RED has only one value
org.jfree.chart.ChartColor.DARK_RED has only one value
org.jfree.chart.ChartColor.LIGHT_RED has only one value
org.jfree.chart.ChartColor.VERY_LIGHT_RED has only one value
org.jfree.chart.ChartColor.VERY_DARK_YELLOW has only one value
org.jfree.chart.ChartColor.DARK_YELLOW has only one value
org.jfree.chart.ChartColor.LIGHT_YELLOW has only one value
org.jfree.chart.ChartColor.VERY_LIGHT_YELLOW has only one value
org.jfree.chart.ChartColor.VERY_DARK_GREEN has only one value
org.jfree.chart.ChartColor.DARK_GREEN has only one value
org.jfree.chart.ChartColor.LIGHT_GREEN has only one value
org.jfree.chart.ChartColor.VERY_LIGHT_GREEN has only one value
org.jfree.chart.ChartColor.VERY_DARK_CYAN has only one value
org.jfree.chart.ChartColor.DARK_CYAN has only one value
org.jfree.chart.ChartColor.LIGHT_CYAN has only one value
org.jfree.chart.ChartColor.VERY_LIGHT_CYAN has only one value
org.jfree.chart.ChartColor.VERY_DARK_BLUE has only one value
org.jfree.chart.ChartColor.DARK_BLUE has only one value
org.jfree.chart.ChartColor.LIGHT_BLUE has only one value
org.jfree.chart.ChartColor.VERY_LIGHT_BLUE has only one value
org.jfree.chart.ChartColor.VERY_DARK_MAGENTA has only one value
org.jfree.chart.ChartColor.DARK_MAGENTA has only one value
org.jfree.chart.ChartColor.LIGHT_MAGENTA has only one value
org.jfree.chart.ChartColor.VERY_LIGHT_MAGENTA has only one value
===========================================================================
org.jfree.chart.ChartColor.createDefaultPaintArray():::ENTER
===========================================================================
org.jfree.chart.ChartColor.createDefaultPaintArray():::EXIT
org.jfree.chart.ChartColor.VERY_DARK_RED == orig(org.jfree.chart.ChartColor.VERY_DARK_RED)
org.jfree.chart.ChartColor.DARK_RED == orig(org.jfree.chart.ChartColor.DARK_RED)
org.jfree.chart.ChartColor.LIGHT_RED == orig(org.jfree.chart.ChartColor.LIGHT_RED)
org.jfree.chart.ChartColor.VERY_LIGHT_RED == orig(org.jfree.chart.ChartColor.VERY_LIGHT_RED)
org.jfree.chart.ChartColor.VERY_DARK_YELLOW == orig(org.jfree.chart.ChartColor.VERY_DARK_YELLOW)
org.jfree.chart.ChartColor.DARK_YELLOW == orig(org.jfree.chart.ChartColor.DARK_YELLOW)
org.jfree.chart.ChartColor.LIGHT_YELLOW == orig(org.jfree.chart.ChartColor.LIGHT_YELLOW)
org.jfree.chart.ChartColor.VERY_LIGHT_YELLOW == orig(org.jfree.chart.ChartColor.VERY_LIGHT_YELLOW)
org.jfree.chart.ChartColor.VERY_DARK_GREEN == orig(org.jfree.chart.ChartColor.VERY_DARK_GREEN)
org.jfree.chart.ChartColor.DARK_GREEN == orig(org.jfree.chart.ChartColor.DARK_GREEN)
org.jfree.chart.ChartColor.LIGHT_GREEN == orig(org.jfree.chart.ChartColor.LIGHT_GREEN)
org.jfree.chart.ChartColor.VERY_LIGHT_GREEN == orig(org.jfree.chart.ChartColor.VERY_LIGHT_GREEN)
org.jfree.chart.ChartColor.VERY_DARK_CYAN == orig(org.jfree.chart.ChartColor.VERY_DARK_CYAN)
org.jfree.chart.ChartColor.DARK_CYAN == orig(org.jfree.chart.ChartColor.DARK_CYAN)
org.jfree.chart.ChartColor.LIGHT_CYAN == orig(org.jfree.chart.ChartColor.LIGHT_CYAN)
org.jfree.chart.ChartColor.VERY_LIGHT_CYAN == orig(org.jfree.chart.ChartColor.VERY_LIGHT_CYAN)
org.jfree.chart.ChartColor.VERY_DARK_BLUE == orig(org.jfree.chart.ChartColor.VERY_DARK_BLUE)
org.jfree.chart.ChartColor.DARK_BLUE == orig(org.jfree.chart.ChartColor.DARK_BLUE)
org.jfree.chart.ChartColor.LIGHT_BLUE == orig(org.jfree.chart.ChartColor.LIGHT_BLUE)
org.jfree.chart.ChartColor.VERY_LIGHT_BLUE == orig(org.jfree.chart.ChartColor.VERY_LIGHT_BLUE)
org.jfree.chart.ChartColor.VERY_DARK_MAGENTA == orig(org.jfree.chart.ChartColor.VERY_DARK_MAGENTA)
org.jfree.chart.ChartColor.DARK_MAGENTA == orig(org.jfree.chart.ChartColor.DARK_MAGENTA)
org.jfree.chart.ChartColor.LIGHT_MAGENTA == orig(org.jfree.chart.ChartColor.LIGHT_MAGENTA)
org.jfree.chart.ChartColor.VERY_LIGHT_MAGENTA == orig(org.jfree.chart.ChartColor.VERY_LIGHT_MAGENTA)
return has only one value
return.getClass().getName() == java.awt.Paint[].class
return[] contains no nulls and has only one value, of length 34
size(return[]) == 34
===========================================================================
org.jfree.chart.axis.AxisLocation:::CLASS
===========================================================================
org.jfree.chart.axis.AxisLocation:::OBJECT
===========================================================================
org.jfree.chart.axis.AxisLocation.AxisLocation(java.lang.String):::ENTER
===========================================================================
org.jfree.chart.axis.AxisLocation.AxisLocation(java.lang.String):::EXIT
name.toString == orig(name.toString)
===========================================================================
org.jfree.chart.axis.CategoryAnchor:::CLASS
===========================================================================
org.jfree.chart.axis.CategoryAnchor:::OBJECT
this.name.toString one of { "CategoryAnchor.END", "CategoryAnchor.MIDDLE", "CategoryAnchor.START" }
===========================================================================
org.jfree.chart.axis.CategoryAnchor.CategoryAnchor(java.lang.String):::ENTER
name.toString one of { "CategoryAnchor.END", "CategoryAnchor.MIDDLE", "CategoryAnchor.START" }
===========================================================================
org.jfree.chart.axis.CategoryAnchor.CategoryAnchor(java.lang.String):::EXIT
name.toString == orig(name.toString)
name.toString one of { "CategoryAnchor.END", "CategoryAnchor.MIDDLE", "CategoryAnchor.START" }
===========================================================================
org.jfree.chart.event.ChartChangeEvent:::OBJECT
this.type != null
org.jfree.chart.event.ChartChangeEventType.GENERAL has only one value
org.jfree.chart.event.ChartChangeEventType.GENERAL != null
org.jfree.chart.event.ChartChangeEventType.NEW_DATASET has only one value
org.jfree.chart.event.ChartChangeEventType.NEW_DATASET != null
org.jfree.chart.event.ChartChangeEventType.DATASET_UPDATED has only one value
org.jfree.chart.event.ChartChangeEventType.DATASET_UPDATED != null
org.jfree.chart.event.ChartChangeEventType.GENERAL.name has only one value
org.jfree.chart.event.ChartChangeEventType.GENERAL.name != null
org.jfree.chart.event.ChartChangeEventType.GENERAL.name.toString == "ChartChangeEventType.GENERAL"
org.jfree.chart.event.ChartChangeEventType.NEW_DATASET.name has only one value
org.jfree.chart.event.ChartChangeEventType.NEW_DATASET.name != null
org.jfree.chart.event.ChartChangeEventType.NEW_DATASET.name.toString == "ChartChangeEventType.NEW_DATASET"
org.jfree.chart.event.ChartChangeEventType.DATASET_UPDATED.name has only one value
org.jfree.chart.event.ChartChangeEventType.DATASET_UPDATED.name != null
org.jfree.chart.event.ChartChangeEventType.DATASET_UPDATED.name.toString == "ChartChangeEventType.DATASET_UPDATED"
this.type.name != null
this.type.name.toString one of { "ChartChangeEventType.DATASET_UPDATED", "ChartChangeEventType.GENERAL" }
this.chart == null
org.jfree.chart.util.RectangleInsets.ZERO_INSETS has only one value
org.jfree.chart.util.RectangleInsets.ZERO_INSETS != null
org.jfree.chart.plot.Plot.ZERO has only one value
org.jfree.chart.plot.Plot.ZERO != null
org.jfree.chart.plot.Plot.ZERO.getClass().getName() == java.lang.Integer.class
org.jfree.chart.plot.Plot.DEFAULT_INSETS has only one value
org.jfree.chart.plot.Plot.DEFAULT_INSETS != null
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE has only one value
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE != null
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName() == java.awt.BasicStroke.class
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT has only one value
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT != null
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() == java.awt.Color.class
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT has only one value
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT != null
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName() == java.awt.Color.class
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX has only one value
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX != null
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName() == java.awt.geom.Rectangle2D$Double.class
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE has only one value
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE != null
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName() == java.awt.geom.Ellipse2D$Double.class
org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener == null
===========================================================================
org.jfree.chart.event.ChartChangeEvent.ChartChangeEvent(java.lang.Object):::ENTER
===========================================================================
org.jfree.chart.event.ChartChangeEvent.ChartChangeEvent(java.lang.Object):::EXIT
this.type has only one value
this.type.name has only one value
this.type.name.toString == "ChartChangeEventType.GENERAL"
===========================================================================
org.jfree.chart.event.ChartChangeEvent.ChartChangeEvent(java.lang.Object, org.jfree.chart.JFreeChart, org.jfree.chart.event.ChartChangeEventType):::ENTER
chart == null
org.jfree.chart.util.RectangleInsets.ZERO_INSETS has only one value
org.jfree.chart.plot.Plot.ZERO has only one value
org.jfree.chart.plot.Plot.ZERO.getClass().getName() == java.lang.Integer.class
org.jfree.chart.plot.Plot.DEFAULT_INSETS has only one value
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE has only one value
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName() == java.awt.BasicStroke.class
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT has only one value
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() == java.awt.Color.class
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT has only one value
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName() == java.awt.Color.class
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX has only one value
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName() == java.awt.geom.Rectangle2D$Double.class
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE has only one value
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName() == java.awt.geom.Ellipse2D$Double.class
org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener == null
type has only one value
org.jfree.chart.event.ChartChangeEventType.GENERAL has only one value
org.jfree.chart.event.ChartChangeEventType.NEW_DATASET has only one value
org.jfree.chart.event.ChartChangeEventType.DATASET_UPDATED has only one value
org.jfree.chart.event.ChartChangeEventType.GENERAL.name has only one value
org.jfree.chart.event.ChartChangeEventType.GENERAL.name.toString == "ChartChangeEventType.GENERAL"
org.jfree.chart.event.ChartChangeEventType.NEW_DATASET.name has only one value
org.jfree.chart.event.ChartChangeEventType.NEW_DATASET.name.toString == "ChartChangeEventType.NEW_DATASET"
org.jfree.chart.event.ChartChangeEventType.DATASET_UPDATED.name has only one value
org.jfree.chart.event.ChartChangeEventType.DATASET_UPDATED.name.toString == "ChartChangeEventType.DATASET_UPDATED"
type.name has only one value
type.name.toString == "ChartChangeEventType.GENERAL"
===========================================================================
org.jfree.chart.event.ChartChangeEvent.ChartChangeEvent(java.lang.Object, org.jfree.chart.JFreeChart, org.jfree.chart.event.ChartChangeEventType):::EXIT
org.jfree.chart.event.ChartChangeEventType.GENERAL == orig(org.jfree.chart.event.ChartChangeEventType.GENERAL)
org.jfree.chart.event.ChartChangeEventType.NEW_DATASET == orig(org.jfree.chart.event.ChartChangeEventType.NEW_DATASET)
org.jfree.chart.event.ChartChangeEventType.DATASET_UPDATED == orig(org.jfree.chart.event.ChartChangeEventType.DATASET_UPDATED)
org.jfree.chart.event.ChartChangeEventType.GENERAL.name == orig(org.jfree.chart.event.ChartChangeEventType.GENERAL.name)
org.jfree.chart.event.ChartChangeEventType.GENERAL.name.toString == orig(org.jfree.chart.event.ChartChangeEventType.GENERAL.name.toString)
org.jfree.chart.event.ChartChangeEventType.NEW_DATASET.name == orig(org.jfree.chart.event.ChartChangeEventType.NEW_DATASET.name)
org.jfree.chart.event.ChartChangeEventType.NEW_DATASET.name.toString == orig(org.jfree.chart.event.ChartChangeEventType.NEW_DATASET.name.toString)
org.jfree.chart.event.ChartChangeEventType.DATASET_UPDATED.name == orig(org.jfree.chart.event.ChartChangeEventType.DATASET_UPDATED.name)
org.jfree.chart.event.ChartChangeEventType.DATASET_UPDATED.name.toString == orig(org.jfree.chart.event.ChartChangeEventType.DATASET_UPDATED.name.toString)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS)
org.jfree.chart.plot.Plot.ZERO == orig(org.jfree.chart.plot.Plot.ZERO)
org.jfree.chart.plot.Plot.ZERO.getClass().getName() == orig(org.jfree.chart.plot.Plot.ZERO.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_INSETS == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName())
org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener == orig(org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener)
type.name == orig(type.name)
type.name.toString == orig(type.name.toString)
this.type has only one value
this.type.name has only one value
this.type.name.toString == "ChartChangeEventType.GENERAL"
type.name has only one value
type.name.toString == "ChartChangeEventType.GENERAL"
===========================================================================
org.jfree.chart.event.ChartChangeEvent.setType(org.jfree.chart.event.ChartChangeEventType):::ENTER
this.type has only one value
this.type.name has only one value
this.type.name.toString == "ChartChangeEventType.GENERAL"
type has only one value
type.name has only one value
type.name.toString == "ChartChangeEventType.DATASET_UPDATED"
===========================================================================
org.jfree.chart.event.ChartChangeEvent.setType(org.jfree.chart.event.ChartChangeEventType):::EXIT
org.jfree.chart.event.ChartChangeEventType.GENERAL == orig(org.jfree.chart.event.ChartChangeEventType.GENERAL)
org.jfree.chart.event.ChartChangeEventType.NEW_DATASET == orig(org.jfree.chart.event.ChartChangeEventType.NEW_DATASET)
org.jfree.chart.event.ChartChangeEventType.DATASET_UPDATED == orig(org.jfree.chart.event.ChartChangeEventType.DATASET_UPDATED)
org.jfree.chart.event.ChartChangeEventType.GENERAL.name == orig(org.jfree.chart.event.ChartChangeEventType.GENERAL.name)
org.jfree.chart.event.ChartChangeEventType.GENERAL.name.toString == orig(org.jfree.chart.event.ChartChangeEventType.GENERAL.name.toString)
org.jfree.chart.event.ChartChangeEventType.NEW_DATASET.name == orig(org.jfree.chart.event.ChartChangeEventType.NEW_DATASET.name)
org.jfree.chart.event.ChartChangeEventType.NEW_DATASET.name.toString == orig(org.jfree.chart.event.ChartChangeEventType.NEW_DATASET.name.toString)
org.jfree.chart.event.ChartChangeEventType.DATASET_UPDATED.name == orig(org.jfree.chart.event.ChartChangeEventType.DATASET_UPDATED.name)
org.jfree.chart.event.ChartChangeEventType.DATASET_UPDATED.name.toString == orig(org.jfree.chart.event.ChartChangeEventType.DATASET_UPDATED.name.toString)
this.chart == orig(this.chart)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS)
org.jfree.chart.plot.Plot.ZERO == orig(org.jfree.chart.plot.Plot.ZERO)
org.jfree.chart.plot.Plot.ZERO.getClass().getName() == orig(org.jfree.chart.plot.Plot.ZERO.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_INSETS == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName())
org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener == orig(org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener)
type.name == orig(type.name)
type.name.toString == orig(type.name.toString)
this.type has only one value
this.type.name has only one value
this.type.name.toString == "ChartChangeEventType.DATASET_UPDATED"
type.name has only one value
type.name.toString == "ChartChangeEventType.DATASET_UPDATED"
this.type.name.toString < orig(this.type.name.toString)
===========================================================================
org.jfree.chart.event.ChartChangeEventType:::CLASS
===========================================================================
org.jfree.chart.event.ChartChangeEventType:::OBJECT
this.name.toString one of { "ChartChangeEventType.DATASET_UPDATED", "ChartChangeEventType.GENERAL", "ChartChangeEventType.NEW_DATASET" }
===========================================================================
org.jfree.chart.event.ChartChangeEventType.ChartChangeEventType(java.lang.String):::ENTER
name.toString one of { "ChartChangeEventType.DATASET_UPDATED", "ChartChangeEventType.GENERAL", "ChartChangeEventType.NEW_DATASET" }
===========================================================================
org.jfree.chart.event.ChartChangeEventType.ChartChangeEventType(java.lang.String):::EXIT
name.toString == orig(name.toString)
name.toString one of { "ChartChangeEventType.DATASET_UPDATED", "ChartChangeEventType.GENERAL", "ChartChangeEventType.NEW_DATASET" }
===========================================================================
org.jfree.chart.event.MarkerChangeEvent:::OBJECT
this has only one value
this.marker has only one value
this.marker.getClass().getName() == org.jfree.chart.plot.CategoryMarker.class
this.marker.paint has only one value
this.marker.paint.getClass().getName() == java.awt.Color.class
this.marker.stroke has only one value
this.marker.stroke.getClass().getName() == java.awt.BasicStroke.class
this.marker.outlinePaint has only one value
this.marker.outlinePaint.getClass().getName() == java.awt.Color.class
this.marker.outlineStroke has only one value
this.marker.outlineStroke.getClass().getName() == java.awt.BasicStroke.class
this.marker.alpha == 1.0
this.marker.label == null
this.marker.labelFont has only one value
this.marker.labelPaint has only one value
this.marker.labelPaint.getClass().getName() == java.awt.Color.class
this.marker.labelAnchor has only one value
org.jfree.chart.util.RectangleAnchor.CENTER has only one value
org.jfree.chart.util.RectangleAnchor.TOP has only one value
org.jfree.chart.util.RectangleAnchor.TOP_LEFT has only one value
org.jfree.chart.util.RectangleAnchor.TOP_RIGHT has only one value
org.jfree.chart.util.RectangleAnchor.BOTTOM has only one value
org.jfree.chart.util.RectangleAnchor.BOTTOM_LEFT has only one value
org.jfree.chart.util.RectangleAnchor.BOTTOM_RIGHT has only one value
org.jfree.chart.util.RectangleAnchor.LEFT has only one value
org.jfree.chart.util.RectangleAnchor.RIGHT has only one value
this.marker.labelAnchor.name has only one value
this.marker.labelAnchor.name.toString == "RectangleAnchor.TOP_LEFT"
this.marker.labelTextAnchor has only one value
org.jfree.chart.text.TextAnchor.TOP_LEFT has only one value
org.jfree.chart.text.TextAnchor.TOP_CENTER has only one value
org.jfree.chart.text.TextAnchor.TOP_RIGHT has only one value
org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT has only one value
org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER has only one value
org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT has only one value
org.jfree.chart.text.TextAnchor.CENTER_LEFT has only one value
org.jfree.chart.text.TextAnchor.CENTER has only one value
org.jfree.chart.text.TextAnchor.CENTER_RIGHT has only one value
org.jfree.chart.text.TextAnchor.BASELINE_LEFT has only one value
org.jfree.chart.text.TextAnchor.BASELINE_CENTER has only one value
org.jfree.chart.text.TextAnchor.BASELINE_RIGHT has only one value
org.jfree.chart.text.TextAnchor.BOTTOM_LEFT has only one value
org.jfree.chart.text.TextAnchor.BOTTOM_CENTER has only one value
org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT has only one value
this.marker.labelTextAnchor.name has only one value
this.marker.labelTextAnchor.name.toString == "TextAnchor.CENTER"
this.marker.labelOffset has only one value
org.jfree.chart.util.RectangleInsets.ZERO_INSETS has only one value
this.marker.labelOffset.unitType has only one value
this.marker.labelOffset.top == 3.0
this.marker.labelOffset.left == 3.0
this.marker.labelOffset.bottom == 3.0
this.marker.labelOffset.right == 3.0
this.marker.labelOffsetType has only one value
org.jfree.chart.util.LengthAdjustmentType.NO_CHANGE has only one value
org.jfree.chart.util.LengthAdjustmentType.EXPAND has only one value
org.jfree.chart.util.LengthAdjustmentType.CONTRACT has only one value
this.marker.labelOffsetType.name has only one value
this.marker.labelOffsetType.name.toString == "EXPAND"
this.marker.listenerList has only one value
org.jfree.chart.plot.Marker.class$org$jfree$chart$event$MarkerChangeListener has only one value
this.type has only one value
org.jfree.chart.event.ChartChangeEventType.GENERAL has only one value
org.jfree.chart.event.ChartChangeEventType.NEW_DATASET has only one value
org.jfree.chart.event.ChartChangeEventType.DATASET_UPDATED has only one value
org.jfree.chart.event.ChartChangeEventType.GENERAL.name has only one value
org.jfree.chart.event.ChartChangeEventType.GENERAL.name.toString == "ChartChangeEventType.GENERAL"
org.jfree.chart.event.ChartChangeEventType.NEW_DATASET.name has only one value
org.jfree.chart.event.ChartChangeEventType.NEW_DATASET.name.toString == "ChartChangeEventType.NEW_DATASET"
org.jfree.chart.event.ChartChangeEventType.DATASET_UPDATED.name has only one value
org.jfree.chart.event.ChartChangeEventType.DATASET_UPDATED.name.toString == "ChartChangeEventType.DATASET_UPDATED"
this.type.name has only one value
this.type.name.toString == "ChartChangeEventType.GENERAL"
this.chart == null
org.jfree.chart.plot.Plot.ZERO has only one value
org.jfree.chart.plot.Plot.ZERO.getClass().getName() == java.lang.Integer.class
org.jfree.chart.plot.Plot.DEFAULT_INSETS has only one value
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE has only one value
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName() == java.awt.BasicStroke.class
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT has only one value
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() == java.awt.Color.class
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT has only one value
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName() == java.awt.Color.class
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX has only one value
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName() == java.awt.geom.Rectangle2D$Double.class
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE has only one value
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName() == java.awt.geom.Ellipse2D$Double.class
org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener == null
===========================================================================
org.jfree.chart.event.MarkerChangeEvent.MarkerChangeEvent(org.jfree.chart.plot.Marker):::ENTER
marker has only one value
marker.getClass().getName() == org.jfree.chart.plot.CategoryMarker.class
marker.paint has only one value
marker.paint.getClass().getName() == java.awt.Color.class
marker.stroke has only one value
marker.stroke.getClass().getName() == java.awt.BasicStroke.class
marker.outlinePaint has only one value
marker.outlinePaint.getClass().getName() == java.awt.Color.class
marker.outlineStroke has only one value
marker.outlineStroke.getClass().getName() == java.awt.BasicStroke.class
marker.alpha == 1.0
marker.label == null
marker.labelFont has only one value
marker.labelPaint has only one value
marker.labelPaint.getClass().getName() == java.awt.Color.class
marker.labelAnchor has only one value
org.jfree.chart.util.RectangleAnchor.CENTER has only one value
org.jfree.chart.util.RectangleAnchor.TOP has only one value
org.jfree.chart.util.RectangleAnchor.TOP_LEFT has only one value
org.jfree.chart.util.RectangleAnchor.TOP_RIGHT has only one value
org.jfree.chart.util.RectangleAnchor.BOTTOM has only one value
org.jfree.chart.util.RectangleAnchor.BOTTOM_LEFT has only one value
org.jfree.chart.util.RectangleAnchor.BOTTOM_RIGHT has only one value
org.jfree.chart.util.RectangleAnchor.LEFT has only one value
org.jfree.chart.util.RectangleAnchor.RIGHT has only one value
marker.labelAnchor.name has only one value
marker.labelAnchor.name.toString == "RectangleAnchor.TOP_LEFT"
marker.labelTextAnchor has only one value
org.jfree.chart.text.TextAnchor.TOP_LEFT has only one value
org.jfree.chart.text.TextAnchor.TOP_CENTER has only one value
org.jfree.chart.text.TextAnchor.TOP_RIGHT has only one value
org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT has only one value
org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER has only one value
org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT has only one value
org.jfree.chart.text.TextAnchor.CENTER_LEFT has only one value
org.jfree.chart.text.TextAnchor.CENTER has only one value
org.jfree.chart.text.TextAnchor.CENTER_RIGHT has only one value
org.jfree.chart.text.TextAnchor.BASELINE_LEFT has only one value
org.jfree.chart.text.TextAnchor.BASELINE_CENTER has only one value
org.jfree.chart.text.TextAnchor.BASELINE_RIGHT has only one value
org.jfree.chart.text.TextAnchor.BOTTOM_LEFT has only one value
org.jfree.chart.text.TextAnchor.BOTTOM_CENTER has only one value
org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT has only one value
marker.labelTextAnchor.name has only one value
marker.labelTextAnchor.name.toString == "TextAnchor.CENTER"
marker.labelOffset has only one value
org.jfree.chart.util.RectangleInsets.ZERO_INSETS has only one value
marker.labelOffset.unitType has only one value
marker.labelOffset.top == 3.0
marker.labelOffset.left == 3.0
marker.labelOffset.bottom == 3.0
marker.labelOffset.right == 3.0
marker.labelOffsetType has only one value
org.jfree.chart.util.LengthAdjustmentType.NO_CHANGE has only one value
org.jfree.chart.util.LengthAdjustmentType.EXPAND has only one value
org.jfree.chart.util.LengthAdjustmentType.CONTRACT has only one value
marker.labelOffsetType.name has only one value
marker.labelOffsetType.name.toString == "EXPAND"
marker.listenerList has only one value
org.jfree.chart.plot.Marker.class$org$jfree$chart$event$MarkerChangeListener has only one value
===========================================================================
org.jfree.chart.event.MarkerChangeEvent.MarkerChangeEvent(org.jfree.chart.plot.Marker):::EXIT
org.jfree.chart.util.RectangleAnchor.CENTER == orig(org.jfree.chart.util.RectangleAnchor.CENTER)
org.jfree.chart.util.RectangleAnchor.TOP == orig(org.jfree.chart.util.RectangleAnchor.TOP)
org.jfree.chart.util.RectangleAnchor.TOP_LEFT == orig(org.jfree.chart.util.RectangleAnchor.TOP_LEFT)
org.jfree.chart.util.RectangleAnchor.TOP_RIGHT == orig(org.jfree.chart.util.RectangleAnchor.TOP_RIGHT)
org.jfree.chart.util.RectangleAnchor.BOTTOM == orig(org.jfree.chart.util.RectangleAnchor.BOTTOM)
org.jfree.chart.util.RectangleAnchor.BOTTOM_LEFT == orig(org.jfree.chart.util.RectangleAnchor.BOTTOM_LEFT)
org.jfree.chart.util.RectangleAnchor.BOTTOM_RIGHT == orig(org.jfree.chart.util.RectangleAnchor.BOTTOM_RIGHT)
org.jfree.chart.util.RectangleAnchor.LEFT == orig(org.jfree.chart.util.RectangleAnchor.LEFT)
org.jfree.chart.util.RectangleAnchor.RIGHT == orig(org.jfree.chart.util.RectangleAnchor.RIGHT)
org.jfree.chart.text.TextAnchor.TOP_LEFT == orig(org.jfree.chart.text.TextAnchor.TOP_LEFT)
org.jfree.chart.text.TextAnchor.TOP_CENTER == orig(org.jfree.chart.text.TextAnchor.TOP_CENTER)
org.jfree.chart.text.TextAnchor.TOP_RIGHT == orig(org.jfree.chart.text.TextAnchor.TOP_RIGHT)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT)
org.jfree.chart.text.TextAnchor.CENTER_LEFT == orig(org.jfree.chart.text.TextAnchor.CENTER_LEFT)
org.jfree.chart.text.TextAnchor.CENTER == orig(org.jfree.chart.text.TextAnchor.CENTER)
org.jfree.chart.text.TextAnchor.CENTER_RIGHT == orig(org.jfree.chart.text.TextAnchor.CENTER_RIGHT)
org.jfree.chart.text.TextAnchor.BASELINE_LEFT == orig(org.jfree.chart.text.TextAnchor.BASELINE_LEFT)
org.jfree.chart.text.TextAnchor.BASELINE_CENTER == orig(org.jfree.chart.text.TextAnchor.BASELINE_CENTER)
org.jfree.chart.text.TextAnchor.BASELINE_RIGHT == orig(org.jfree.chart.text.TextAnchor.BASELINE_RIGHT)
org.jfree.chart.text.TextAnchor.BOTTOM_LEFT == orig(org.jfree.chart.text.TextAnchor.BOTTOM_LEFT)
org.jfree.chart.text.TextAnchor.BOTTOM_CENTER == orig(org.jfree.chart.text.TextAnchor.BOTTOM_CENTER)
org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT == orig(org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS)
org.jfree.chart.util.LengthAdjustmentType.NO_CHANGE == orig(org.jfree.chart.util.LengthAdjustmentType.NO_CHANGE)
org.jfree.chart.util.LengthAdjustmentType.EXPAND == orig(org.jfree.chart.util.LengthAdjustmentType.EXPAND)
org.jfree.chart.util.LengthAdjustmentType.CONTRACT == orig(org.jfree.chart.util.LengthAdjustmentType.CONTRACT)
org.jfree.chart.plot.Marker.class$org$jfree$chart$event$MarkerChangeListener == orig(org.jfree.chart.plot.Marker.class$org$jfree$chart$event$MarkerChangeListener)
marker.paint == orig(marker.paint)
marker.paint.getClass().getName() == orig(marker.paint.getClass().getName())
marker.stroke == orig(marker.stroke)
marker.stroke.getClass().getName() == orig(marker.stroke.getClass().getName())
marker.outlinePaint == orig(marker.outlinePaint)
marker.outlinePaint.getClass().getName() == orig(marker.outlinePaint.getClass().getName())
marker.outlineStroke == orig(marker.outlineStroke)
marker.outlineStroke.getClass().getName() == orig(marker.outlineStroke.getClass().getName())
marker.alpha == orig(marker.alpha)
marker.label == orig(marker.label)
marker.labelFont == orig(marker.labelFont)
marker.labelPaint == orig(marker.labelPaint)
marker.labelPaint.getClass().getName() == orig(marker.labelPaint.getClass().getName())
marker.labelAnchor == orig(marker.labelAnchor)
marker.labelAnchor.name == orig(marker.labelAnchor.name)
marker.labelAnchor.name.toString == orig(marker.labelAnchor.name.toString)
marker.labelTextAnchor == orig(marker.labelTextAnchor)
marker.labelTextAnchor.name == orig(marker.labelTextAnchor.name)
marker.labelTextAnchor.name.toString == orig(marker.labelTextAnchor.name.toString)
marker.labelOffset == orig(marker.labelOffset)
marker.labelOffset.unitType == orig(marker.labelOffset.unitType)
marker.labelOffset.top == orig(marker.labelOffset.top)
marker.labelOffset.left == orig(marker.labelOffset.left)
marker.labelOffset.bottom == orig(marker.labelOffset.bottom)
marker.labelOffset.right == orig(marker.labelOffset.right)
marker.labelOffsetType == orig(marker.labelOffsetType)
marker.labelOffsetType.name == orig(marker.labelOffsetType.name)
marker.labelOffsetType.name.toString == orig(marker.labelOffsetType.name.toString)
marker.listenerList == orig(marker.listenerList)
marker.paint has only one value
marker.paint.getClass().getName() == java.awt.Color.class
marker.stroke has only one value
marker.stroke.getClass().getName() == java.awt.BasicStroke.class
marker.outlinePaint has only one value
marker.outlinePaint.getClass().getName() == java.awt.Color.class
marker.outlineStroke has only one value
marker.outlineStroke.getClass().getName() == java.awt.BasicStroke.class
marker.alpha == 1.0
marker.label == null
marker.labelFont has only one value
marker.labelPaint has only one value
marker.labelPaint.getClass().getName() == java.awt.Color.class
marker.labelAnchor has only one value
marker.labelAnchor.name has only one value
marker.labelAnchor.name.toString == "RectangleAnchor.TOP_LEFT"
marker.labelTextAnchor has only one value
marker.labelTextAnchor.name has only one value
marker.labelTextAnchor.name.toString == "TextAnchor.CENTER"
marker.labelOffset has only one value
marker.labelOffset.unitType has only one value
marker.labelOffset.top == 3.0
marker.labelOffset.left == 3.0
marker.labelOffset.bottom == 3.0
marker.labelOffset.right == 3.0
marker.labelOffsetType has only one value
marker.labelOffsetType.name has only one value
marker.labelOffsetType.name.toString == "EXPAND"
marker.listenerList has only one value
===========================================================================
org.jfree.chart.event.PlotChangeEvent:::OBJECT
org.jfree.chart.plot.Plot.ZERO has only one value
org.jfree.chart.plot.Plot.ZERO.getClass().getName() == java.lang.Integer.class
org.jfree.chart.plot.Plot.DEFAULT_INSETS has only one value
org.jfree.chart.util.RectangleInsets.ZERO_INSETS has only one value
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType has only one value
org.jfree.chart.plot.Plot.DEFAULT_INSETS.top == 4.0
org.jfree.chart.plot.Plot.DEFAULT_INSETS.left == 8.0
org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom == 4.0
org.jfree.chart.plot.Plot.DEFAULT_INSETS.right == 8.0
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE has only one value
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName() == java.awt.BasicStroke.class
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT has only one value
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() == java.awt.Color.class
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT has only one value
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName() == java.awt.Color.class
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX has only one value
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName() == java.awt.geom.Rectangle2D$Double.class
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE has only one value
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName() == java.awt.geom.Ellipse2D$Double.class
this.plot.parent == null
org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener == null
this.plot.datasetGroup == null
this.plot.noDataMessage == null
this.plot.noDataMessagePaint has only one value
this.plot.noDataMessagePaint.getClass().getName() == java.awt.Color.class
this.plot.insets has only one value
this.plot.insets.unitType has only one value
this.plot.insets.top == 4.0
this.plot.insets.left == 8.0
this.plot.insets.bottom == 4.0
this.plot.insets.right == 8.0
this.plot.outlineVisible == true
this.plot.outlineStroke has only one value
this.plot.outlineStroke.getClass().getName() == java.awt.BasicStroke.class
this.plot.outlinePaint has only one value
this.plot.outlinePaint.getClass().getName() == java.awt.Color.class
this.plot.backgroundPaint has only one value
this.plot.backgroundPaint.getClass().getName() == java.awt.Color.class
this.plot.backgroundImage == null
this.plot.backgroundImageAlignment == 15
this.plot.backgroundImageAlpha == 0.5
this.plot.foregroundAlpha == 1.0
this.plot.backgroundAlpha == 1.0
this.plot.drawingSupplier.getClass().getName() == org.jfree.chart.plot.DefaultDrawingSupplier.class
this.type has only one value
org.jfree.chart.event.ChartChangeEventType.GENERAL has only one value
org.jfree.chart.event.ChartChangeEventType.NEW_DATASET has only one value
org.jfree.chart.event.ChartChangeEventType.DATASET_UPDATED has only one value
org.jfree.chart.event.ChartChangeEventType.GENERAL.name has only one value
org.jfree.chart.event.ChartChangeEventType.GENERAL.name.toString == "ChartChangeEventType.GENERAL"
org.jfree.chart.event.ChartChangeEventType.NEW_DATASET.name has only one value
org.jfree.chart.event.ChartChangeEventType.NEW_DATASET.name.toString == "ChartChangeEventType.NEW_DATASET"
org.jfree.chart.event.ChartChangeEventType.DATASET_UPDATED.name has only one value
org.jfree.chart.event.ChartChangeEventType.DATASET_UPDATED.name.toString == "ChartChangeEventType.DATASET_UPDATED"
this.type.name has only one value
this.type.name.toString == "ChartChangeEventType.GENERAL"
this.chart == null
===========================================================================
org.jfree.chart.event.PlotChangeEvent.PlotChangeEvent(org.jfree.chart.plot.Plot):::ENTER
org.jfree.chart.plot.Plot.ZERO has only one value
org.jfree.chart.plot.Plot.ZERO.getClass().getName() == java.lang.Integer.class
org.jfree.chart.plot.Plot.DEFAULT_INSETS has only one value
org.jfree.chart.util.RectangleInsets.ZERO_INSETS has only one value
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType has only one value
org.jfree.chart.plot.Plot.DEFAULT_INSETS.top == 4.0
org.jfree.chart.plot.Plot.DEFAULT_INSETS.left == 8.0
org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom == 4.0
org.jfree.chart.plot.Plot.DEFAULT_INSETS.right == 8.0
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE has only one value
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName() == java.awt.BasicStroke.class
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT has only one value
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() == java.awt.Color.class
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT has only one value
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName() == java.awt.Color.class
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX has only one value
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName() == java.awt.geom.Rectangle2D$Double.class
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE has only one value
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName() == java.awt.geom.Ellipse2D$Double.class
plot.parent == null
org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener == null
plot.datasetGroup == null
plot.noDataMessage == null
plot.noDataMessagePaint has only one value
plot.noDataMessagePaint.getClass().getName() == java.awt.Color.class
plot.insets has only one value
plot.insets.unitType has only one value
plot.insets.top == 4.0
plot.insets.left == 8.0
plot.insets.bottom == 4.0
plot.insets.right == 8.0
plot.outlineVisible == true
plot.outlineStroke has only one value
plot.outlineStroke.getClass().getName() == java.awt.BasicStroke.class
plot.outlinePaint has only one value
plot.outlinePaint.getClass().getName() == java.awt.Color.class
plot.backgroundPaint has only one value
plot.backgroundPaint.getClass().getName() == java.awt.Color.class
plot.backgroundImage == null
plot.backgroundImageAlignment == 15
plot.backgroundImageAlpha == 0.5
plot.foregroundAlpha == 1.0
plot.backgroundAlpha == 1.0
plot.drawingSupplier.getClass().getName() == org.jfree.chart.plot.DefaultDrawingSupplier.class
===========================================================================
org.jfree.chart.event.PlotChangeEvent.PlotChangeEvent(org.jfree.chart.plot.Plot):::EXIT
org.jfree.chart.plot.Plot.ZERO == orig(org.jfree.chart.plot.Plot.ZERO)
org.jfree.chart.plot.Plot.ZERO.getClass().getName() == orig(org.jfree.chart.plot.Plot.ZERO.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_INSETS == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.top == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.top)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.left == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.left)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.right == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.right)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName())
org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener == orig(org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener)
plot.parent == orig(plot.parent)
plot.datasetGroup == orig(plot.datasetGroup)
plot.noDataMessage == orig(plot.noDataMessage)
plot.noDataMessageFont == orig(plot.noDataMessageFont)
plot.noDataMessagePaint == orig(plot.noDataMessagePaint)
plot.noDataMessagePaint.getClass().getName() == orig(plot.noDataMessagePaint.getClass().getName())
plot.insets == orig(plot.insets)
plot.insets.unitType == orig(plot.insets.unitType)
plot.insets.top == orig(plot.insets.top)
plot.insets.left == orig(plot.insets.left)
plot.insets.bottom == orig(plot.insets.bottom)
plot.insets.right == orig(plot.insets.right)
plot.outlineVisible == orig(plot.outlineVisible)
plot.outlineStroke == orig(plot.outlineStroke)
plot.outlineStroke.getClass().getName() == orig(plot.outlineStroke.getClass().getName())
plot.outlinePaint == orig(plot.outlinePaint)
plot.outlinePaint.getClass().getName() == orig(plot.outlinePaint.getClass().getName())
plot.backgroundPaint == orig(plot.backgroundPaint)
plot.backgroundPaint.getClass().getName() == orig(plot.backgroundPaint.getClass().getName())
plot.backgroundImage == orig(plot.backgroundImage)
plot.backgroundImageAlignment == orig(plot.backgroundImageAlignment)
plot.backgroundImageAlpha == orig(plot.backgroundImageAlpha)
plot.foregroundAlpha == orig(plot.foregroundAlpha)
plot.backgroundAlpha == orig(plot.backgroundAlpha)
plot.drawingSupplier == orig(plot.drawingSupplier)
plot.drawingSupplier.getClass().getName() == orig(plot.drawingSupplier.getClass().getName())
plot.listenerList == orig(plot.listenerList)
plot.parent == null
plot.datasetGroup == null
plot.noDataMessage == null
plot.noDataMessagePaint has only one value
plot.noDataMessagePaint.getClass().getName() == java.awt.Color.class
plot.insets has only one value
plot.insets.unitType has only one value
plot.insets.top == 4.0
plot.insets.left == 8.0
plot.insets.bottom == 4.0
plot.insets.right == 8.0
plot.outlineVisible == true
plot.outlineStroke has only one value
plot.outlineStroke.getClass().getName() == java.awt.BasicStroke.class
plot.outlinePaint has only one value
plot.outlinePaint.getClass().getName() == java.awt.Color.class
plot.backgroundPaint has only one value
plot.backgroundPaint.getClass().getName() == java.awt.Color.class
plot.backgroundImage == null
plot.backgroundImageAlignment == 15
plot.backgroundImageAlpha == 0.5
plot.foregroundAlpha == 1.0
plot.backgroundAlpha == 1.0
plot.drawingSupplier.getClass().getName() == org.jfree.chart.plot.DefaultDrawingSupplier.class
===========================================================================
org.jfree.chart.plot.CategoryMarker:::CLASS
org.jfree.chart.plot.Marker.class$org$jfree$chart$event$MarkerChangeListener has only one value
===========================================================================
org.jfree.chart.plot.CategoryMarker:::OBJECT
this has only one value
this.key has only one value
this.key.getClass().getName() == java.lang.String.class
this.drawAsLine == false
this.paint has only one value
this.paint.getClass().getName() == java.awt.Color.class
this.stroke has only one value
this.stroke.getClass().getName() == java.awt.BasicStroke.class
this.outlinePaint has only one value
this.outlinePaint.getClass().getName() == java.awt.Color.class
this.outlineStroke has only one value
this.outlineStroke.getClass().getName() == java.awt.BasicStroke.class
this.alpha == 1.0
this.label == null
this.labelFont has only one value
this.labelPaint has only one value
this.labelPaint.getClass().getName() == java.awt.Color.class
this.labelAnchor has only one value
org.jfree.chart.util.RectangleAnchor.CENTER has only one value
org.jfree.chart.util.RectangleAnchor.TOP has only one value
org.jfree.chart.util.RectangleAnchor.TOP_LEFT has only one value
org.jfree.chart.util.RectangleAnchor.TOP_RIGHT has only one value
org.jfree.chart.util.RectangleAnchor.BOTTOM has only one value
org.jfree.chart.util.RectangleAnchor.BOTTOM_LEFT has only one value
org.jfree.chart.util.RectangleAnchor.BOTTOM_RIGHT has only one value
org.jfree.chart.util.RectangleAnchor.LEFT has only one value
org.jfree.chart.util.RectangleAnchor.RIGHT has only one value
org.jfree.chart.util.RectangleAnchor.CENTER.name has only one value
org.jfree.chart.util.RectangleAnchor.CENTER.name.toString == "RectangleAnchor.CENTER"
org.jfree.chart.util.RectangleAnchor.TOP.name has only one value
org.jfree.chart.util.RectangleAnchor.TOP.name.toString == "RectangleAnchor.TOP"
org.jfree.chart.util.RectangleAnchor.TOP_LEFT.name has only one value
org.jfree.chart.util.RectangleAnchor.TOP_LEFT.name.toString == "RectangleAnchor.TOP_LEFT"
org.jfree.chart.util.RectangleAnchor.TOP_RIGHT.name has only one value
org.jfree.chart.util.RectangleAnchor.TOP_RIGHT.name.toString == "RectangleAnchor.TOP_RIGHT"
org.jfree.chart.util.RectangleAnchor.BOTTOM.name has only one value
org.jfree.chart.util.RectangleAnchor.BOTTOM.name.toString == "RectangleAnchor.BOTTOM"
org.jfree.chart.util.RectangleAnchor.BOTTOM_LEFT.name has only one value
org.jfree.chart.util.RectangleAnchor.BOTTOM_LEFT.name.toString == "RectangleAnchor.BOTTOM_LEFT"
org.jfree.chart.util.RectangleAnchor.BOTTOM_RIGHT.name has only one value
org.jfree.chart.util.RectangleAnchor.BOTTOM_RIGHT.name.toString == "RectangleAnchor.BOTTOM_RIGHT"
org.jfree.chart.util.RectangleAnchor.LEFT.name has only one value
org.jfree.chart.util.RectangleAnchor.LEFT.name.toString == "RectangleAnchor.LEFT"
org.jfree.chart.util.RectangleAnchor.RIGHT.name has only one value
org.jfree.chart.util.RectangleAnchor.RIGHT.name.toString == "RectangleAnchor.RIGHT"
this.labelAnchor.name has only one value
this.labelAnchor.name.toString == "RectangleAnchor.TOP_LEFT"
this.labelTextAnchor has only one value
org.jfree.chart.text.TextAnchor.TOP_LEFT has only one value
org.jfree.chart.text.TextAnchor.TOP_CENTER has only one value
org.jfree.chart.text.TextAnchor.TOP_RIGHT has only one value
org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT has only one value
org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER has only one value
org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT has only one value
org.jfree.chart.text.TextAnchor.CENTER_LEFT has only one value
org.jfree.chart.text.TextAnchor.CENTER has only one value
org.jfree.chart.text.TextAnchor.CENTER_RIGHT has only one value
org.jfree.chart.text.TextAnchor.BASELINE_LEFT has only one value
org.jfree.chart.text.TextAnchor.BASELINE_CENTER has only one value
org.jfree.chart.text.TextAnchor.BASELINE_RIGHT has only one value
org.jfree.chart.text.TextAnchor.BOTTOM_LEFT has only one value
org.jfree.chart.text.TextAnchor.BOTTOM_CENTER has only one value
org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT has only one value
org.jfree.chart.text.TextAnchor.TOP_LEFT.name has only one value
org.jfree.chart.text.TextAnchor.TOP_LEFT.name.toString == "TextAnchor.TOP_LEFT"
org.jfree.chart.text.TextAnchor.TOP_CENTER.name has only one value
org.jfree.chart.text.TextAnchor.TOP_CENTER.name.toString == "TextAnchor.TOP_CENTER"
org.jfree.chart.text.TextAnchor.TOP_RIGHT.name has only one value
org.jfree.chart.text.TextAnchor.TOP_RIGHT.name.toString == "TextAnchor.TOP_RIGHT"
org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT.name has only one value
org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT.name.toString == "TextAnchor.HALF_ASCENT_LEFT"
org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER.name has only one value
org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER.name.toString == "TextAnchor.HALF_ASCENT_CENTER"
org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT.name has only one value
org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT.name.toString == "TextAnchor.HALF_ASCENT_RIGHT"
org.jfree.chart.text.TextAnchor.CENTER_LEFT.name has only one value
org.jfree.chart.text.TextAnchor.CENTER_LEFT.name.toString == "TextAnchor.CENTER_LEFT"
org.jfree.chart.text.TextAnchor.CENTER.name has only one value
org.jfree.chart.text.TextAnchor.CENTER.name.toString == "TextAnchor.CENTER"
org.jfree.chart.text.TextAnchor.CENTER_RIGHT.name has only one value
org.jfree.chart.text.TextAnchor.CENTER_RIGHT.name.toString == "TextAnchor.CENTER_RIGHT"
org.jfree.chart.text.TextAnchor.BASELINE_LEFT.name has only one value
org.jfree.chart.text.TextAnchor.BASELINE_LEFT.name.toString == "TextAnchor.BASELINE_LEFT"
org.jfree.chart.text.TextAnchor.BASELINE_CENTER.name has only one value
org.jfree.chart.text.TextAnchor.BASELINE_CENTER.name.toString == "TextAnchor.BASELINE_CENTER"
org.jfree.chart.text.TextAnchor.BASELINE_RIGHT.name has only one value
org.jfree.chart.text.TextAnchor.BASELINE_RIGHT.name.toString == "TextAnchor.BASELINE_RIGHT"
org.jfree.chart.text.TextAnchor.BOTTOM_LEFT.name has only one value
org.jfree.chart.text.TextAnchor.BOTTOM_LEFT.name.toString == "TextAnchor.BOTTOM_LEFT"
org.jfree.chart.text.TextAnchor.BOTTOM_CENTER.name has only one value
org.jfree.chart.text.TextAnchor.BOTTOM_CENTER.name.toString == "TextAnchor.BOTTOM_CENTER"
org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT.name has only one value
org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT.name.toString == "TextAnchor.BOTTOM_RIGHT"
this.labelTextAnchor.name has only one value
this.labelTextAnchor.name.toString == "TextAnchor.CENTER"
this.labelOffset has only one value
org.jfree.chart.util.RectangleInsets.ZERO_INSETS has only one value
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType has only one value
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.top == 0.0
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.left == 0.0
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.bottom == 0.0
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.right == 0.0
this.labelOffset.unitType has only one value
org.jfree.chart.util.UnitType.ABSOLUTE has only one value
org.jfree.chart.util.UnitType.RELATIVE has only one value
this.labelOffset.unitType.name has only one value
this.labelOffset.unitType.name.toString == "UnitType.ABSOLUTE"
this.labelOffset.top == 3.0
this.labelOffset.left == 3.0
this.labelOffset.bottom == 3.0
this.labelOffset.right == 3.0
this.labelOffsetType has only one value
org.jfree.chart.util.LengthAdjustmentType.NO_CHANGE has only one value
org.jfree.chart.util.LengthAdjustmentType.EXPAND has only one value
org.jfree.chart.util.LengthAdjustmentType.CONTRACT has only one value
org.jfree.chart.util.LengthAdjustmentType.NO_CHANGE.name has only one value
org.jfree.chart.util.LengthAdjustmentType.NO_CHANGE.name.toString == "NO_CHANGE"
org.jfree.chart.util.LengthAdjustmentType.EXPAND.name has only one value
org.jfree.chart.util.LengthAdjustmentType.EXPAND.name.toString == "EXPAND"
org.jfree.chart.util.LengthAdjustmentType.CONTRACT.name has only one value
org.jfree.chart.util.LengthAdjustmentType.CONTRACT.name.toString == "CONTRACT"
this.labelOffsetType.name has only one value
this.labelOffsetType.name.toString == "EXPAND"
this.listenerList has only one value
===========================================================================
org.jfree.chart.plot.CategoryMarker.CategoryMarker(java.lang.Comparable):::ENTER
key has only one value
key.getClass().getName() == java.lang.String.class
===========================================================================
org.jfree.chart.plot.CategoryMarker.CategoryMarker(java.lang.Comparable):::EXIT
===========================================================================
org.jfree.chart.plot.CategoryMarker.CategoryMarker(java.lang.Comparable, java.awt.Paint, java.awt.Stroke):::ENTER
key has only one value
key.getClass().getName() == java.lang.String.class
paint has only one value
paint.getClass().getName() == java.awt.Color.class
stroke has only one value
stroke.getClass().getName() == java.awt.BasicStroke.class
===========================================================================
org.jfree.chart.plot.CategoryMarker.CategoryMarker(java.lang.Comparable, java.awt.Paint, java.awt.Stroke):::EXIT
===========================================================================
org.jfree.chart.plot.CategoryMarker.CategoryMarker(java.lang.Comparable, java.awt.Paint, java.awt.Stroke, java.awt.Paint, java.awt.Stroke, float):::ENTER
key has only one value
key.getClass().getName() == java.lang.String.class
paint has only one value
paint.getClass().getName() == java.awt.Color.class
stroke has only one value
stroke.getClass().getName() == java.awt.BasicStroke.class
outlinePaint has only one value
outlinePaint.getClass().getName() == java.awt.Color.class
outlineStroke has only one value
outlineStroke.getClass().getName() == java.awt.BasicStroke.class
alpha == 1.0
===========================================================================
org.jfree.chart.plot.CategoryMarker.CategoryMarker(java.lang.Comparable, java.awt.Paint, java.awt.Stroke, java.awt.Paint, java.awt.Stroke, float):::EXIT
===========================================================================
org.jfree.chart.plot.CategoryPlot:::CLASS
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE has only one value
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE != null
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName() == java.awt.BasicStroke.class
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT has only one value
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT != null
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == java.awt.Color.class
org.jfree.chart.plot.CategoryPlot.DEFAULT_VALUE_LABEL_FONT has only one value
org.jfree.chart.plot.CategoryPlot.DEFAULT_VALUE_LABEL_FONT != null
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE has only one value
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE != null
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE.getClass().getName() == java.awt.BasicStroke.class
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT has only one value
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT != null
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT.getClass().getName() == java.awt.Color.class
org.jfree.chart.plot.CategoryPlot.localizationResources has only one value
org.jfree.chart.plot.CategoryPlot.localizationResources != null
org.jfree.chart.plot.CategoryPlot.localizationResources.getClass().getName() == java.util.PropertyResourceBundle.class
org.jfree.chart.plot.Plot.ZERO has only one value
org.jfree.chart.plot.Plot.ZERO != null
org.jfree.chart.plot.Plot.ZERO.getClass().getName() == java.lang.Integer.class
org.jfree.chart.plot.Plot.DEFAULT_INSETS has only one value
org.jfree.chart.plot.Plot.DEFAULT_INSETS != null
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType has only one value
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType != null
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name has only one value
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name != null
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name.toString == "UnitType.ABSOLUTE"
org.jfree.chart.plot.Plot.DEFAULT_INSETS.top == 4.0
org.jfree.chart.plot.Plot.DEFAULT_INSETS.left == 8.0
org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom == 4.0
org.jfree.chart.plot.Plot.DEFAULT_INSETS.right == 8.0
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE has only one value
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE != null
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName() == java.awt.BasicStroke.class
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT has only one value
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT != null
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() == java.awt.Color.class
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT has only one value
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT != null
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName() == java.awt.Color.class
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX has only one value
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX != null
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName() == java.awt.geom.Rectangle2D$Double.class
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE has only one value
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE != null
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName() == java.awt.geom.Ellipse2D$Double.class
===========================================================================
org.jfree.chart.plot.CategoryPlot:::OBJECT
this.orientation has only one value
this.orientation != null
org.jfree.chart.plot.PlotOrientation.HORIZONTAL has only one value
org.jfree.chart.plot.PlotOrientation.HORIZONTAL != null
org.jfree.chart.plot.PlotOrientation.VERTICAL has only one value
org.jfree.chart.plot.PlotOrientation.VERTICAL != null
org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name has only one value
org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name != null
org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name.toString == "PlotOrientation.HORIZONTAL"
org.jfree.chart.plot.PlotOrientation.VERTICAL.name has only one value
org.jfree.chart.plot.PlotOrientation.VERTICAL.name != null
org.jfree.chart.plot.PlotOrientation.VERTICAL.name.toString == "PlotOrientation.VERTICAL"
this.orientation.name has only one value
this.orientation.name != null
this.orientation.name.toString == "PlotOrientation.VERTICAL"
this.axisOffset != null
org.jfree.chart.util.RectangleInsets.ZERO_INSETS has only one value
org.jfree.chart.util.RectangleInsets.ZERO_INSETS != null
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType has only one value
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType != null
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.top == 0.0
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.left == 0.0
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.bottom == 0.0
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.right == 0.0
this.axisOffset.unitType has only one value
this.axisOffset.unitType != null
org.jfree.chart.util.UnitType.ABSOLUTE has only one value
org.jfree.chart.util.UnitType.ABSOLUTE != null
org.jfree.chart.util.UnitType.RELATIVE has only one value
org.jfree.chart.util.UnitType.RELATIVE != null
this.axisOffset.unitType.name has only one value
this.axisOffset.unitType.name != null
this.axisOffset.unitType.name.toString == "UnitType.ABSOLUTE"
this.axisOffset.top == 4.0
this.axisOffset.left == 4.0
this.axisOffset.bottom == 4.0
this.axisOffset.right == 4.0
this.domainAxes != null
this.domainAxes.objects != null
this.domainAxes.objects.getClass().getName() == java.lang.Object[].class
this.domainAxes.objects[] contains only nulls and has only one value, of length 8
this.domainAxes.objects[] elements == null
this.domainAxes.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.domainAxes.objects[].getClass().getName() elements == null
this.domainAxes.size one of { 0, 1 }
this.domainAxes.increment == 8
this.domainAxisLocations != null
this.domainAxisLocations.objects != null
this.domainAxisLocations.objects.getClass().getName() == java.lang.Object[].class
this.domainAxisLocations.objects[].getClass().getName() one of { [null, null, null, null, null, null, null, null], [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null] }
this.domainAxisLocations.size one of { 0, 1 }
this.domainAxisLocations.increment == 8
this.drawSharedDomainAxis == false
this.rangeAxes != null
this.rangeAxes.objects != null
this.rangeAxes.objects.getClass().getName() == java.lang.Object[].class
this.rangeAxes.objects[] contains only nulls and has only one value, of length 8
this.rangeAxes.objects[] elements == null
this.rangeAxes.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.rangeAxes.objects[].getClass().getName() elements == null
this.rangeAxes.size one of { 0, 1 }
this.rangeAxes.increment == 8
this.rangeAxisLocations != null
this.rangeAxisLocations.objects != null
this.rangeAxisLocations.objects.getClass().getName() == java.lang.Object[].class
this.rangeAxisLocations.objects[].getClass().getName() one of { [null, null, null, null, null, null, null, null], [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null] }
this.rangeAxisLocations.size one of { 0, 1 }
this.rangeAxisLocations.increment == 8
this.datasets != null
this.datasets.objects != null
this.datasets.objects.getClass().getName() == java.lang.Object[].class
this.datasets.objects[] contains only nulls and has only one value, of length 8
this.datasets.objects[] elements == null
this.datasets.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.datasets.objects[].getClass().getName() elements == null
this.datasets.size == 1
this.datasets.increment == 8
this.datasetToDomainAxisMap != null
this.datasetToDomainAxisMap.objects != null
this.datasetToDomainAxisMap.objects.getClass().getName() == java.lang.Object[].class
this.datasetToDomainAxisMap.objects[].getClass().getName() one of { [null, null, null, null, null, null, null, null], [java.lang.Integer, null, null, null, null, null, null, null] }
this.datasetToDomainAxisMap.size one of { 0, 1 }
this.datasetToDomainAxisMap.increment == 8
this.datasetToRangeAxisMap != null
this.datasetToRangeAxisMap.objects != null
this.datasetToRangeAxisMap.objects.getClass().getName() == java.lang.Object[].class
this.datasetToRangeAxisMap.objects[].getClass().getName() one of { [null, null, null, null, null, null, null, null], [java.lang.Integer, null, null, null, null, null, null, null] }
this.datasetToRangeAxisMap.size one of { 0, 1 }
this.datasetToRangeAxisMap.increment == 8
this.renderers != null
this.renderers.objects != null
this.renderers.objects.getClass().getName() == java.lang.Object[].class
this.renderers.objects[] contains only nulls and has only one value, of length 8
this.renderers.objects[] elements == null
this.renderers.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.renderers.objects[].getClass().getName() elements == null
this.renderers.size one of { 0, 1 }
this.renderers.increment == 8
this.renderingOrder has only one value
this.renderingOrder != null
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD has only one value
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD != null
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE has only one value
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE != null
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name has only one value
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name != null
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name.toString == "DatasetRenderingOrder.FORWARD"
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name has only one value
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name != null
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name.toString == "DatasetRenderingOrder.REVERSE"
this.renderingOrder.name has only one value
this.renderingOrder.name != null
this.renderingOrder.name.toString == "DatasetRenderingOrder.REVERSE"
this.columnRenderingOrder has only one value
this.columnRenderingOrder != null
org.jfree.chart.util.SortOrder.ASCENDING has only one value
org.jfree.chart.util.SortOrder.ASCENDING != null
org.jfree.chart.util.SortOrder.DESCENDING has only one value
org.jfree.chart.util.SortOrder.DESCENDING != null
org.jfree.chart.util.SortOrder.ASCENDING.name has only one value
org.jfree.chart.util.SortOrder.ASCENDING.name != null
org.jfree.chart.util.SortOrder.ASCENDING.name.toString == "SortOrder.ASCENDING"
org.jfree.chart.util.SortOrder.DESCENDING.name has only one value
org.jfree.chart.util.SortOrder.DESCENDING.name != null
org.jfree.chart.util.SortOrder.DESCENDING.name.toString == "SortOrder.DESCENDING"
this.columnRenderingOrder.name has only one value
this.columnRenderingOrder.name != null
this.columnRenderingOrder.name.toString == "SortOrder.ASCENDING"
this.rowRenderingOrder has only one value
this.rowRenderingOrder != null
this.rowRenderingOrder.name has only one value
this.rowRenderingOrder.name != null
this.rowRenderingOrder.name.toString == "SortOrder.ASCENDING"
this.domainGridlinesVisible == false
org.jfree.chart.axis.CategoryAnchor.START has only one value
org.jfree.chart.axis.CategoryAnchor.START != null
org.jfree.chart.axis.CategoryAnchor.MIDDLE has only one value
org.jfree.chart.axis.CategoryAnchor.MIDDLE != null
org.jfree.chart.axis.CategoryAnchor.END has only one value
org.jfree.chart.axis.CategoryAnchor.END != null
org.jfree.chart.axis.CategoryAnchor.START.name has only one value
org.jfree.chart.axis.CategoryAnchor.START.name != null
org.jfree.chart.axis.CategoryAnchor.START.name.toString == "CategoryAnchor.START"
org.jfree.chart.axis.CategoryAnchor.MIDDLE.name has only one value
org.jfree.chart.axis.CategoryAnchor.MIDDLE.name != null
org.jfree.chart.axis.CategoryAnchor.MIDDLE.name.toString == "CategoryAnchor.MIDDLE"
org.jfree.chart.axis.CategoryAnchor.END.name has only one value
org.jfree.chart.axis.CategoryAnchor.END.name != null
org.jfree.chart.axis.CategoryAnchor.END.name.toString == "CategoryAnchor.END"
this.domainGridlinePosition.name has only one value
this.domainGridlinePosition.name != null
this.domainGridlinePosition.name.toString == "CategoryAnchor.MIDDLE"
this.domainGridlineStroke.getClass().getName() == java.awt.BasicStroke.class
this.domainGridlinePaint.getClass().getName() == java.awt.Color.class
this.rangeGridlineStroke.getClass().getName() == java.awt.BasicStroke.class
this.rangeGridlinePaint.getClass().getName() == java.awt.Color.class
this.anchorValue == 0.0
this.rangeCrosshairVisible == false
this.rangeCrosshairValue == 0.0
this.rangeCrosshairStroke.getClass().getName() == java.awt.BasicStroke.class
this.rangeCrosshairPaint.getClass().getName() == java.awt.Color.class
this.rangeCrosshairLockedOnData == true
this.foregroundDomainMarkers.getClass().getName() == java.util.HashMap.class
this.backgroundDomainMarkers.getClass().getName() == java.util.HashMap.class
this.foregroundRangeMarkers.getClass().getName() == java.util.HashMap.class
this.backgroundRangeMarkers.getClass().getName() == java.util.HashMap.class
this.annotations[] == []
this.annotations[].getClass().getName() == []
this.annotations.getClass().getName() == java.util.ArrayList.class
this.weight == 0
this.fixedDomainAxisSpace == null
this.fixedRangeAxisSpace == null
this.fixedLegendItems == null
this.parent == null
org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener == null
this.datasetGroup == null
this.noDataMessage == null
this.noDataMessageFont != null
this.noDataMessagePaint has only one value
this.noDataMessagePaint != null
this.noDataMessagePaint.getClass().getName() == java.awt.Color.class
this.insets has only one value
this.insets != null
this.insets.unitType has only one value
this.insets.unitType != null
this.insets.unitType.name has only one value
this.insets.unitType.name != null
this.insets.unitType.name.toString == "UnitType.ABSOLUTE"
this.insets.top == 4.0
this.insets.left == 8.0
this.insets.bottom == 4.0
this.insets.right == 8.0
this.outlineVisible == true
this.outlineStroke has only one value
this.outlineStroke != null
this.outlineStroke.getClass().getName() == java.awt.BasicStroke.class
this.outlinePaint has only one value
this.outlinePaint != null
this.outlinePaint.getClass().getName() == java.awt.Color.class
this.backgroundPaint has only one value
this.backgroundPaint != null
this.backgroundPaint.getClass().getName() == java.awt.Color.class
this.backgroundImage == null
this.backgroundImageAlignment == 15
this.backgroundImageAlpha == 0.5
this.foregroundAlpha == 1.0
this.backgroundAlpha == 1.0
this.drawingSupplier != null
this.drawingSupplier.getClass().getName() == org.jfree.chart.plot.DefaultDrawingSupplier.class
this.listenerList != null
size(this.domainAxes.objects[]) == 8
size(this.domainAxisLocations.objects[]) == 8
size(this.rangeAxes.objects[]) == 8
size(this.rangeAxisLocations.objects[]) == 8
size(this.datasets.objects[]) == 8
size(this.datasetToDomainAxisMap.objects[]) == 8
size(this.datasetToRangeAxisMap.objects[]) == 8
size(this.renderers.objects[]) == 8
===========================================================================
org.jfree.chart.plot.CategoryPlot.CategoryPlot():::EXIT
this.domainAxes.size == 1
this.domainAxisLocations.objects[] has only one value, of length 8
this.domainAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.domainAxisLocations.size == 1
this.rangeAxes.size == 1
this.rangeAxisLocations.objects[] has only one value, of length 8
this.rangeAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.rangeAxisLocations.size == 1
this.datasetToDomainAxisMap.objects[].getClass().getName() == [java.lang.Integer, null, null, null, null, null, null, null]
this.datasetToDomainAxisMap.size == 1
this.datasetToRangeAxisMap.objects[].getClass().getName() == [java.lang.Integer, null, null, null, null, null, null, null]
this.datasetToRangeAxisMap.size == 1
this.renderers.size == 1
this.domainGridlinePosition has only one value
this.domainGridlineStroke has only one value
this.domainGridlinePaint has only one value
this.rangeGridlinesVisible == true
this.rangeGridlineStroke has only one value
this.rangeGridlinePaint has only one value
this.rangeCrosshairStroke has only one value
this.rangeCrosshairPaint has only one value
===========================================================================
org.jfree.chart.plot.CategoryPlot.CategoryPlot(org.jfree.data.category.CategoryDataset, org.jfree.chart.axis.CategoryAxis, org.jfree.chart.axis.ValueAxis, org.jfree.chart.renderer.category.CategoryItemRenderer):::ENTER
dataset == null
domainAxis == null
org.jfree.chart.util.RectangleInsets.ZERO_INSETS has only one value
org.jfree.chart.plot.Plot.ZERO has only one value
org.jfree.chart.plot.Plot.ZERO.getClass().getName() == java.lang.Integer.class
org.jfree.chart.plot.Plot.DEFAULT_INSETS has only one value
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE has only one value
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName() == java.awt.BasicStroke.class
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT has only one value
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() == java.awt.Color.class
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT has only one value
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName() == java.awt.Color.class
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX has only one value
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName() == java.awt.geom.Rectangle2D$Double.class
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE has only one value
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName() == java.awt.geom.Ellipse2D$Double.class
org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener == null
rangeAxis == null
renderer == null
===========================================================================
org.jfree.chart.plot.CategoryPlot.CategoryPlot(org.jfree.data.category.CategoryDataset, org.jfree.chart.axis.CategoryAxis, org.jfree.chart.axis.ValueAxis, org.jfree.chart.renderer.category.CategoryItemRenderer):::EXIT
org.jfree.chart.util.RectangleInsets.ZERO_INSETS == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS)
org.jfree.chart.plot.Plot.ZERO == orig(org.jfree.chart.plot.Plot.ZERO)
org.jfree.chart.plot.Plot.ZERO.getClass().getName() == orig(org.jfree.chart.plot.Plot.ZERO.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_INSETS == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName())
org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener == orig(org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener)
this.domainAxes.size == 1
this.domainAxisLocations.objects[] has only one value, of length 8
this.domainAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.domainAxisLocations.size == 1
this.rangeAxes.size == 1
this.rangeAxisLocations.objects[] has only one value, of length 8
this.rangeAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.rangeAxisLocations.size == 1
this.datasetToDomainAxisMap.objects[].getClass().getName() == [java.lang.Integer, null, null, null, null, null, null, null]
this.datasetToDomainAxisMap.size == 1
this.datasetToRangeAxisMap.objects[].getClass().getName() == [java.lang.Integer, null, null, null, null, null, null, null]
this.datasetToRangeAxisMap.size == 1
this.renderers.size == 1
this.domainGridlinePosition has only one value
this.domainGridlineStroke has only one value
this.domainGridlinePaint has only one value
this.rangeGridlinesVisible == true
this.rangeGridlineStroke has only one value
this.rangeGridlinePaint has only one value
this.rangeCrosshairStroke has only one value
this.rangeCrosshairPaint has only one value
===========================================================================
org.jfree.chart.plot.CategoryPlot.addRangeMarker(int, org.jfree.chart.plot.Marker, org.jfree.chart.util.Layer):::ENTER
this.domainAxes.size == 1
this.domainAxisLocations.objects[] has only one value, of length 8
this.domainAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.domainAxisLocations.size == 1
this.rangeAxes.size == 1
this.rangeAxisLocations.objects[] has only one value, of length 8
this.rangeAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.rangeAxisLocations.size == 1
this.datasetToDomainAxisMap.objects[].getClass().getName() == [java.lang.Integer, null, null, null, null, null, null, null]
this.datasetToDomainAxisMap.size == 1
this.datasetToRangeAxisMap.objects[].getClass().getName() == [java.lang.Integer, null, null, null, null, null, null, null]
this.datasetToRangeAxisMap.size == 1
this.renderers.size == 1
this.domainGridlinePosition has only one value
this.domainGridlineStroke has only one value
this.domainGridlinePaint has only one value
this.rangeGridlinesVisible == true
this.rangeGridlineStroke has only one value
this.rangeGridlinePaint has only one value
this.rangeCrosshairStroke == null
this.rangeCrosshairPaint == null
this.annotations == null
index == 0
marker.getClass().getName() == org.jfree.chart.plot.ValueMarker.class
marker.paint.getClass().getName() == java.awt.Color.class
marker.stroke.getClass().getName() == java.awt.BasicStroke.class
marker.outlinePaint.getClass().getName() == java.awt.Color.class
marker.outlineStroke.getClass().getName() == java.awt.BasicStroke.class
marker.alpha == 0.6
marker.label == null
marker.labelPaint has only one value
marker.labelPaint.getClass().getName() == java.awt.Color.class
marker.labelAnchor has only one value
org.jfree.chart.util.RectangleAnchor.CENTER has only one value
org.jfree.chart.util.RectangleAnchor.TOP has only one value
org.jfree.chart.util.RectangleAnchor.TOP_LEFT has only one value
org.jfree.chart.util.RectangleAnchor.TOP_RIGHT has only one value
org.jfree.chart.util.RectangleAnchor.BOTTOM has only one value
org.jfree.chart.util.RectangleAnchor.BOTTOM_LEFT has only one value
org.jfree.chart.util.RectangleAnchor.BOTTOM_RIGHT has only one value
org.jfree.chart.util.RectangleAnchor.LEFT has only one value
org.jfree.chart.util.RectangleAnchor.RIGHT has only one value
marker.labelAnchor.name has only one value
marker.labelAnchor.name.toString == "RectangleAnchor.TOP_LEFT"
marker.labelTextAnchor has only one value
org.jfree.chart.text.TextAnchor.TOP_LEFT has only one value
org.jfree.chart.text.TextAnchor.TOP_CENTER has only one value
org.jfree.chart.text.TextAnchor.TOP_RIGHT has only one value
org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT has only one value
org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER has only one value
org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT has only one value
org.jfree.chart.text.TextAnchor.CENTER_LEFT has only one value
org.jfree.chart.text.TextAnchor.CENTER has only one value
org.jfree.chart.text.TextAnchor.CENTER_RIGHT has only one value
org.jfree.chart.text.TextAnchor.BASELINE_LEFT has only one value
org.jfree.chart.text.TextAnchor.BASELINE_CENTER has only one value
org.jfree.chart.text.TextAnchor.BASELINE_RIGHT has only one value
org.jfree.chart.text.TextAnchor.BOTTOM_LEFT has only one value
org.jfree.chart.text.TextAnchor.BOTTOM_CENTER has only one value
org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT has only one value
marker.labelTextAnchor.name has only one value
marker.labelTextAnchor.name.toString == "TextAnchor.CENTER"
marker.labelOffset.unitType has only one value
marker.labelOffset.top == 3.0
marker.labelOffset.left == 3.0
marker.labelOffset.bottom == 3.0
marker.labelOffset.right == 3.0
marker.labelOffsetType has only one value
org.jfree.chart.util.LengthAdjustmentType.NO_CHANGE has only one value
org.jfree.chart.util.LengthAdjustmentType.EXPAND has only one value
org.jfree.chart.util.LengthAdjustmentType.CONTRACT has only one value
marker.labelOffsetType.name has only one value
marker.labelOffsetType.name.toString == "CONTRACT"
layer has only one value
org.jfree.chart.util.Layer.FOREGROUND has only one value
org.jfree.chart.util.Layer.BACKGROUND has only one value
org.jfree.chart.util.Layer.FOREGROUND.name has only one value
org.jfree.chart.util.Layer.FOREGROUND.name.toString == "Layer.FOREGROUND"
org.jfree.chart.util.Layer.BACKGROUND.name has only one value
org.jfree.chart.util.Layer.BACKGROUND.name.toString == "Layer.BACKGROUND"
layer.name has only one value
layer.name.toString == "Layer.BACKGROUND"
===========================================================================
org.jfree.chart.plot.CategoryPlot.addRangeMarker(int, org.jfree.chart.plot.Marker, org.jfree.chart.util.Layer):::EXIT
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE)
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_VALUE_LABEL_FONT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_VALUE_LABEL_FONT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT.getClass().getName())
org.jfree.chart.plot.CategoryPlot.localizationResources == orig(org.jfree.chart.plot.CategoryPlot.localizationResources)
org.jfree.chart.plot.CategoryPlot.localizationResources.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.localizationResources.getClass().getName())
this.orientation == orig(this.orientation)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL)
org.jfree.chart.plot.PlotOrientation.VERTICAL == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name.toString == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name.toString)
org.jfree.chart.plot.PlotOrientation.VERTICAL.name == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL.name)
org.jfree.chart.plot.PlotOrientation.VERTICAL.name.toString == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL.name.toString)
this.orientation.name == orig(this.orientation.name)
this.orientation.name.toString == orig(this.orientation.name.toString)
this.axisOffset == orig(this.axisOffset)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.top == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.top)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.left == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.left)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.bottom == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.bottom)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.right == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.right)
this.axisOffset.unitType == orig(this.axisOffset.unitType)
org.jfree.chart.util.UnitType.ABSOLUTE == orig(org.jfree.chart.util.UnitType.ABSOLUTE)
org.jfree.chart.util.UnitType.RELATIVE == orig(org.jfree.chart.util.UnitType.RELATIVE)
this.axisOffset.unitType.name == orig(this.axisOffset.unitType.name)
this.axisOffset.unitType.name.toString == orig(this.axisOffset.unitType.name.toString)
this.axisOffset.top == orig(this.axisOffset.top)
this.axisOffset.left == orig(this.axisOffset.left)
this.axisOffset.bottom == orig(this.axisOffset.bottom)
this.axisOffset.right == orig(this.axisOffset.right)
this.domainAxes == orig(this.domainAxes)
this.domainAxes.objects == orig(this.domainAxes.objects)
this.domainAxes.objects.getClass().getName() == orig(this.domainAxes.objects.getClass().getName())
this.domainAxes.objects[] == orig(this.domainAxes.objects[])
this.domainAxes.size == orig(this.domainAxes.size)
this.domainAxes.increment == orig(this.domainAxes.increment)
this.domainAxisLocations == orig(this.domainAxisLocations)
this.domainAxisLocations.objects == orig(this.domainAxisLocations.objects)
this.domainAxisLocations.objects.getClass().getName() == orig(this.domainAxisLocations.objects.getClass().getName())
this.domainAxisLocations.objects[] == orig(this.domainAxisLocations.objects[])
this.domainAxisLocations.size == orig(this.domainAxisLocations.size)
this.domainAxisLocations.increment == orig(this.domainAxisLocations.increment)
this.drawSharedDomainAxis == orig(this.drawSharedDomainAxis)
this.rangeAxes == orig(this.rangeAxes)
this.rangeAxes.objects == orig(this.rangeAxes.objects)
this.rangeAxes.objects.getClass().getName() == orig(this.rangeAxes.objects.getClass().getName())
this.rangeAxes.objects[] == orig(this.rangeAxes.objects[])
this.rangeAxes.size == orig(this.rangeAxes.size)
this.rangeAxes.increment == orig(this.rangeAxes.increment)
this.rangeAxisLocations == orig(this.rangeAxisLocations)
this.rangeAxisLocations.objects == orig(this.rangeAxisLocations.objects)
this.rangeAxisLocations.objects.getClass().getName() == orig(this.rangeAxisLocations.objects.getClass().getName())
this.rangeAxisLocations.objects[] == orig(this.rangeAxisLocations.objects[])
this.rangeAxisLocations.size == orig(this.rangeAxisLocations.size)
this.rangeAxisLocations.increment == orig(this.rangeAxisLocations.increment)
this.datasets == orig(this.datasets)
this.datasets.objects == orig(this.datasets.objects)
this.datasets.objects.getClass().getName() == orig(this.datasets.objects.getClass().getName())
this.datasets.objects[] == orig(this.datasets.objects[])
this.datasets.size == orig(this.datasets.size)
this.datasets.increment == orig(this.datasets.increment)
this.datasetToDomainAxisMap == orig(this.datasetToDomainAxisMap)
this.datasetToDomainAxisMap.objects == orig(this.datasetToDomainAxisMap.objects)
this.datasetToDomainAxisMap.objects.getClass().getName() == orig(this.datasetToDomainAxisMap.objects.getClass().getName())
this.datasetToDomainAxisMap.objects[] == orig(this.datasetToDomainAxisMap.objects[])
this.datasetToDomainAxisMap.size == orig(this.datasetToDomainAxisMap.size)
this.datasetToDomainAxisMap.increment == orig(this.datasetToDomainAxisMap.increment)
this.datasetToRangeAxisMap == orig(this.datasetToRangeAxisMap)
this.datasetToRangeAxisMap.objects == orig(this.datasetToRangeAxisMap.objects)
this.datasetToRangeAxisMap.objects.getClass().getName() == orig(this.datasetToRangeAxisMap.objects.getClass().getName())
this.datasetToRangeAxisMap.objects[] == orig(this.datasetToRangeAxisMap.objects[])
this.datasetToRangeAxisMap.size == orig(this.datasetToRangeAxisMap.size)
this.datasetToRangeAxisMap.increment == orig(this.datasetToRangeAxisMap.increment)
this.renderers == orig(this.renderers)
this.renderers.objects == orig(this.renderers.objects)
this.renderers.objects.getClass().getName() == orig(this.renderers.objects.getClass().getName())
this.renderers.objects[] == orig(this.renderers.objects[])
this.renderers.size == orig(this.renderers.size)
this.renderers.increment == orig(this.renderers.increment)
this.renderingOrder == orig(this.renderingOrder)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name.toString == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name.toString)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name.toString == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name.toString)
this.renderingOrder.name == orig(this.renderingOrder.name)
this.renderingOrder.name.toString == orig(this.renderingOrder.name.toString)
this.columnRenderingOrder == orig(this.columnRenderingOrder)
org.jfree.chart.util.SortOrder.ASCENDING == orig(org.jfree.chart.util.SortOrder.ASCENDING)
org.jfree.chart.util.SortOrder.DESCENDING == orig(org.jfree.chart.util.SortOrder.DESCENDING)
org.jfree.chart.util.SortOrder.ASCENDING.name == orig(org.jfree.chart.util.SortOrder.ASCENDING.name)
org.jfree.chart.util.SortOrder.ASCENDING.name.toString == orig(org.jfree.chart.util.SortOrder.ASCENDING.name.toString)
org.jfree.chart.util.SortOrder.DESCENDING.name == orig(org.jfree.chart.util.SortOrder.DESCENDING.name)
org.jfree.chart.util.SortOrder.DESCENDING.name.toString == orig(org.jfree.chart.util.SortOrder.DESCENDING.name.toString)
this.columnRenderingOrder.name == orig(this.columnRenderingOrder.name)
this.columnRenderingOrder.name.toString == orig(this.columnRenderingOrder.name.toString)
this.rowRenderingOrder == orig(this.rowRenderingOrder)
this.rowRenderingOrder.name == orig(this.rowRenderingOrder.name)
this.rowRenderingOrder.name.toString == orig(this.rowRenderingOrder.name.toString)
this.domainGridlinesVisible == orig(this.domainGridlinesVisible)
this.domainGridlinePosition == orig(this.domainGridlinePosition)
org.jfree.chart.axis.CategoryAnchor.START == orig(org.jfree.chart.axis.CategoryAnchor.START)
org.jfree.chart.axis.CategoryAnchor.MIDDLE == orig(org.jfree.chart.axis.CategoryAnchor.MIDDLE)
org.jfree.chart.axis.CategoryAnchor.END == orig(org.jfree.chart.axis.CategoryAnchor.END)
org.jfree.chart.axis.CategoryAnchor.START.name == orig(org.jfree.chart.axis.CategoryAnchor.START.name)
org.jfree.chart.axis.CategoryAnchor.START.name.toString == orig(org.jfree.chart.axis.CategoryAnchor.START.name.toString)
org.jfree.chart.axis.CategoryAnchor.MIDDLE.name == orig(org.jfree.chart.axis.CategoryAnchor.MIDDLE.name)
org.jfree.chart.axis.CategoryAnchor.MIDDLE.name.toString == orig(org.jfree.chart.axis.CategoryAnchor.MIDDLE.name.toString)
org.jfree.chart.axis.CategoryAnchor.END.name == orig(org.jfree.chart.axis.CategoryAnchor.END.name)
org.jfree.chart.axis.CategoryAnchor.END.name.toString == orig(org.jfree.chart.axis.CategoryAnchor.END.name.toString)
this.domainGridlinePosition.name == orig(this.domainGridlinePosition.name)
this.domainGridlinePosition.name.toString == orig(this.domainGridlinePosition.name.toString)
this.domainGridlineStroke == orig(this.domainGridlineStroke)
this.domainGridlineStroke.getClass().getName() == orig(this.domainGridlineStroke.getClass().getName())
this.domainGridlinePaint == orig(this.domainGridlinePaint)
this.domainGridlinePaint.getClass().getName() == orig(this.domainGridlinePaint.getClass().getName())
this.rangeGridlinesVisible == orig(this.rangeGridlinesVisible)
this.rangeGridlineStroke == orig(this.rangeGridlineStroke)
this.rangeGridlineStroke.getClass().getName() == orig(this.rangeGridlineStroke.getClass().getName())
this.rangeGridlinePaint == orig(this.rangeGridlinePaint)
this.rangeGridlinePaint.getClass().getName() == orig(this.rangeGridlinePaint.getClass().getName())
this.anchorValue == orig(this.anchorValue)
this.rangeCrosshairVisible == orig(this.rangeCrosshairVisible)
this.rangeCrosshairValue == orig(this.rangeCrosshairValue)
this.rangeCrosshairStroke == orig(this.rangeCrosshairStroke)
this.rangeCrosshairPaint == orig(this.rangeCrosshairPaint)
this.rangeCrosshairLockedOnData == orig(this.rangeCrosshairLockedOnData)
this.foregroundDomainMarkers == orig(this.foregroundDomainMarkers)
this.foregroundDomainMarkers.getClass().getName() == orig(this.foregroundDomainMarkers.getClass().getName())
this.backgroundDomainMarkers == orig(this.backgroundDomainMarkers)
this.backgroundDomainMarkers.getClass().getName() == orig(this.backgroundDomainMarkers.getClass().getName())
this.foregroundRangeMarkers == orig(this.foregroundRangeMarkers)
this.foregroundRangeMarkers.getClass().getName() == orig(this.foregroundRangeMarkers.getClass().getName())
this.backgroundRangeMarkers == orig(this.backgroundRangeMarkers)
this.backgroundRangeMarkers.getClass().getName() == orig(this.backgroundRangeMarkers.getClass().getName())
this.annotations == orig(this.annotations)
this.weight == orig(this.weight)
this.fixedDomainAxisSpace == orig(this.fixedDomainAxisSpace)
this.fixedRangeAxisSpace == orig(this.fixedRangeAxisSpace)
this.fixedLegendItems == orig(this.fixedLegendItems)
org.jfree.chart.plot.Plot.ZERO == orig(org.jfree.chart.plot.Plot.ZERO)
org.jfree.chart.plot.Plot.ZERO.getClass().getName() == orig(org.jfree.chart.plot.Plot.ZERO.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_INSETS == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name.toString == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name.toString)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.top == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.top)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.left == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.left)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.right == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.right)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName())
this.parent == orig(this.parent)
org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener == orig(org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener)
this.datasetGroup == orig(this.datasetGroup)
this.noDataMessage == orig(this.noDataMessage)
this.noDataMessageFont == orig(this.noDataMessageFont)
this.noDataMessagePaint == orig(this.noDataMessagePaint)
this.noDataMessagePaint.getClass().getName() == orig(this.noDataMessagePaint.getClass().getName())
this.insets == orig(this.insets)
this.insets.unitType == orig(this.insets.unitType)
this.insets.unitType.name == orig(this.insets.unitType.name)
this.insets.unitType.name.toString == orig(this.insets.unitType.name.toString)
this.insets.top == orig(this.insets.top)
this.insets.left == orig(this.insets.left)
this.insets.bottom == orig(this.insets.bottom)
this.insets.right == orig(this.insets.right)
this.outlineVisible == orig(this.outlineVisible)
this.outlineStroke == orig(this.outlineStroke)
this.outlineStroke.getClass().getName() == orig(this.outlineStroke.getClass().getName())
this.outlinePaint == orig(this.outlinePaint)
this.outlinePaint.getClass().getName() == orig(this.outlinePaint.getClass().getName())
this.backgroundPaint == orig(this.backgroundPaint)
this.backgroundPaint.getClass().getName() == orig(this.backgroundPaint.getClass().getName())
this.backgroundImage == orig(this.backgroundImage)
this.backgroundImageAlignment == orig(this.backgroundImageAlignment)
this.backgroundImageAlpha == orig(this.backgroundImageAlpha)
this.foregroundAlpha == orig(this.foregroundAlpha)
this.backgroundAlpha == orig(this.backgroundAlpha)
this.drawingSupplier == orig(this.drawingSupplier)
this.drawingSupplier.getClass().getName() == orig(this.drawingSupplier.getClass().getName())
this.listenerList == orig(this.listenerList)
marker.paint == orig(marker.paint)
marker.paint.getClass().getName() == orig(marker.paint.getClass().getName())
marker.stroke == orig(marker.stroke)
marker.stroke.getClass().getName() == orig(marker.stroke.getClass().getName())
marker.outlinePaint == orig(marker.outlinePaint)
marker.outlinePaint.getClass().getName() == orig(marker.outlinePaint.getClass().getName())
marker.outlineStroke == orig(marker.outlineStroke)
marker.outlineStroke.getClass().getName() == orig(marker.outlineStroke.getClass().getName())
marker.alpha == orig(marker.alpha)
marker.label == orig(marker.label)
marker.labelFont == orig(marker.labelFont)
marker.labelPaint == orig(marker.labelPaint)
marker.labelPaint.getClass().getName() == orig(marker.labelPaint.getClass().getName())
marker.labelAnchor == orig(marker.labelAnchor)
org.jfree.chart.util.RectangleAnchor.CENTER == orig(org.jfree.chart.util.RectangleAnchor.CENTER)
org.jfree.chart.util.RectangleAnchor.TOP == orig(org.jfree.chart.util.RectangleAnchor.TOP)
org.jfree.chart.util.RectangleAnchor.TOP_LEFT == orig(org.jfree.chart.util.RectangleAnchor.TOP_LEFT)
org.jfree.chart.util.RectangleAnchor.TOP_RIGHT == orig(org.jfree.chart.util.RectangleAnchor.TOP_RIGHT)
org.jfree.chart.util.RectangleAnchor.BOTTOM == orig(org.jfree.chart.util.RectangleAnchor.BOTTOM)
org.jfree.chart.util.RectangleAnchor.BOTTOM_LEFT == orig(org.jfree.chart.util.RectangleAnchor.BOTTOM_LEFT)
org.jfree.chart.util.RectangleAnchor.BOTTOM_RIGHT == orig(org.jfree.chart.util.RectangleAnchor.BOTTOM_RIGHT)
org.jfree.chart.util.RectangleAnchor.LEFT == orig(org.jfree.chart.util.RectangleAnchor.LEFT)
org.jfree.chart.util.RectangleAnchor.RIGHT == orig(org.jfree.chart.util.RectangleAnchor.RIGHT)
marker.labelAnchor.name == orig(marker.labelAnchor.name)
marker.labelAnchor.name.toString == orig(marker.labelAnchor.name.toString)
marker.labelTextAnchor == orig(marker.labelTextAnchor)
org.jfree.chart.text.TextAnchor.TOP_LEFT == orig(org.jfree.chart.text.TextAnchor.TOP_LEFT)
org.jfree.chart.text.TextAnchor.TOP_CENTER == orig(org.jfree.chart.text.TextAnchor.TOP_CENTER)
org.jfree.chart.text.TextAnchor.TOP_RIGHT == orig(org.jfree.chart.text.TextAnchor.TOP_RIGHT)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT)
org.jfree.chart.text.TextAnchor.CENTER_LEFT == orig(org.jfree.chart.text.TextAnchor.CENTER_LEFT)
org.jfree.chart.text.TextAnchor.CENTER == orig(org.jfree.chart.text.TextAnchor.CENTER)
org.jfree.chart.text.TextAnchor.CENTER_RIGHT == orig(org.jfree.chart.text.TextAnchor.CENTER_RIGHT)
org.jfree.chart.text.TextAnchor.BASELINE_LEFT == orig(org.jfree.chart.text.TextAnchor.BASELINE_LEFT)
org.jfree.chart.text.TextAnchor.BASELINE_CENTER == orig(org.jfree.chart.text.TextAnchor.BASELINE_CENTER)
org.jfree.chart.text.TextAnchor.BASELINE_RIGHT == orig(org.jfree.chart.text.TextAnchor.BASELINE_RIGHT)
org.jfree.chart.text.TextAnchor.BOTTOM_LEFT == orig(org.jfree.chart.text.TextAnchor.BOTTOM_LEFT)
org.jfree.chart.text.TextAnchor.BOTTOM_CENTER == orig(org.jfree.chart.text.TextAnchor.BOTTOM_CENTER)
org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT == orig(org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT)
marker.labelTextAnchor.name == orig(marker.labelTextAnchor.name)
marker.labelTextAnchor.name.toString == orig(marker.labelTextAnchor.name.toString)
marker.labelOffset == orig(marker.labelOffset)
marker.labelOffset.unitType == orig(marker.labelOffset.unitType)
marker.labelOffset.top == orig(marker.labelOffset.top)
marker.labelOffset.left == orig(marker.labelOffset.left)
marker.labelOffset.bottom == orig(marker.labelOffset.bottom)
marker.labelOffset.right == orig(marker.labelOffset.right)
marker.labelOffsetType == orig(marker.labelOffsetType)
org.jfree.chart.util.LengthAdjustmentType.NO_CHANGE == orig(org.jfree.chart.util.LengthAdjustmentType.NO_CHANGE)
org.jfree.chart.util.LengthAdjustmentType.EXPAND == orig(org.jfree.chart.util.LengthAdjustmentType.EXPAND)
org.jfree.chart.util.LengthAdjustmentType.CONTRACT == orig(org.jfree.chart.util.LengthAdjustmentType.CONTRACT)
marker.labelOffsetType.name == orig(marker.labelOffsetType.name)
marker.labelOffsetType.name.toString == orig(marker.labelOffsetType.name.toString)
marker.listenerList == orig(marker.listenerList)
org.jfree.chart.util.Layer.FOREGROUND == orig(org.jfree.chart.util.Layer.FOREGROUND)
org.jfree.chart.util.Layer.BACKGROUND == orig(org.jfree.chart.util.Layer.BACKGROUND)
org.jfree.chart.util.Layer.FOREGROUND.name == orig(org.jfree.chart.util.Layer.FOREGROUND.name)
org.jfree.chart.util.Layer.FOREGROUND.name.toString == orig(org.jfree.chart.util.Layer.FOREGROUND.name.toString)
org.jfree.chart.util.Layer.BACKGROUND.name == orig(org.jfree.chart.util.Layer.BACKGROUND.name)
org.jfree.chart.util.Layer.BACKGROUND.name.toString == orig(org.jfree.chart.util.Layer.BACKGROUND.name.toString)
layer.name == orig(layer.name)
layer.name.toString == orig(layer.name.toString)
this.domainAxes.size == 1
this.domainAxisLocations.objects[] has only one value, of length 8
this.domainAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.domainAxisLocations.size == 1
this.rangeAxes.size == 1
this.rangeAxisLocations.objects[] has only one value, of length 8
this.rangeAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.rangeAxisLocations.size == 1
this.datasetToDomainAxisMap.objects[].getClass().getName() == [java.lang.Integer, null, null, null, null, null, null, null]
this.datasetToDomainAxisMap.size == 1
this.datasetToRangeAxisMap.objects[].getClass().getName() == [java.lang.Integer, null, null, null, null, null, null, null]
this.datasetToRangeAxisMap.size == 1
this.renderers.size == 1
this.domainGridlinePosition has only one value
this.domainGridlineStroke has only one value
this.domainGridlinePaint has only one value
this.rangeGridlinesVisible == true
this.rangeGridlineStroke has only one value
this.rangeGridlinePaint has only one value
this.rangeCrosshairStroke == null
this.rangeCrosshairPaint == null
this.annotations == null
marker.paint.getClass().getName() == java.awt.Color.class
marker.stroke.getClass().getName() == java.awt.BasicStroke.class
marker.outlinePaint.getClass().getName() == java.awt.Color.class
marker.outlineStroke.getClass().getName() == java.awt.BasicStroke.class
marker.alpha == 0.6
marker.label == null
marker.labelPaint has only one value
marker.labelPaint.getClass().getName() == java.awt.Color.class
marker.labelAnchor has only one value
org.jfree.chart.util.RectangleAnchor.CENTER has only one value
org.jfree.chart.util.RectangleAnchor.TOP has only one value
org.jfree.chart.util.RectangleAnchor.TOP_LEFT has only one value
org.jfree.chart.util.RectangleAnchor.TOP_RIGHT has only one value
org.jfree.chart.util.RectangleAnchor.BOTTOM has only one value
org.jfree.chart.util.RectangleAnchor.BOTTOM_LEFT has only one value
org.jfree.chart.util.RectangleAnchor.BOTTOM_RIGHT has only one value
org.jfree.chart.util.RectangleAnchor.LEFT has only one value
org.jfree.chart.util.RectangleAnchor.RIGHT has only one value
marker.labelAnchor.name has only one value
marker.labelAnchor.name.toString == "RectangleAnchor.TOP_LEFT"
marker.labelTextAnchor has only one value
org.jfree.chart.text.TextAnchor.TOP_LEFT has only one value
org.jfree.chart.text.TextAnchor.TOP_CENTER has only one value
org.jfree.chart.text.TextAnchor.TOP_RIGHT has only one value
org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT has only one value
org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER has only one value
org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT has only one value
org.jfree.chart.text.TextAnchor.CENTER_LEFT has only one value
org.jfree.chart.text.TextAnchor.CENTER has only one value
org.jfree.chart.text.TextAnchor.CENTER_RIGHT has only one value
org.jfree.chart.text.TextAnchor.BASELINE_LEFT has only one value
org.jfree.chart.text.TextAnchor.BASELINE_CENTER has only one value
org.jfree.chart.text.TextAnchor.BASELINE_RIGHT has only one value
org.jfree.chart.text.TextAnchor.BOTTOM_LEFT has only one value
org.jfree.chart.text.TextAnchor.BOTTOM_CENTER has only one value
org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT has only one value
marker.labelTextAnchor.name has only one value
marker.labelTextAnchor.name.toString == "TextAnchor.CENTER"
marker.labelOffset.unitType has only one value
marker.labelOffset.top == 3.0
marker.labelOffset.left == 3.0
marker.labelOffset.bottom == 3.0
marker.labelOffset.right == 3.0
marker.labelOffsetType has only one value
org.jfree.chart.util.LengthAdjustmentType.NO_CHANGE has only one value
org.jfree.chart.util.LengthAdjustmentType.EXPAND has only one value
org.jfree.chart.util.LengthAdjustmentType.CONTRACT has only one value
marker.labelOffsetType.name has only one value
marker.labelOffsetType.name.toString == "CONTRACT"
org.jfree.chart.plot.Marker.class$org$jfree$chart$event$MarkerChangeListener has only one value
org.jfree.chart.util.Layer.FOREGROUND has only one value
org.jfree.chart.util.Layer.BACKGROUND has only one value
org.jfree.chart.util.Layer.FOREGROUND.name has only one value
org.jfree.chart.util.Layer.FOREGROUND.name.toString == "Layer.FOREGROUND"
org.jfree.chart.util.Layer.BACKGROUND.name has only one value
org.jfree.chart.util.Layer.BACKGROUND.name.toString == "Layer.BACKGROUND"
layer.name has only one value
layer.name.toString == "Layer.BACKGROUND"
===========================================================================
org.jfree.chart.plot.CategoryPlot.addRangeMarker(int, org.jfree.chart.plot.Marker, org.jfree.chart.util.Layer, boolean):::ENTER
this.domainAxes.size == 1
this.domainAxisLocations.objects[] has only one value, of length 8
this.domainAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.domainAxisLocations.size == 1
this.rangeAxes.size == 1
this.rangeAxisLocations.objects[] has only one value, of length 8
this.rangeAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.rangeAxisLocations.size == 1
this.datasetToDomainAxisMap.objects[].getClass().getName() == [java.lang.Integer, null, null, null, null, null, null, null]
this.datasetToDomainAxisMap.size == 1
this.datasetToRangeAxisMap.objects[].getClass().getName() == [java.lang.Integer, null, null, null, null, null, null, null]
this.datasetToRangeAxisMap.size == 1
this.renderers.size == 1
this.domainGridlinePosition has only one value
this.domainGridlineStroke has only one value
this.domainGridlinePaint has only one value
this.rangeGridlinesVisible == true
this.rangeGridlineStroke has only one value
this.rangeGridlinePaint has only one value
this.rangeCrosshairStroke == null
this.rangeCrosshairPaint == null
this.annotations == null
index == 0
marker.getClass().getName() == org.jfree.chart.plot.ValueMarker.class
marker.paint.getClass().getName() == java.awt.Color.class
marker.stroke.getClass().getName() == java.awt.BasicStroke.class
marker.outlinePaint.getClass().getName() == java.awt.Color.class
marker.outlineStroke.getClass().getName() == java.awt.BasicStroke.class
marker.alpha == 0.6
marker.label == null
marker.labelPaint has only one value
marker.labelPaint.getClass().getName() == java.awt.Color.class
marker.labelAnchor has only one value
org.jfree.chart.util.RectangleAnchor.CENTER has only one value
org.jfree.chart.util.RectangleAnchor.TOP has only one value
org.jfree.chart.util.RectangleAnchor.TOP_LEFT has only one value
org.jfree.chart.util.RectangleAnchor.TOP_RIGHT has only one value
org.jfree.chart.util.RectangleAnchor.BOTTOM has only one value
org.jfree.chart.util.RectangleAnchor.BOTTOM_LEFT has only one value
org.jfree.chart.util.RectangleAnchor.BOTTOM_RIGHT has only one value
org.jfree.chart.util.RectangleAnchor.LEFT has only one value
org.jfree.chart.util.RectangleAnchor.RIGHT has only one value
marker.labelAnchor.name has only one value
marker.labelAnchor.name.toString == "RectangleAnchor.TOP_LEFT"
marker.labelTextAnchor has only one value
org.jfree.chart.text.TextAnchor.TOP_LEFT has only one value
org.jfree.chart.text.TextAnchor.TOP_CENTER has only one value
org.jfree.chart.text.TextAnchor.TOP_RIGHT has only one value
org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT has only one value
org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER has only one value
org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT has only one value
org.jfree.chart.text.TextAnchor.CENTER_LEFT has only one value
org.jfree.chart.text.TextAnchor.CENTER has only one value
org.jfree.chart.text.TextAnchor.CENTER_RIGHT has only one value
org.jfree.chart.text.TextAnchor.BASELINE_LEFT has only one value
org.jfree.chart.text.TextAnchor.BASELINE_CENTER has only one value
org.jfree.chart.text.TextAnchor.BASELINE_RIGHT has only one value
org.jfree.chart.text.TextAnchor.BOTTOM_LEFT has only one value
org.jfree.chart.text.TextAnchor.BOTTOM_CENTER has only one value
org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT has only one value
marker.labelTextAnchor.name has only one value
marker.labelTextAnchor.name.toString == "TextAnchor.CENTER"
marker.labelOffset.unitType has only one value
marker.labelOffset.top == 3.0
marker.labelOffset.left == 3.0
marker.labelOffset.bottom == 3.0
marker.labelOffset.right == 3.0
marker.labelOffsetType has only one value
org.jfree.chart.util.LengthAdjustmentType.NO_CHANGE has only one value
org.jfree.chart.util.LengthAdjustmentType.EXPAND has only one value
org.jfree.chart.util.LengthAdjustmentType.CONTRACT has only one value
marker.labelOffsetType.name has only one value
marker.labelOffsetType.name.toString == "CONTRACT"
layer has only one value
org.jfree.chart.util.Layer.FOREGROUND has only one value
org.jfree.chart.util.Layer.BACKGROUND has only one value
org.jfree.chart.util.Layer.FOREGROUND.name has only one value
org.jfree.chart.util.Layer.FOREGROUND.name.toString == "Layer.FOREGROUND"
org.jfree.chart.util.Layer.BACKGROUND.name has only one value
org.jfree.chart.util.Layer.BACKGROUND.name.toString == "Layer.BACKGROUND"
layer.name has only one value
layer.name.toString == "Layer.BACKGROUND"
notify == true
===========================================================================
org.jfree.chart.plot.CategoryPlot.addRangeMarker(int, org.jfree.chart.plot.Marker, org.jfree.chart.util.Layer, boolean):::EXIT
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE)
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_VALUE_LABEL_FONT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_VALUE_LABEL_FONT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT.getClass().getName())
org.jfree.chart.plot.CategoryPlot.localizationResources == orig(org.jfree.chart.plot.CategoryPlot.localizationResources)
org.jfree.chart.plot.CategoryPlot.localizationResources.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.localizationResources.getClass().getName())
this.orientation == orig(this.orientation)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL)
org.jfree.chart.plot.PlotOrientation.VERTICAL == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name.toString == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name.toString)
org.jfree.chart.plot.PlotOrientation.VERTICAL.name == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL.name)
org.jfree.chart.plot.PlotOrientation.VERTICAL.name.toString == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL.name.toString)
this.orientation.name == orig(this.orientation.name)
this.orientation.name.toString == orig(this.orientation.name.toString)
this.axisOffset == orig(this.axisOffset)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.top == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.top)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.left == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.left)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.bottom == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.bottom)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.right == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.right)
this.axisOffset.unitType == orig(this.axisOffset.unitType)
org.jfree.chart.util.UnitType.ABSOLUTE == orig(org.jfree.chart.util.UnitType.ABSOLUTE)
org.jfree.chart.util.UnitType.RELATIVE == orig(org.jfree.chart.util.UnitType.RELATIVE)
this.axisOffset.unitType.name == orig(this.axisOffset.unitType.name)
this.axisOffset.unitType.name.toString == orig(this.axisOffset.unitType.name.toString)
this.axisOffset.top == orig(this.axisOffset.top)
this.axisOffset.left == orig(this.axisOffset.left)
this.axisOffset.bottom == orig(this.axisOffset.bottom)
this.axisOffset.right == orig(this.axisOffset.right)
this.domainAxes == orig(this.domainAxes)
this.domainAxes.objects == orig(this.domainAxes.objects)
this.domainAxes.objects.getClass().getName() == orig(this.domainAxes.objects.getClass().getName())
this.domainAxes.objects[] == orig(this.domainAxes.objects[])
this.domainAxes.size == orig(this.domainAxes.size)
this.domainAxes.increment == orig(this.domainAxes.increment)
this.domainAxisLocations == orig(this.domainAxisLocations)
this.domainAxisLocations.objects == orig(this.domainAxisLocations.objects)
this.domainAxisLocations.objects.getClass().getName() == orig(this.domainAxisLocations.objects.getClass().getName())
this.domainAxisLocations.objects[] == orig(this.domainAxisLocations.objects[])
this.domainAxisLocations.size == orig(this.domainAxisLocations.size)
this.domainAxisLocations.increment == orig(this.domainAxisLocations.increment)
this.drawSharedDomainAxis == orig(this.drawSharedDomainAxis)
this.rangeAxes == orig(this.rangeAxes)
this.rangeAxes.objects == orig(this.rangeAxes.objects)
this.rangeAxes.objects.getClass().getName() == orig(this.rangeAxes.objects.getClass().getName())
this.rangeAxes.objects[] == orig(this.rangeAxes.objects[])
this.rangeAxes.size == orig(this.rangeAxes.size)
this.rangeAxes.increment == orig(this.rangeAxes.increment)
this.rangeAxisLocations == orig(this.rangeAxisLocations)
this.rangeAxisLocations.objects == orig(this.rangeAxisLocations.objects)
this.rangeAxisLocations.objects.getClass().getName() == orig(this.rangeAxisLocations.objects.getClass().getName())
this.rangeAxisLocations.objects[] == orig(this.rangeAxisLocations.objects[])
this.rangeAxisLocations.size == orig(this.rangeAxisLocations.size)
this.rangeAxisLocations.increment == orig(this.rangeAxisLocations.increment)
this.datasets == orig(this.datasets)
this.datasets.objects == orig(this.datasets.objects)
this.datasets.objects.getClass().getName() == orig(this.datasets.objects.getClass().getName())
this.datasets.objects[] == orig(this.datasets.objects[])
this.datasets.size == orig(this.datasets.size)
this.datasets.increment == orig(this.datasets.increment)
this.datasetToDomainAxisMap == orig(this.datasetToDomainAxisMap)
this.datasetToDomainAxisMap.objects == orig(this.datasetToDomainAxisMap.objects)
this.datasetToDomainAxisMap.objects.getClass().getName() == orig(this.datasetToDomainAxisMap.objects.getClass().getName())
this.datasetToDomainAxisMap.objects[] == orig(this.datasetToDomainAxisMap.objects[])
this.datasetToDomainAxisMap.size == orig(this.datasetToDomainAxisMap.size)
this.datasetToDomainAxisMap.increment == orig(this.datasetToDomainAxisMap.increment)
this.datasetToRangeAxisMap == orig(this.datasetToRangeAxisMap)
this.datasetToRangeAxisMap.objects == orig(this.datasetToRangeAxisMap.objects)
this.datasetToRangeAxisMap.objects.getClass().getName() == orig(this.datasetToRangeAxisMap.objects.getClass().getName())
this.datasetToRangeAxisMap.objects[] == orig(this.datasetToRangeAxisMap.objects[])
this.datasetToRangeAxisMap.size == orig(this.datasetToRangeAxisMap.size)
this.datasetToRangeAxisMap.increment == orig(this.datasetToRangeAxisMap.increment)
this.renderers == orig(this.renderers)
this.renderers.objects == orig(this.renderers.objects)
this.renderers.objects.getClass().getName() == orig(this.renderers.objects.getClass().getName())
this.renderers.objects[] == orig(this.renderers.objects[])
this.renderers.size == orig(this.renderers.size)
this.renderers.increment == orig(this.renderers.increment)
this.renderingOrder == orig(this.renderingOrder)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name.toString == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name.toString)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name.toString == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name.toString)
this.renderingOrder.name == orig(this.renderingOrder.name)
this.renderingOrder.name.toString == orig(this.renderingOrder.name.toString)
this.columnRenderingOrder == orig(this.columnRenderingOrder)
org.jfree.chart.util.SortOrder.ASCENDING == orig(org.jfree.chart.util.SortOrder.ASCENDING)
org.jfree.chart.util.SortOrder.DESCENDING == orig(org.jfree.chart.util.SortOrder.DESCENDING)
org.jfree.chart.util.SortOrder.ASCENDING.name == orig(org.jfree.chart.util.SortOrder.ASCENDING.name)
org.jfree.chart.util.SortOrder.ASCENDING.name.toString == orig(org.jfree.chart.util.SortOrder.ASCENDING.name.toString)
org.jfree.chart.util.SortOrder.DESCENDING.name == orig(org.jfree.chart.util.SortOrder.DESCENDING.name)
org.jfree.chart.util.SortOrder.DESCENDING.name.toString == orig(org.jfree.chart.util.SortOrder.DESCENDING.name.toString)
this.columnRenderingOrder.name == orig(this.columnRenderingOrder.name)
this.columnRenderingOrder.name.toString == orig(this.columnRenderingOrder.name.toString)
this.rowRenderingOrder == orig(this.rowRenderingOrder)
this.rowRenderingOrder.name == orig(this.rowRenderingOrder.name)
this.rowRenderingOrder.name.toString == orig(this.rowRenderingOrder.name.toString)
this.domainGridlinesVisible == orig(this.domainGridlinesVisible)
this.domainGridlinePosition == orig(this.domainGridlinePosition)
org.jfree.chart.axis.CategoryAnchor.START == orig(org.jfree.chart.axis.CategoryAnchor.START)
org.jfree.chart.axis.CategoryAnchor.MIDDLE == orig(org.jfree.chart.axis.CategoryAnchor.MIDDLE)
org.jfree.chart.axis.CategoryAnchor.END == orig(org.jfree.chart.axis.CategoryAnchor.END)
org.jfree.chart.axis.CategoryAnchor.START.name == orig(org.jfree.chart.axis.CategoryAnchor.START.name)
org.jfree.chart.axis.CategoryAnchor.START.name.toString == orig(org.jfree.chart.axis.CategoryAnchor.START.name.toString)
org.jfree.chart.axis.CategoryAnchor.MIDDLE.name == orig(org.jfree.chart.axis.CategoryAnchor.MIDDLE.name)
org.jfree.chart.axis.CategoryAnchor.MIDDLE.name.toString == orig(org.jfree.chart.axis.CategoryAnchor.MIDDLE.name.toString)
org.jfree.chart.axis.CategoryAnchor.END.name == orig(org.jfree.chart.axis.CategoryAnchor.END.name)
org.jfree.chart.axis.CategoryAnchor.END.name.toString == orig(org.jfree.chart.axis.CategoryAnchor.END.name.toString)
this.domainGridlinePosition.name == orig(this.domainGridlinePosition.name)
this.domainGridlinePosition.name.toString == orig(this.domainGridlinePosition.name.toString)
this.domainGridlineStroke == orig(this.domainGridlineStroke)
this.domainGridlineStroke.getClass().getName() == orig(this.domainGridlineStroke.getClass().getName())
this.domainGridlinePaint == orig(this.domainGridlinePaint)
this.domainGridlinePaint.getClass().getName() == orig(this.domainGridlinePaint.getClass().getName())
this.rangeGridlinesVisible == orig(this.rangeGridlinesVisible)
this.rangeGridlineStroke == orig(this.rangeGridlineStroke)
this.rangeGridlineStroke.getClass().getName() == orig(this.rangeGridlineStroke.getClass().getName())
this.rangeGridlinePaint == orig(this.rangeGridlinePaint)
this.rangeGridlinePaint.getClass().getName() == orig(this.rangeGridlinePaint.getClass().getName())
this.anchorValue == orig(this.anchorValue)
this.rangeCrosshairVisible == orig(this.rangeCrosshairVisible)
this.rangeCrosshairValue == orig(this.rangeCrosshairValue)
this.rangeCrosshairStroke == orig(this.rangeCrosshairStroke)
this.rangeCrosshairPaint == orig(this.rangeCrosshairPaint)
this.rangeCrosshairLockedOnData == orig(this.rangeCrosshairLockedOnData)
this.foregroundDomainMarkers == orig(this.foregroundDomainMarkers)
this.foregroundDomainMarkers.getClass().getName() == orig(this.foregroundDomainMarkers.getClass().getName())
this.backgroundDomainMarkers == orig(this.backgroundDomainMarkers)
this.backgroundDomainMarkers.getClass().getName() == orig(this.backgroundDomainMarkers.getClass().getName())
this.foregroundRangeMarkers == orig(this.foregroundRangeMarkers)
this.foregroundRangeMarkers.getClass().getName() == orig(this.foregroundRangeMarkers.getClass().getName())
this.backgroundRangeMarkers == orig(this.backgroundRangeMarkers)
this.backgroundRangeMarkers.getClass().getName() == orig(this.backgroundRangeMarkers.getClass().getName())
this.annotations == orig(this.annotations)
this.weight == orig(this.weight)
this.fixedDomainAxisSpace == orig(this.fixedDomainAxisSpace)
this.fixedRangeAxisSpace == orig(this.fixedRangeAxisSpace)
this.fixedLegendItems == orig(this.fixedLegendItems)
org.jfree.chart.plot.Plot.ZERO == orig(org.jfree.chart.plot.Plot.ZERO)
org.jfree.chart.plot.Plot.ZERO.getClass().getName() == orig(org.jfree.chart.plot.Plot.ZERO.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_INSETS == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name.toString == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name.toString)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.top == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.top)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.left == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.left)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.right == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.right)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName())
this.parent == orig(this.parent)
org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener == orig(org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener)
this.datasetGroup == orig(this.datasetGroup)
this.noDataMessage == orig(this.noDataMessage)
this.noDataMessageFont == orig(this.noDataMessageFont)
this.noDataMessagePaint == orig(this.noDataMessagePaint)
this.noDataMessagePaint.getClass().getName() == orig(this.noDataMessagePaint.getClass().getName())
this.insets == orig(this.insets)
this.insets.unitType == orig(this.insets.unitType)
this.insets.unitType.name == orig(this.insets.unitType.name)
this.insets.unitType.name.toString == orig(this.insets.unitType.name.toString)
this.insets.top == orig(this.insets.top)
this.insets.left == orig(this.insets.left)
this.insets.bottom == orig(this.insets.bottom)
this.insets.right == orig(this.insets.right)
this.outlineVisible == orig(this.outlineVisible)
this.outlineStroke == orig(this.outlineStroke)
this.outlineStroke.getClass().getName() == orig(this.outlineStroke.getClass().getName())
this.outlinePaint == orig(this.outlinePaint)
this.outlinePaint.getClass().getName() == orig(this.outlinePaint.getClass().getName())
this.backgroundPaint == orig(this.backgroundPaint)
this.backgroundPaint.getClass().getName() == orig(this.backgroundPaint.getClass().getName())
this.backgroundImage == orig(this.backgroundImage)
this.backgroundImageAlignment == orig(this.backgroundImageAlignment)
this.backgroundImageAlpha == orig(this.backgroundImageAlpha)
this.foregroundAlpha == orig(this.foregroundAlpha)
this.backgroundAlpha == orig(this.backgroundAlpha)
this.drawingSupplier == orig(this.drawingSupplier)
this.drawingSupplier.getClass().getName() == orig(this.drawingSupplier.getClass().getName())
this.listenerList == orig(this.listenerList)
marker.paint == orig(marker.paint)
marker.paint.getClass().getName() == orig(marker.paint.getClass().getName())
marker.stroke == orig(marker.stroke)
marker.stroke.getClass().getName() == orig(marker.stroke.getClass().getName())
marker.outlinePaint == orig(marker.outlinePaint)
marker.outlinePaint.getClass().getName() == orig(marker.outlinePaint.getClass().getName())
marker.outlineStroke == orig(marker.outlineStroke)
marker.outlineStroke.getClass().getName() == orig(marker.outlineStroke.getClass().getName())
marker.alpha == orig(marker.alpha)
marker.label == orig(marker.label)
marker.labelFont == orig(marker.labelFont)
marker.labelPaint == orig(marker.labelPaint)
marker.labelPaint.getClass().getName() == orig(marker.labelPaint.getClass().getName())
marker.labelAnchor == orig(marker.labelAnchor)
org.jfree.chart.util.RectangleAnchor.CENTER == orig(org.jfree.chart.util.RectangleAnchor.CENTER)
org.jfree.chart.util.RectangleAnchor.TOP == orig(org.jfree.chart.util.RectangleAnchor.TOP)
org.jfree.chart.util.RectangleAnchor.TOP_LEFT == orig(org.jfree.chart.util.RectangleAnchor.TOP_LEFT)
org.jfree.chart.util.RectangleAnchor.TOP_RIGHT == orig(org.jfree.chart.util.RectangleAnchor.TOP_RIGHT)
org.jfree.chart.util.RectangleAnchor.BOTTOM == orig(org.jfree.chart.util.RectangleAnchor.BOTTOM)
org.jfree.chart.util.RectangleAnchor.BOTTOM_LEFT == orig(org.jfree.chart.util.RectangleAnchor.BOTTOM_LEFT)
org.jfree.chart.util.RectangleAnchor.BOTTOM_RIGHT == orig(org.jfree.chart.util.RectangleAnchor.BOTTOM_RIGHT)
org.jfree.chart.util.RectangleAnchor.LEFT == orig(org.jfree.chart.util.RectangleAnchor.LEFT)
org.jfree.chart.util.RectangleAnchor.RIGHT == orig(org.jfree.chart.util.RectangleAnchor.RIGHT)
marker.labelAnchor.name == orig(marker.labelAnchor.name)
marker.labelAnchor.name.toString == orig(marker.labelAnchor.name.toString)
marker.labelTextAnchor == orig(marker.labelTextAnchor)
org.jfree.chart.text.TextAnchor.TOP_LEFT == orig(org.jfree.chart.text.TextAnchor.TOP_LEFT)
org.jfree.chart.text.TextAnchor.TOP_CENTER == orig(org.jfree.chart.text.TextAnchor.TOP_CENTER)
org.jfree.chart.text.TextAnchor.TOP_RIGHT == orig(org.jfree.chart.text.TextAnchor.TOP_RIGHT)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT)
org.jfree.chart.text.TextAnchor.CENTER_LEFT == orig(org.jfree.chart.text.TextAnchor.CENTER_LEFT)
org.jfree.chart.text.TextAnchor.CENTER == orig(org.jfree.chart.text.TextAnchor.CENTER)
org.jfree.chart.text.TextAnchor.CENTER_RIGHT == orig(org.jfree.chart.text.TextAnchor.CENTER_RIGHT)
org.jfree.chart.text.TextAnchor.BASELINE_LEFT == orig(org.jfree.chart.text.TextAnchor.BASELINE_LEFT)
org.jfree.chart.text.TextAnchor.BASELINE_CENTER == orig(org.jfree.chart.text.TextAnchor.BASELINE_CENTER)
org.jfree.chart.text.TextAnchor.BASELINE_RIGHT == orig(org.jfree.chart.text.TextAnchor.BASELINE_RIGHT)
org.jfree.chart.text.TextAnchor.BOTTOM_LEFT == orig(org.jfree.chart.text.TextAnchor.BOTTOM_LEFT)
org.jfree.chart.text.TextAnchor.BOTTOM_CENTER == orig(org.jfree.chart.text.TextAnchor.BOTTOM_CENTER)
org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT == orig(org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT)
marker.labelTextAnchor.name == orig(marker.labelTextAnchor.name)
marker.labelTextAnchor.name.toString == orig(marker.labelTextAnchor.name.toString)
marker.labelOffset == orig(marker.labelOffset)
marker.labelOffset.unitType == orig(marker.labelOffset.unitType)
marker.labelOffset.top == orig(marker.labelOffset.top)
marker.labelOffset.left == orig(marker.labelOffset.left)
marker.labelOffset.bottom == orig(marker.labelOffset.bottom)
marker.labelOffset.right == orig(marker.labelOffset.right)
marker.labelOffsetType == orig(marker.labelOffsetType)
org.jfree.chart.util.LengthAdjustmentType.NO_CHANGE == orig(org.jfree.chart.util.LengthAdjustmentType.NO_CHANGE)
org.jfree.chart.util.LengthAdjustmentType.EXPAND == orig(org.jfree.chart.util.LengthAdjustmentType.EXPAND)
org.jfree.chart.util.LengthAdjustmentType.CONTRACT == orig(org.jfree.chart.util.LengthAdjustmentType.CONTRACT)
marker.labelOffsetType.name == orig(marker.labelOffsetType.name)
marker.labelOffsetType.name.toString == orig(marker.labelOffsetType.name.toString)
marker.listenerList == orig(marker.listenerList)
org.jfree.chart.util.Layer.FOREGROUND == orig(org.jfree.chart.util.Layer.FOREGROUND)
org.jfree.chart.util.Layer.BACKGROUND == orig(org.jfree.chart.util.Layer.BACKGROUND)
org.jfree.chart.util.Layer.FOREGROUND.name == orig(org.jfree.chart.util.Layer.FOREGROUND.name)
org.jfree.chart.util.Layer.FOREGROUND.name.toString == orig(org.jfree.chart.util.Layer.FOREGROUND.name.toString)
org.jfree.chart.util.Layer.BACKGROUND.name == orig(org.jfree.chart.util.Layer.BACKGROUND.name)
org.jfree.chart.util.Layer.BACKGROUND.name.toString == orig(org.jfree.chart.util.Layer.BACKGROUND.name.toString)
layer.name == orig(layer.name)
layer.name.toString == orig(layer.name.toString)
this.domainAxes.size == 1
this.domainAxisLocations.objects[] has only one value, of length 8
this.domainAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.domainAxisLocations.size == 1
this.rangeAxes.size == 1
this.rangeAxisLocations.objects[] has only one value, of length 8
this.rangeAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.rangeAxisLocations.size == 1
this.datasetToDomainAxisMap.objects[].getClass().getName() == [java.lang.Integer, null, null, null, null, null, null, null]
this.datasetToDomainAxisMap.size == 1
this.datasetToRangeAxisMap.objects[].getClass().getName() == [java.lang.Integer, null, null, null, null, null, null, null]
this.datasetToRangeAxisMap.size == 1
this.renderers.size == 1
this.domainGridlinePosition has only one value
this.domainGridlineStroke has only one value
this.domainGridlinePaint has only one value
this.rangeGridlinesVisible == true
this.rangeGridlineStroke has only one value
this.rangeGridlinePaint has only one value
this.rangeCrosshairStroke == null
this.rangeCrosshairPaint == null
this.annotations == null
marker.paint.getClass().getName() == java.awt.Color.class
marker.stroke.getClass().getName() == java.awt.BasicStroke.class
marker.outlinePaint.getClass().getName() == java.awt.Color.class
marker.outlineStroke.getClass().getName() == java.awt.BasicStroke.class
marker.alpha == 0.6
marker.label == null
marker.labelPaint has only one value
marker.labelPaint.getClass().getName() == java.awt.Color.class
marker.labelAnchor has only one value
org.jfree.chart.util.RectangleAnchor.CENTER has only one value
org.jfree.chart.util.RectangleAnchor.TOP has only one value
org.jfree.chart.util.RectangleAnchor.TOP_LEFT has only one value
org.jfree.chart.util.RectangleAnchor.TOP_RIGHT has only one value
org.jfree.chart.util.RectangleAnchor.BOTTOM has only one value
org.jfree.chart.util.RectangleAnchor.BOTTOM_LEFT has only one value
org.jfree.chart.util.RectangleAnchor.BOTTOM_RIGHT has only one value
org.jfree.chart.util.RectangleAnchor.LEFT has only one value
org.jfree.chart.util.RectangleAnchor.RIGHT has only one value
marker.labelAnchor.name has only one value
marker.labelAnchor.name.toString == "RectangleAnchor.TOP_LEFT"
marker.labelTextAnchor has only one value
org.jfree.chart.text.TextAnchor.TOP_LEFT has only one value
org.jfree.chart.text.TextAnchor.TOP_CENTER has only one value
org.jfree.chart.text.TextAnchor.TOP_RIGHT has only one value
org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT has only one value
org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER has only one value
org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT has only one value
org.jfree.chart.text.TextAnchor.CENTER_LEFT has only one value
org.jfree.chart.text.TextAnchor.CENTER has only one value
org.jfree.chart.text.TextAnchor.CENTER_RIGHT has only one value
org.jfree.chart.text.TextAnchor.BASELINE_LEFT has only one value
org.jfree.chart.text.TextAnchor.BASELINE_CENTER has only one value
org.jfree.chart.text.TextAnchor.BASELINE_RIGHT has only one value
org.jfree.chart.text.TextAnchor.BOTTOM_LEFT has only one value
org.jfree.chart.text.TextAnchor.BOTTOM_CENTER has only one value
org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT has only one value
marker.labelTextAnchor.name has only one value
marker.labelTextAnchor.name.toString == "TextAnchor.CENTER"
marker.labelOffset.unitType has only one value
marker.labelOffset.top == 3.0
marker.labelOffset.left == 3.0
marker.labelOffset.bottom == 3.0
marker.labelOffset.right == 3.0
marker.labelOffsetType has only one value
org.jfree.chart.util.LengthAdjustmentType.NO_CHANGE has only one value
org.jfree.chart.util.LengthAdjustmentType.EXPAND has only one value
org.jfree.chart.util.LengthAdjustmentType.CONTRACT has only one value
marker.labelOffsetType.name has only one value
marker.labelOffsetType.name.toString == "CONTRACT"
org.jfree.chart.plot.Marker.class$org$jfree$chart$event$MarkerChangeListener has only one value
org.jfree.chart.util.Layer.FOREGROUND has only one value
org.jfree.chart.util.Layer.BACKGROUND has only one value
org.jfree.chart.util.Layer.FOREGROUND.name has only one value
org.jfree.chart.util.Layer.FOREGROUND.name.toString == "Layer.FOREGROUND"
org.jfree.chart.util.Layer.BACKGROUND.name has only one value
org.jfree.chart.util.Layer.BACKGROUND.name.toString == "Layer.BACKGROUND"
layer.name has only one value
layer.name.toString == "Layer.BACKGROUND"
===========================================================================
org.jfree.chart.plot.CategoryPlot.addRangeMarker(org.jfree.chart.plot.Marker, org.jfree.chart.util.Layer):::ENTER
this.domainAxes.size == 1
this.domainAxisLocations.objects[] has only one value, of length 8
this.domainAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.domainAxisLocations.size == 1
this.rangeAxes.size == 1
this.rangeAxisLocations.objects[] has only one value, of length 8
this.rangeAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.rangeAxisLocations.size == 1
this.datasetToDomainAxisMap.objects[].getClass().getName() == [java.lang.Integer, null, null, null, null, null, null, null]
this.datasetToDomainAxisMap.size == 1
this.datasetToRangeAxisMap.objects[].getClass().getName() == [java.lang.Integer, null, null, null, null, null, null, null]
this.datasetToRangeAxisMap.size == 1
this.renderers.size == 1
this.domainGridlinePosition has only one value
this.domainGridlineStroke has only one value
this.domainGridlinePaint has only one value
this.rangeGridlinesVisible == true
this.rangeGridlineStroke has only one value
this.rangeGridlinePaint has only one value
this.rangeCrosshairStroke == null
this.rangeCrosshairPaint == null
this.annotations == null
marker.getClass().getName() == org.jfree.chart.plot.ValueMarker.class
marker.paint.getClass().getName() == java.awt.Color.class
marker.stroke.getClass().getName() == java.awt.BasicStroke.class
marker.outlinePaint.getClass().getName() == java.awt.Color.class
marker.outlineStroke.getClass().getName() == java.awt.BasicStroke.class
marker.alpha == 0.6
marker.label == null
marker.labelPaint has only one value
marker.labelPaint.getClass().getName() == java.awt.Color.class
marker.labelAnchor has only one value
org.jfree.chart.util.RectangleAnchor.CENTER has only one value
org.jfree.chart.util.RectangleAnchor.TOP has only one value
org.jfree.chart.util.RectangleAnchor.TOP_LEFT has only one value
org.jfree.chart.util.RectangleAnchor.TOP_RIGHT has only one value
org.jfree.chart.util.RectangleAnchor.BOTTOM has only one value
org.jfree.chart.util.RectangleAnchor.BOTTOM_LEFT has only one value
org.jfree.chart.util.RectangleAnchor.BOTTOM_RIGHT has only one value
org.jfree.chart.util.RectangleAnchor.LEFT has only one value
org.jfree.chart.util.RectangleAnchor.RIGHT has only one value
marker.labelAnchor.name has only one value
marker.labelAnchor.name.toString == "RectangleAnchor.TOP_LEFT"
marker.labelTextAnchor has only one value
org.jfree.chart.text.TextAnchor.TOP_LEFT has only one value
org.jfree.chart.text.TextAnchor.TOP_CENTER has only one value
org.jfree.chart.text.TextAnchor.TOP_RIGHT has only one value
org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT has only one value
org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER has only one value
org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT has only one value
org.jfree.chart.text.TextAnchor.CENTER_LEFT has only one value
org.jfree.chart.text.TextAnchor.CENTER has only one value
org.jfree.chart.text.TextAnchor.CENTER_RIGHT has only one value
org.jfree.chart.text.TextAnchor.BASELINE_LEFT has only one value
org.jfree.chart.text.TextAnchor.BASELINE_CENTER has only one value
org.jfree.chart.text.TextAnchor.BASELINE_RIGHT has only one value
org.jfree.chart.text.TextAnchor.BOTTOM_LEFT has only one value
org.jfree.chart.text.TextAnchor.BOTTOM_CENTER has only one value
org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT has only one value
marker.labelTextAnchor.name has only one value
marker.labelTextAnchor.name.toString == "TextAnchor.CENTER"
marker.labelOffset.unitType has only one value
marker.labelOffset.top == 3.0
marker.labelOffset.left == 3.0
marker.labelOffset.bottom == 3.0
marker.labelOffset.right == 3.0
marker.labelOffsetType has only one value
org.jfree.chart.util.LengthAdjustmentType.NO_CHANGE has only one value
org.jfree.chart.util.LengthAdjustmentType.EXPAND has only one value
org.jfree.chart.util.LengthAdjustmentType.CONTRACT has only one value
marker.labelOffsetType.name has only one value
marker.labelOffsetType.name.toString == "CONTRACT"
layer has only one value
org.jfree.chart.util.Layer.FOREGROUND has only one value
org.jfree.chart.util.Layer.BACKGROUND has only one value
org.jfree.chart.util.Layer.FOREGROUND.name has only one value
org.jfree.chart.util.Layer.FOREGROUND.name.toString == "Layer.FOREGROUND"
org.jfree.chart.util.Layer.BACKGROUND.name has only one value
org.jfree.chart.util.Layer.BACKGROUND.name.toString == "Layer.BACKGROUND"
layer.name has only one value
layer.name.toString == "Layer.BACKGROUND"
===========================================================================
org.jfree.chart.plot.CategoryPlot.addRangeMarker(org.jfree.chart.plot.Marker, org.jfree.chart.util.Layer):::EXIT
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE)
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_VALUE_LABEL_FONT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_VALUE_LABEL_FONT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT.getClass().getName())
org.jfree.chart.plot.CategoryPlot.localizationResources == orig(org.jfree.chart.plot.CategoryPlot.localizationResources)
org.jfree.chart.plot.CategoryPlot.localizationResources.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.localizationResources.getClass().getName())
this.orientation == orig(this.orientation)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL)
org.jfree.chart.plot.PlotOrientation.VERTICAL == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name.toString == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name.toString)
org.jfree.chart.plot.PlotOrientation.VERTICAL.name == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL.name)
org.jfree.chart.plot.PlotOrientation.VERTICAL.name.toString == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL.name.toString)
this.orientation.name == orig(this.orientation.name)
this.orientation.name.toString == orig(this.orientation.name.toString)
this.axisOffset == orig(this.axisOffset)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.top == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.top)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.left == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.left)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.bottom == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.bottom)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.right == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.right)
this.axisOffset.unitType == orig(this.axisOffset.unitType)
org.jfree.chart.util.UnitType.ABSOLUTE == orig(org.jfree.chart.util.UnitType.ABSOLUTE)
org.jfree.chart.util.UnitType.RELATIVE == orig(org.jfree.chart.util.UnitType.RELATIVE)
this.axisOffset.unitType.name == orig(this.axisOffset.unitType.name)
this.axisOffset.unitType.name.toString == orig(this.axisOffset.unitType.name.toString)
this.axisOffset.top == orig(this.axisOffset.top)
this.axisOffset.left == orig(this.axisOffset.left)
this.axisOffset.bottom == orig(this.axisOffset.bottom)
this.axisOffset.right == orig(this.axisOffset.right)
this.domainAxes == orig(this.domainAxes)
this.domainAxes.objects == orig(this.domainAxes.objects)
this.domainAxes.objects.getClass().getName() == orig(this.domainAxes.objects.getClass().getName())
this.domainAxes.objects[] == orig(this.domainAxes.objects[])
this.domainAxes.size == orig(this.domainAxes.size)
this.domainAxes.increment == orig(this.domainAxes.increment)
this.domainAxisLocations == orig(this.domainAxisLocations)
this.domainAxisLocations.objects == orig(this.domainAxisLocations.objects)
this.domainAxisLocations.objects.getClass().getName() == orig(this.domainAxisLocations.objects.getClass().getName())
this.domainAxisLocations.objects[] == orig(this.domainAxisLocations.objects[])
this.domainAxisLocations.size == orig(this.domainAxisLocations.size)
this.domainAxisLocations.increment == orig(this.domainAxisLocations.increment)
this.drawSharedDomainAxis == orig(this.drawSharedDomainAxis)
this.rangeAxes == orig(this.rangeAxes)
this.rangeAxes.objects == orig(this.rangeAxes.objects)
this.rangeAxes.objects.getClass().getName() == orig(this.rangeAxes.objects.getClass().getName())
this.rangeAxes.objects[] == orig(this.rangeAxes.objects[])
this.rangeAxes.size == orig(this.rangeAxes.size)
this.rangeAxes.increment == orig(this.rangeAxes.increment)
this.rangeAxisLocations == orig(this.rangeAxisLocations)
this.rangeAxisLocations.objects == orig(this.rangeAxisLocations.objects)
this.rangeAxisLocations.objects.getClass().getName() == orig(this.rangeAxisLocations.objects.getClass().getName())
this.rangeAxisLocations.objects[] == orig(this.rangeAxisLocations.objects[])
this.rangeAxisLocations.size == orig(this.rangeAxisLocations.size)
this.rangeAxisLocations.increment == orig(this.rangeAxisLocations.increment)
this.datasets == orig(this.datasets)
this.datasets.objects == orig(this.datasets.objects)
this.datasets.objects.getClass().getName() == orig(this.datasets.objects.getClass().getName())
this.datasets.objects[] == orig(this.datasets.objects[])
this.datasets.size == orig(this.datasets.size)
this.datasets.increment == orig(this.datasets.increment)
this.datasetToDomainAxisMap == orig(this.datasetToDomainAxisMap)
this.datasetToDomainAxisMap.objects == orig(this.datasetToDomainAxisMap.objects)
this.datasetToDomainAxisMap.objects.getClass().getName() == orig(this.datasetToDomainAxisMap.objects.getClass().getName())
this.datasetToDomainAxisMap.objects[] == orig(this.datasetToDomainAxisMap.objects[])
this.datasetToDomainAxisMap.size == orig(this.datasetToDomainAxisMap.size)
this.datasetToDomainAxisMap.increment == orig(this.datasetToDomainAxisMap.increment)
this.datasetToRangeAxisMap == orig(this.datasetToRangeAxisMap)
this.datasetToRangeAxisMap.objects == orig(this.datasetToRangeAxisMap.objects)
this.datasetToRangeAxisMap.objects.getClass().getName() == orig(this.datasetToRangeAxisMap.objects.getClass().getName())
this.datasetToRangeAxisMap.objects[] == orig(this.datasetToRangeAxisMap.objects[])
this.datasetToRangeAxisMap.size == orig(this.datasetToRangeAxisMap.size)
this.datasetToRangeAxisMap.increment == orig(this.datasetToRangeAxisMap.increment)
this.renderers == orig(this.renderers)
this.renderers.objects == orig(this.renderers.objects)
this.renderers.objects.getClass().getName() == orig(this.renderers.objects.getClass().getName())
this.renderers.objects[] == orig(this.renderers.objects[])
this.renderers.size == orig(this.renderers.size)
this.renderers.increment == orig(this.renderers.increment)
this.renderingOrder == orig(this.renderingOrder)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name.toString == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name.toString)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name.toString == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name.toString)
this.renderingOrder.name == orig(this.renderingOrder.name)
this.renderingOrder.name.toString == orig(this.renderingOrder.name.toString)
this.columnRenderingOrder == orig(this.columnRenderingOrder)
org.jfree.chart.util.SortOrder.ASCENDING == orig(org.jfree.chart.util.SortOrder.ASCENDING)
org.jfree.chart.util.SortOrder.DESCENDING == orig(org.jfree.chart.util.SortOrder.DESCENDING)
org.jfree.chart.util.SortOrder.ASCENDING.name == orig(org.jfree.chart.util.SortOrder.ASCENDING.name)
org.jfree.chart.util.SortOrder.ASCENDING.name.toString == orig(org.jfree.chart.util.SortOrder.ASCENDING.name.toString)
org.jfree.chart.util.SortOrder.DESCENDING.name == orig(org.jfree.chart.util.SortOrder.DESCENDING.name)
org.jfree.chart.util.SortOrder.DESCENDING.name.toString == orig(org.jfree.chart.util.SortOrder.DESCENDING.name.toString)
this.columnRenderingOrder.name == orig(this.columnRenderingOrder.name)
this.columnRenderingOrder.name.toString == orig(this.columnRenderingOrder.name.toString)
this.rowRenderingOrder == orig(this.rowRenderingOrder)
this.rowRenderingOrder.name == orig(this.rowRenderingOrder.name)
this.rowRenderingOrder.name.toString == orig(this.rowRenderingOrder.name.toString)
this.domainGridlinesVisible == orig(this.domainGridlinesVisible)
this.domainGridlinePosition == orig(this.domainGridlinePosition)
org.jfree.chart.axis.CategoryAnchor.START == orig(org.jfree.chart.axis.CategoryAnchor.START)
org.jfree.chart.axis.CategoryAnchor.MIDDLE == orig(org.jfree.chart.axis.CategoryAnchor.MIDDLE)
org.jfree.chart.axis.CategoryAnchor.END == orig(org.jfree.chart.axis.CategoryAnchor.END)
org.jfree.chart.axis.CategoryAnchor.START.name == orig(org.jfree.chart.axis.CategoryAnchor.START.name)
org.jfree.chart.axis.CategoryAnchor.START.name.toString == orig(org.jfree.chart.axis.CategoryAnchor.START.name.toString)
org.jfree.chart.axis.CategoryAnchor.MIDDLE.name == orig(org.jfree.chart.axis.CategoryAnchor.MIDDLE.name)
org.jfree.chart.axis.CategoryAnchor.MIDDLE.name.toString == orig(org.jfree.chart.axis.CategoryAnchor.MIDDLE.name.toString)
org.jfree.chart.axis.CategoryAnchor.END.name == orig(org.jfree.chart.axis.CategoryAnchor.END.name)
org.jfree.chart.axis.CategoryAnchor.END.name.toString == orig(org.jfree.chart.axis.CategoryAnchor.END.name.toString)
this.domainGridlinePosition.name == orig(this.domainGridlinePosition.name)
this.domainGridlinePosition.name.toString == orig(this.domainGridlinePosition.name.toString)
this.domainGridlineStroke == orig(this.domainGridlineStroke)
this.domainGridlineStroke.getClass().getName() == orig(this.domainGridlineStroke.getClass().getName())
this.domainGridlinePaint == orig(this.domainGridlinePaint)
this.domainGridlinePaint.getClass().getName() == orig(this.domainGridlinePaint.getClass().getName())
this.rangeGridlinesVisible == orig(this.rangeGridlinesVisible)
this.rangeGridlineStroke == orig(this.rangeGridlineStroke)
this.rangeGridlineStroke.getClass().getName() == orig(this.rangeGridlineStroke.getClass().getName())
this.rangeGridlinePaint == orig(this.rangeGridlinePaint)
this.rangeGridlinePaint.getClass().getName() == orig(this.rangeGridlinePaint.getClass().getName())
this.anchorValue == orig(this.anchorValue)
this.rangeCrosshairVisible == orig(this.rangeCrosshairVisible)
this.rangeCrosshairValue == orig(this.rangeCrosshairValue)
this.rangeCrosshairStroke == orig(this.rangeCrosshairStroke)
this.rangeCrosshairPaint == orig(this.rangeCrosshairPaint)
this.rangeCrosshairLockedOnData == orig(this.rangeCrosshairLockedOnData)
this.foregroundDomainMarkers == orig(this.foregroundDomainMarkers)
this.foregroundDomainMarkers.getClass().getName() == orig(this.foregroundDomainMarkers.getClass().getName())
this.backgroundDomainMarkers == orig(this.backgroundDomainMarkers)
this.backgroundDomainMarkers.getClass().getName() == orig(this.backgroundDomainMarkers.getClass().getName())
this.foregroundRangeMarkers == orig(this.foregroundRangeMarkers)
this.foregroundRangeMarkers.getClass().getName() == orig(this.foregroundRangeMarkers.getClass().getName())
this.backgroundRangeMarkers == orig(this.backgroundRangeMarkers)
this.backgroundRangeMarkers.getClass().getName() == orig(this.backgroundRangeMarkers.getClass().getName())
this.annotations == orig(this.annotations)
this.weight == orig(this.weight)
this.fixedDomainAxisSpace == orig(this.fixedDomainAxisSpace)
this.fixedRangeAxisSpace == orig(this.fixedRangeAxisSpace)
this.fixedLegendItems == orig(this.fixedLegendItems)
org.jfree.chart.plot.Plot.ZERO == orig(org.jfree.chart.plot.Plot.ZERO)
org.jfree.chart.plot.Plot.ZERO.getClass().getName() == orig(org.jfree.chart.plot.Plot.ZERO.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_INSETS == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name.toString == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name.toString)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.top == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.top)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.left == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.left)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.right == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.right)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName())
this.parent == orig(this.parent)
org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener == orig(org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener)
this.datasetGroup == orig(this.datasetGroup)
this.noDataMessage == orig(this.noDataMessage)
this.noDataMessageFont == orig(this.noDataMessageFont)
this.noDataMessagePaint == orig(this.noDataMessagePaint)
this.noDataMessagePaint.getClass().getName() == orig(this.noDataMessagePaint.getClass().getName())
this.insets == orig(this.insets)
this.insets.unitType == orig(this.insets.unitType)
this.insets.unitType.name == orig(this.insets.unitType.name)
this.insets.unitType.name.toString == orig(this.insets.unitType.name.toString)
this.insets.top == orig(this.insets.top)
this.insets.left == orig(this.insets.left)
this.insets.bottom == orig(this.insets.bottom)
this.insets.right == orig(this.insets.right)
this.outlineVisible == orig(this.outlineVisible)
this.outlineStroke == orig(this.outlineStroke)
this.outlineStroke.getClass().getName() == orig(this.outlineStroke.getClass().getName())
this.outlinePaint == orig(this.outlinePaint)
this.outlinePaint.getClass().getName() == orig(this.outlinePaint.getClass().getName())
this.backgroundPaint == orig(this.backgroundPaint)
this.backgroundPaint.getClass().getName() == orig(this.backgroundPaint.getClass().getName())
this.backgroundImage == orig(this.backgroundImage)
this.backgroundImageAlignment == orig(this.backgroundImageAlignment)
this.backgroundImageAlpha == orig(this.backgroundImageAlpha)
this.foregroundAlpha == orig(this.foregroundAlpha)
this.backgroundAlpha == orig(this.backgroundAlpha)
this.drawingSupplier == orig(this.drawingSupplier)
this.drawingSupplier.getClass().getName() == orig(this.drawingSupplier.getClass().getName())
this.listenerList == orig(this.listenerList)
marker.paint == orig(marker.paint)
marker.paint.getClass().getName() == orig(marker.paint.getClass().getName())
marker.stroke == orig(marker.stroke)
marker.stroke.getClass().getName() == orig(marker.stroke.getClass().getName())
marker.outlinePaint == orig(marker.outlinePaint)
marker.outlinePaint.getClass().getName() == orig(marker.outlinePaint.getClass().getName())
marker.outlineStroke == orig(marker.outlineStroke)
marker.outlineStroke.getClass().getName() == orig(marker.outlineStroke.getClass().getName())
marker.alpha == orig(marker.alpha)
marker.label == orig(marker.label)
marker.labelFont == orig(marker.labelFont)
marker.labelPaint == orig(marker.labelPaint)
marker.labelPaint.getClass().getName() == orig(marker.labelPaint.getClass().getName())
marker.labelAnchor == orig(marker.labelAnchor)
org.jfree.chart.util.RectangleAnchor.CENTER == orig(org.jfree.chart.util.RectangleAnchor.CENTER)
org.jfree.chart.util.RectangleAnchor.TOP == orig(org.jfree.chart.util.RectangleAnchor.TOP)
org.jfree.chart.util.RectangleAnchor.TOP_LEFT == orig(org.jfree.chart.util.RectangleAnchor.TOP_LEFT)
org.jfree.chart.util.RectangleAnchor.TOP_RIGHT == orig(org.jfree.chart.util.RectangleAnchor.TOP_RIGHT)
org.jfree.chart.util.RectangleAnchor.BOTTOM == orig(org.jfree.chart.util.RectangleAnchor.BOTTOM)
org.jfree.chart.util.RectangleAnchor.BOTTOM_LEFT == orig(org.jfree.chart.util.RectangleAnchor.BOTTOM_LEFT)
org.jfree.chart.util.RectangleAnchor.BOTTOM_RIGHT == orig(org.jfree.chart.util.RectangleAnchor.BOTTOM_RIGHT)
org.jfree.chart.util.RectangleAnchor.LEFT == orig(org.jfree.chart.util.RectangleAnchor.LEFT)
org.jfree.chart.util.RectangleAnchor.RIGHT == orig(org.jfree.chart.util.RectangleAnchor.RIGHT)
marker.labelAnchor.name == orig(marker.labelAnchor.name)
marker.labelAnchor.name.toString == orig(marker.labelAnchor.name.toString)
marker.labelTextAnchor == orig(marker.labelTextAnchor)
org.jfree.chart.text.TextAnchor.TOP_LEFT == orig(org.jfree.chart.text.TextAnchor.TOP_LEFT)
org.jfree.chart.text.TextAnchor.TOP_CENTER == orig(org.jfree.chart.text.TextAnchor.TOP_CENTER)
org.jfree.chart.text.TextAnchor.TOP_RIGHT == orig(org.jfree.chart.text.TextAnchor.TOP_RIGHT)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT)
org.jfree.chart.text.TextAnchor.CENTER_LEFT == orig(org.jfree.chart.text.TextAnchor.CENTER_LEFT)
org.jfree.chart.text.TextAnchor.CENTER == orig(org.jfree.chart.text.TextAnchor.CENTER)
org.jfree.chart.text.TextAnchor.CENTER_RIGHT == orig(org.jfree.chart.text.TextAnchor.CENTER_RIGHT)
org.jfree.chart.text.TextAnchor.BASELINE_LEFT == orig(org.jfree.chart.text.TextAnchor.BASELINE_LEFT)
org.jfree.chart.text.TextAnchor.BASELINE_CENTER == orig(org.jfree.chart.text.TextAnchor.BASELINE_CENTER)
org.jfree.chart.text.TextAnchor.BASELINE_RIGHT == orig(org.jfree.chart.text.TextAnchor.BASELINE_RIGHT)
org.jfree.chart.text.TextAnchor.BOTTOM_LEFT == orig(org.jfree.chart.text.TextAnchor.BOTTOM_LEFT)
org.jfree.chart.text.TextAnchor.BOTTOM_CENTER == orig(org.jfree.chart.text.TextAnchor.BOTTOM_CENTER)
org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT == orig(org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT)
marker.labelTextAnchor.name == orig(marker.labelTextAnchor.name)
marker.labelTextAnchor.name.toString == orig(marker.labelTextAnchor.name.toString)
marker.labelOffset == orig(marker.labelOffset)
marker.labelOffset.unitType == orig(marker.labelOffset.unitType)
marker.labelOffset.top == orig(marker.labelOffset.top)
marker.labelOffset.left == orig(marker.labelOffset.left)
marker.labelOffset.bottom == orig(marker.labelOffset.bottom)
marker.labelOffset.right == orig(marker.labelOffset.right)
marker.labelOffsetType == orig(marker.labelOffsetType)
org.jfree.chart.util.LengthAdjustmentType.NO_CHANGE == orig(org.jfree.chart.util.LengthAdjustmentType.NO_CHANGE)
org.jfree.chart.util.LengthAdjustmentType.EXPAND == orig(org.jfree.chart.util.LengthAdjustmentType.EXPAND)
org.jfree.chart.util.LengthAdjustmentType.CONTRACT == orig(org.jfree.chart.util.LengthAdjustmentType.CONTRACT)
marker.labelOffsetType.name == orig(marker.labelOffsetType.name)
marker.labelOffsetType.name.toString == orig(marker.labelOffsetType.name.toString)
marker.listenerList == orig(marker.listenerList)
org.jfree.chart.util.Layer.FOREGROUND == orig(org.jfree.chart.util.Layer.FOREGROUND)
org.jfree.chart.util.Layer.BACKGROUND == orig(org.jfree.chart.util.Layer.BACKGROUND)
org.jfree.chart.util.Layer.FOREGROUND.name == orig(org.jfree.chart.util.Layer.FOREGROUND.name)
org.jfree.chart.util.Layer.FOREGROUND.name.toString == orig(org.jfree.chart.util.Layer.FOREGROUND.name.toString)
org.jfree.chart.util.Layer.BACKGROUND.name == orig(org.jfree.chart.util.Layer.BACKGROUND.name)
org.jfree.chart.util.Layer.BACKGROUND.name.toString == orig(org.jfree.chart.util.Layer.BACKGROUND.name.toString)
layer.name == orig(layer.name)
layer.name.toString == orig(layer.name.toString)
this.domainAxes.size == 1
this.domainAxisLocations.objects[] has only one value, of length 8
this.domainAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.domainAxisLocations.size == 1
this.rangeAxes.size == 1
this.rangeAxisLocations.objects[] has only one value, of length 8
this.rangeAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.rangeAxisLocations.size == 1
this.datasetToDomainAxisMap.objects[].getClass().getName() == [java.lang.Integer, null, null, null, null, null, null, null]
this.datasetToDomainAxisMap.size == 1
this.datasetToRangeAxisMap.objects[].getClass().getName() == [java.lang.Integer, null, null, null, null, null, null, null]
this.datasetToRangeAxisMap.size == 1
this.renderers.size == 1
this.domainGridlinePosition has only one value
this.domainGridlineStroke has only one value
this.domainGridlinePaint has only one value
this.rangeGridlinesVisible == true
this.rangeGridlineStroke has only one value
this.rangeGridlinePaint has only one value
this.rangeCrosshairStroke == null
this.rangeCrosshairPaint == null
this.annotations == null
marker.paint.getClass().getName() == java.awt.Color.class
marker.stroke.getClass().getName() == java.awt.BasicStroke.class
marker.outlinePaint.getClass().getName() == java.awt.Color.class
marker.outlineStroke.getClass().getName() == java.awt.BasicStroke.class
marker.alpha == 0.6
marker.label == null
marker.labelPaint has only one value
marker.labelPaint.getClass().getName() == java.awt.Color.class
marker.labelAnchor has only one value
org.jfree.chart.util.RectangleAnchor.CENTER has only one value
org.jfree.chart.util.RectangleAnchor.TOP has only one value
org.jfree.chart.util.RectangleAnchor.TOP_LEFT has only one value
org.jfree.chart.util.RectangleAnchor.TOP_RIGHT has only one value
org.jfree.chart.util.RectangleAnchor.BOTTOM has only one value
org.jfree.chart.util.RectangleAnchor.BOTTOM_LEFT has only one value
org.jfree.chart.util.RectangleAnchor.BOTTOM_RIGHT has only one value
org.jfree.chart.util.RectangleAnchor.LEFT has only one value
org.jfree.chart.util.RectangleAnchor.RIGHT has only one value
marker.labelAnchor.name has only one value
marker.labelAnchor.name.toString == "RectangleAnchor.TOP_LEFT"
marker.labelTextAnchor has only one value
org.jfree.chart.text.TextAnchor.TOP_LEFT has only one value
org.jfree.chart.text.TextAnchor.TOP_CENTER has only one value
org.jfree.chart.text.TextAnchor.TOP_RIGHT has only one value
org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT has only one value
org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER has only one value
org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT has only one value
org.jfree.chart.text.TextAnchor.CENTER_LEFT has only one value
org.jfree.chart.text.TextAnchor.CENTER has only one value
org.jfree.chart.text.TextAnchor.CENTER_RIGHT has only one value
org.jfree.chart.text.TextAnchor.BASELINE_LEFT has only one value
org.jfree.chart.text.TextAnchor.BASELINE_CENTER has only one value
org.jfree.chart.text.TextAnchor.BASELINE_RIGHT has only one value
org.jfree.chart.text.TextAnchor.BOTTOM_LEFT has only one value
org.jfree.chart.text.TextAnchor.BOTTOM_CENTER has only one value
org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT has only one value
marker.labelTextAnchor.name has only one value
marker.labelTextAnchor.name.toString == "TextAnchor.CENTER"
marker.labelOffset.unitType has only one value
marker.labelOffset.top == 3.0
marker.labelOffset.left == 3.0
marker.labelOffset.bottom == 3.0
marker.labelOffset.right == 3.0
marker.labelOffsetType has only one value
org.jfree.chart.util.LengthAdjustmentType.NO_CHANGE has only one value
org.jfree.chart.util.LengthAdjustmentType.EXPAND has only one value
org.jfree.chart.util.LengthAdjustmentType.CONTRACT has only one value
marker.labelOffsetType.name has only one value
marker.labelOffsetType.name.toString == "CONTRACT"
org.jfree.chart.plot.Marker.class$org$jfree$chart$event$MarkerChangeListener has only one value
org.jfree.chart.util.Layer.FOREGROUND has only one value
org.jfree.chart.util.Layer.BACKGROUND has only one value
org.jfree.chart.util.Layer.FOREGROUND.name has only one value
org.jfree.chart.util.Layer.FOREGROUND.name.toString == "Layer.FOREGROUND"
org.jfree.chart.util.Layer.BACKGROUND.name has only one value
org.jfree.chart.util.Layer.BACKGROUND.name.toString == "Layer.BACKGROUND"
layer.name has only one value
layer.name.toString == "Layer.BACKGROUND"
===========================================================================
org.jfree.chart.plot.CategoryPlot.configureDomainAxes():::ENTER
this.domainAxes.size == 1
this.domainAxisLocations.objects[] has only one value, of length 8
this.domainAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.domainAxisLocations.size == 1
this.rangeAxes.size == 1
this.rangeAxisLocations.objects[] has only one value, of length 8
this.rangeAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.rangeAxisLocations.size == 1
this.datasetToDomainAxisMap.objects[].getClass().getName() == [java.lang.Integer, null, null, null, null, null, null, null]
this.datasetToDomainAxisMap.size == 1
this.datasetToRangeAxisMap.objects[].getClass().getName() == [java.lang.Integer, null, null, null, null, null, null, null]
this.datasetToRangeAxisMap.size == 1
this.renderers.size == 1
this.domainGridlinePosition == null
this.domainGridlineStroke == null
this.domainGridlinePaint == null
this.rangeGridlinesVisible == false
this.rangeGridlineStroke == null
this.rangeGridlinePaint == null
this.rangeCrosshairStroke == null
this.rangeCrosshairPaint == null
this.foregroundDomainMarkers == null
this.backgroundDomainMarkers == null
this.foregroundRangeMarkers == null
this.backgroundRangeMarkers == null
this.annotations == null
===========================================================================
org.jfree.chart.plot.CategoryPlot.configureDomainAxes():::EXIT
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE)
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_VALUE_LABEL_FONT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_VALUE_LABEL_FONT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT.getClass().getName())
org.jfree.chart.plot.CategoryPlot.localizationResources == orig(org.jfree.chart.plot.CategoryPlot.localizationResources)
org.jfree.chart.plot.CategoryPlot.localizationResources.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.localizationResources.getClass().getName())
this.orientation == orig(this.orientation)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL)
org.jfree.chart.plot.PlotOrientation.VERTICAL == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name.toString == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name.toString)
org.jfree.chart.plot.PlotOrientation.VERTICAL.name == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL.name)
org.jfree.chart.plot.PlotOrientation.VERTICAL.name.toString == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL.name.toString)
this.orientation.name == orig(this.orientation.name)
this.orientation.name.toString == orig(this.orientation.name.toString)
this.axisOffset == orig(this.axisOffset)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.top == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.top)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.left == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.left)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.bottom == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.bottom)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.right == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.right)
this.axisOffset.unitType == orig(this.axisOffset.unitType)
org.jfree.chart.util.UnitType.ABSOLUTE == orig(org.jfree.chart.util.UnitType.ABSOLUTE)
org.jfree.chart.util.UnitType.RELATIVE == orig(org.jfree.chart.util.UnitType.RELATIVE)
this.axisOffset.unitType.name == orig(this.axisOffset.unitType.name)
this.axisOffset.unitType.name.toString == orig(this.axisOffset.unitType.name.toString)
this.axisOffset.top == orig(this.axisOffset.top)
this.axisOffset.left == orig(this.axisOffset.left)
this.axisOffset.bottom == orig(this.axisOffset.bottom)
this.axisOffset.right == orig(this.axisOffset.right)
this.domainAxes == orig(this.domainAxes)
this.domainAxes.objects == orig(this.domainAxes.objects)
this.domainAxes.objects.getClass().getName() == orig(this.domainAxes.objects.getClass().getName())
this.domainAxes.objects[] == orig(this.domainAxes.objects[])
this.domainAxes.size == orig(this.domainAxes.size)
this.domainAxes.increment == orig(this.domainAxes.increment)
this.domainAxisLocations == orig(this.domainAxisLocations)
this.domainAxisLocations.objects == orig(this.domainAxisLocations.objects)
this.domainAxisLocations.objects.getClass().getName() == orig(this.domainAxisLocations.objects.getClass().getName())
this.domainAxisLocations.objects[] == orig(this.domainAxisLocations.objects[])
this.domainAxisLocations.size == orig(this.domainAxisLocations.size)
this.domainAxisLocations.increment == orig(this.domainAxisLocations.increment)
this.drawSharedDomainAxis == orig(this.drawSharedDomainAxis)
this.rangeAxes == orig(this.rangeAxes)
this.rangeAxes.objects == orig(this.rangeAxes.objects)
this.rangeAxes.objects.getClass().getName() == orig(this.rangeAxes.objects.getClass().getName())
this.rangeAxes.objects[] == orig(this.rangeAxes.objects[])
this.rangeAxes.size == orig(this.rangeAxes.size)
this.rangeAxes.increment == orig(this.rangeAxes.increment)
this.rangeAxisLocations == orig(this.rangeAxisLocations)
this.rangeAxisLocations.objects == orig(this.rangeAxisLocations.objects)
this.rangeAxisLocations.objects.getClass().getName() == orig(this.rangeAxisLocations.objects.getClass().getName())
this.rangeAxisLocations.objects[] == orig(this.rangeAxisLocations.objects[])
this.rangeAxisLocations.size == orig(this.rangeAxisLocations.size)
this.rangeAxisLocations.increment == orig(this.rangeAxisLocations.increment)
this.datasets == orig(this.datasets)
this.datasets.objects == orig(this.datasets.objects)
this.datasets.objects.getClass().getName() == orig(this.datasets.objects.getClass().getName())
this.datasets.objects[] == orig(this.datasets.objects[])
this.datasets.size == orig(this.datasets.size)
this.datasets.increment == orig(this.datasets.increment)
this.datasetToDomainAxisMap == orig(this.datasetToDomainAxisMap)
this.datasetToDomainAxisMap.objects == orig(this.datasetToDomainAxisMap.objects)
this.datasetToDomainAxisMap.objects.getClass().getName() == orig(this.datasetToDomainAxisMap.objects.getClass().getName())
this.datasetToDomainAxisMap.objects[] == orig(this.datasetToDomainAxisMap.objects[])
this.datasetToDomainAxisMap.size == orig(this.datasetToDomainAxisMap.size)
this.datasetToDomainAxisMap.increment == orig(this.datasetToDomainAxisMap.increment)
this.datasetToRangeAxisMap == orig(this.datasetToRangeAxisMap)
this.datasetToRangeAxisMap.objects == orig(this.datasetToRangeAxisMap.objects)
this.datasetToRangeAxisMap.objects.getClass().getName() == orig(this.datasetToRangeAxisMap.objects.getClass().getName())
this.datasetToRangeAxisMap.objects[] == orig(this.datasetToRangeAxisMap.objects[])
this.datasetToRangeAxisMap.size == orig(this.datasetToRangeAxisMap.size)
this.datasetToRangeAxisMap.increment == orig(this.datasetToRangeAxisMap.increment)
this.renderers == orig(this.renderers)
this.renderers.objects == orig(this.renderers.objects)
this.renderers.objects.getClass().getName() == orig(this.renderers.objects.getClass().getName())
this.renderers.objects[] == orig(this.renderers.objects[])
this.renderers.size == orig(this.renderers.size)
this.renderers.increment == orig(this.renderers.increment)
this.renderingOrder == orig(this.renderingOrder)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name.toString == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name.toString)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name.toString == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name.toString)
this.renderingOrder.name == orig(this.renderingOrder.name)
this.renderingOrder.name.toString == orig(this.renderingOrder.name.toString)
this.columnRenderingOrder == orig(this.columnRenderingOrder)
org.jfree.chart.util.SortOrder.ASCENDING == orig(org.jfree.chart.util.SortOrder.ASCENDING)
org.jfree.chart.util.SortOrder.DESCENDING == orig(org.jfree.chart.util.SortOrder.DESCENDING)
org.jfree.chart.util.SortOrder.ASCENDING.name == orig(org.jfree.chart.util.SortOrder.ASCENDING.name)
org.jfree.chart.util.SortOrder.ASCENDING.name.toString == orig(org.jfree.chart.util.SortOrder.ASCENDING.name.toString)
org.jfree.chart.util.SortOrder.DESCENDING.name == orig(org.jfree.chart.util.SortOrder.DESCENDING.name)
org.jfree.chart.util.SortOrder.DESCENDING.name.toString == orig(org.jfree.chart.util.SortOrder.DESCENDING.name.toString)
this.columnRenderingOrder.name == orig(this.columnRenderingOrder.name)
this.columnRenderingOrder.name.toString == orig(this.columnRenderingOrder.name.toString)
this.rowRenderingOrder == orig(this.rowRenderingOrder)
this.rowRenderingOrder.name == orig(this.rowRenderingOrder.name)
this.rowRenderingOrder.name.toString == orig(this.rowRenderingOrder.name.toString)
this.domainGridlinesVisible == orig(this.domainGridlinesVisible)
this.domainGridlinePosition == orig(this.domainGridlinePosition)
org.jfree.chart.axis.CategoryAnchor.START == orig(org.jfree.chart.axis.CategoryAnchor.START)
org.jfree.chart.axis.CategoryAnchor.MIDDLE == orig(org.jfree.chart.axis.CategoryAnchor.MIDDLE)
org.jfree.chart.axis.CategoryAnchor.END == orig(org.jfree.chart.axis.CategoryAnchor.END)
org.jfree.chart.axis.CategoryAnchor.START.name == orig(org.jfree.chart.axis.CategoryAnchor.START.name)
org.jfree.chart.axis.CategoryAnchor.START.name.toString == orig(org.jfree.chart.axis.CategoryAnchor.START.name.toString)
org.jfree.chart.axis.CategoryAnchor.MIDDLE.name == orig(org.jfree.chart.axis.CategoryAnchor.MIDDLE.name)
org.jfree.chart.axis.CategoryAnchor.MIDDLE.name.toString == orig(org.jfree.chart.axis.CategoryAnchor.MIDDLE.name.toString)
org.jfree.chart.axis.CategoryAnchor.END.name == orig(org.jfree.chart.axis.CategoryAnchor.END.name)
org.jfree.chart.axis.CategoryAnchor.END.name.toString == orig(org.jfree.chart.axis.CategoryAnchor.END.name.toString)
this.domainGridlineStroke == orig(this.domainGridlineStroke)
this.domainGridlinePaint == orig(this.domainGridlinePaint)
this.rangeGridlinesVisible == orig(this.rangeGridlinesVisible)
this.rangeGridlineStroke == orig(this.rangeGridlineStroke)
this.rangeGridlinePaint == orig(this.rangeGridlinePaint)
this.anchorValue == orig(this.anchorValue)
this.rangeCrosshairVisible == orig(this.rangeCrosshairVisible)
this.rangeCrosshairValue == orig(this.rangeCrosshairValue)
this.rangeCrosshairStroke == orig(this.rangeCrosshairStroke)
this.rangeCrosshairPaint == orig(this.rangeCrosshairPaint)
this.rangeCrosshairLockedOnData == orig(this.rangeCrosshairLockedOnData)
this.foregroundDomainMarkers == orig(this.foregroundDomainMarkers)
this.backgroundDomainMarkers == orig(this.backgroundDomainMarkers)
this.foregroundRangeMarkers == orig(this.foregroundRangeMarkers)
this.backgroundRangeMarkers == orig(this.backgroundRangeMarkers)
this.annotations == orig(this.annotations)
this.weight == orig(this.weight)
this.fixedDomainAxisSpace == orig(this.fixedDomainAxisSpace)
this.fixedRangeAxisSpace == orig(this.fixedRangeAxisSpace)
this.fixedLegendItems == orig(this.fixedLegendItems)
org.jfree.chart.plot.Plot.ZERO == orig(org.jfree.chart.plot.Plot.ZERO)
org.jfree.chart.plot.Plot.ZERO.getClass().getName() == orig(org.jfree.chart.plot.Plot.ZERO.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_INSETS == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name.toString == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name.toString)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.top == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.top)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.left == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.left)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.right == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.right)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName())
this.parent == orig(this.parent)
org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener == orig(org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener)
this.datasetGroup == orig(this.datasetGroup)
this.noDataMessage == orig(this.noDataMessage)
this.noDataMessageFont == orig(this.noDataMessageFont)
this.noDataMessagePaint == orig(this.noDataMessagePaint)
this.noDataMessagePaint.getClass().getName() == orig(this.noDataMessagePaint.getClass().getName())
this.insets == orig(this.insets)
this.insets.unitType == orig(this.insets.unitType)
this.insets.unitType.name == orig(this.insets.unitType.name)
this.insets.unitType.name.toString == orig(this.insets.unitType.name.toString)
this.insets.top == orig(this.insets.top)
this.insets.left == orig(this.insets.left)
this.insets.bottom == orig(this.insets.bottom)
this.insets.right == orig(this.insets.right)
this.outlineVisible == orig(this.outlineVisible)
this.outlineStroke == orig(this.outlineStroke)
this.outlineStroke.getClass().getName() == orig(this.outlineStroke.getClass().getName())
this.outlinePaint == orig(this.outlinePaint)
this.outlinePaint.getClass().getName() == orig(this.outlinePaint.getClass().getName())
this.backgroundPaint == orig(this.backgroundPaint)
this.backgroundPaint.getClass().getName() == orig(this.backgroundPaint.getClass().getName())
this.backgroundImage == orig(this.backgroundImage)
this.backgroundImageAlignment == orig(this.backgroundImageAlignment)
this.backgroundImageAlpha == orig(this.backgroundImageAlpha)
this.foregroundAlpha == orig(this.foregroundAlpha)
this.backgroundAlpha == orig(this.backgroundAlpha)
this.drawingSupplier == orig(this.drawingSupplier)
this.drawingSupplier.getClass().getName() == orig(this.drawingSupplier.getClass().getName())
this.listenerList == orig(this.listenerList)
this.domainAxes.size == 1
this.domainAxisLocations.objects[] has only one value, of length 8
this.domainAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.domainAxisLocations.size == 1
this.rangeAxes.size == 1
this.rangeAxisLocations.objects[] has only one value, of length 8
this.rangeAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.rangeAxisLocations.size == 1
this.datasetToDomainAxisMap.objects[].getClass().getName() == [java.lang.Integer, null, null, null, null, null, null, null]
this.datasetToDomainAxisMap.size == 1
this.datasetToRangeAxisMap.objects[].getClass().getName() == [java.lang.Integer, null, null, null, null, null, null, null]
this.datasetToRangeAxisMap.size == 1
this.renderers.size == 1
this.domainGridlinePosition == null
this.domainGridlineStroke == null
this.domainGridlinePaint == null
this.rangeGridlinesVisible == false
this.rangeGridlineStroke == null
this.rangeGridlinePaint == null
this.rangeCrosshairStroke == null
this.rangeCrosshairPaint == null
this.foregroundDomainMarkers == null
this.backgroundDomainMarkers == null
this.foregroundRangeMarkers == null
this.backgroundRangeMarkers == null
this.annotations == null
===========================================================================
org.jfree.chart.plot.CategoryPlot.configureRangeAxes():::ENTER
this.domainAxes.size == 1
this.domainAxisLocations.objects[] has only one value, of length 8
this.domainAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.domainAxisLocations.size == 1
this.rangeAxes.size == 1
this.rangeAxisLocations.objects[] has only one value, of length 8
this.rangeAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.rangeAxisLocations.size == 1
this.datasetToDomainAxisMap.objects[].getClass().getName() == [java.lang.Integer, null, null, null, null, null, null, null]
this.datasetToDomainAxisMap.size == 1
this.datasetToRangeAxisMap.objects[].getClass().getName() == [java.lang.Integer, null, null, null, null, null, null, null]
this.datasetToRangeAxisMap.size == 1
this.renderers.size == 1
this.domainGridlinePosition == null
this.domainGridlineStroke == null
this.domainGridlinePaint == null
this.rangeGridlinesVisible == false
this.rangeGridlineStroke == null
this.rangeGridlinePaint == null
this.rangeCrosshairStroke == null
this.rangeCrosshairPaint == null
this.foregroundDomainMarkers == null
this.backgroundDomainMarkers == null
this.foregroundRangeMarkers == null
this.backgroundRangeMarkers == null
this.annotations == null
===========================================================================
org.jfree.chart.plot.CategoryPlot.configureRangeAxes():::EXIT
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE)
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_VALUE_LABEL_FONT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_VALUE_LABEL_FONT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT.getClass().getName())
org.jfree.chart.plot.CategoryPlot.localizationResources == orig(org.jfree.chart.plot.CategoryPlot.localizationResources)
org.jfree.chart.plot.CategoryPlot.localizationResources.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.localizationResources.getClass().getName())
this.orientation == orig(this.orientation)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL)
org.jfree.chart.plot.PlotOrientation.VERTICAL == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name.toString == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name.toString)
org.jfree.chart.plot.PlotOrientation.VERTICAL.name == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL.name)
org.jfree.chart.plot.PlotOrientation.VERTICAL.name.toString == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL.name.toString)
this.orientation.name == orig(this.orientation.name)
this.orientation.name.toString == orig(this.orientation.name.toString)
this.axisOffset == orig(this.axisOffset)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.top == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.top)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.left == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.left)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.bottom == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.bottom)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.right == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.right)
this.axisOffset.unitType == orig(this.axisOffset.unitType)
org.jfree.chart.util.UnitType.ABSOLUTE == orig(org.jfree.chart.util.UnitType.ABSOLUTE)
org.jfree.chart.util.UnitType.RELATIVE == orig(org.jfree.chart.util.UnitType.RELATIVE)
this.axisOffset.unitType.name == orig(this.axisOffset.unitType.name)
this.axisOffset.unitType.name.toString == orig(this.axisOffset.unitType.name.toString)
this.axisOffset.top == orig(this.axisOffset.top)
this.axisOffset.left == orig(this.axisOffset.left)
this.axisOffset.bottom == orig(this.axisOffset.bottom)
this.axisOffset.right == orig(this.axisOffset.right)
this.domainAxes == orig(this.domainAxes)
this.domainAxes.objects == orig(this.domainAxes.objects)
this.domainAxes.objects.getClass().getName() == orig(this.domainAxes.objects.getClass().getName())
this.domainAxes.objects[] == orig(this.domainAxes.objects[])
this.domainAxes.size == orig(this.domainAxes.size)
this.domainAxes.increment == orig(this.domainAxes.increment)
this.domainAxisLocations == orig(this.domainAxisLocations)
this.domainAxisLocations.objects == orig(this.domainAxisLocations.objects)
this.domainAxisLocations.objects.getClass().getName() == orig(this.domainAxisLocations.objects.getClass().getName())
this.domainAxisLocations.objects[] == orig(this.domainAxisLocations.objects[])
this.domainAxisLocations.size == orig(this.domainAxisLocations.size)
this.domainAxisLocations.increment == orig(this.domainAxisLocations.increment)
this.drawSharedDomainAxis == orig(this.drawSharedDomainAxis)
this.rangeAxes == orig(this.rangeAxes)
this.rangeAxes.objects == orig(this.rangeAxes.objects)
this.rangeAxes.objects.getClass().getName() == orig(this.rangeAxes.objects.getClass().getName())
this.rangeAxes.objects[] == orig(this.rangeAxes.objects[])
this.rangeAxes.size == orig(this.rangeAxes.size)
this.rangeAxes.increment == orig(this.rangeAxes.increment)
this.rangeAxisLocations == orig(this.rangeAxisLocations)
this.rangeAxisLocations.objects == orig(this.rangeAxisLocations.objects)
this.rangeAxisLocations.objects.getClass().getName() == orig(this.rangeAxisLocations.objects.getClass().getName())
this.rangeAxisLocations.objects[] == orig(this.rangeAxisLocations.objects[])
this.rangeAxisLocations.size == orig(this.rangeAxisLocations.size)
this.rangeAxisLocations.increment == orig(this.rangeAxisLocations.increment)
this.datasets == orig(this.datasets)
this.datasets.objects == orig(this.datasets.objects)
this.datasets.objects.getClass().getName() == orig(this.datasets.objects.getClass().getName())
this.datasets.objects[] == orig(this.datasets.objects[])
this.datasets.size == orig(this.datasets.size)
this.datasets.increment == orig(this.datasets.increment)
this.datasetToDomainAxisMap == orig(this.datasetToDomainAxisMap)
this.datasetToDomainAxisMap.objects == orig(this.datasetToDomainAxisMap.objects)
this.datasetToDomainAxisMap.objects.getClass().getName() == orig(this.datasetToDomainAxisMap.objects.getClass().getName())
this.datasetToDomainAxisMap.objects[] == orig(this.datasetToDomainAxisMap.objects[])
this.datasetToDomainAxisMap.size == orig(this.datasetToDomainAxisMap.size)
this.datasetToDomainAxisMap.increment == orig(this.datasetToDomainAxisMap.increment)
this.datasetToRangeAxisMap == orig(this.datasetToRangeAxisMap)
this.datasetToRangeAxisMap.objects == orig(this.datasetToRangeAxisMap.objects)
this.datasetToRangeAxisMap.objects.getClass().getName() == orig(this.datasetToRangeAxisMap.objects.getClass().getName())
this.datasetToRangeAxisMap.objects[] == orig(this.datasetToRangeAxisMap.objects[])
this.datasetToRangeAxisMap.size == orig(this.datasetToRangeAxisMap.size)
this.datasetToRangeAxisMap.increment == orig(this.datasetToRangeAxisMap.increment)
this.renderers == orig(this.renderers)
this.renderers.objects == orig(this.renderers.objects)
this.renderers.objects.getClass().getName() == orig(this.renderers.objects.getClass().getName())
this.renderers.objects[] == orig(this.renderers.objects[])
this.renderers.size == orig(this.renderers.size)
this.renderers.increment == orig(this.renderers.increment)
this.renderingOrder == orig(this.renderingOrder)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name.toString == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name.toString)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name.toString == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name.toString)
this.renderingOrder.name == orig(this.renderingOrder.name)
this.renderingOrder.name.toString == orig(this.renderingOrder.name.toString)
this.columnRenderingOrder == orig(this.columnRenderingOrder)
org.jfree.chart.util.SortOrder.ASCENDING == orig(org.jfree.chart.util.SortOrder.ASCENDING)
org.jfree.chart.util.SortOrder.DESCENDING == orig(org.jfree.chart.util.SortOrder.DESCENDING)
org.jfree.chart.util.SortOrder.ASCENDING.name == orig(org.jfree.chart.util.SortOrder.ASCENDING.name)
org.jfree.chart.util.SortOrder.ASCENDING.name.toString == orig(org.jfree.chart.util.SortOrder.ASCENDING.name.toString)
org.jfree.chart.util.SortOrder.DESCENDING.name == orig(org.jfree.chart.util.SortOrder.DESCENDING.name)
org.jfree.chart.util.SortOrder.DESCENDING.name.toString == orig(org.jfree.chart.util.SortOrder.DESCENDING.name.toString)
this.columnRenderingOrder.name == orig(this.columnRenderingOrder.name)
this.columnRenderingOrder.name.toString == orig(this.columnRenderingOrder.name.toString)
this.rowRenderingOrder == orig(this.rowRenderingOrder)
this.rowRenderingOrder.name == orig(this.rowRenderingOrder.name)
this.rowRenderingOrder.name.toString == orig(this.rowRenderingOrder.name.toString)
this.domainGridlinesVisible == orig(this.domainGridlinesVisible)
this.domainGridlinePosition == orig(this.domainGridlinePosition)
org.jfree.chart.axis.CategoryAnchor.START == orig(org.jfree.chart.axis.CategoryAnchor.START)
org.jfree.chart.axis.CategoryAnchor.MIDDLE == orig(org.jfree.chart.axis.CategoryAnchor.MIDDLE)
org.jfree.chart.axis.CategoryAnchor.END == orig(org.jfree.chart.axis.CategoryAnchor.END)
org.jfree.chart.axis.CategoryAnchor.START.name == orig(org.jfree.chart.axis.CategoryAnchor.START.name)
org.jfree.chart.axis.CategoryAnchor.START.name.toString == orig(org.jfree.chart.axis.CategoryAnchor.START.name.toString)
org.jfree.chart.axis.CategoryAnchor.MIDDLE.name == orig(org.jfree.chart.axis.CategoryAnchor.MIDDLE.name)
org.jfree.chart.axis.CategoryAnchor.MIDDLE.name.toString == orig(org.jfree.chart.axis.CategoryAnchor.MIDDLE.name.toString)
org.jfree.chart.axis.CategoryAnchor.END.name == orig(org.jfree.chart.axis.CategoryAnchor.END.name)
org.jfree.chart.axis.CategoryAnchor.END.name.toString == orig(org.jfree.chart.axis.CategoryAnchor.END.name.toString)
this.domainGridlineStroke == orig(this.domainGridlineStroke)
this.domainGridlinePaint == orig(this.domainGridlinePaint)
this.rangeGridlinesVisible == orig(this.rangeGridlinesVisible)
this.rangeGridlineStroke == orig(this.rangeGridlineStroke)
this.rangeGridlinePaint == orig(this.rangeGridlinePaint)
this.anchorValue == orig(this.anchorValue)
this.rangeCrosshairVisible == orig(this.rangeCrosshairVisible)
this.rangeCrosshairValue == orig(this.rangeCrosshairValue)
this.rangeCrosshairStroke == orig(this.rangeCrosshairStroke)
this.rangeCrosshairPaint == orig(this.rangeCrosshairPaint)
this.rangeCrosshairLockedOnData == orig(this.rangeCrosshairLockedOnData)
this.foregroundDomainMarkers == orig(this.foregroundDomainMarkers)
this.backgroundDomainMarkers == orig(this.backgroundDomainMarkers)
this.foregroundRangeMarkers == orig(this.foregroundRangeMarkers)
this.backgroundRangeMarkers == orig(this.backgroundRangeMarkers)
this.annotations == orig(this.annotations)
this.weight == orig(this.weight)
this.fixedDomainAxisSpace == orig(this.fixedDomainAxisSpace)
this.fixedRangeAxisSpace == orig(this.fixedRangeAxisSpace)
this.fixedLegendItems == orig(this.fixedLegendItems)
org.jfree.chart.plot.Plot.ZERO == orig(org.jfree.chart.plot.Plot.ZERO)
org.jfree.chart.plot.Plot.ZERO.getClass().getName() == orig(org.jfree.chart.plot.Plot.ZERO.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_INSETS == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name.toString == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name.toString)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.top == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.top)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.left == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.left)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.right == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.right)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName())
this.parent == orig(this.parent)
org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener == orig(org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener)
this.datasetGroup == orig(this.datasetGroup)
this.noDataMessage == orig(this.noDataMessage)
this.noDataMessageFont == orig(this.noDataMessageFont)
this.noDataMessagePaint == orig(this.noDataMessagePaint)
this.noDataMessagePaint.getClass().getName() == orig(this.noDataMessagePaint.getClass().getName())
this.insets == orig(this.insets)
this.insets.unitType == orig(this.insets.unitType)
this.insets.unitType.name == orig(this.insets.unitType.name)
this.insets.unitType.name.toString == orig(this.insets.unitType.name.toString)
this.insets.top == orig(this.insets.top)
this.insets.left == orig(this.insets.left)
this.insets.bottom == orig(this.insets.bottom)
this.insets.right == orig(this.insets.right)
this.outlineVisible == orig(this.outlineVisible)
this.outlineStroke == orig(this.outlineStroke)
this.outlineStroke.getClass().getName() == orig(this.outlineStroke.getClass().getName())
this.outlinePaint == orig(this.outlinePaint)
this.outlinePaint.getClass().getName() == orig(this.outlinePaint.getClass().getName())
this.backgroundPaint == orig(this.backgroundPaint)
this.backgroundPaint.getClass().getName() == orig(this.backgroundPaint.getClass().getName())
this.backgroundImage == orig(this.backgroundImage)
this.backgroundImageAlignment == orig(this.backgroundImageAlignment)
this.backgroundImageAlpha == orig(this.backgroundImageAlpha)
this.foregroundAlpha == orig(this.foregroundAlpha)
this.backgroundAlpha == orig(this.backgroundAlpha)
this.drawingSupplier == orig(this.drawingSupplier)
this.drawingSupplier.getClass().getName() == orig(this.drawingSupplier.getClass().getName())
this.listenerList == orig(this.listenerList)
this.domainAxes.size == 1
this.domainAxisLocations.objects[] has only one value, of length 8
this.domainAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.domainAxisLocations.size == 1
this.rangeAxes.size == 1
this.rangeAxisLocations.objects[] has only one value, of length 8
this.rangeAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.rangeAxisLocations.size == 1
this.datasetToDomainAxisMap.objects[].getClass().getName() == [java.lang.Integer, null, null, null, null, null, null, null]
this.datasetToDomainAxisMap.size == 1
this.datasetToRangeAxisMap.objects[].getClass().getName() == [java.lang.Integer, null, null, null, null, null, null, null]
this.datasetToRangeAxisMap.size == 1
this.renderers.size == 1
this.domainGridlinePosition == null
this.domainGridlineStroke == null
this.domainGridlinePaint == null
this.rangeGridlinesVisible == false
this.rangeGridlineStroke == null
this.rangeGridlinePaint == null
this.rangeCrosshairStroke == null
this.rangeCrosshairPaint == null
this.foregroundDomainMarkers == null
this.backgroundDomainMarkers == null
this.foregroundRangeMarkers == null
this.backgroundRangeMarkers == null
this.annotations == null
===========================================================================
org.jfree.chart.plot.CategoryPlot.datasetChanged(org.jfree.data.general.DatasetChangeEvent):::ENTER
this.domainAxes.size == 1
this.domainAxisLocations.objects[] has only one value, of length 8
this.domainAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.domainAxisLocations.size == 1
this.rangeAxisLocations.objects[] has only one value, of length 8
this.rangeAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.rangeAxisLocations.size == 1
this.datasetToDomainAxisMap.objects[].getClass().getName() == [java.lang.Integer, null, null, null, null, null, null, null]
this.datasetToDomainAxisMap.size == 1
this.renderers.size == 1
this.domainGridlinePosition == null
this.domainGridlineStroke == null
this.domainGridlinePaint == null
this.rangeGridlinesVisible == false
this.rangeGridlineStroke == null
this.rangeGridlinePaint == null
this.rangeCrosshairStroke == null
this.rangeCrosshairPaint == null
this.foregroundDomainMarkers == null
this.backgroundDomainMarkers == null
this.foregroundRangeMarkers == null
this.backgroundRangeMarkers == null
this.annotations == null
event.dataset == null
===========================================================================
org.jfree.chart.plot.CategoryPlot.datasetChanged(org.jfree.data.general.DatasetChangeEvent):::EXIT
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE)
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_VALUE_LABEL_FONT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_VALUE_LABEL_FONT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT.getClass().getName())
org.jfree.chart.plot.CategoryPlot.localizationResources == orig(org.jfree.chart.plot.CategoryPlot.localizationResources)
org.jfree.chart.plot.CategoryPlot.localizationResources.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.localizationResources.getClass().getName())
this.orientation == orig(this.orientation)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL)
org.jfree.chart.plot.PlotOrientation.VERTICAL == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name.toString == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name.toString)
org.jfree.chart.plot.PlotOrientation.VERTICAL.name == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL.name)
org.jfree.chart.plot.PlotOrientation.VERTICAL.name.toString == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL.name.toString)
this.orientation.name == orig(this.orientation.name)
this.orientation.name.toString == orig(this.orientation.name.toString)
this.axisOffset == orig(this.axisOffset)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.top == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.top)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.left == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.left)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.bottom == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.bottom)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.right == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.right)
this.axisOffset.unitType == orig(this.axisOffset.unitType)
org.jfree.chart.util.UnitType.ABSOLUTE == orig(org.jfree.chart.util.UnitType.ABSOLUTE)
org.jfree.chart.util.UnitType.RELATIVE == orig(org.jfree.chart.util.UnitType.RELATIVE)
this.axisOffset.unitType.name == orig(this.axisOffset.unitType.name)
this.axisOffset.unitType.name.toString == orig(this.axisOffset.unitType.name.toString)
this.axisOffset.top == orig(this.axisOffset.top)
this.axisOffset.left == orig(this.axisOffset.left)
this.axisOffset.bottom == orig(this.axisOffset.bottom)
this.axisOffset.right == orig(this.axisOffset.right)
this.domainAxes == orig(this.domainAxes)
this.domainAxes.objects == orig(this.domainAxes.objects)
this.domainAxes.objects.getClass().getName() == orig(this.domainAxes.objects.getClass().getName())
this.domainAxes.objects[] == orig(this.domainAxes.objects[])
this.domainAxes.size == orig(this.domainAxes.size)
this.domainAxes.increment == orig(this.domainAxes.increment)
this.domainAxisLocations == orig(this.domainAxisLocations)
this.domainAxisLocations.objects == orig(this.domainAxisLocations.objects)
this.domainAxisLocations.objects.getClass().getName() == orig(this.domainAxisLocations.objects.getClass().getName())
this.domainAxisLocations.objects[] == orig(this.domainAxisLocations.objects[])
this.domainAxisLocations.size == orig(this.domainAxisLocations.size)
this.domainAxisLocations.increment == orig(this.domainAxisLocations.increment)
this.drawSharedDomainAxis == orig(this.drawSharedDomainAxis)
this.rangeAxes == orig(this.rangeAxes)
this.rangeAxes.objects == orig(this.rangeAxes.objects)
this.rangeAxes.objects.getClass().getName() == orig(this.rangeAxes.objects.getClass().getName())
this.rangeAxes.objects[] == orig(this.rangeAxes.objects[])
this.rangeAxes.size == orig(this.rangeAxes.size)
this.rangeAxes.increment == orig(this.rangeAxes.increment)
this.rangeAxisLocations == orig(this.rangeAxisLocations)
this.rangeAxisLocations.objects == orig(this.rangeAxisLocations.objects)
this.rangeAxisLocations.objects.getClass().getName() == orig(this.rangeAxisLocations.objects.getClass().getName())
this.rangeAxisLocations.objects[] == orig(this.rangeAxisLocations.objects[])
this.rangeAxisLocations.size == orig(this.rangeAxisLocations.size)
this.rangeAxisLocations.increment == orig(this.rangeAxisLocations.increment)
this.datasets == orig(this.datasets)
this.datasets.objects == orig(this.datasets.objects)
this.datasets.objects.getClass().getName() == orig(this.datasets.objects.getClass().getName())
this.datasets.objects[] == orig(this.datasets.objects[])
this.datasets.size == orig(this.datasets.size)
this.datasets.increment == orig(this.datasets.increment)
this.datasetToDomainAxisMap == orig(this.datasetToDomainAxisMap)
this.datasetToDomainAxisMap.objects == orig(this.datasetToDomainAxisMap.objects)
this.datasetToDomainAxisMap.objects.getClass().getName() == orig(this.datasetToDomainAxisMap.objects.getClass().getName())
this.datasetToDomainAxisMap.objects[] == orig(this.datasetToDomainAxisMap.objects[])
this.datasetToDomainAxisMap.size == orig(this.datasetToDomainAxisMap.size)
this.datasetToDomainAxisMap.increment == orig(this.datasetToDomainAxisMap.increment)
this.datasetToRangeAxisMap == orig(this.datasetToRangeAxisMap)
this.datasetToRangeAxisMap.objects == orig(this.datasetToRangeAxisMap.objects)
this.datasetToRangeAxisMap.objects.getClass().getName() == orig(this.datasetToRangeAxisMap.objects.getClass().getName())
this.datasetToRangeAxisMap.objects[] == orig(this.datasetToRangeAxisMap.objects[])
this.datasetToRangeAxisMap.size == orig(this.datasetToRangeAxisMap.size)
this.datasetToRangeAxisMap.increment == orig(this.datasetToRangeAxisMap.increment)
this.renderers == orig(this.renderers)
this.renderers.objects == orig(this.renderers.objects)
this.renderers.objects.getClass().getName() == orig(this.renderers.objects.getClass().getName())
this.renderers.objects[] == orig(this.renderers.objects[])
this.renderers.size == orig(this.renderers.size)
this.renderers.increment == orig(this.renderers.increment)
this.renderingOrder == orig(this.renderingOrder)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name.toString == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name.toString)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name.toString == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name.toString)
this.renderingOrder.name == orig(this.renderingOrder.name)
this.renderingOrder.name.toString == orig(this.renderingOrder.name.toString)
this.columnRenderingOrder == orig(this.columnRenderingOrder)
org.jfree.chart.util.SortOrder.ASCENDING == orig(org.jfree.chart.util.SortOrder.ASCENDING)
org.jfree.chart.util.SortOrder.DESCENDING == orig(org.jfree.chart.util.SortOrder.DESCENDING)
org.jfree.chart.util.SortOrder.ASCENDING.name == orig(org.jfree.chart.util.SortOrder.ASCENDING.name)
org.jfree.chart.util.SortOrder.ASCENDING.name.toString == orig(org.jfree.chart.util.SortOrder.ASCENDING.name.toString)
org.jfree.chart.util.SortOrder.DESCENDING.name == orig(org.jfree.chart.util.SortOrder.DESCENDING.name)
org.jfree.chart.util.SortOrder.DESCENDING.name.toString == orig(org.jfree.chart.util.SortOrder.DESCENDING.name.toString)
this.columnRenderingOrder.name == orig(this.columnRenderingOrder.name)
this.columnRenderingOrder.name.toString == orig(this.columnRenderingOrder.name.toString)
this.rowRenderingOrder == orig(this.rowRenderingOrder)
this.rowRenderingOrder.name == orig(this.rowRenderingOrder.name)
this.rowRenderingOrder.name.toString == orig(this.rowRenderingOrder.name.toString)
this.domainGridlinesVisible == orig(this.domainGridlinesVisible)
this.domainGridlinePosition == orig(this.domainGridlinePosition)
org.jfree.chart.axis.CategoryAnchor.START == orig(org.jfree.chart.axis.CategoryAnchor.START)
org.jfree.chart.axis.CategoryAnchor.MIDDLE == orig(org.jfree.chart.axis.CategoryAnchor.MIDDLE)
org.jfree.chart.axis.CategoryAnchor.END == orig(org.jfree.chart.axis.CategoryAnchor.END)
org.jfree.chart.axis.CategoryAnchor.START.name == orig(org.jfree.chart.axis.CategoryAnchor.START.name)
org.jfree.chart.axis.CategoryAnchor.START.name.toString == orig(org.jfree.chart.axis.CategoryAnchor.START.name.toString)
org.jfree.chart.axis.CategoryAnchor.MIDDLE.name == orig(org.jfree.chart.axis.CategoryAnchor.MIDDLE.name)
org.jfree.chart.axis.CategoryAnchor.MIDDLE.name.toString == orig(org.jfree.chart.axis.CategoryAnchor.MIDDLE.name.toString)
org.jfree.chart.axis.CategoryAnchor.END.name == orig(org.jfree.chart.axis.CategoryAnchor.END.name)
org.jfree.chart.axis.CategoryAnchor.END.name.toString == orig(org.jfree.chart.axis.CategoryAnchor.END.name.toString)
this.domainGridlineStroke == orig(this.domainGridlineStroke)
this.domainGridlinePaint == orig(this.domainGridlinePaint)
this.rangeGridlinesVisible == orig(this.rangeGridlinesVisible)
this.rangeGridlineStroke == orig(this.rangeGridlineStroke)
this.rangeGridlinePaint == orig(this.rangeGridlinePaint)
this.anchorValue == orig(this.anchorValue)
this.rangeCrosshairVisible == orig(this.rangeCrosshairVisible)
this.rangeCrosshairValue == orig(this.rangeCrosshairValue)
this.rangeCrosshairStroke == orig(this.rangeCrosshairStroke)
this.rangeCrosshairPaint == orig(this.rangeCrosshairPaint)
this.rangeCrosshairLockedOnData == orig(this.rangeCrosshairLockedOnData)
this.foregroundDomainMarkers == orig(this.foregroundDomainMarkers)
this.backgroundDomainMarkers == orig(this.backgroundDomainMarkers)
this.foregroundRangeMarkers == orig(this.foregroundRangeMarkers)
this.backgroundRangeMarkers == orig(this.backgroundRangeMarkers)
this.annotations == orig(this.annotations)
this.weight == orig(this.weight)
this.fixedDomainAxisSpace == orig(this.fixedDomainAxisSpace)
this.fixedRangeAxisSpace == orig(this.fixedRangeAxisSpace)
this.fixedLegendItems == orig(this.fixedLegendItems)
org.jfree.chart.plot.Plot.ZERO == orig(org.jfree.chart.plot.Plot.ZERO)
org.jfree.chart.plot.Plot.ZERO.getClass().getName() == orig(org.jfree.chart.plot.Plot.ZERO.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_INSETS == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name.toString == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name.toString)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.top == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.top)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.left == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.left)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.right == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.right)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName())
this.parent == orig(this.parent)
org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener == orig(org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener)
this.datasetGroup == orig(this.datasetGroup)
this.noDataMessage == orig(this.noDataMessage)
this.noDataMessageFont == orig(this.noDataMessageFont)
this.noDataMessagePaint == orig(this.noDataMessagePaint)
this.noDataMessagePaint.getClass().getName() == orig(this.noDataMessagePaint.getClass().getName())
this.insets == orig(this.insets)
this.insets.unitType == orig(this.insets.unitType)
this.insets.unitType.name == orig(this.insets.unitType.name)
this.insets.unitType.name.toString == orig(this.insets.unitType.name.toString)
this.insets.top == orig(this.insets.top)
this.insets.left == orig(this.insets.left)
this.insets.bottom == orig(this.insets.bottom)
this.insets.right == orig(this.insets.right)
this.outlineVisible == orig(this.outlineVisible)
this.outlineStroke == orig(this.outlineStroke)
this.outlineStroke.getClass().getName() == orig(this.outlineStroke.getClass().getName())
this.outlinePaint == orig(this.outlinePaint)
this.outlinePaint.getClass().getName() == orig(this.outlinePaint.getClass().getName())
this.backgroundPaint == orig(this.backgroundPaint)
this.backgroundPaint.getClass().getName() == orig(this.backgroundPaint.getClass().getName())
this.backgroundImage == orig(this.backgroundImage)
this.backgroundImageAlignment == orig(this.backgroundImageAlignment)
this.backgroundImageAlpha == orig(this.backgroundImageAlpha)
this.foregroundAlpha == orig(this.foregroundAlpha)
this.backgroundAlpha == orig(this.backgroundAlpha)
this.drawingSupplier == orig(this.drawingSupplier)
this.drawingSupplier.getClass().getName() == orig(this.drawingSupplier.getClass().getName())
this.listenerList == orig(this.listenerList)
event.dataset == orig(event.dataset)
this.domainAxes.size == 1
this.domainAxisLocations.objects[] has only one value, of length 8
this.domainAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.domainAxisLocations.size == 1
this.rangeAxisLocations.objects[] has only one value, of length 8
this.rangeAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.rangeAxisLocations.size == 1
this.datasetToDomainAxisMap.objects[].getClass().getName() == [java.lang.Integer, null, null, null, null, null, null, null]
this.datasetToDomainAxisMap.size == 1
this.renderers.size == 1
this.domainGridlinePosition == null
this.domainGridlineStroke == null
this.domainGridlinePaint == null
this.rangeGridlinesVisible == false
this.rangeGridlineStroke == null
this.rangeGridlinePaint == null
this.rangeCrosshairStroke == null
this.rangeCrosshairPaint == null
this.foregroundDomainMarkers == null
this.backgroundDomainMarkers == null
this.foregroundRangeMarkers == null
this.backgroundRangeMarkers == null
this.annotations == null
event.dataset == null
===========================================================================
org.jfree.chart.plot.CategoryPlot.getDataset(int):::ENTER
this.domainAxes.size == 1
this.domainAxisLocations.objects[] has only one value, of length 8
this.domainAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.domainAxisLocations.size == 1
this.rangeAxisLocations.objects[] has only one value, of length 8
this.rangeAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.rangeAxisLocations.size == 1
this.datasetToDomainAxisMap.objects[].getClass().getName() == [java.lang.Integer, null, null, null, null, null, null, null]
this.datasetToDomainAxisMap.size == 1
this.renderers.size == 1
this.domainGridlinePosition == null
this.domainGridlineStroke == null
this.domainGridlinePaint == null
this.rangeGridlinesVisible == false
this.rangeGridlineStroke == null
this.rangeGridlinePaint == null
this.rangeCrosshairStroke == null
this.rangeCrosshairPaint == null
this.foregroundDomainMarkers == null
this.backgroundDomainMarkers == null
this.foregroundRangeMarkers == null
this.backgroundRangeMarkers == null
this.annotations == null
index == 0
===========================================================================
org.jfree.chart.plot.CategoryPlot.getDataset(int):::EXIT
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE)
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_VALUE_LABEL_FONT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_VALUE_LABEL_FONT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT.getClass().getName())
org.jfree.chart.plot.CategoryPlot.localizationResources == orig(org.jfree.chart.plot.CategoryPlot.localizationResources)
org.jfree.chart.plot.CategoryPlot.localizationResources.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.localizationResources.getClass().getName())
this.orientation == orig(this.orientation)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL)
org.jfree.chart.plot.PlotOrientation.VERTICAL == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name.toString == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name.toString)
org.jfree.chart.plot.PlotOrientation.VERTICAL.name == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL.name)
org.jfree.chart.plot.PlotOrientation.VERTICAL.name.toString == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL.name.toString)
this.orientation.name == orig(this.orientation.name)
this.orientation.name.toString == orig(this.orientation.name.toString)
this.axisOffset == orig(this.axisOffset)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.top == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.top)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.left == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.left)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.bottom == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.bottom)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.right == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.right)
this.axisOffset.unitType == orig(this.axisOffset.unitType)
org.jfree.chart.util.UnitType.ABSOLUTE == orig(org.jfree.chart.util.UnitType.ABSOLUTE)
org.jfree.chart.util.UnitType.RELATIVE == orig(org.jfree.chart.util.UnitType.RELATIVE)
this.axisOffset.unitType.name == orig(this.axisOffset.unitType.name)
this.axisOffset.unitType.name.toString == orig(this.axisOffset.unitType.name.toString)
this.axisOffset.top == orig(this.axisOffset.top)
this.axisOffset.left == orig(this.axisOffset.left)
this.axisOffset.bottom == orig(this.axisOffset.bottom)
this.axisOffset.right == orig(this.axisOffset.right)
this.domainAxes == orig(this.domainAxes)
this.domainAxes.objects == orig(this.domainAxes.objects)
this.domainAxes.objects.getClass().getName() == orig(this.domainAxes.objects.getClass().getName())
this.domainAxes.objects[] == orig(this.domainAxes.objects[])
this.domainAxes.size == orig(this.domainAxes.size)
this.domainAxes.increment == orig(this.domainAxes.increment)
this.domainAxisLocations == orig(this.domainAxisLocations)
this.domainAxisLocations.objects == orig(this.domainAxisLocations.objects)
this.domainAxisLocations.objects.getClass().getName() == orig(this.domainAxisLocations.objects.getClass().getName())
this.domainAxisLocations.objects[] == orig(this.domainAxisLocations.objects[])
this.domainAxisLocations.size == orig(this.domainAxisLocations.size)
this.domainAxisLocations.increment == orig(this.domainAxisLocations.increment)
this.drawSharedDomainAxis == orig(this.drawSharedDomainAxis)
this.rangeAxes == orig(this.rangeAxes)
this.rangeAxes.objects == orig(this.rangeAxes.objects)
this.rangeAxes.objects.getClass().getName() == orig(this.rangeAxes.objects.getClass().getName())
this.rangeAxes.objects[] == orig(this.rangeAxes.objects[])
this.rangeAxes.size == orig(this.rangeAxes.size)
this.rangeAxes.increment == orig(this.rangeAxes.increment)
this.rangeAxisLocations == orig(this.rangeAxisLocations)
this.rangeAxisLocations.objects == orig(this.rangeAxisLocations.objects)
this.rangeAxisLocations.objects.getClass().getName() == orig(this.rangeAxisLocations.objects.getClass().getName())
this.rangeAxisLocations.objects[] == orig(this.rangeAxisLocations.objects[])
this.rangeAxisLocations.size == orig(this.rangeAxisLocations.size)
this.rangeAxisLocations.increment == orig(this.rangeAxisLocations.increment)
this.datasets == orig(this.datasets)
this.datasets.objects == orig(this.datasets.objects)
this.datasets.objects.getClass().getName() == orig(this.datasets.objects.getClass().getName())
this.datasets.objects[] == orig(this.datasets.objects[])
this.datasets.size == orig(this.datasets.size)
this.datasets.increment == orig(this.datasets.increment)
this.datasetToDomainAxisMap == orig(this.datasetToDomainAxisMap)
this.datasetToDomainAxisMap.objects == orig(this.datasetToDomainAxisMap.objects)
this.datasetToDomainAxisMap.objects.getClass().getName() == orig(this.datasetToDomainAxisMap.objects.getClass().getName())
this.datasetToDomainAxisMap.objects[] == orig(this.datasetToDomainAxisMap.objects[])
this.datasetToDomainAxisMap.size == orig(this.datasetToDomainAxisMap.size)
this.datasetToDomainAxisMap.increment == orig(this.datasetToDomainAxisMap.increment)
this.datasetToRangeAxisMap == orig(this.datasetToRangeAxisMap)
this.datasetToRangeAxisMap.objects == orig(this.datasetToRangeAxisMap.objects)
this.datasetToRangeAxisMap.objects.getClass().getName() == orig(this.datasetToRangeAxisMap.objects.getClass().getName())
this.datasetToRangeAxisMap.objects[] == orig(this.datasetToRangeAxisMap.objects[])
this.datasetToRangeAxisMap.size == orig(this.datasetToRangeAxisMap.size)
this.datasetToRangeAxisMap.increment == orig(this.datasetToRangeAxisMap.increment)
this.renderers == orig(this.renderers)
this.renderers.objects == orig(this.renderers.objects)
this.renderers.objects.getClass().getName() == orig(this.renderers.objects.getClass().getName())
this.renderers.objects[] == orig(this.renderers.objects[])
this.renderers.size == orig(this.renderers.size)
this.renderers.increment == orig(this.renderers.increment)
this.renderingOrder == orig(this.renderingOrder)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name.toString == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name.toString)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name.toString == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name.toString)
this.renderingOrder.name == orig(this.renderingOrder.name)
this.renderingOrder.name.toString == orig(this.renderingOrder.name.toString)
this.columnRenderingOrder == orig(this.columnRenderingOrder)
org.jfree.chart.util.SortOrder.ASCENDING == orig(org.jfree.chart.util.SortOrder.ASCENDING)
org.jfree.chart.util.SortOrder.DESCENDING == orig(org.jfree.chart.util.SortOrder.DESCENDING)
org.jfree.chart.util.SortOrder.ASCENDING.name == orig(org.jfree.chart.util.SortOrder.ASCENDING.name)
org.jfree.chart.util.SortOrder.ASCENDING.name.toString == orig(org.jfree.chart.util.SortOrder.ASCENDING.name.toString)
org.jfree.chart.util.SortOrder.DESCENDING.name == orig(org.jfree.chart.util.SortOrder.DESCENDING.name)
org.jfree.chart.util.SortOrder.DESCENDING.name.toString == orig(org.jfree.chart.util.SortOrder.DESCENDING.name.toString)
this.columnRenderingOrder.name == orig(this.columnRenderingOrder.name)
this.columnRenderingOrder.name.toString == orig(this.columnRenderingOrder.name.toString)
this.rowRenderingOrder == orig(this.rowRenderingOrder)
this.rowRenderingOrder.name == orig(this.rowRenderingOrder.name)
this.rowRenderingOrder.name.toString == orig(this.rowRenderingOrder.name.toString)
this.domainGridlinesVisible == orig(this.domainGridlinesVisible)
this.domainGridlinePosition == orig(this.domainGridlinePosition)
org.jfree.chart.axis.CategoryAnchor.START == orig(org.jfree.chart.axis.CategoryAnchor.START)
org.jfree.chart.axis.CategoryAnchor.MIDDLE == orig(org.jfree.chart.axis.CategoryAnchor.MIDDLE)
org.jfree.chart.axis.CategoryAnchor.END == orig(org.jfree.chart.axis.CategoryAnchor.END)
org.jfree.chart.axis.CategoryAnchor.START.name == orig(org.jfree.chart.axis.CategoryAnchor.START.name)
org.jfree.chart.axis.CategoryAnchor.START.name.toString == orig(org.jfree.chart.axis.CategoryAnchor.START.name.toString)
org.jfree.chart.axis.CategoryAnchor.MIDDLE.name == orig(org.jfree.chart.axis.CategoryAnchor.MIDDLE.name)
org.jfree.chart.axis.CategoryAnchor.MIDDLE.name.toString == orig(org.jfree.chart.axis.CategoryAnchor.MIDDLE.name.toString)
org.jfree.chart.axis.CategoryAnchor.END.name == orig(org.jfree.chart.axis.CategoryAnchor.END.name)
org.jfree.chart.axis.CategoryAnchor.END.name.toString == orig(org.jfree.chart.axis.CategoryAnchor.END.name.toString)
this.domainGridlineStroke == orig(this.domainGridlineStroke)
this.domainGridlinePaint == orig(this.domainGridlinePaint)
this.rangeGridlinesVisible == orig(this.rangeGridlinesVisible)
this.rangeGridlineStroke == orig(this.rangeGridlineStroke)
this.rangeGridlinePaint == orig(this.rangeGridlinePaint)
this.anchorValue == orig(this.anchorValue)
this.rangeCrosshairVisible == orig(this.rangeCrosshairVisible)
this.rangeCrosshairValue == orig(this.rangeCrosshairValue)
this.rangeCrosshairStroke == orig(this.rangeCrosshairStroke)
this.rangeCrosshairPaint == orig(this.rangeCrosshairPaint)
this.rangeCrosshairLockedOnData == orig(this.rangeCrosshairLockedOnData)
this.foregroundDomainMarkers == orig(this.foregroundDomainMarkers)
this.backgroundDomainMarkers == orig(this.backgroundDomainMarkers)
this.foregroundRangeMarkers == orig(this.foregroundRangeMarkers)
this.backgroundRangeMarkers == orig(this.backgroundRangeMarkers)
this.annotations == orig(this.annotations)
this.weight == orig(this.weight)
this.fixedDomainAxisSpace == orig(this.fixedDomainAxisSpace)
this.fixedRangeAxisSpace == orig(this.fixedRangeAxisSpace)
this.fixedLegendItems == orig(this.fixedLegendItems)
org.jfree.chart.plot.Plot.ZERO == orig(org.jfree.chart.plot.Plot.ZERO)
org.jfree.chart.plot.Plot.ZERO.getClass().getName() == orig(org.jfree.chart.plot.Plot.ZERO.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_INSETS == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name.toString == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name.toString)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.top == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.top)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.left == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.left)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.right == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.right)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName())
this.parent == orig(this.parent)
org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener == orig(org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener)
this.datasetGroup == orig(this.datasetGroup)
this.noDataMessage == orig(this.noDataMessage)
this.noDataMessageFont == orig(this.noDataMessageFont)
this.noDataMessagePaint == orig(this.noDataMessagePaint)
this.noDataMessagePaint.getClass().getName() == orig(this.noDataMessagePaint.getClass().getName())
this.insets == orig(this.insets)
this.insets.unitType == orig(this.insets.unitType)
this.insets.unitType.name == orig(this.insets.unitType.name)
this.insets.unitType.name.toString == orig(this.insets.unitType.name.toString)
this.insets.top == orig(this.insets.top)
this.insets.left == orig(this.insets.left)
this.insets.bottom == orig(this.insets.bottom)
this.insets.right == orig(this.insets.right)
this.outlineVisible == orig(this.outlineVisible)
this.outlineStroke == orig(this.outlineStroke)
this.outlineStroke.getClass().getName() == orig(this.outlineStroke.getClass().getName())
this.outlinePaint == orig(this.outlinePaint)
this.outlinePaint.getClass().getName() == orig(this.outlinePaint.getClass().getName())
this.backgroundPaint == orig(this.backgroundPaint)
this.backgroundPaint.getClass().getName() == orig(this.backgroundPaint.getClass().getName())
this.backgroundImage == orig(this.backgroundImage)
this.backgroundImageAlignment == orig(this.backgroundImageAlignment)
this.backgroundImageAlpha == orig(this.backgroundImageAlpha)
this.foregroundAlpha == orig(this.foregroundAlpha)
this.backgroundAlpha == orig(this.backgroundAlpha)
this.drawingSupplier == orig(this.drawingSupplier)
this.drawingSupplier.getClass().getName() == orig(this.drawingSupplier.getClass().getName())
this.listenerList == orig(this.listenerList)
this.domainAxes.size == 1
this.domainAxisLocations.objects[] has only one value, of length 8
this.domainAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.domainAxisLocations.size == 1
this.rangeAxisLocations.objects[] has only one value, of length 8
this.rangeAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.rangeAxisLocations.size == 1
this.datasetToDomainAxisMap.objects[].getClass().getName() == [java.lang.Integer, null, null, null, null, null, null, null]
this.datasetToDomainAxisMap.size == 1
this.renderers.size == 1
this.domainGridlinePosition == null
this.domainGridlineStroke == null
this.domainGridlinePaint == null
this.rangeGridlinesVisible == false
this.rangeGridlineStroke == null
this.rangeGridlinePaint == null
this.rangeCrosshairStroke == null
this.rangeCrosshairPaint == null
this.foregroundDomainMarkers == null
this.backgroundDomainMarkers == null
this.foregroundRangeMarkers == null
this.backgroundRangeMarkers == null
this.annotations == null
return == null
===========================================================================
org.jfree.chart.plot.CategoryPlot.getRangeAxis(int):::ENTER
this.domainAxes.size == 1
this.domainAxisLocations.objects[] has only one value, of length 8
this.domainAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.domainAxisLocations.size == 1
this.rangeAxes.size == 1
this.rangeAxisLocations.objects[] has only one value, of length 8
this.rangeAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.rangeAxisLocations.size == 1
this.datasetToDomainAxisMap.objects[].getClass().getName() == [java.lang.Integer, null, null, null, null, null, null, null]
this.datasetToDomainAxisMap.size == 1
this.datasetToRangeAxisMap.objects[].getClass().getName() == [java.lang.Integer, null, null, null, null, null, null, null]
this.datasetToRangeAxisMap.size == 1
this.renderers.size == 1
this.domainGridlinePosition == null
this.domainGridlineStroke == null
this.domainGridlinePaint == null
this.rangeGridlinesVisible == false
this.rangeGridlineStroke == null
this.rangeGridlinePaint == null
this.rangeCrosshairStroke == null
this.rangeCrosshairPaint == null
this.foregroundDomainMarkers == null
this.backgroundDomainMarkers == null
this.foregroundRangeMarkers == null
this.backgroundRangeMarkers == null
this.annotations == null
index == 0
===========================================================================
org.jfree.chart.plot.CategoryPlot.getRangeAxis(int):::EXIT
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE)
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_VALUE_LABEL_FONT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_VALUE_LABEL_FONT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT.getClass().getName())
org.jfree.chart.plot.CategoryPlot.localizationResources == orig(org.jfree.chart.plot.CategoryPlot.localizationResources)
org.jfree.chart.plot.CategoryPlot.localizationResources.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.localizationResources.getClass().getName())
this.orientation == orig(this.orientation)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL)
org.jfree.chart.plot.PlotOrientation.VERTICAL == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name.toString == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name.toString)
org.jfree.chart.plot.PlotOrientation.VERTICAL.name == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL.name)
org.jfree.chart.plot.PlotOrientation.VERTICAL.name.toString == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL.name.toString)
this.orientation.name == orig(this.orientation.name)
this.orientation.name.toString == orig(this.orientation.name.toString)
this.axisOffset == orig(this.axisOffset)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.top == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.top)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.left == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.left)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.bottom == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.bottom)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.right == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.right)
this.axisOffset.unitType == orig(this.axisOffset.unitType)
org.jfree.chart.util.UnitType.ABSOLUTE == orig(org.jfree.chart.util.UnitType.ABSOLUTE)
org.jfree.chart.util.UnitType.RELATIVE == orig(org.jfree.chart.util.UnitType.RELATIVE)
this.axisOffset.unitType.name == orig(this.axisOffset.unitType.name)
this.axisOffset.unitType.name.toString == orig(this.axisOffset.unitType.name.toString)
this.axisOffset.top == orig(this.axisOffset.top)
this.axisOffset.left == orig(this.axisOffset.left)
this.axisOffset.bottom == orig(this.axisOffset.bottom)
this.axisOffset.right == orig(this.axisOffset.right)
this.domainAxes == orig(this.domainAxes)
this.domainAxes.objects == orig(this.domainAxes.objects)
this.domainAxes.objects.getClass().getName() == orig(this.domainAxes.objects.getClass().getName())
this.domainAxes.objects[] == orig(this.domainAxes.objects[])
this.domainAxes.size == orig(this.domainAxes.size)
this.domainAxes.increment == orig(this.domainAxes.increment)
this.domainAxisLocations == orig(this.domainAxisLocations)
this.domainAxisLocations.objects == orig(this.domainAxisLocations.objects)
this.domainAxisLocations.objects.getClass().getName() == orig(this.domainAxisLocations.objects.getClass().getName())
this.domainAxisLocations.objects[] == orig(this.domainAxisLocations.objects[])
this.domainAxisLocations.size == orig(this.domainAxisLocations.size)
this.domainAxisLocations.increment == orig(this.domainAxisLocations.increment)
this.drawSharedDomainAxis == orig(this.drawSharedDomainAxis)
this.rangeAxes == orig(this.rangeAxes)
this.rangeAxes.objects == orig(this.rangeAxes.objects)
this.rangeAxes.objects.getClass().getName() == orig(this.rangeAxes.objects.getClass().getName())
this.rangeAxes.objects[] == orig(this.rangeAxes.objects[])
this.rangeAxes.size == orig(this.rangeAxes.size)
this.rangeAxes.increment == orig(this.rangeAxes.increment)
this.rangeAxisLocations == orig(this.rangeAxisLocations)
this.rangeAxisLocations.objects == orig(this.rangeAxisLocations.objects)
this.rangeAxisLocations.objects.getClass().getName() == orig(this.rangeAxisLocations.objects.getClass().getName())
this.rangeAxisLocations.objects[] == orig(this.rangeAxisLocations.objects[])
this.rangeAxisLocations.size == orig(this.rangeAxisLocations.size)
this.rangeAxisLocations.increment == orig(this.rangeAxisLocations.increment)
this.datasets == orig(this.datasets)
this.datasets.objects == orig(this.datasets.objects)
this.datasets.objects.getClass().getName() == orig(this.datasets.objects.getClass().getName())
this.datasets.objects[] == orig(this.datasets.objects[])
this.datasets.size == orig(this.datasets.size)
this.datasets.increment == orig(this.datasets.increment)
this.datasetToDomainAxisMap == orig(this.datasetToDomainAxisMap)
this.datasetToDomainAxisMap.objects == orig(this.datasetToDomainAxisMap.objects)
this.datasetToDomainAxisMap.objects.getClass().getName() == orig(this.datasetToDomainAxisMap.objects.getClass().getName())
this.datasetToDomainAxisMap.objects[] == orig(this.datasetToDomainAxisMap.objects[])
this.datasetToDomainAxisMap.size == orig(this.datasetToDomainAxisMap.size)
this.datasetToDomainAxisMap.increment == orig(this.datasetToDomainAxisMap.increment)
this.datasetToRangeAxisMap == orig(this.datasetToRangeAxisMap)
this.datasetToRangeAxisMap.objects == orig(this.datasetToRangeAxisMap.objects)
this.datasetToRangeAxisMap.objects.getClass().getName() == orig(this.datasetToRangeAxisMap.objects.getClass().getName())
this.datasetToRangeAxisMap.objects[] == orig(this.datasetToRangeAxisMap.objects[])
this.datasetToRangeAxisMap.size == orig(this.datasetToRangeAxisMap.size)
this.datasetToRangeAxisMap.increment == orig(this.datasetToRangeAxisMap.increment)
this.renderers == orig(this.renderers)
this.renderers.objects == orig(this.renderers.objects)
this.renderers.objects.getClass().getName() == orig(this.renderers.objects.getClass().getName())
this.renderers.objects[] == orig(this.renderers.objects[])
this.renderers.size == orig(this.renderers.size)
this.renderers.increment == orig(this.renderers.increment)
this.renderingOrder == orig(this.renderingOrder)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name.toString == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name.toString)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name.toString == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name.toString)
this.renderingOrder.name == orig(this.renderingOrder.name)
this.renderingOrder.name.toString == orig(this.renderingOrder.name.toString)
this.columnRenderingOrder == orig(this.columnRenderingOrder)
org.jfree.chart.util.SortOrder.ASCENDING == orig(org.jfree.chart.util.SortOrder.ASCENDING)
org.jfree.chart.util.SortOrder.DESCENDING == orig(org.jfree.chart.util.SortOrder.DESCENDING)
org.jfree.chart.util.SortOrder.ASCENDING.name == orig(org.jfree.chart.util.SortOrder.ASCENDING.name)
org.jfree.chart.util.SortOrder.ASCENDING.name.toString == orig(org.jfree.chart.util.SortOrder.ASCENDING.name.toString)
org.jfree.chart.util.SortOrder.DESCENDING.name == orig(org.jfree.chart.util.SortOrder.DESCENDING.name)
org.jfree.chart.util.SortOrder.DESCENDING.name.toString == orig(org.jfree.chart.util.SortOrder.DESCENDING.name.toString)
this.columnRenderingOrder.name == orig(this.columnRenderingOrder.name)
this.columnRenderingOrder.name.toString == orig(this.columnRenderingOrder.name.toString)
this.rowRenderingOrder == orig(this.rowRenderingOrder)
this.rowRenderingOrder.name == orig(this.rowRenderingOrder.name)
this.rowRenderingOrder.name.toString == orig(this.rowRenderingOrder.name.toString)
this.domainGridlinesVisible == orig(this.domainGridlinesVisible)
this.domainGridlinePosition == orig(this.domainGridlinePosition)
org.jfree.chart.axis.CategoryAnchor.START == orig(org.jfree.chart.axis.CategoryAnchor.START)
org.jfree.chart.axis.CategoryAnchor.MIDDLE == orig(org.jfree.chart.axis.CategoryAnchor.MIDDLE)
org.jfree.chart.axis.CategoryAnchor.END == orig(org.jfree.chart.axis.CategoryAnchor.END)
org.jfree.chart.axis.CategoryAnchor.START.name == orig(org.jfree.chart.axis.CategoryAnchor.START.name)
org.jfree.chart.axis.CategoryAnchor.START.name.toString == orig(org.jfree.chart.axis.CategoryAnchor.START.name.toString)
org.jfree.chart.axis.CategoryAnchor.MIDDLE.name == orig(org.jfree.chart.axis.CategoryAnchor.MIDDLE.name)
org.jfree.chart.axis.CategoryAnchor.MIDDLE.name.toString == orig(org.jfree.chart.axis.CategoryAnchor.MIDDLE.name.toString)
org.jfree.chart.axis.CategoryAnchor.END.name == orig(org.jfree.chart.axis.CategoryAnchor.END.name)
org.jfree.chart.axis.CategoryAnchor.END.name.toString == orig(org.jfree.chart.axis.CategoryAnchor.END.name.toString)
this.domainGridlineStroke == orig(this.domainGridlineStroke)
this.domainGridlinePaint == orig(this.domainGridlinePaint)
this.rangeGridlinesVisible == orig(this.rangeGridlinesVisible)
this.rangeGridlineStroke == orig(this.rangeGridlineStroke)
this.rangeGridlinePaint == orig(this.rangeGridlinePaint)
this.anchorValue == orig(this.anchorValue)
this.rangeCrosshairVisible == orig(this.rangeCrosshairVisible)
this.rangeCrosshairValue == orig(this.rangeCrosshairValue)
this.rangeCrosshairStroke == orig(this.rangeCrosshairStroke)
this.rangeCrosshairPaint == orig(this.rangeCrosshairPaint)
this.rangeCrosshairLockedOnData == orig(this.rangeCrosshairLockedOnData)
this.foregroundDomainMarkers == orig(this.foregroundDomainMarkers)
this.backgroundDomainMarkers == orig(this.backgroundDomainMarkers)
this.foregroundRangeMarkers == orig(this.foregroundRangeMarkers)
this.backgroundRangeMarkers == orig(this.backgroundRangeMarkers)
this.annotations == orig(this.annotations)
this.weight == orig(this.weight)
this.fixedDomainAxisSpace == orig(this.fixedDomainAxisSpace)
this.fixedRangeAxisSpace == orig(this.fixedRangeAxisSpace)
this.fixedLegendItems == orig(this.fixedLegendItems)
org.jfree.chart.plot.Plot.ZERO == orig(org.jfree.chart.plot.Plot.ZERO)
org.jfree.chart.plot.Plot.ZERO.getClass().getName() == orig(org.jfree.chart.plot.Plot.ZERO.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_INSETS == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name.toString == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name.toString)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.top == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.top)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.left == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.left)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.right == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.right)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName())
this.parent == orig(this.parent)
org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener == orig(org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener)
this.datasetGroup == orig(this.datasetGroup)
this.noDataMessage == orig(this.noDataMessage)
this.noDataMessageFont == orig(this.noDataMessageFont)
this.noDataMessagePaint == orig(this.noDataMessagePaint)
this.noDataMessagePaint.getClass().getName() == orig(this.noDataMessagePaint.getClass().getName())
this.insets == orig(this.insets)
this.insets.unitType == orig(this.insets.unitType)
this.insets.unitType.name == orig(this.insets.unitType.name)
this.insets.unitType.name.toString == orig(this.insets.unitType.name.toString)
this.insets.top == orig(this.insets.top)
this.insets.left == orig(this.insets.left)
this.insets.bottom == orig(this.insets.bottom)
this.insets.right == orig(this.insets.right)
this.outlineVisible == orig(this.outlineVisible)
this.outlineStroke == orig(this.outlineStroke)
this.outlineStroke.getClass().getName() == orig(this.outlineStroke.getClass().getName())
this.outlinePaint == orig(this.outlinePaint)
this.outlinePaint.getClass().getName() == orig(this.outlinePaint.getClass().getName())
this.backgroundPaint == orig(this.backgroundPaint)
this.backgroundPaint.getClass().getName() == orig(this.backgroundPaint.getClass().getName())
this.backgroundImage == orig(this.backgroundImage)
this.backgroundImageAlignment == orig(this.backgroundImageAlignment)
this.backgroundImageAlpha == orig(this.backgroundImageAlpha)
this.foregroundAlpha == orig(this.foregroundAlpha)
this.backgroundAlpha == orig(this.backgroundAlpha)
this.drawingSupplier == orig(this.drawingSupplier)
this.drawingSupplier.getClass().getName() == orig(this.drawingSupplier.getClass().getName())
this.listenerList == orig(this.listenerList)
this.domainAxes.size == 1
this.domainAxisLocations.objects[] has only one value, of length 8
this.domainAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.domainAxisLocations.size == 1
this.rangeAxes.size == 1
this.rangeAxisLocations.objects[] has only one value, of length 8
this.rangeAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.rangeAxisLocations.size == 1
this.datasetToDomainAxisMap.objects[].getClass().getName() == [java.lang.Integer, null, null, null, null, null, null, null]
this.datasetToDomainAxisMap.size == 1
this.datasetToRangeAxisMap.objects[].getClass().getName() == [java.lang.Integer, null, null, null, null, null, null, null]
this.datasetToRangeAxisMap.size == 1
this.renderers.size == 1
this.domainGridlinePosition == null
this.domainGridlineStroke == null
this.domainGridlinePaint == null
this.rangeGridlinesVisible == false
this.rangeGridlineStroke == null
this.rangeGridlinePaint == null
this.rangeCrosshairStroke == null
this.rangeCrosshairPaint == null
this.foregroundDomainMarkers == null
this.backgroundDomainMarkers == null
this.foregroundRangeMarkers == null
this.backgroundRangeMarkers == null
this.annotations == null
return == null
===========================================================================
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxis(int, int):::ENTER
this.domainAxes.size == 1
this.domainAxisLocations.objects[] has only one value, of length 8
this.domainAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.domainAxisLocations.size == 1
this.rangeAxes.size == 0
this.rangeAxisLocations.objects[] has only one value, of length 8
this.rangeAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.rangeAxisLocations.size == 1
this.datasetToDomainAxisMap.objects[] contains only nulls and has only one value, of length 8
this.datasetToDomainAxisMap.objects[] elements == null
this.datasetToDomainAxisMap.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.datasetToDomainAxisMap.objects[].getClass().getName() elements == null
this.datasetToDomainAxisMap.size == 0
this.datasetToRangeAxisMap.objects[] contains only nulls and has only one value, of length 8
this.datasetToRangeAxisMap.objects[] elements == null
this.datasetToRangeAxisMap.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.datasetToRangeAxisMap.objects[].getClass().getName() elements == null
this.datasetToRangeAxisMap.size == 0
this.renderers.size == 1
this.domainGridlinePosition == null
this.domainGridlineStroke == null
this.domainGridlinePaint == null
this.rangeGridlinesVisible == false
this.rangeGridlineStroke == null
this.rangeGridlinePaint == null
this.rangeCrosshairStroke == null
this.rangeCrosshairPaint == null
this.foregroundDomainMarkers == null
this.backgroundDomainMarkers == null
this.foregroundRangeMarkers == null
this.backgroundRangeMarkers == null
this.annotations == null
index == 0
axisIndex == 0
===========================================================================
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxis(int, int):::EXIT
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE)
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_VALUE_LABEL_FONT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_VALUE_LABEL_FONT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT.getClass().getName())
org.jfree.chart.plot.CategoryPlot.localizationResources == orig(org.jfree.chart.plot.CategoryPlot.localizationResources)
org.jfree.chart.plot.CategoryPlot.localizationResources.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.localizationResources.getClass().getName())
this.orientation == orig(this.orientation)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL)
org.jfree.chart.plot.PlotOrientation.VERTICAL == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name.toString == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name.toString)
org.jfree.chart.plot.PlotOrientation.VERTICAL.name == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL.name)
org.jfree.chart.plot.PlotOrientation.VERTICAL.name.toString == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL.name.toString)
this.orientation.name == orig(this.orientation.name)
this.orientation.name.toString == orig(this.orientation.name.toString)
this.axisOffset == orig(this.axisOffset)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.top == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.top)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.left == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.left)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.bottom == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.bottom)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.right == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.right)
this.axisOffset.unitType == orig(this.axisOffset.unitType)
org.jfree.chart.util.UnitType.ABSOLUTE == orig(org.jfree.chart.util.UnitType.ABSOLUTE)
org.jfree.chart.util.UnitType.RELATIVE == orig(org.jfree.chart.util.UnitType.RELATIVE)
this.axisOffset.unitType.name == orig(this.axisOffset.unitType.name)
this.axisOffset.unitType.name.toString == orig(this.axisOffset.unitType.name.toString)
this.axisOffset.top == orig(this.axisOffset.top)
this.axisOffset.left == orig(this.axisOffset.left)
this.axisOffset.bottom == orig(this.axisOffset.bottom)
this.axisOffset.right == orig(this.axisOffset.right)
this.domainAxes == orig(this.domainAxes)
this.domainAxes.objects == orig(this.domainAxes.objects)
this.domainAxes.objects.getClass().getName() == orig(this.domainAxes.objects.getClass().getName())
this.domainAxes.objects[] == orig(this.domainAxes.objects[])
this.domainAxes.size == orig(this.domainAxes.size)
this.domainAxes.increment == orig(this.domainAxes.increment)
this.domainAxisLocations == orig(this.domainAxisLocations)
this.domainAxisLocations.objects == orig(this.domainAxisLocations.objects)
this.domainAxisLocations.objects.getClass().getName() == orig(this.domainAxisLocations.objects.getClass().getName())
this.domainAxisLocations.objects[] == orig(this.domainAxisLocations.objects[])
this.domainAxisLocations.size == orig(this.domainAxisLocations.size)
this.domainAxisLocations.increment == orig(this.domainAxisLocations.increment)
this.drawSharedDomainAxis == orig(this.drawSharedDomainAxis)
this.rangeAxes == orig(this.rangeAxes)
this.rangeAxes.objects == orig(this.rangeAxes.objects)
this.rangeAxes.objects.getClass().getName() == orig(this.rangeAxes.objects.getClass().getName())
this.rangeAxes.objects[] == orig(this.rangeAxes.objects[])
this.rangeAxes.size == orig(this.rangeAxes.size)
this.rangeAxes.increment == orig(this.rangeAxes.increment)
this.rangeAxisLocations == orig(this.rangeAxisLocations)
this.rangeAxisLocations.objects == orig(this.rangeAxisLocations.objects)
this.rangeAxisLocations.objects.getClass().getName() == orig(this.rangeAxisLocations.objects.getClass().getName())
this.rangeAxisLocations.objects[] == orig(this.rangeAxisLocations.objects[])
this.rangeAxisLocations.size == orig(this.rangeAxisLocations.size)
this.rangeAxisLocations.increment == orig(this.rangeAxisLocations.increment)
this.datasets == orig(this.datasets)
this.datasets.objects == orig(this.datasets.objects)
this.datasets.objects.getClass().getName() == orig(this.datasets.objects.getClass().getName())
this.datasets.objects[] == orig(this.datasets.objects[])
this.datasets.size == orig(this.datasets.size)
this.datasets.increment == orig(this.datasets.increment)
this.datasetToDomainAxisMap == orig(this.datasetToDomainAxisMap)
this.datasetToDomainAxisMap.objects == orig(this.datasetToDomainAxisMap.objects)
this.datasetToDomainAxisMap.objects.getClass().getName() == orig(this.datasetToDomainAxisMap.objects.getClass().getName())
this.datasetToDomainAxisMap.increment == orig(this.datasetToDomainAxisMap.increment)
this.datasetToRangeAxisMap == orig(this.datasetToRangeAxisMap)
this.datasetToRangeAxisMap.objects == orig(this.datasetToRangeAxisMap.objects)
this.datasetToRangeAxisMap.objects.getClass().getName() == orig(this.datasetToRangeAxisMap.objects.getClass().getName())
this.datasetToRangeAxisMap.objects[] == orig(this.datasetToRangeAxisMap.objects[])
this.datasetToRangeAxisMap.size == orig(this.datasetToRangeAxisMap.size)
this.datasetToRangeAxisMap.increment == orig(this.datasetToRangeAxisMap.increment)
this.renderers == orig(this.renderers)
this.renderers.objects == orig(this.renderers.objects)
this.renderers.objects.getClass().getName() == orig(this.renderers.objects.getClass().getName())
this.renderers.objects[] == orig(this.renderers.objects[])
this.renderers.size == orig(this.renderers.size)
this.renderers.increment == orig(this.renderers.increment)
this.renderingOrder == orig(this.renderingOrder)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name.toString == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name.toString)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name.toString == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name.toString)
this.renderingOrder.name == orig(this.renderingOrder.name)
this.renderingOrder.name.toString == orig(this.renderingOrder.name.toString)
this.columnRenderingOrder == orig(this.columnRenderingOrder)
org.jfree.chart.util.SortOrder.ASCENDING == orig(org.jfree.chart.util.SortOrder.ASCENDING)
org.jfree.chart.util.SortOrder.DESCENDING == orig(org.jfree.chart.util.SortOrder.DESCENDING)
org.jfree.chart.util.SortOrder.ASCENDING.name == orig(org.jfree.chart.util.SortOrder.ASCENDING.name)
org.jfree.chart.util.SortOrder.ASCENDING.name.toString == orig(org.jfree.chart.util.SortOrder.ASCENDING.name.toString)
org.jfree.chart.util.SortOrder.DESCENDING.name == orig(org.jfree.chart.util.SortOrder.DESCENDING.name)
org.jfree.chart.util.SortOrder.DESCENDING.name.toString == orig(org.jfree.chart.util.SortOrder.DESCENDING.name.toString)
this.columnRenderingOrder.name == orig(this.columnRenderingOrder.name)
this.columnRenderingOrder.name.toString == orig(this.columnRenderingOrder.name.toString)
this.rowRenderingOrder == orig(this.rowRenderingOrder)
this.rowRenderingOrder.name == orig(this.rowRenderingOrder.name)
this.rowRenderingOrder.name.toString == orig(this.rowRenderingOrder.name.toString)
this.domainGridlinesVisible == orig(this.domainGridlinesVisible)
this.domainGridlinePosition == orig(this.domainGridlinePosition)
org.jfree.chart.axis.CategoryAnchor.START == orig(org.jfree.chart.axis.CategoryAnchor.START)
org.jfree.chart.axis.CategoryAnchor.MIDDLE == orig(org.jfree.chart.axis.CategoryAnchor.MIDDLE)
org.jfree.chart.axis.CategoryAnchor.END == orig(org.jfree.chart.axis.CategoryAnchor.END)
org.jfree.chart.axis.CategoryAnchor.START.name == orig(org.jfree.chart.axis.CategoryAnchor.START.name)
org.jfree.chart.axis.CategoryAnchor.START.name.toString == orig(org.jfree.chart.axis.CategoryAnchor.START.name.toString)
org.jfree.chart.axis.CategoryAnchor.MIDDLE.name == orig(org.jfree.chart.axis.CategoryAnchor.MIDDLE.name)
org.jfree.chart.axis.CategoryAnchor.MIDDLE.name.toString == orig(org.jfree.chart.axis.CategoryAnchor.MIDDLE.name.toString)
org.jfree.chart.axis.CategoryAnchor.END.name == orig(org.jfree.chart.axis.CategoryAnchor.END.name)
org.jfree.chart.axis.CategoryAnchor.END.name.toString == orig(org.jfree.chart.axis.CategoryAnchor.END.name.toString)
this.domainGridlineStroke == orig(this.domainGridlineStroke)
this.domainGridlinePaint == orig(this.domainGridlinePaint)
this.rangeGridlinesVisible == orig(this.rangeGridlinesVisible)
this.rangeGridlineStroke == orig(this.rangeGridlineStroke)
this.rangeGridlinePaint == orig(this.rangeGridlinePaint)
this.anchorValue == orig(this.anchorValue)
this.rangeCrosshairVisible == orig(this.rangeCrosshairVisible)
this.rangeCrosshairValue == orig(this.rangeCrosshairValue)
this.rangeCrosshairStroke == orig(this.rangeCrosshairStroke)
this.rangeCrosshairPaint == orig(this.rangeCrosshairPaint)
this.rangeCrosshairLockedOnData == orig(this.rangeCrosshairLockedOnData)
this.foregroundDomainMarkers == orig(this.foregroundDomainMarkers)
this.backgroundDomainMarkers == orig(this.backgroundDomainMarkers)
this.foregroundRangeMarkers == orig(this.foregroundRangeMarkers)
this.backgroundRangeMarkers == orig(this.backgroundRangeMarkers)
this.annotations == orig(this.annotations)
this.weight == orig(this.weight)
this.fixedDomainAxisSpace == orig(this.fixedDomainAxisSpace)
this.fixedRangeAxisSpace == orig(this.fixedRangeAxisSpace)
this.fixedLegendItems == orig(this.fixedLegendItems)
org.jfree.chart.plot.Plot.ZERO == orig(org.jfree.chart.plot.Plot.ZERO)
org.jfree.chart.plot.Plot.ZERO.getClass().getName() == orig(org.jfree.chart.plot.Plot.ZERO.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_INSETS == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name.toString == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name.toString)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.top == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.top)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.left == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.left)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.right == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.right)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName())
this.parent == orig(this.parent)
org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener == orig(org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener)
this.datasetGroup == orig(this.datasetGroup)
this.noDataMessage == orig(this.noDataMessage)
this.noDataMessageFont == orig(this.noDataMessageFont)
this.noDataMessagePaint == orig(this.noDataMessagePaint)
this.noDataMessagePaint.getClass().getName() == orig(this.noDataMessagePaint.getClass().getName())
this.insets == orig(this.insets)
this.insets.unitType == orig(this.insets.unitType)
this.insets.unitType.name == orig(this.insets.unitType.name)
this.insets.unitType.name.toString == orig(this.insets.unitType.name.toString)
this.insets.top == orig(this.insets.top)
this.insets.left == orig(this.insets.left)
this.insets.bottom == orig(this.insets.bottom)
this.insets.right == orig(this.insets.right)
this.outlineVisible == orig(this.outlineVisible)
this.outlineStroke == orig(this.outlineStroke)
this.outlineStroke.getClass().getName() == orig(this.outlineStroke.getClass().getName())
this.outlinePaint == orig(this.outlinePaint)
this.outlinePaint.getClass().getName() == orig(this.outlinePaint.getClass().getName())
this.backgroundPaint == orig(this.backgroundPaint)
this.backgroundPaint.getClass().getName() == orig(this.backgroundPaint.getClass().getName())
this.backgroundImage == orig(this.backgroundImage)
this.backgroundImageAlignment == orig(this.backgroundImageAlignment)
this.backgroundImageAlpha == orig(this.backgroundImageAlpha)
this.foregroundAlpha == orig(this.foregroundAlpha)
this.backgroundAlpha == orig(this.backgroundAlpha)
this.drawingSupplier == orig(this.drawingSupplier)
this.drawingSupplier.getClass().getName() == orig(this.drawingSupplier.getClass().getName())
this.listenerList == orig(this.listenerList)
size(this.datasetToDomainAxisMap.objects[]) == orig(size(this.datasetToDomainAxisMap.objects[]))
this.domainAxes.size == 1
this.domainAxisLocations.objects[] has only one value, of length 8
this.domainAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.domainAxisLocations.size == 1
this.rangeAxes.size == 0
this.rangeAxisLocations.objects[] has only one value, of length 8
this.rangeAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.rangeAxisLocations.size == 1
this.datasetToDomainAxisMap.objects[].getClass().getName() == [java.lang.Integer, null, null, null, null, null, null, null]
this.datasetToDomainAxisMap.size == 1
this.datasetToRangeAxisMap.objects[] contains only nulls and has only one value, of length 8
this.datasetToRangeAxisMap.objects[] elements == null
this.datasetToRangeAxisMap.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.datasetToRangeAxisMap.objects[].getClass().getName() elements == null
this.datasetToRangeAxisMap.size == 0
this.renderers.size == 1
this.domainGridlinePosition == null
this.domainGridlineStroke == null
this.domainGridlinePaint == null
this.rangeGridlinesVisible == false
this.rangeGridlineStroke == null
this.rangeGridlinePaint == null
this.rangeCrosshairStroke == null
this.rangeCrosshairPaint == null
this.foregroundDomainMarkers == null
this.backgroundDomainMarkers == null
this.foregroundRangeMarkers == null
this.backgroundRangeMarkers == null
this.annotations == null
===========================================================================
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxis(int, int):::ENTER
this.domainAxes.size == 1
this.domainAxisLocations.objects[] has only one value, of length 8
this.domainAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.domainAxisLocations.size == 1
this.rangeAxes.size == 1
this.rangeAxisLocations.objects[] has only one value, of length 8
this.rangeAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.rangeAxisLocations.size == 1
this.datasetToDomainAxisMap.objects[].getClass().getName() == [java.lang.Integer, null, null, null, null, null, null, null]
this.datasetToDomainAxisMap.size == 1
this.datasetToRangeAxisMap.objects[] contains only nulls and has only one value, of length 8
this.datasetToRangeAxisMap.objects[] elements == null
this.datasetToRangeAxisMap.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.datasetToRangeAxisMap.objects[].getClass().getName() elements == null
this.datasetToRangeAxisMap.size == 0
this.renderers.size == 1
this.domainGridlinePosition == null
this.domainGridlineStroke == null
this.domainGridlinePaint == null
this.rangeGridlinesVisible == false
this.rangeGridlineStroke == null
this.rangeGridlinePaint == null
this.rangeCrosshairStroke == null
this.rangeCrosshairPaint == null
this.foregroundDomainMarkers == null
this.backgroundDomainMarkers == null
this.foregroundRangeMarkers == null
this.backgroundRangeMarkers == null
this.annotations == null
index == 0
axisIndex == 0
===========================================================================
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxis(int, int):::EXIT
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE)
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_VALUE_LABEL_FONT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_VALUE_LABEL_FONT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT.getClass().getName())
org.jfree.chart.plot.CategoryPlot.localizationResources == orig(org.jfree.chart.plot.CategoryPlot.localizationResources)
org.jfree.chart.plot.CategoryPlot.localizationResources.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.localizationResources.getClass().getName())
this.orientation == orig(this.orientation)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL)
org.jfree.chart.plot.PlotOrientation.VERTICAL == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name.toString == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name.toString)
org.jfree.chart.plot.PlotOrientation.VERTICAL.name == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL.name)
org.jfree.chart.plot.PlotOrientation.VERTICAL.name.toString == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL.name.toString)
this.orientation.name == orig(this.orientation.name)
this.orientation.name.toString == orig(this.orientation.name.toString)
this.axisOffset == orig(this.axisOffset)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.top == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.top)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.left == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.left)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.bottom == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.bottom)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.right == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.right)
this.axisOffset.unitType == orig(this.axisOffset.unitType)
org.jfree.chart.util.UnitType.ABSOLUTE == orig(org.jfree.chart.util.UnitType.ABSOLUTE)
org.jfree.chart.util.UnitType.RELATIVE == orig(org.jfree.chart.util.UnitType.RELATIVE)
this.axisOffset.unitType.name == orig(this.axisOffset.unitType.name)
this.axisOffset.unitType.name.toString == orig(this.axisOffset.unitType.name.toString)
this.axisOffset.top == orig(this.axisOffset.top)
this.axisOffset.left == orig(this.axisOffset.left)
this.axisOffset.bottom == orig(this.axisOffset.bottom)
this.axisOffset.right == orig(this.axisOffset.right)
this.domainAxes == orig(this.domainAxes)
this.domainAxes.objects == orig(this.domainAxes.objects)
this.domainAxes.objects.getClass().getName() == orig(this.domainAxes.objects.getClass().getName())
this.domainAxes.objects[] == orig(this.domainAxes.objects[])
this.domainAxes.size == orig(this.domainAxes.size)
this.domainAxes.increment == orig(this.domainAxes.increment)
this.domainAxisLocations == orig(this.domainAxisLocations)
this.domainAxisLocations.objects == orig(this.domainAxisLocations.objects)
this.domainAxisLocations.objects.getClass().getName() == orig(this.domainAxisLocations.objects.getClass().getName())
this.domainAxisLocations.objects[] == orig(this.domainAxisLocations.objects[])
this.domainAxisLocations.size == orig(this.domainAxisLocations.size)
this.domainAxisLocations.increment == orig(this.domainAxisLocations.increment)
this.drawSharedDomainAxis == orig(this.drawSharedDomainAxis)
this.rangeAxes == orig(this.rangeAxes)
this.rangeAxes.objects == orig(this.rangeAxes.objects)
this.rangeAxes.objects.getClass().getName() == orig(this.rangeAxes.objects.getClass().getName())
this.rangeAxes.objects[] == orig(this.rangeAxes.objects[])
this.rangeAxes.size == orig(this.rangeAxes.size)
this.rangeAxes.increment == orig(this.rangeAxes.increment)
this.rangeAxisLocations == orig(this.rangeAxisLocations)
this.rangeAxisLocations.objects == orig(this.rangeAxisLocations.objects)
this.rangeAxisLocations.objects.getClass().getName() == orig(this.rangeAxisLocations.objects.getClass().getName())
this.rangeAxisLocations.objects[] == orig(this.rangeAxisLocations.objects[])
this.rangeAxisLocations.size == orig(this.rangeAxisLocations.size)
this.rangeAxisLocations.increment == orig(this.rangeAxisLocations.increment)
this.datasets == orig(this.datasets)
this.datasets.objects == orig(this.datasets.objects)
this.datasets.objects.getClass().getName() == orig(this.datasets.objects.getClass().getName())
this.datasets.objects[] == orig(this.datasets.objects[])
this.datasets.size == orig(this.datasets.size)
this.datasets.increment == orig(this.datasets.increment)
this.datasetToDomainAxisMap == orig(this.datasetToDomainAxisMap)
this.datasetToDomainAxisMap.objects == orig(this.datasetToDomainAxisMap.objects)
this.datasetToDomainAxisMap.objects.getClass().getName() == orig(this.datasetToDomainAxisMap.objects.getClass().getName())
this.datasetToDomainAxisMap.objects[] == orig(this.datasetToDomainAxisMap.objects[])
this.datasetToDomainAxisMap.size == orig(this.datasetToDomainAxisMap.size)
this.datasetToDomainAxisMap.increment == orig(this.datasetToDomainAxisMap.increment)
this.datasetToRangeAxisMap == orig(this.datasetToRangeAxisMap)
this.datasetToRangeAxisMap.objects == orig(this.datasetToRangeAxisMap.objects)
this.datasetToRangeAxisMap.objects.getClass().getName() == orig(this.datasetToRangeAxisMap.objects.getClass().getName())
this.datasetToRangeAxisMap.increment == orig(this.datasetToRangeAxisMap.increment)
this.renderers == orig(this.renderers)
this.renderers.objects == orig(this.renderers.objects)
this.renderers.objects.getClass().getName() == orig(this.renderers.objects.getClass().getName())
this.renderers.objects[] == orig(this.renderers.objects[])
this.renderers.size == orig(this.renderers.size)
this.renderers.increment == orig(this.renderers.increment)
this.renderingOrder == orig(this.renderingOrder)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name.toString == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name.toString)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name.toString == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name.toString)
this.renderingOrder.name == orig(this.renderingOrder.name)
this.renderingOrder.name.toString == orig(this.renderingOrder.name.toString)
this.columnRenderingOrder == orig(this.columnRenderingOrder)
org.jfree.chart.util.SortOrder.ASCENDING == orig(org.jfree.chart.util.SortOrder.ASCENDING)
org.jfree.chart.util.SortOrder.DESCENDING == orig(org.jfree.chart.util.SortOrder.DESCENDING)
org.jfree.chart.util.SortOrder.ASCENDING.name == orig(org.jfree.chart.util.SortOrder.ASCENDING.name)
org.jfree.chart.util.SortOrder.ASCENDING.name.toString == orig(org.jfree.chart.util.SortOrder.ASCENDING.name.toString)
org.jfree.chart.util.SortOrder.DESCENDING.name == orig(org.jfree.chart.util.SortOrder.DESCENDING.name)
org.jfree.chart.util.SortOrder.DESCENDING.name.toString == orig(org.jfree.chart.util.SortOrder.DESCENDING.name.toString)
this.columnRenderingOrder.name == orig(this.columnRenderingOrder.name)
this.columnRenderingOrder.name.toString == orig(this.columnRenderingOrder.name.toString)
this.rowRenderingOrder == orig(this.rowRenderingOrder)
this.rowRenderingOrder.name == orig(this.rowRenderingOrder.name)
this.rowRenderingOrder.name.toString == orig(this.rowRenderingOrder.name.toString)
this.domainGridlinesVisible == orig(this.domainGridlinesVisible)
this.domainGridlinePosition == orig(this.domainGridlinePosition)
org.jfree.chart.axis.CategoryAnchor.START == orig(org.jfree.chart.axis.CategoryAnchor.START)
org.jfree.chart.axis.CategoryAnchor.MIDDLE == orig(org.jfree.chart.axis.CategoryAnchor.MIDDLE)
org.jfree.chart.axis.CategoryAnchor.END == orig(org.jfree.chart.axis.CategoryAnchor.END)
org.jfree.chart.axis.CategoryAnchor.START.name == orig(org.jfree.chart.axis.CategoryAnchor.START.name)
org.jfree.chart.axis.CategoryAnchor.START.name.toString == orig(org.jfree.chart.axis.CategoryAnchor.START.name.toString)
org.jfree.chart.axis.CategoryAnchor.MIDDLE.name == orig(org.jfree.chart.axis.CategoryAnchor.MIDDLE.name)
org.jfree.chart.axis.CategoryAnchor.MIDDLE.name.toString == orig(org.jfree.chart.axis.CategoryAnchor.MIDDLE.name.toString)
org.jfree.chart.axis.CategoryAnchor.END.name == orig(org.jfree.chart.axis.CategoryAnchor.END.name)
org.jfree.chart.axis.CategoryAnchor.END.name.toString == orig(org.jfree.chart.axis.CategoryAnchor.END.name.toString)
this.domainGridlineStroke == orig(this.domainGridlineStroke)
this.domainGridlinePaint == orig(this.domainGridlinePaint)
this.rangeGridlinesVisible == orig(this.rangeGridlinesVisible)
this.rangeGridlineStroke == orig(this.rangeGridlineStroke)
this.rangeGridlinePaint == orig(this.rangeGridlinePaint)
this.anchorValue == orig(this.anchorValue)
this.rangeCrosshairVisible == orig(this.rangeCrosshairVisible)
this.rangeCrosshairValue == orig(this.rangeCrosshairValue)
this.rangeCrosshairStroke == orig(this.rangeCrosshairStroke)
this.rangeCrosshairPaint == orig(this.rangeCrosshairPaint)
this.rangeCrosshairLockedOnData == orig(this.rangeCrosshairLockedOnData)
this.foregroundDomainMarkers == orig(this.foregroundDomainMarkers)
this.backgroundDomainMarkers == orig(this.backgroundDomainMarkers)
this.foregroundRangeMarkers == orig(this.foregroundRangeMarkers)
this.backgroundRangeMarkers == orig(this.backgroundRangeMarkers)
this.annotations == orig(this.annotations)
this.weight == orig(this.weight)
this.fixedDomainAxisSpace == orig(this.fixedDomainAxisSpace)
this.fixedRangeAxisSpace == orig(this.fixedRangeAxisSpace)
this.fixedLegendItems == orig(this.fixedLegendItems)
org.jfree.chart.plot.Plot.ZERO == orig(org.jfree.chart.plot.Plot.ZERO)
org.jfree.chart.plot.Plot.ZERO.getClass().getName() == orig(org.jfree.chart.plot.Plot.ZERO.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_INSETS == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name.toString == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name.toString)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.top == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.top)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.left == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.left)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.right == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.right)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName())
this.parent == orig(this.parent)
org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener == orig(org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener)
this.datasetGroup == orig(this.datasetGroup)
this.noDataMessage == orig(this.noDataMessage)
this.noDataMessageFont == orig(this.noDataMessageFont)
this.noDataMessagePaint == orig(this.noDataMessagePaint)
this.noDataMessagePaint.getClass().getName() == orig(this.noDataMessagePaint.getClass().getName())
this.insets == orig(this.insets)
this.insets.unitType == orig(this.insets.unitType)
this.insets.unitType.name == orig(this.insets.unitType.name)
this.insets.unitType.name.toString == orig(this.insets.unitType.name.toString)
this.insets.top == orig(this.insets.top)
this.insets.left == orig(this.insets.left)
this.insets.bottom == orig(this.insets.bottom)
this.insets.right == orig(this.insets.right)
this.outlineVisible == orig(this.outlineVisible)
this.outlineStroke == orig(this.outlineStroke)
this.outlineStroke.getClass().getName() == orig(this.outlineStroke.getClass().getName())
this.outlinePaint == orig(this.outlinePaint)
this.outlinePaint.getClass().getName() == orig(this.outlinePaint.getClass().getName())
this.backgroundPaint == orig(this.backgroundPaint)
this.backgroundPaint.getClass().getName() == orig(this.backgroundPaint.getClass().getName())
this.backgroundImage == orig(this.backgroundImage)
this.backgroundImageAlignment == orig(this.backgroundImageAlignment)
this.backgroundImageAlpha == orig(this.backgroundImageAlpha)
this.foregroundAlpha == orig(this.foregroundAlpha)
this.backgroundAlpha == orig(this.backgroundAlpha)
this.drawingSupplier == orig(this.drawingSupplier)
this.drawingSupplier.getClass().getName() == orig(this.drawingSupplier.getClass().getName())
this.listenerList == orig(this.listenerList)
size(this.datasetToRangeAxisMap.objects[]) == orig(size(this.datasetToRangeAxisMap.objects[]))
this.domainAxes.size == 1
this.domainAxisLocations.objects[] has only one value, of length 8
this.domainAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.domainAxisLocations.size == 1
this.rangeAxes.size == 1
this.rangeAxisLocations.objects[] has only one value, of length 8
this.rangeAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.rangeAxisLocations.size == 1
this.datasetToDomainAxisMap.objects[].getClass().getName() == [java.lang.Integer, null, null, null, null, null, null, null]
this.datasetToDomainAxisMap.size == 1
this.datasetToRangeAxisMap.objects[].getClass().getName() == [java.lang.Integer, null, null, null, null, null, null, null]
this.datasetToRangeAxisMap.size == 1
this.renderers.size == 1
this.domainGridlinePosition == null
this.domainGridlineStroke == null
this.domainGridlinePaint == null
this.rangeGridlinesVisible == false
this.rangeGridlineStroke == null
this.rangeGridlinePaint == null
this.rangeCrosshairStroke == null
this.rangeCrosshairPaint == null
this.foregroundDomainMarkers == null
this.backgroundDomainMarkers == null
this.foregroundRangeMarkers == null
this.backgroundRangeMarkers == null
this.annotations == null
===========================================================================
org.jfree.chart.plot.CategoryPlot.setDomainAxisLocation(int, org.jfree.chart.axis.AxisLocation, boolean):::ENTER
this.domainAxes.size == 0
this.domainAxisLocations.objects[] contains only nulls and has only one value, of length 8
this.domainAxisLocations.objects[] elements == null
this.domainAxisLocations.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.domainAxisLocations.objects[].getClass().getName() elements == null
this.domainAxisLocations.size == 0
this.rangeAxes.size == 0
this.rangeAxisLocations.objects[] contains only nulls and has only one value, of length 8
this.rangeAxisLocations.objects[] elements == null
this.rangeAxisLocations.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.rangeAxisLocations.objects[].getClass().getName() elements == null
this.rangeAxisLocations.size == 0
this.datasetToDomainAxisMap.objects[] contains only nulls and has only one value, of length 8
this.datasetToDomainAxisMap.objects[] elements == null
this.datasetToDomainAxisMap.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.datasetToDomainAxisMap.objects[].getClass().getName() elements == null
this.datasetToDomainAxisMap.size == 0
this.datasetToRangeAxisMap.objects[] contains only nulls and has only one value, of length 8
this.datasetToRangeAxisMap.objects[] elements == null
this.datasetToRangeAxisMap.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.datasetToRangeAxisMap.objects[].getClass().getName() elements == null
this.datasetToRangeAxisMap.size == 0
this.renderers.size == 0
this.domainGridlinePosition == null
this.domainGridlineStroke == null
this.domainGridlinePaint == null
this.rangeGridlinesVisible == false
this.rangeGridlineStroke == null
this.rangeGridlinePaint == null
this.rangeCrosshairStroke == null
this.rangeCrosshairPaint == null
this.foregroundDomainMarkers == null
this.backgroundDomainMarkers == null
this.foregroundRangeMarkers == null
this.backgroundRangeMarkers == null
this.annotations == null
index == 0
location has only one value
org.jfree.chart.axis.AxisLocation.TOP_OR_LEFT has only one value
org.jfree.chart.axis.AxisLocation.TOP_OR_RIGHT has only one value
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT has only one value
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_RIGHT has only one value
org.jfree.chart.axis.AxisLocation.TOP_OR_LEFT.name has only one value
org.jfree.chart.axis.AxisLocation.TOP_OR_LEFT.name.toString == "AxisLocation.TOP_OR_LEFT"
org.jfree.chart.axis.AxisLocation.TOP_OR_RIGHT.name has only one value
org.jfree.chart.axis.AxisLocation.TOP_OR_RIGHT.name.toString == "AxisLocation.TOP_OR_RIGHT"
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT.name has only one value
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT.name.toString == "AxisLocation.BOTTOM_OR_LEFT"
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_RIGHT.name has only one value
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_RIGHT.name.toString == "AxisLocation.BOTTOM_OR_RIGHT"
location.name has only one value
location.name.toString == "AxisLocation.BOTTOM_OR_LEFT"
notify == false
===========================================================================
org.jfree.chart.plot.CategoryPlot.setDomainAxisLocation(int, org.jfree.chart.axis.AxisLocation, boolean):::EXIT
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE)
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_VALUE_LABEL_FONT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_VALUE_LABEL_FONT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT.getClass().getName())
org.jfree.chart.plot.CategoryPlot.localizationResources == orig(org.jfree.chart.plot.CategoryPlot.localizationResources)
org.jfree.chart.plot.CategoryPlot.localizationResources.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.localizationResources.getClass().getName())
this.orientation == orig(this.orientation)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL)
org.jfree.chart.plot.PlotOrientation.VERTICAL == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name.toString == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name.toString)
org.jfree.chart.plot.PlotOrientation.VERTICAL.name == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL.name)
org.jfree.chart.plot.PlotOrientation.VERTICAL.name.toString == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL.name.toString)
this.orientation.name == orig(this.orientation.name)
this.orientation.name.toString == orig(this.orientation.name.toString)
this.axisOffset == orig(this.axisOffset)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.top == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.top)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.left == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.left)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.bottom == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.bottom)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.right == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.right)
this.axisOffset.unitType == orig(this.axisOffset.unitType)
org.jfree.chart.util.UnitType.ABSOLUTE == orig(org.jfree.chart.util.UnitType.ABSOLUTE)
org.jfree.chart.util.UnitType.RELATIVE == orig(org.jfree.chart.util.UnitType.RELATIVE)
this.axisOffset.unitType.name == orig(this.axisOffset.unitType.name)
this.axisOffset.unitType.name.toString == orig(this.axisOffset.unitType.name.toString)
this.axisOffset.top == orig(this.axisOffset.top)
this.axisOffset.left == orig(this.axisOffset.left)
this.axisOffset.bottom == orig(this.axisOffset.bottom)
this.axisOffset.right == orig(this.axisOffset.right)
this.domainAxes == orig(this.domainAxes)
this.domainAxes.objects == orig(this.domainAxes.objects)
this.domainAxes.objects.getClass().getName() == orig(this.domainAxes.objects.getClass().getName())
this.domainAxes.objects[] == orig(this.domainAxes.objects[])
this.domainAxes.size == orig(this.domainAxes.size)
this.domainAxes.increment == orig(this.domainAxes.increment)
this.domainAxisLocations == orig(this.domainAxisLocations)
this.domainAxisLocations.objects == orig(this.domainAxisLocations.objects)
this.domainAxisLocations.objects.getClass().getName() == orig(this.domainAxisLocations.objects.getClass().getName())
this.domainAxisLocations.increment == orig(this.domainAxisLocations.increment)
this.drawSharedDomainAxis == orig(this.drawSharedDomainAxis)
this.rangeAxes == orig(this.rangeAxes)
this.rangeAxes.objects == orig(this.rangeAxes.objects)
this.rangeAxes.objects.getClass().getName() == orig(this.rangeAxes.objects.getClass().getName())
this.rangeAxes.objects[] == orig(this.rangeAxes.objects[])
this.rangeAxes.size == orig(this.rangeAxes.size)
this.rangeAxes.increment == orig(this.rangeAxes.increment)
this.rangeAxisLocations == orig(this.rangeAxisLocations)
this.rangeAxisLocations.objects == orig(this.rangeAxisLocations.objects)
this.rangeAxisLocations.objects.getClass().getName() == orig(this.rangeAxisLocations.objects.getClass().getName())
this.rangeAxisLocations.objects[] == orig(this.rangeAxisLocations.objects[])
this.rangeAxisLocations.size == orig(this.rangeAxisLocations.size)
this.rangeAxisLocations.increment == orig(this.rangeAxisLocations.increment)
this.datasets == orig(this.datasets)
this.datasets.objects == orig(this.datasets.objects)
this.datasets.objects.getClass().getName() == orig(this.datasets.objects.getClass().getName())
this.datasets.objects[] == orig(this.datasets.objects[])
this.datasets.size == orig(this.datasets.size)
this.datasets.increment == orig(this.datasets.increment)
this.datasetToDomainAxisMap == orig(this.datasetToDomainAxisMap)
this.datasetToDomainAxisMap.objects == orig(this.datasetToDomainAxisMap.objects)
this.datasetToDomainAxisMap.objects.getClass().getName() == orig(this.datasetToDomainAxisMap.objects.getClass().getName())
this.datasetToDomainAxisMap.objects[] == orig(this.datasetToDomainAxisMap.objects[])
this.datasetToDomainAxisMap.size == orig(this.datasetToDomainAxisMap.size)
this.datasetToDomainAxisMap.increment == orig(this.datasetToDomainAxisMap.increment)
this.datasetToRangeAxisMap == orig(this.datasetToRangeAxisMap)
this.datasetToRangeAxisMap.objects == orig(this.datasetToRangeAxisMap.objects)
this.datasetToRangeAxisMap.objects.getClass().getName() == orig(this.datasetToRangeAxisMap.objects.getClass().getName())
this.datasetToRangeAxisMap.objects[] == orig(this.datasetToRangeAxisMap.objects[])
this.datasetToRangeAxisMap.size == orig(this.datasetToRangeAxisMap.size)
this.datasetToRangeAxisMap.increment == orig(this.datasetToRangeAxisMap.increment)
this.renderers == orig(this.renderers)
this.renderers.objects == orig(this.renderers.objects)
this.renderers.objects.getClass().getName() == orig(this.renderers.objects.getClass().getName())
this.renderers.objects[] == orig(this.renderers.objects[])
this.renderers.size == orig(this.renderers.size)
this.renderers.increment == orig(this.renderers.increment)
this.renderingOrder == orig(this.renderingOrder)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name.toString == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name.toString)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name.toString == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name.toString)
this.renderingOrder.name == orig(this.renderingOrder.name)
this.renderingOrder.name.toString == orig(this.renderingOrder.name.toString)
this.columnRenderingOrder == orig(this.columnRenderingOrder)
org.jfree.chart.util.SortOrder.ASCENDING == orig(org.jfree.chart.util.SortOrder.ASCENDING)
org.jfree.chart.util.SortOrder.DESCENDING == orig(org.jfree.chart.util.SortOrder.DESCENDING)
org.jfree.chart.util.SortOrder.ASCENDING.name == orig(org.jfree.chart.util.SortOrder.ASCENDING.name)
org.jfree.chart.util.SortOrder.ASCENDING.name.toString == orig(org.jfree.chart.util.SortOrder.ASCENDING.name.toString)
org.jfree.chart.util.SortOrder.DESCENDING.name == orig(org.jfree.chart.util.SortOrder.DESCENDING.name)
org.jfree.chart.util.SortOrder.DESCENDING.name.toString == orig(org.jfree.chart.util.SortOrder.DESCENDING.name.toString)
this.columnRenderingOrder.name == orig(this.columnRenderingOrder.name)
this.columnRenderingOrder.name.toString == orig(this.columnRenderingOrder.name.toString)
this.rowRenderingOrder == orig(this.rowRenderingOrder)
this.rowRenderingOrder.name == orig(this.rowRenderingOrder.name)
this.rowRenderingOrder.name.toString == orig(this.rowRenderingOrder.name.toString)
this.domainGridlinesVisible == orig(this.domainGridlinesVisible)
this.domainGridlinePosition == orig(this.domainGridlinePosition)
org.jfree.chart.axis.CategoryAnchor.START == orig(org.jfree.chart.axis.CategoryAnchor.START)
org.jfree.chart.axis.CategoryAnchor.MIDDLE == orig(org.jfree.chart.axis.CategoryAnchor.MIDDLE)
org.jfree.chart.axis.CategoryAnchor.END == orig(org.jfree.chart.axis.CategoryAnchor.END)
org.jfree.chart.axis.CategoryAnchor.START.name == orig(org.jfree.chart.axis.CategoryAnchor.START.name)
org.jfree.chart.axis.CategoryAnchor.START.name.toString == orig(org.jfree.chart.axis.CategoryAnchor.START.name.toString)
org.jfree.chart.axis.CategoryAnchor.MIDDLE.name == orig(org.jfree.chart.axis.CategoryAnchor.MIDDLE.name)
org.jfree.chart.axis.CategoryAnchor.MIDDLE.name.toString == orig(org.jfree.chart.axis.CategoryAnchor.MIDDLE.name.toString)
org.jfree.chart.axis.CategoryAnchor.END.name == orig(org.jfree.chart.axis.CategoryAnchor.END.name)
org.jfree.chart.axis.CategoryAnchor.END.name.toString == orig(org.jfree.chart.axis.CategoryAnchor.END.name.toString)
this.domainGridlineStroke == orig(this.domainGridlineStroke)
this.domainGridlinePaint == orig(this.domainGridlinePaint)
this.rangeGridlinesVisible == orig(this.rangeGridlinesVisible)
this.rangeGridlineStroke == orig(this.rangeGridlineStroke)
this.rangeGridlinePaint == orig(this.rangeGridlinePaint)
this.anchorValue == orig(this.anchorValue)
this.rangeCrosshairVisible == orig(this.rangeCrosshairVisible)
this.rangeCrosshairValue == orig(this.rangeCrosshairValue)
this.rangeCrosshairStroke == orig(this.rangeCrosshairStroke)
this.rangeCrosshairPaint == orig(this.rangeCrosshairPaint)
this.rangeCrosshairLockedOnData == orig(this.rangeCrosshairLockedOnData)
this.foregroundDomainMarkers == orig(this.foregroundDomainMarkers)
this.backgroundDomainMarkers == orig(this.backgroundDomainMarkers)
this.foregroundRangeMarkers == orig(this.foregroundRangeMarkers)
this.backgroundRangeMarkers == orig(this.backgroundRangeMarkers)
this.annotations == orig(this.annotations)
this.weight == orig(this.weight)
this.fixedDomainAxisSpace == orig(this.fixedDomainAxisSpace)
this.fixedRangeAxisSpace == orig(this.fixedRangeAxisSpace)
this.fixedLegendItems == orig(this.fixedLegendItems)
org.jfree.chart.plot.Plot.ZERO == orig(org.jfree.chart.plot.Plot.ZERO)
org.jfree.chart.plot.Plot.ZERO.getClass().getName() == orig(org.jfree.chart.plot.Plot.ZERO.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_INSETS == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name.toString == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name.toString)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.top == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.top)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.left == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.left)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.right == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.right)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName())
this.parent == orig(this.parent)
org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener == orig(org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener)
this.datasetGroup == orig(this.datasetGroup)
this.noDataMessage == orig(this.noDataMessage)
this.noDataMessageFont == orig(this.noDataMessageFont)
this.noDataMessagePaint == orig(this.noDataMessagePaint)
this.noDataMessagePaint.getClass().getName() == orig(this.noDataMessagePaint.getClass().getName())
this.insets == orig(this.insets)
this.insets.unitType == orig(this.insets.unitType)
this.insets.unitType.name == orig(this.insets.unitType.name)
this.insets.unitType.name.toString == orig(this.insets.unitType.name.toString)
this.insets.top == orig(this.insets.top)
this.insets.left == orig(this.insets.left)
this.insets.bottom == orig(this.insets.bottom)
this.insets.right == orig(this.insets.right)
this.outlineVisible == orig(this.outlineVisible)
this.outlineStroke == orig(this.outlineStroke)
this.outlineStroke.getClass().getName() == orig(this.outlineStroke.getClass().getName())
this.outlinePaint == orig(this.outlinePaint)
this.outlinePaint.getClass().getName() == orig(this.outlinePaint.getClass().getName())
this.backgroundPaint == orig(this.backgroundPaint)
this.backgroundPaint.getClass().getName() == orig(this.backgroundPaint.getClass().getName())
this.backgroundImage == orig(this.backgroundImage)
this.backgroundImageAlignment == orig(this.backgroundImageAlignment)
this.backgroundImageAlpha == orig(this.backgroundImageAlpha)
this.foregroundAlpha == orig(this.foregroundAlpha)
this.backgroundAlpha == orig(this.backgroundAlpha)
this.drawingSupplier == orig(this.drawingSupplier)
this.drawingSupplier.getClass().getName() == orig(this.drawingSupplier.getClass().getName())
this.listenerList == orig(this.listenerList)
org.jfree.chart.axis.AxisLocation.TOP_OR_LEFT == orig(org.jfree.chart.axis.AxisLocation.TOP_OR_LEFT)
org.jfree.chart.axis.AxisLocation.TOP_OR_RIGHT == orig(org.jfree.chart.axis.AxisLocation.TOP_OR_RIGHT)
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT == orig(org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT)
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_RIGHT == orig(org.jfree.chart.axis.AxisLocation.BOTTOM_OR_RIGHT)
org.jfree.chart.axis.AxisLocation.TOP_OR_LEFT.name == orig(org.jfree.chart.axis.AxisLocation.TOP_OR_LEFT.name)
org.jfree.chart.axis.AxisLocation.TOP_OR_LEFT.name.toString == orig(org.jfree.chart.axis.AxisLocation.TOP_OR_LEFT.name.toString)
org.jfree.chart.axis.AxisLocation.TOP_OR_RIGHT.name == orig(org.jfree.chart.axis.AxisLocation.TOP_OR_RIGHT.name)
org.jfree.chart.axis.AxisLocation.TOP_OR_RIGHT.name.toString == orig(org.jfree.chart.axis.AxisLocation.TOP_OR_RIGHT.name.toString)
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT.name == orig(org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT.name)
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT.name.toString == orig(org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT.name.toString)
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_RIGHT.name == orig(org.jfree.chart.axis.AxisLocation.BOTTOM_OR_RIGHT.name)
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_RIGHT.name.toString == orig(org.jfree.chart.axis.AxisLocation.BOTTOM_OR_RIGHT.name.toString)
location.name == orig(location.name)
location.name.toString == orig(location.name.toString)
size(this.domainAxisLocations.objects[]) == orig(size(this.domainAxisLocations.objects[]))
this.domainAxes.size == 0
this.domainAxisLocations.objects[] has only one value, of length 8
this.domainAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.domainAxisLocations.size == 1
this.rangeAxes.size == 0
this.rangeAxisLocations.objects[] contains only nulls and has only one value, of length 8
this.rangeAxisLocations.objects[] elements == null
this.rangeAxisLocations.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.rangeAxisLocations.objects[].getClass().getName() elements == null
this.rangeAxisLocations.size == 0
this.datasetToDomainAxisMap.objects[] contains only nulls and has only one value, of length 8
this.datasetToDomainAxisMap.objects[] elements == null
this.datasetToDomainAxisMap.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.datasetToDomainAxisMap.objects[].getClass().getName() elements == null
this.datasetToDomainAxisMap.size == 0
this.datasetToRangeAxisMap.objects[] contains only nulls and has only one value, of length 8
this.datasetToRangeAxisMap.objects[] elements == null
this.datasetToRangeAxisMap.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.datasetToRangeAxisMap.objects[].getClass().getName() elements == null
this.datasetToRangeAxisMap.size == 0
this.renderers.size == 0
this.domainGridlinePosition == null
this.domainGridlineStroke == null
this.domainGridlinePaint == null
this.rangeGridlinesVisible == false
this.rangeGridlineStroke == null
this.rangeGridlinePaint == null
this.rangeCrosshairStroke == null
this.rangeCrosshairPaint == null
this.foregroundDomainMarkers == null
this.backgroundDomainMarkers == null
this.foregroundRangeMarkers == null
this.backgroundRangeMarkers == null
this.annotations == null
org.jfree.chart.axis.AxisLocation.TOP_OR_LEFT has only one value
org.jfree.chart.axis.AxisLocation.TOP_OR_RIGHT has only one value
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT has only one value
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_RIGHT has only one value
org.jfree.chart.axis.AxisLocation.TOP_OR_LEFT.name has only one value
org.jfree.chart.axis.AxisLocation.TOP_OR_LEFT.name.toString == "AxisLocation.TOP_OR_LEFT"
org.jfree.chart.axis.AxisLocation.TOP_OR_RIGHT.name has only one value
org.jfree.chart.axis.AxisLocation.TOP_OR_RIGHT.name.toString == "AxisLocation.TOP_OR_RIGHT"
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT.name has only one value
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT.name.toString == "AxisLocation.BOTTOM_OR_LEFT"
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_RIGHT.name has only one value
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_RIGHT.name.toString == "AxisLocation.BOTTOM_OR_RIGHT"
location.name has only one value
location.name.toString == "AxisLocation.BOTTOM_OR_LEFT"
===========================================================================
org.jfree.chart.plot.CategoryPlot.setDomainAxisLocation(org.jfree.chart.axis.AxisLocation, boolean):::ENTER
this.domainAxes.size == 0
this.domainAxisLocations.objects[] contains only nulls and has only one value, of length 8
this.domainAxisLocations.objects[] elements == null
this.domainAxisLocations.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.domainAxisLocations.objects[].getClass().getName() elements == null
this.domainAxisLocations.size == 0
this.rangeAxes.size == 0
this.rangeAxisLocations.objects[] contains only nulls and has only one value, of length 8
this.rangeAxisLocations.objects[] elements == null
this.rangeAxisLocations.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.rangeAxisLocations.objects[].getClass().getName() elements == null
this.rangeAxisLocations.size == 0
this.datasetToDomainAxisMap.objects[] contains only nulls and has only one value, of length 8
this.datasetToDomainAxisMap.objects[] elements == null
this.datasetToDomainAxisMap.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.datasetToDomainAxisMap.objects[].getClass().getName() elements == null
this.datasetToDomainAxisMap.size == 0
this.datasetToRangeAxisMap.objects[] contains only nulls and has only one value, of length 8
this.datasetToRangeAxisMap.objects[] elements == null
this.datasetToRangeAxisMap.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.datasetToRangeAxisMap.objects[].getClass().getName() elements == null
this.datasetToRangeAxisMap.size == 0
this.renderers.size == 0
this.domainGridlinePosition == null
this.domainGridlineStroke == null
this.domainGridlinePaint == null
this.rangeGridlinesVisible == false
this.rangeGridlineStroke == null
this.rangeGridlinePaint == null
this.rangeCrosshairStroke == null
this.rangeCrosshairPaint == null
this.foregroundDomainMarkers == null
this.backgroundDomainMarkers == null
this.foregroundRangeMarkers == null
this.backgroundRangeMarkers == null
this.annotations == null
location has only one value
org.jfree.chart.axis.AxisLocation.TOP_OR_LEFT has only one value
org.jfree.chart.axis.AxisLocation.TOP_OR_RIGHT has only one value
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT has only one value
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_RIGHT has only one value
org.jfree.chart.axis.AxisLocation.TOP_OR_LEFT.name has only one value
org.jfree.chart.axis.AxisLocation.TOP_OR_LEFT.name.toString == "AxisLocation.TOP_OR_LEFT"
org.jfree.chart.axis.AxisLocation.TOP_OR_RIGHT.name has only one value
org.jfree.chart.axis.AxisLocation.TOP_OR_RIGHT.name.toString == "AxisLocation.TOP_OR_RIGHT"
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT.name has only one value
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT.name.toString == "AxisLocation.BOTTOM_OR_LEFT"
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_RIGHT.name has only one value
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_RIGHT.name.toString == "AxisLocation.BOTTOM_OR_RIGHT"
location.name has only one value
location.name.toString == "AxisLocation.BOTTOM_OR_LEFT"
notify == false
===========================================================================
org.jfree.chart.plot.CategoryPlot.setDomainAxisLocation(org.jfree.chart.axis.AxisLocation, boolean):::EXIT
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE)
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_VALUE_LABEL_FONT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_VALUE_LABEL_FONT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT.getClass().getName())
org.jfree.chart.plot.CategoryPlot.localizationResources == orig(org.jfree.chart.plot.CategoryPlot.localizationResources)
org.jfree.chart.plot.CategoryPlot.localizationResources.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.localizationResources.getClass().getName())
this.orientation == orig(this.orientation)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL)
org.jfree.chart.plot.PlotOrientation.VERTICAL == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name.toString == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name.toString)
org.jfree.chart.plot.PlotOrientation.VERTICAL.name == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL.name)
org.jfree.chart.plot.PlotOrientation.VERTICAL.name.toString == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL.name.toString)
this.orientation.name == orig(this.orientation.name)
this.orientation.name.toString == orig(this.orientation.name.toString)
this.axisOffset == orig(this.axisOffset)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.top == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.top)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.left == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.left)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.bottom == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.bottom)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.right == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.right)
this.axisOffset.unitType == orig(this.axisOffset.unitType)
org.jfree.chart.util.UnitType.ABSOLUTE == orig(org.jfree.chart.util.UnitType.ABSOLUTE)
org.jfree.chart.util.UnitType.RELATIVE == orig(org.jfree.chart.util.UnitType.RELATIVE)
this.axisOffset.unitType.name == orig(this.axisOffset.unitType.name)
this.axisOffset.unitType.name.toString == orig(this.axisOffset.unitType.name.toString)
this.axisOffset.top == orig(this.axisOffset.top)
this.axisOffset.left == orig(this.axisOffset.left)
this.axisOffset.bottom == orig(this.axisOffset.bottom)
this.axisOffset.right == orig(this.axisOffset.right)
this.domainAxes == orig(this.domainAxes)
this.domainAxes.objects == orig(this.domainAxes.objects)
this.domainAxes.objects.getClass().getName() == orig(this.domainAxes.objects.getClass().getName())
this.domainAxes.objects[] == orig(this.domainAxes.objects[])
this.domainAxes.size == orig(this.domainAxes.size)
this.domainAxes.increment == orig(this.domainAxes.increment)
this.domainAxisLocations == orig(this.domainAxisLocations)
this.domainAxisLocations.objects == orig(this.domainAxisLocations.objects)
this.domainAxisLocations.objects.getClass().getName() == orig(this.domainAxisLocations.objects.getClass().getName())
this.domainAxisLocations.increment == orig(this.domainAxisLocations.increment)
this.drawSharedDomainAxis == orig(this.drawSharedDomainAxis)
this.rangeAxes == orig(this.rangeAxes)
this.rangeAxes.objects == orig(this.rangeAxes.objects)
this.rangeAxes.objects.getClass().getName() == orig(this.rangeAxes.objects.getClass().getName())
this.rangeAxes.objects[] == orig(this.rangeAxes.objects[])
this.rangeAxes.size == orig(this.rangeAxes.size)
this.rangeAxes.increment == orig(this.rangeAxes.increment)
this.rangeAxisLocations == orig(this.rangeAxisLocations)
this.rangeAxisLocations.objects == orig(this.rangeAxisLocations.objects)
this.rangeAxisLocations.objects.getClass().getName() == orig(this.rangeAxisLocations.objects.getClass().getName())
this.rangeAxisLocations.objects[] == orig(this.rangeAxisLocations.objects[])
this.rangeAxisLocations.size == orig(this.rangeAxisLocations.size)
this.rangeAxisLocations.increment == orig(this.rangeAxisLocations.increment)
this.datasets == orig(this.datasets)
this.datasets.objects == orig(this.datasets.objects)
this.datasets.objects.getClass().getName() == orig(this.datasets.objects.getClass().getName())
this.datasets.objects[] == orig(this.datasets.objects[])
this.datasets.size == orig(this.datasets.size)
this.datasets.increment == orig(this.datasets.increment)
this.datasetToDomainAxisMap == orig(this.datasetToDomainAxisMap)
this.datasetToDomainAxisMap.objects == orig(this.datasetToDomainAxisMap.objects)
this.datasetToDomainAxisMap.objects.getClass().getName() == orig(this.datasetToDomainAxisMap.objects.getClass().getName())
this.datasetToDomainAxisMap.objects[] == orig(this.datasetToDomainAxisMap.objects[])
this.datasetToDomainAxisMap.size == orig(this.datasetToDomainAxisMap.size)
this.datasetToDomainAxisMap.increment == orig(this.datasetToDomainAxisMap.increment)
this.datasetToRangeAxisMap == orig(this.datasetToRangeAxisMap)
this.datasetToRangeAxisMap.objects == orig(this.datasetToRangeAxisMap.objects)
this.datasetToRangeAxisMap.objects.getClass().getName() == orig(this.datasetToRangeAxisMap.objects.getClass().getName())
this.datasetToRangeAxisMap.objects[] == orig(this.datasetToRangeAxisMap.objects[])
this.datasetToRangeAxisMap.size == orig(this.datasetToRangeAxisMap.size)
this.datasetToRangeAxisMap.increment == orig(this.datasetToRangeAxisMap.increment)
this.renderers == orig(this.renderers)
this.renderers.objects == orig(this.renderers.objects)
this.renderers.objects.getClass().getName() == orig(this.renderers.objects.getClass().getName())
this.renderers.objects[] == orig(this.renderers.objects[])
this.renderers.size == orig(this.renderers.size)
this.renderers.increment == orig(this.renderers.increment)
this.renderingOrder == orig(this.renderingOrder)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name.toString == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name.toString)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name.toString == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name.toString)
this.renderingOrder.name == orig(this.renderingOrder.name)
this.renderingOrder.name.toString == orig(this.renderingOrder.name.toString)
this.columnRenderingOrder == orig(this.columnRenderingOrder)
org.jfree.chart.util.SortOrder.ASCENDING == orig(org.jfree.chart.util.SortOrder.ASCENDING)
org.jfree.chart.util.SortOrder.DESCENDING == orig(org.jfree.chart.util.SortOrder.DESCENDING)
org.jfree.chart.util.SortOrder.ASCENDING.name == orig(org.jfree.chart.util.SortOrder.ASCENDING.name)
org.jfree.chart.util.SortOrder.ASCENDING.name.toString == orig(org.jfree.chart.util.SortOrder.ASCENDING.name.toString)
org.jfree.chart.util.SortOrder.DESCENDING.name == orig(org.jfree.chart.util.SortOrder.DESCENDING.name)
org.jfree.chart.util.SortOrder.DESCENDING.name.toString == orig(org.jfree.chart.util.SortOrder.DESCENDING.name.toString)
this.columnRenderingOrder.name == orig(this.columnRenderingOrder.name)
this.columnRenderingOrder.name.toString == orig(this.columnRenderingOrder.name.toString)
this.rowRenderingOrder == orig(this.rowRenderingOrder)
this.rowRenderingOrder.name == orig(this.rowRenderingOrder.name)
this.rowRenderingOrder.name.toString == orig(this.rowRenderingOrder.name.toString)
this.domainGridlinesVisible == orig(this.domainGridlinesVisible)
this.domainGridlinePosition == orig(this.domainGridlinePosition)
org.jfree.chart.axis.CategoryAnchor.START == orig(org.jfree.chart.axis.CategoryAnchor.START)
org.jfree.chart.axis.CategoryAnchor.MIDDLE == orig(org.jfree.chart.axis.CategoryAnchor.MIDDLE)
org.jfree.chart.axis.CategoryAnchor.END == orig(org.jfree.chart.axis.CategoryAnchor.END)
org.jfree.chart.axis.CategoryAnchor.START.name == orig(org.jfree.chart.axis.CategoryAnchor.START.name)
org.jfree.chart.axis.CategoryAnchor.START.name.toString == orig(org.jfree.chart.axis.CategoryAnchor.START.name.toString)
org.jfree.chart.axis.CategoryAnchor.MIDDLE.name == orig(org.jfree.chart.axis.CategoryAnchor.MIDDLE.name)
org.jfree.chart.axis.CategoryAnchor.MIDDLE.name.toString == orig(org.jfree.chart.axis.CategoryAnchor.MIDDLE.name.toString)
org.jfree.chart.axis.CategoryAnchor.END.name == orig(org.jfree.chart.axis.CategoryAnchor.END.name)
org.jfree.chart.axis.CategoryAnchor.END.name.toString == orig(org.jfree.chart.axis.CategoryAnchor.END.name.toString)
this.domainGridlineStroke == orig(this.domainGridlineStroke)
this.domainGridlinePaint == orig(this.domainGridlinePaint)
this.rangeGridlinesVisible == orig(this.rangeGridlinesVisible)
this.rangeGridlineStroke == orig(this.rangeGridlineStroke)
this.rangeGridlinePaint == orig(this.rangeGridlinePaint)
this.anchorValue == orig(this.anchorValue)
this.rangeCrosshairVisible == orig(this.rangeCrosshairVisible)
this.rangeCrosshairValue == orig(this.rangeCrosshairValue)
this.rangeCrosshairStroke == orig(this.rangeCrosshairStroke)
this.rangeCrosshairPaint == orig(this.rangeCrosshairPaint)
this.rangeCrosshairLockedOnData == orig(this.rangeCrosshairLockedOnData)
this.foregroundDomainMarkers == orig(this.foregroundDomainMarkers)
this.backgroundDomainMarkers == orig(this.backgroundDomainMarkers)
this.foregroundRangeMarkers == orig(this.foregroundRangeMarkers)
this.backgroundRangeMarkers == orig(this.backgroundRangeMarkers)
this.annotations == orig(this.annotations)
this.weight == orig(this.weight)
this.fixedDomainAxisSpace == orig(this.fixedDomainAxisSpace)
this.fixedRangeAxisSpace == orig(this.fixedRangeAxisSpace)
this.fixedLegendItems == orig(this.fixedLegendItems)
org.jfree.chart.plot.Plot.ZERO == orig(org.jfree.chart.plot.Plot.ZERO)
org.jfree.chart.plot.Plot.ZERO.getClass().getName() == orig(org.jfree.chart.plot.Plot.ZERO.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_INSETS == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name.toString == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name.toString)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.top == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.top)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.left == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.left)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.right == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.right)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName())
this.parent == orig(this.parent)
org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener == orig(org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener)
this.datasetGroup == orig(this.datasetGroup)
this.noDataMessage == orig(this.noDataMessage)
this.noDataMessageFont == orig(this.noDataMessageFont)
this.noDataMessagePaint == orig(this.noDataMessagePaint)
this.noDataMessagePaint.getClass().getName() == orig(this.noDataMessagePaint.getClass().getName())
this.insets == orig(this.insets)
this.insets.unitType == orig(this.insets.unitType)
this.insets.unitType.name == orig(this.insets.unitType.name)
this.insets.unitType.name.toString == orig(this.insets.unitType.name.toString)
this.insets.top == orig(this.insets.top)
this.insets.left == orig(this.insets.left)
this.insets.bottom == orig(this.insets.bottom)
this.insets.right == orig(this.insets.right)
this.outlineVisible == orig(this.outlineVisible)
this.outlineStroke == orig(this.outlineStroke)
this.outlineStroke.getClass().getName() == orig(this.outlineStroke.getClass().getName())
this.outlinePaint == orig(this.outlinePaint)
this.outlinePaint.getClass().getName() == orig(this.outlinePaint.getClass().getName())
this.backgroundPaint == orig(this.backgroundPaint)
this.backgroundPaint.getClass().getName() == orig(this.backgroundPaint.getClass().getName())
this.backgroundImage == orig(this.backgroundImage)
this.backgroundImageAlignment == orig(this.backgroundImageAlignment)
this.backgroundImageAlpha == orig(this.backgroundImageAlpha)
this.foregroundAlpha == orig(this.foregroundAlpha)
this.backgroundAlpha == orig(this.backgroundAlpha)
this.drawingSupplier == orig(this.drawingSupplier)
this.drawingSupplier.getClass().getName() == orig(this.drawingSupplier.getClass().getName())
this.listenerList == orig(this.listenerList)
org.jfree.chart.axis.AxisLocation.TOP_OR_LEFT == orig(org.jfree.chart.axis.AxisLocation.TOP_OR_LEFT)
org.jfree.chart.axis.AxisLocation.TOP_OR_RIGHT == orig(org.jfree.chart.axis.AxisLocation.TOP_OR_RIGHT)
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT == orig(org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT)
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_RIGHT == orig(org.jfree.chart.axis.AxisLocation.BOTTOM_OR_RIGHT)
org.jfree.chart.axis.AxisLocation.TOP_OR_LEFT.name == orig(org.jfree.chart.axis.AxisLocation.TOP_OR_LEFT.name)
org.jfree.chart.axis.AxisLocation.TOP_OR_LEFT.name.toString == orig(org.jfree.chart.axis.AxisLocation.TOP_OR_LEFT.name.toString)
org.jfree.chart.axis.AxisLocation.TOP_OR_RIGHT.name == orig(org.jfree.chart.axis.AxisLocation.TOP_OR_RIGHT.name)
org.jfree.chart.axis.AxisLocation.TOP_OR_RIGHT.name.toString == orig(org.jfree.chart.axis.AxisLocation.TOP_OR_RIGHT.name.toString)
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT.name == orig(org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT.name)
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT.name.toString == orig(org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT.name.toString)
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_RIGHT.name == orig(org.jfree.chart.axis.AxisLocation.BOTTOM_OR_RIGHT.name)
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_RIGHT.name.toString == orig(org.jfree.chart.axis.AxisLocation.BOTTOM_OR_RIGHT.name.toString)
location.name == orig(location.name)
location.name.toString == orig(location.name.toString)
size(this.domainAxisLocations.objects[]) == orig(size(this.domainAxisLocations.objects[]))
this.domainAxes.size == 0
this.domainAxisLocations.objects[] has only one value, of length 8
this.domainAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.domainAxisLocations.size == 1
this.rangeAxes.size == 0
this.rangeAxisLocations.objects[] contains only nulls and has only one value, of length 8
this.rangeAxisLocations.objects[] elements == null
this.rangeAxisLocations.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.rangeAxisLocations.objects[].getClass().getName() elements == null
this.rangeAxisLocations.size == 0
this.datasetToDomainAxisMap.objects[] contains only nulls and has only one value, of length 8
this.datasetToDomainAxisMap.objects[] elements == null
this.datasetToDomainAxisMap.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.datasetToDomainAxisMap.objects[].getClass().getName() elements == null
this.datasetToDomainAxisMap.size == 0
this.datasetToRangeAxisMap.objects[] contains only nulls and has only one value, of length 8
this.datasetToRangeAxisMap.objects[] elements == null
this.datasetToRangeAxisMap.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.datasetToRangeAxisMap.objects[].getClass().getName() elements == null
this.datasetToRangeAxisMap.size == 0
this.renderers.size == 0
this.domainGridlinePosition == null
this.domainGridlineStroke == null
this.domainGridlinePaint == null
this.rangeGridlinesVisible == false
this.rangeGridlineStroke == null
this.rangeGridlinePaint == null
this.rangeCrosshairStroke == null
this.rangeCrosshairPaint == null
this.foregroundDomainMarkers == null
this.backgroundDomainMarkers == null
this.foregroundRangeMarkers == null
this.backgroundRangeMarkers == null
this.annotations == null
org.jfree.chart.axis.AxisLocation.TOP_OR_LEFT has only one value
org.jfree.chart.axis.AxisLocation.TOP_OR_RIGHT has only one value
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT has only one value
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_RIGHT has only one value
org.jfree.chart.axis.AxisLocation.TOP_OR_LEFT.name has only one value
org.jfree.chart.axis.AxisLocation.TOP_OR_LEFT.name.toString == "AxisLocation.TOP_OR_LEFT"
org.jfree.chart.axis.AxisLocation.TOP_OR_RIGHT.name has only one value
org.jfree.chart.axis.AxisLocation.TOP_OR_RIGHT.name.toString == "AxisLocation.TOP_OR_RIGHT"
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT.name has only one value
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT.name.toString == "AxisLocation.BOTTOM_OR_LEFT"
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_RIGHT.name has only one value
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_RIGHT.name.toString == "AxisLocation.BOTTOM_OR_RIGHT"
location.name has only one value
location.name.toString == "AxisLocation.BOTTOM_OR_LEFT"
===========================================================================
org.jfree.chart.plot.CategoryPlot.setRangeAxisLocation(int, org.jfree.chart.axis.AxisLocation, boolean):::ENTER
this.domainAxes.size == 0
this.domainAxisLocations.objects[] has only one value, of length 8
this.domainAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.domainAxisLocations.size == 1
this.rangeAxes.size == 0
this.rangeAxisLocations.objects[] contains only nulls and has only one value, of length 8
this.rangeAxisLocations.objects[] elements == null
this.rangeAxisLocations.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.rangeAxisLocations.objects[].getClass().getName() elements == null
this.rangeAxisLocations.size == 0
this.datasetToDomainAxisMap.objects[] contains only nulls and has only one value, of length 8
this.datasetToDomainAxisMap.objects[] elements == null
this.datasetToDomainAxisMap.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.datasetToDomainAxisMap.objects[].getClass().getName() elements == null
this.datasetToDomainAxisMap.size == 0
this.datasetToRangeAxisMap.objects[] contains only nulls and has only one value, of length 8
this.datasetToRangeAxisMap.objects[] elements == null
this.datasetToRangeAxisMap.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.datasetToRangeAxisMap.objects[].getClass().getName() elements == null
this.datasetToRangeAxisMap.size == 0
this.renderers.size == 0
this.domainGridlinePosition == null
this.domainGridlineStroke == null
this.domainGridlinePaint == null
this.rangeGridlinesVisible == false
this.rangeGridlineStroke == null
this.rangeGridlinePaint == null
this.rangeCrosshairStroke == null
this.rangeCrosshairPaint == null
this.foregroundDomainMarkers == null
this.backgroundDomainMarkers == null
this.foregroundRangeMarkers == null
this.backgroundRangeMarkers == null
this.annotations == null
index == 0
location has only one value
org.jfree.chart.axis.AxisLocation.TOP_OR_LEFT has only one value
org.jfree.chart.axis.AxisLocation.TOP_OR_RIGHT has only one value
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT has only one value
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_RIGHT has only one value
org.jfree.chart.axis.AxisLocation.TOP_OR_LEFT.name has only one value
org.jfree.chart.axis.AxisLocation.TOP_OR_LEFT.name.toString == "AxisLocation.TOP_OR_LEFT"
org.jfree.chart.axis.AxisLocation.TOP_OR_RIGHT.name has only one value
org.jfree.chart.axis.AxisLocation.TOP_OR_RIGHT.name.toString == "AxisLocation.TOP_OR_RIGHT"
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT.name has only one value
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT.name.toString == "AxisLocation.BOTTOM_OR_LEFT"
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_RIGHT.name has only one value
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_RIGHT.name.toString == "AxisLocation.BOTTOM_OR_RIGHT"
location.name has only one value
location.name.toString == "AxisLocation.TOP_OR_LEFT"
notify == false
===========================================================================
org.jfree.chart.plot.CategoryPlot.setRangeAxisLocation(int, org.jfree.chart.axis.AxisLocation, boolean):::EXIT
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE)
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_VALUE_LABEL_FONT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_VALUE_LABEL_FONT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT.getClass().getName())
org.jfree.chart.plot.CategoryPlot.localizationResources == orig(org.jfree.chart.plot.CategoryPlot.localizationResources)
org.jfree.chart.plot.CategoryPlot.localizationResources.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.localizationResources.getClass().getName())
this.orientation == orig(this.orientation)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL)
org.jfree.chart.plot.PlotOrientation.VERTICAL == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name.toString == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name.toString)
org.jfree.chart.plot.PlotOrientation.VERTICAL.name == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL.name)
org.jfree.chart.plot.PlotOrientation.VERTICAL.name.toString == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL.name.toString)
this.orientation.name == orig(this.orientation.name)
this.orientation.name.toString == orig(this.orientation.name.toString)
this.axisOffset == orig(this.axisOffset)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.top == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.top)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.left == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.left)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.bottom == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.bottom)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.right == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.right)
this.axisOffset.unitType == orig(this.axisOffset.unitType)
org.jfree.chart.util.UnitType.ABSOLUTE == orig(org.jfree.chart.util.UnitType.ABSOLUTE)
org.jfree.chart.util.UnitType.RELATIVE == orig(org.jfree.chart.util.UnitType.RELATIVE)
this.axisOffset.unitType.name == orig(this.axisOffset.unitType.name)
this.axisOffset.unitType.name.toString == orig(this.axisOffset.unitType.name.toString)
this.axisOffset.top == orig(this.axisOffset.top)
this.axisOffset.left == orig(this.axisOffset.left)
this.axisOffset.bottom == orig(this.axisOffset.bottom)
this.axisOffset.right == orig(this.axisOffset.right)
this.domainAxes == orig(this.domainAxes)
this.domainAxes.objects == orig(this.domainAxes.objects)
this.domainAxes.objects.getClass().getName() == orig(this.domainAxes.objects.getClass().getName())
this.domainAxes.objects[] == orig(this.domainAxes.objects[])
this.domainAxes.size == orig(this.domainAxes.size)
this.domainAxes.increment == orig(this.domainAxes.increment)
this.domainAxisLocations == orig(this.domainAxisLocations)
this.domainAxisLocations.objects == orig(this.domainAxisLocations.objects)
this.domainAxisLocations.objects.getClass().getName() == orig(this.domainAxisLocations.objects.getClass().getName())
this.domainAxisLocations.objects[] == orig(this.domainAxisLocations.objects[])
this.domainAxisLocations.size == orig(this.domainAxisLocations.size)
this.domainAxisLocations.increment == orig(this.domainAxisLocations.increment)
this.drawSharedDomainAxis == orig(this.drawSharedDomainAxis)
this.rangeAxes == orig(this.rangeAxes)
this.rangeAxes.objects == orig(this.rangeAxes.objects)
this.rangeAxes.objects.getClass().getName() == orig(this.rangeAxes.objects.getClass().getName())
this.rangeAxes.objects[] == orig(this.rangeAxes.objects[])
this.rangeAxes.size == orig(this.rangeAxes.size)
this.rangeAxes.increment == orig(this.rangeAxes.increment)
this.rangeAxisLocations == orig(this.rangeAxisLocations)
this.rangeAxisLocations.objects == orig(this.rangeAxisLocations.objects)
this.rangeAxisLocations.objects.getClass().getName() == orig(this.rangeAxisLocations.objects.getClass().getName())
this.rangeAxisLocations.increment == orig(this.rangeAxisLocations.increment)
this.datasets == orig(this.datasets)
this.datasets.objects == orig(this.datasets.objects)
this.datasets.objects.getClass().getName() == orig(this.datasets.objects.getClass().getName())
this.datasets.objects[] == orig(this.datasets.objects[])
this.datasets.size == orig(this.datasets.size)
this.datasets.increment == orig(this.datasets.increment)
this.datasetToDomainAxisMap == orig(this.datasetToDomainAxisMap)
this.datasetToDomainAxisMap.objects == orig(this.datasetToDomainAxisMap.objects)
this.datasetToDomainAxisMap.objects.getClass().getName() == orig(this.datasetToDomainAxisMap.objects.getClass().getName())
this.datasetToDomainAxisMap.objects[] == orig(this.datasetToDomainAxisMap.objects[])
this.datasetToDomainAxisMap.size == orig(this.datasetToDomainAxisMap.size)
this.datasetToDomainAxisMap.increment == orig(this.datasetToDomainAxisMap.increment)
this.datasetToRangeAxisMap == orig(this.datasetToRangeAxisMap)
this.datasetToRangeAxisMap.objects == orig(this.datasetToRangeAxisMap.objects)
this.datasetToRangeAxisMap.objects.getClass().getName() == orig(this.datasetToRangeAxisMap.objects.getClass().getName())
this.datasetToRangeAxisMap.objects[] == orig(this.datasetToRangeAxisMap.objects[])
this.datasetToRangeAxisMap.size == orig(this.datasetToRangeAxisMap.size)
this.datasetToRangeAxisMap.increment == orig(this.datasetToRangeAxisMap.increment)
this.renderers == orig(this.renderers)
this.renderers.objects == orig(this.renderers.objects)
this.renderers.objects.getClass().getName() == orig(this.renderers.objects.getClass().getName())
this.renderers.objects[] == orig(this.renderers.objects[])
this.renderers.size == orig(this.renderers.size)
this.renderers.increment == orig(this.renderers.increment)
this.renderingOrder == orig(this.renderingOrder)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name.toString == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name.toString)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name.toString == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name.toString)
this.renderingOrder.name == orig(this.renderingOrder.name)
this.renderingOrder.name.toString == orig(this.renderingOrder.name.toString)
this.columnRenderingOrder == orig(this.columnRenderingOrder)
org.jfree.chart.util.SortOrder.ASCENDING == orig(org.jfree.chart.util.SortOrder.ASCENDING)
org.jfree.chart.util.SortOrder.DESCENDING == orig(org.jfree.chart.util.SortOrder.DESCENDING)
org.jfree.chart.util.SortOrder.ASCENDING.name == orig(org.jfree.chart.util.SortOrder.ASCENDING.name)
org.jfree.chart.util.SortOrder.ASCENDING.name.toString == orig(org.jfree.chart.util.SortOrder.ASCENDING.name.toString)
org.jfree.chart.util.SortOrder.DESCENDING.name == orig(org.jfree.chart.util.SortOrder.DESCENDING.name)
org.jfree.chart.util.SortOrder.DESCENDING.name.toString == orig(org.jfree.chart.util.SortOrder.DESCENDING.name.toString)
this.columnRenderingOrder.name == orig(this.columnRenderingOrder.name)
this.columnRenderingOrder.name.toString == orig(this.columnRenderingOrder.name.toString)
this.rowRenderingOrder == orig(this.rowRenderingOrder)
this.rowRenderingOrder.name == orig(this.rowRenderingOrder.name)
this.rowRenderingOrder.name.toString == orig(this.rowRenderingOrder.name.toString)
this.domainGridlinesVisible == orig(this.domainGridlinesVisible)
this.domainGridlinePosition == orig(this.domainGridlinePosition)
org.jfree.chart.axis.CategoryAnchor.START == orig(org.jfree.chart.axis.CategoryAnchor.START)
org.jfree.chart.axis.CategoryAnchor.MIDDLE == orig(org.jfree.chart.axis.CategoryAnchor.MIDDLE)
org.jfree.chart.axis.CategoryAnchor.END == orig(org.jfree.chart.axis.CategoryAnchor.END)
org.jfree.chart.axis.CategoryAnchor.START.name == orig(org.jfree.chart.axis.CategoryAnchor.START.name)
org.jfree.chart.axis.CategoryAnchor.START.name.toString == orig(org.jfree.chart.axis.CategoryAnchor.START.name.toString)
org.jfree.chart.axis.CategoryAnchor.MIDDLE.name == orig(org.jfree.chart.axis.CategoryAnchor.MIDDLE.name)
org.jfree.chart.axis.CategoryAnchor.MIDDLE.name.toString == orig(org.jfree.chart.axis.CategoryAnchor.MIDDLE.name.toString)
org.jfree.chart.axis.CategoryAnchor.END.name == orig(org.jfree.chart.axis.CategoryAnchor.END.name)
org.jfree.chart.axis.CategoryAnchor.END.name.toString == orig(org.jfree.chart.axis.CategoryAnchor.END.name.toString)
this.domainGridlineStroke == orig(this.domainGridlineStroke)
this.domainGridlinePaint == orig(this.domainGridlinePaint)
this.rangeGridlinesVisible == orig(this.rangeGridlinesVisible)
this.rangeGridlineStroke == orig(this.rangeGridlineStroke)
this.rangeGridlinePaint == orig(this.rangeGridlinePaint)
this.anchorValue == orig(this.anchorValue)
this.rangeCrosshairVisible == orig(this.rangeCrosshairVisible)
this.rangeCrosshairValue == orig(this.rangeCrosshairValue)
this.rangeCrosshairStroke == orig(this.rangeCrosshairStroke)
this.rangeCrosshairPaint == orig(this.rangeCrosshairPaint)
this.rangeCrosshairLockedOnData == orig(this.rangeCrosshairLockedOnData)
this.foregroundDomainMarkers == orig(this.foregroundDomainMarkers)
this.backgroundDomainMarkers == orig(this.backgroundDomainMarkers)
this.foregroundRangeMarkers == orig(this.foregroundRangeMarkers)
this.backgroundRangeMarkers == orig(this.backgroundRangeMarkers)
this.annotations == orig(this.annotations)
this.weight == orig(this.weight)
this.fixedDomainAxisSpace == orig(this.fixedDomainAxisSpace)
this.fixedRangeAxisSpace == orig(this.fixedRangeAxisSpace)
this.fixedLegendItems == orig(this.fixedLegendItems)
org.jfree.chart.plot.Plot.ZERO == orig(org.jfree.chart.plot.Plot.ZERO)
org.jfree.chart.plot.Plot.ZERO.getClass().getName() == orig(org.jfree.chart.plot.Plot.ZERO.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_INSETS == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name.toString == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name.toString)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.top == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.top)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.left == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.left)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.right == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.right)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName())
this.parent == orig(this.parent)
org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener == orig(org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener)
this.datasetGroup == orig(this.datasetGroup)
this.noDataMessage == orig(this.noDataMessage)
this.noDataMessageFont == orig(this.noDataMessageFont)
this.noDataMessagePaint == orig(this.noDataMessagePaint)
this.noDataMessagePaint.getClass().getName() == orig(this.noDataMessagePaint.getClass().getName())
this.insets == orig(this.insets)
this.insets.unitType == orig(this.insets.unitType)
this.insets.unitType.name == orig(this.insets.unitType.name)
this.insets.unitType.name.toString == orig(this.insets.unitType.name.toString)
this.insets.top == orig(this.insets.top)
this.insets.left == orig(this.insets.left)
this.insets.bottom == orig(this.insets.bottom)
this.insets.right == orig(this.insets.right)
this.outlineVisible == orig(this.outlineVisible)
this.outlineStroke == orig(this.outlineStroke)
this.outlineStroke.getClass().getName() == orig(this.outlineStroke.getClass().getName())
this.outlinePaint == orig(this.outlinePaint)
this.outlinePaint.getClass().getName() == orig(this.outlinePaint.getClass().getName())
this.backgroundPaint == orig(this.backgroundPaint)
this.backgroundPaint.getClass().getName() == orig(this.backgroundPaint.getClass().getName())
this.backgroundImage == orig(this.backgroundImage)
this.backgroundImageAlignment == orig(this.backgroundImageAlignment)
this.backgroundImageAlpha == orig(this.backgroundImageAlpha)
this.foregroundAlpha == orig(this.foregroundAlpha)
this.backgroundAlpha == orig(this.backgroundAlpha)
this.drawingSupplier == orig(this.drawingSupplier)
this.drawingSupplier.getClass().getName() == orig(this.drawingSupplier.getClass().getName())
this.listenerList == orig(this.listenerList)
org.jfree.chart.axis.AxisLocation.TOP_OR_LEFT == orig(org.jfree.chart.axis.AxisLocation.TOP_OR_LEFT)
org.jfree.chart.axis.AxisLocation.TOP_OR_RIGHT == orig(org.jfree.chart.axis.AxisLocation.TOP_OR_RIGHT)
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT == orig(org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT)
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_RIGHT == orig(org.jfree.chart.axis.AxisLocation.BOTTOM_OR_RIGHT)
org.jfree.chart.axis.AxisLocation.TOP_OR_LEFT.name == orig(org.jfree.chart.axis.AxisLocation.TOP_OR_LEFT.name)
org.jfree.chart.axis.AxisLocation.TOP_OR_LEFT.name.toString == orig(org.jfree.chart.axis.AxisLocation.TOP_OR_LEFT.name.toString)
org.jfree.chart.axis.AxisLocation.TOP_OR_RIGHT.name == orig(org.jfree.chart.axis.AxisLocation.TOP_OR_RIGHT.name)
org.jfree.chart.axis.AxisLocation.TOP_OR_RIGHT.name.toString == orig(org.jfree.chart.axis.AxisLocation.TOP_OR_RIGHT.name.toString)
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT.name == orig(org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT.name)
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT.name.toString == orig(org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT.name.toString)
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_RIGHT.name == orig(org.jfree.chart.axis.AxisLocation.BOTTOM_OR_RIGHT.name)
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_RIGHT.name.toString == orig(org.jfree.chart.axis.AxisLocation.BOTTOM_OR_RIGHT.name.toString)
location.name == orig(location.name)
location.name.toString == orig(location.name.toString)
size(this.rangeAxisLocations.objects[]) == orig(size(this.rangeAxisLocations.objects[]))
this.domainAxes.size == 0
this.domainAxisLocations.objects[] has only one value, of length 8
this.domainAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.domainAxisLocations.size == 1
this.rangeAxes.size == 0
this.rangeAxisLocations.objects[] has only one value, of length 8
this.rangeAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.rangeAxisLocations.size == 1
this.datasetToDomainAxisMap.objects[] contains only nulls and has only one value, of length 8
this.datasetToDomainAxisMap.objects[] elements == null
this.datasetToDomainAxisMap.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.datasetToDomainAxisMap.objects[].getClass().getName() elements == null
this.datasetToDomainAxisMap.size == 0
this.datasetToRangeAxisMap.objects[] contains only nulls and has only one value, of length 8
this.datasetToRangeAxisMap.objects[] elements == null
this.datasetToRangeAxisMap.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.datasetToRangeAxisMap.objects[].getClass().getName() elements == null
this.datasetToRangeAxisMap.size == 0
this.renderers.size == 0
this.domainGridlinePosition == null
this.domainGridlineStroke == null
this.domainGridlinePaint == null
this.rangeGridlinesVisible == false
this.rangeGridlineStroke == null
this.rangeGridlinePaint == null
this.rangeCrosshairStroke == null
this.rangeCrosshairPaint == null
this.foregroundDomainMarkers == null
this.backgroundDomainMarkers == null
this.foregroundRangeMarkers == null
this.backgroundRangeMarkers == null
this.annotations == null
org.jfree.chart.axis.AxisLocation.TOP_OR_LEFT has only one value
org.jfree.chart.axis.AxisLocation.TOP_OR_RIGHT has only one value
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT has only one value
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_RIGHT has only one value
org.jfree.chart.axis.AxisLocation.TOP_OR_LEFT.name has only one value
org.jfree.chart.axis.AxisLocation.TOP_OR_LEFT.name.toString == "AxisLocation.TOP_OR_LEFT"
org.jfree.chart.axis.AxisLocation.TOP_OR_RIGHT.name has only one value
org.jfree.chart.axis.AxisLocation.TOP_OR_RIGHT.name.toString == "AxisLocation.TOP_OR_RIGHT"
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT.name has only one value
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT.name.toString == "AxisLocation.BOTTOM_OR_LEFT"
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_RIGHT.name has only one value
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_RIGHT.name.toString == "AxisLocation.BOTTOM_OR_RIGHT"
location.name has only one value
location.name.toString == "AxisLocation.TOP_OR_LEFT"
===========================================================================
org.jfree.chart.plot.CategoryPlot.setRangeAxisLocation(org.jfree.chart.axis.AxisLocation, boolean):::ENTER
this.domainAxes.size == 0
this.domainAxisLocations.objects[] has only one value, of length 8
this.domainAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.domainAxisLocations.size == 1
this.rangeAxes.size == 0
this.rangeAxisLocations.objects[] contains only nulls and has only one value, of length 8
this.rangeAxisLocations.objects[] elements == null
this.rangeAxisLocations.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.rangeAxisLocations.objects[].getClass().getName() elements == null
this.rangeAxisLocations.size == 0
this.datasetToDomainAxisMap.objects[] contains only nulls and has only one value, of length 8
this.datasetToDomainAxisMap.objects[] elements == null
this.datasetToDomainAxisMap.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.datasetToDomainAxisMap.objects[].getClass().getName() elements == null
this.datasetToDomainAxisMap.size == 0
this.datasetToRangeAxisMap.objects[] contains only nulls and has only one value, of length 8
this.datasetToRangeAxisMap.objects[] elements == null
this.datasetToRangeAxisMap.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.datasetToRangeAxisMap.objects[].getClass().getName() elements == null
this.datasetToRangeAxisMap.size == 0
this.renderers.size == 0
this.domainGridlinePosition == null
this.domainGridlineStroke == null
this.domainGridlinePaint == null
this.rangeGridlinesVisible == false
this.rangeGridlineStroke == null
this.rangeGridlinePaint == null
this.rangeCrosshairStroke == null
this.rangeCrosshairPaint == null
this.foregroundDomainMarkers == null
this.backgroundDomainMarkers == null
this.foregroundRangeMarkers == null
this.backgroundRangeMarkers == null
this.annotations == null
location has only one value
org.jfree.chart.axis.AxisLocation.TOP_OR_LEFT has only one value
org.jfree.chart.axis.AxisLocation.TOP_OR_RIGHT has only one value
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT has only one value
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_RIGHT has only one value
org.jfree.chart.axis.AxisLocation.TOP_OR_LEFT.name has only one value
org.jfree.chart.axis.AxisLocation.TOP_OR_LEFT.name.toString == "AxisLocation.TOP_OR_LEFT"
org.jfree.chart.axis.AxisLocation.TOP_OR_RIGHT.name has only one value
org.jfree.chart.axis.AxisLocation.TOP_OR_RIGHT.name.toString == "AxisLocation.TOP_OR_RIGHT"
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT.name has only one value
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT.name.toString == "AxisLocation.BOTTOM_OR_LEFT"
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_RIGHT.name has only one value
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_RIGHT.name.toString == "AxisLocation.BOTTOM_OR_RIGHT"
location.name has only one value
location.name.toString == "AxisLocation.TOP_OR_LEFT"
notify == false
===========================================================================
org.jfree.chart.plot.CategoryPlot.setRangeAxisLocation(org.jfree.chart.axis.AxisLocation, boolean):::EXIT
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE)
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_VALUE_LABEL_FONT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_VALUE_LABEL_FONT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT.getClass().getName())
org.jfree.chart.plot.CategoryPlot.localizationResources == orig(org.jfree.chart.plot.CategoryPlot.localizationResources)
org.jfree.chart.plot.CategoryPlot.localizationResources.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.localizationResources.getClass().getName())
this.orientation == orig(this.orientation)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL)
org.jfree.chart.plot.PlotOrientation.VERTICAL == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name.toString == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name.toString)
org.jfree.chart.plot.PlotOrientation.VERTICAL.name == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL.name)
org.jfree.chart.plot.PlotOrientation.VERTICAL.name.toString == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL.name.toString)
this.orientation.name == orig(this.orientation.name)
this.orientation.name.toString == orig(this.orientation.name.toString)
this.axisOffset == orig(this.axisOffset)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.top == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.top)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.left == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.left)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.bottom == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.bottom)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.right == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.right)
this.axisOffset.unitType == orig(this.axisOffset.unitType)
org.jfree.chart.util.UnitType.ABSOLUTE == orig(org.jfree.chart.util.UnitType.ABSOLUTE)
org.jfree.chart.util.UnitType.RELATIVE == orig(org.jfree.chart.util.UnitType.RELATIVE)
this.axisOffset.unitType.name == orig(this.axisOffset.unitType.name)
this.axisOffset.unitType.name.toString == orig(this.axisOffset.unitType.name.toString)
this.axisOffset.top == orig(this.axisOffset.top)
this.axisOffset.left == orig(this.axisOffset.left)
this.axisOffset.bottom == orig(this.axisOffset.bottom)
this.axisOffset.right == orig(this.axisOffset.right)
this.domainAxes == orig(this.domainAxes)
this.domainAxes.objects == orig(this.domainAxes.objects)
this.domainAxes.objects.getClass().getName() == orig(this.domainAxes.objects.getClass().getName())
this.domainAxes.objects[] == orig(this.domainAxes.objects[])
this.domainAxes.size == orig(this.domainAxes.size)
this.domainAxes.increment == orig(this.domainAxes.increment)
this.domainAxisLocations == orig(this.domainAxisLocations)
this.domainAxisLocations.objects == orig(this.domainAxisLocations.objects)
this.domainAxisLocations.objects.getClass().getName() == orig(this.domainAxisLocations.objects.getClass().getName())
this.domainAxisLocations.objects[] == orig(this.domainAxisLocations.objects[])
this.domainAxisLocations.size == orig(this.domainAxisLocations.size)
this.domainAxisLocations.increment == orig(this.domainAxisLocations.increment)
this.drawSharedDomainAxis == orig(this.drawSharedDomainAxis)
this.rangeAxes == orig(this.rangeAxes)
this.rangeAxes.objects == orig(this.rangeAxes.objects)
this.rangeAxes.objects.getClass().getName() == orig(this.rangeAxes.objects.getClass().getName())
this.rangeAxes.objects[] == orig(this.rangeAxes.objects[])
this.rangeAxes.size == orig(this.rangeAxes.size)
this.rangeAxes.increment == orig(this.rangeAxes.increment)
this.rangeAxisLocations == orig(this.rangeAxisLocations)
this.rangeAxisLocations.objects == orig(this.rangeAxisLocations.objects)
this.rangeAxisLocations.objects.getClass().getName() == orig(this.rangeAxisLocations.objects.getClass().getName())
this.rangeAxisLocations.increment == orig(this.rangeAxisLocations.increment)
this.datasets == orig(this.datasets)
this.datasets.objects == orig(this.datasets.objects)
this.datasets.objects.getClass().getName() == orig(this.datasets.objects.getClass().getName())
this.datasets.objects[] == orig(this.datasets.objects[])
this.datasets.size == orig(this.datasets.size)
this.datasets.increment == orig(this.datasets.increment)
this.datasetToDomainAxisMap == orig(this.datasetToDomainAxisMap)
this.datasetToDomainAxisMap.objects == orig(this.datasetToDomainAxisMap.objects)
this.datasetToDomainAxisMap.objects.getClass().getName() == orig(this.datasetToDomainAxisMap.objects.getClass().getName())
this.datasetToDomainAxisMap.objects[] == orig(this.datasetToDomainAxisMap.objects[])
this.datasetToDomainAxisMap.size == orig(this.datasetToDomainAxisMap.size)
this.datasetToDomainAxisMap.increment == orig(this.datasetToDomainAxisMap.increment)
this.datasetToRangeAxisMap == orig(this.datasetToRangeAxisMap)
this.datasetToRangeAxisMap.objects == orig(this.datasetToRangeAxisMap.objects)
this.datasetToRangeAxisMap.objects.getClass().getName() == orig(this.datasetToRangeAxisMap.objects.getClass().getName())
this.datasetToRangeAxisMap.objects[] == orig(this.datasetToRangeAxisMap.objects[])
this.datasetToRangeAxisMap.size == orig(this.datasetToRangeAxisMap.size)
this.datasetToRangeAxisMap.increment == orig(this.datasetToRangeAxisMap.increment)
this.renderers == orig(this.renderers)
this.renderers.objects == orig(this.renderers.objects)
this.renderers.objects.getClass().getName() == orig(this.renderers.objects.getClass().getName())
this.renderers.objects[] == orig(this.renderers.objects[])
this.renderers.size == orig(this.renderers.size)
this.renderers.increment == orig(this.renderers.increment)
this.renderingOrder == orig(this.renderingOrder)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name.toString == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name.toString)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name.toString == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name.toString)
this.renderingOrder.name == orig(this.renderingOrder.name)
this.renderingOrder.name.toString == orig(this.renderingOrder.name.toString)
this.columnRenderingOrder == orig(this.columnRenderingOrder)
org.jfree.chart.util.SortOrder.ASCENDING == orig(org.jfree.chart.util.SortOrder.ASCENDING)
org.jfree.chart.util.SortOrder.DESCENDING == orig(org.jfree.chart.util.SortOrder.DESCENDING)
org.jfree.chart.util.SortOrder.ASCENDING.name == orig(org.jfree.chart.util.SortOrder.ASCENDING.name)
org.jfree.chart.util.SortOrder.ASCENDING.name.toString == orig(org.jfree.chart.util.SortOrder.ASCENDING.name.toString)
org.jfree.chart.util.SortOrder.DESCENDING.name == orig(org.jfree.chart.util.SortOrder.DESCENDING.name)
org.jfree.chart.util.SortOrder.DESCENDING.name.toString == orig(org.jfree.chart.util.SortOrder.DESCENDING.name.toString)
this.columnRenderingOrder.name == orig(this.columnRenderingOrder.name)
this.columnRenderingOrder.name.toString == orig(this.columnRenderingOrder.name.toString)
this.rowRenderingOrder == orig(this.rowRenderingOrder)
this.rowRenderingOrder.name == orig(this.rowRenderingOrder.name)
this.rowRenderingOrder.name.toString == orig(this.rowRenderingOrder.name.toString)
this.domainGridlinesVisible == orig(this.domainGridlinesVisible)
this.domainGridlinePosition == orig(this.domainGridlinePosition)
org.jfree.chart.axis.CategoryAnchor.START == orig(org.jfree.chart.axis.CategoryAnchor.START)
org.jfree.chart.axis.CategoryAnchor.MIDDLE == orig(org.jfree.chart.axis.CategoryAnchor.MIDDLE)
org.jfree.chart.axis.CategoryAnchor.END == orig(org.jfree.chart.axis.CategoryAnchor.END)
org.jfree.chart.axis.CategoryAnchor.START.name == orig(org.jfree.chart.axis.CategoryAnchor.START.name)
org.jfree.chart.axis.CategoryAnchor.START.name.toString == orig(org.jfree.chart.axis.CategoryAnchor.START.name.toString)
org.jfree.chart.axis.CategoryAnchor.MIDDLE.name == orig(org.jfree.chart.axis.CategoryAnchor.MIDDLE.name)
org.jfree.chart.axis.CategoryAnchor.MIDDLE.name.toString == orig(org.jfree.chart.axis.CategoryAnchor.MIDDLE.name.toString)
org.jfree.chart.axis.CategoryAnchor.END.name == orig(org.jfree.chart.axis.CategoryAnchor.END.name)
org.jfree.chart.axis.CategoryAnchor.END.name.toString == orig(org.jfree.chart.axis.CategoryAnchor.END.name.toString)
this.domainGridlineStroke == orig(this.domainGridlineStroke)
this.domainGridlinePaint == orig(this.domainGridlinePaint)
this.rangeGridlinesVisible == orig(this.rangeGridlinesVisible)
this.rangeGridlineStroke == orig(this.rangeGridlineStroke)
this.rangeGridlinePaint == orig(this.rangeGridlinePaint)
this.anchorValue == orig(this.anchorValue)
this.rangeCrosshairVisible == orig(this.rangeCrosshairVisible)
this.rangeCrosshairValue == orig(this.rangeCrosshairValue)
this.rangeCrosshairStroke == orig(this.rangeCrosshairStroke)
this.rangeCrosshairPaint == orig(this.rangeCrosshairPaint)
this.rangeCrosshairLockedOnData == orig(this.rangeCrosshairLockedOnData)
this.foregroundDomainMarkers == orig(this.foregroundDomainMarkers)
this.backgroundDomainMarkers == orig(this.backgroundDomainMarkers)
this.foregroundRangeMarkers == orig(this.foregroundRangeMarkers)
this.backgroundRangeMarkers == orig(this.backgroundRangeMarkers)
this.annotations == orig(this.annotations)
this.weight == orig(this.weight)
this.fixedDomainAxisSpace == orig(this.fixedDomainAxisSpace)
this.fixedRangeAxisSpace == orig(this.fixedRangeAxisSpace)
this.fixedLegendItems == orig(this.fixedLegendItems)
org.jfree.chart.plot.Plot.ZERO == orig(org.jfree.chart.plot.Plot.ZERO)
org.jfree.chart.plot.Plot.ZERO.getClass().getName() == orig(org.jfree.chart.plot.Plot.ZERO.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_INSETS == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name.toString == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name.toString)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.top == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.top)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.left == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.left)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.right == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.right)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName())
this.parent == orig(this.parent)
org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener == orig(org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener)
this.datasetGroup == orig(this.datasetGroup)
this.noDataMessage == orig(this.noDataMessage)
this.noDataMessageFont == orig(this.noDataMessageFont)
this.noDataMessagePaint == orig(this.noDataMessagePaint)
this.noDataMessagePaint.getClass().getName() == orig(this.noDataMessagePaint.getClass().getName())
this.insets == orig(this.insets)
this.insets.unitType == orig(this.insets.unitType)
this.insets.unitType.name == orig(this.insets.unitType.name)
this.insets.unitType.name.toString == orig(this.insets.unitType.name.toString)
this.insets.top == orig(this.insets.top)
this.insets.left == orig(this.insets.left)
this.insets.bottom == orig(this.insets.bottom)
this.insets.right == orig(this.insets.right)
this.outlineVisible == orig(this.outlineVisible)
this.outlineStroke == orig(this.outlineStroke)
this.outlineStroke.getClass().getName() == orig(this.outlineStroke.getClass().getName())
this.outlinePaint == orig(this.outlinePaint)
this.outlinePaint.getClass().getName() == orig(this.outlinePaint.getClass().getName())
this.backgroundPaint == orig(this.backgroundPaint)
this.backgroundPaint.getClass().getName() == orig(this.backgroundPaint.getClass().getName())
this.backgroundImage == orig(this.backgroundImage)
this.backgroundImageAlignment == orig(this.backgroundImageAlignment)
this.backgroundImageAlpha == orig(this.backgroundImageAlpha)
this.foregroundAlpha == orig(this.foregroundAlpha)
this.backgroundAlpha == orig(this.backgroundAlpha)
this.drawingSupplier == orig(this.drawingSupplier)
this.drawingSupplier.getClass().getName() == orig(this.drawingSupplier.getClass().getName())
this.listenerList == orig(this.listenerList)
org.jfree.chart.axis.AxisLocation.TOP_OR_LEFT == orig(org.jfree.chart.axis.AxisLocation.TOP_OR_LEFT)
org.jfree.chart.axis.AxisLocation.TOP_OR_RIGHT == orig(org.jfree.chart.axis.AxisLocation.TOP_OR_RIGHT)
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT == orig(org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT)
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_RIGHT == orig(org.jfree.chart.axis.AxisLocation.BOTTOM_OR_RIGHT)
org.jfree.chart.axis.AxisLocation.TOP_OR_LEFT.name == orig(org.jfree.chart.axis.AxisLocation.TOP_OR_LEFT.name)
org.jfree.chart.axis.AxisLocation.TOP_OR_LEFT.name.toString == orig(org.jfree.chart.axis.AxisLocation.TOP_OR_LEFT.name.toString)
org.jfree.chart.axis.AxisLocation.TOP_OR_RIGHT.name == orig(org.jfree.chart.axis.AxisLocation.TOP_OR_RIGHT.name)
org.jfree.chart.axis.AxisLocation.TOP_OR_RIGHT.name.toString == orig(org.jfree.chart.axis.AxisLocation.TOP_OR_RIGHT.name.toString)
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT.name == orig(org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT.name)
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT.name.toString == orig(org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT.name.toString)
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_RIGHT.name == orig(org.jfree.chart.axis.AxisLocation.BOTTOM_OR_RIGHT.name)
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_RIGHT.name.toString == orig(org.jfree.chart.axis.AxisLocation.BOTTOM_OR_RIGHT.name.toString)
location.name == orig(location.name)
location.name.toString == orig(location.name.toString)
size(this.rangeAxisLocations.objects[]) == orig(size(this.rangeAxisLocations.objects[]))
this.domainAxes.size == 0
this.domainAxisLocations.objects[] has only one value, of length 8
this.domainAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.domainAxisLocations.size == 1
this.rangeAxes.size == 0
this.rangeAxisLocations.objects[] has only one value, of length 8
this.rangeAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.rangeAxisLocations.size == 1
this.datasetToDomainAxisMap.objects[] contains only nulls and has only one value, of length 8
this.datasetToDomainAxisMap.objects[] elements == null
this.datasetToDomainAxisMap.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.datasetToDomainAxisMap.objects[].getClass().getName() elements == null
this.datasetToDomainAxisMap.size == 0
this.datasetToRangeAxisMap.objects[] contains only nulls and has only one value, of length 8
this.datasetToRangeAxisMap.objects[] elements == null
this.datasetToRangeAxisMap.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.datasetToRangeAxisMap.objects[].getClass().getName() elements == null
this.datasetToRangeAxisMap.size == 0
this.renderers.size == 0
this.domainGridlinePosition == null
this.domainGridlineStroke == null
this.domainGridlinePaint == null
this.rangeGridlinesVisible == false
this.rangeGridlineStroke == null
this.rangeGridlinePaint == null
this.rangeCrosshairStroke == null
this.rangeCrosshairPaint == null
this.foregroundDomainMarkers == null
this.backgroundDomainMarkers == null
this.foregroundRangeMarkers == null
this.backgroundRangeMarkers == null
this.annotations == null
org.jfree.chart.axis.AxisLocation.TOP_OR_LEFT has only one value
org.jfree.chart.axis.AxisLocation.TOP_OR_RIGHT has only one value
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT has only one value
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_RIGHT has only one value
org.jfree.chart.axis.AxisLocation.TOP_OR_LEFT.name has only one value
org.jfree.chart.axis.AxisLocation.TOP_OR_LEFT.name.toString == "AxisLocation.TOP_OR_LEFT"
org.jfree.chart.axis.AxisLocation.TOP_OR_RIGHT.name has only one value
org.jfree.chart.axis.AxisLocation.TOP_OR_RIGHT.name.toString == "AxisLocation.TOP_OR_RIGHT"
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT.name has only one value
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT.name.toString == "AxisLocation.BOTTOM_OR_LEFT"
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_RIGHT.name has only one value
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_RIGHT.name.toString == "AxisLocation.BOTTOM_OR_RIGHT"
location.name has only one value
location.name.toString == "AxisLocation.TOP_OR_LEFT"
===========================================================================
org.jfree.chart.plot.DatasetRenderingOrder:::CLASS
===========================================================================
org.jfree.chart.plot.DatasetRenderingOrder:::OBJECT
this.name.toString one of { "DatasetRenderingOrder.FORWARD", "DatasetRenderingOrder.REVERSE" }
===========================================================================
org.jfree.chart.plot.DatasetRenderingOrder.DatasetRenderingOrder(java.lang.String):::ENTER
name.toString one of { "DatasetRenderingOrder.FORWARD", "DatasetRenderingOrder.REVERSE" }
===========================================================================
org.jfree.chart.plot.DatasetRenderingOrder.DatasetRenderingOrder(java.lang.String):::EXIT
name.toString == orig(name.toString)
name.toString one of { "DatasetRenderingOrder.FORWARD", "DatasetRenderingOrder.REVERSE" }
===========================================================================
org.jfree.chart.plot.DefaultDrawingSupplier:::CLASS
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_PAINT_SEQUENCE.getClass().getName() == org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_OUTLINE_PAINT_SEQUENCE.getClass().getName()
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_PAINT_SEQUENCE.getClass().getName() == org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_FILL_PAINT_SEQUENCE.getClass().getName()
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_STROKE_SEQUENCE.getClass().getName() == org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_OUTLINE_STROKE_SEQUENCE.getClass().getName()
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_PAINT_SEQUENCE has only one value
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_PAINT_SEQUENCE.getClass().getName() == java.awt.Paint[].class
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_PAINT_SEQUENCE[] contains no nulls and has only one value, of length 34
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_PAINT_SEQUENCE[].getClass().getName() == [java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color]
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_PAINT_SEQUENCE[].getClass().getName() elements == java.awt.Color.class
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_OUTLINE_PAINT_SEQUENCE has only one value
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_OUTLINE_PAINT_SEQUENCE[] contains no nulls and has only one value, of length 1
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_OUTLINE_PAINT_SEQUENCE[] elements has only one value
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_OUTLINE_PAINT_SEQUENCE[].getClass().getName() == [java.awt.Color]
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_OUTLINE_PAINT_SEQUENCE[].getClass().getName() elements == java.awt.Color.class
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_FILL_PAINT_SEQUENCE has only one value
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_FILL_PAINT_SEQUENCE[] contains no nulls and has only one value, of length 1
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_FILL_PAINT_SEQUENCE[] elements has only one value
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_FILL_PAINT_SEQUENCE[].getClass().getName() == [java.awt.Color]
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_FILL_PAINT_SEQUENCE[].getClass().getName() elements == java.awt.Color.class
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_STROKE_SEQUENCE has only one value
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_STROKE_SEQUENCE.getClass().getName() == java.awt.Stroke[].class
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_STROKE_SEQUENCE[] contains no nulls and has only one value, of length 1
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_STROKE_SEQUENCE[] elements has only one value
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_STROKE_SEQUENCE[].getClass().getName() == [java.awt.BasicStroke]
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_STROKE_SEQUENCE[].getClass().getName() elements == java.awt.BasicStroke.class
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_OUTLINE_STROKE_SEQUENCE has only one value
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_OUTLINE_STROKE_SEQUENCE[] contains no nulls and has only one value, of length 1
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_OUTLINE_STROKE_SEQUENCE[] elements has only one value
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_OUTLINE_STROKE_SEQUENCE[].getClass().getName() == [java.awt.BasicStroke]
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_OUTLINE_STROKE_SEQUENCE[].getClass().getName() elements == java.awt.BasicStroke.class
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_SHAPE_SEQUENCE has only one value
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_SHAPE_SEQUENCE.getClass().getName() == java.awt.Shape[].class
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_SHAPE_SEQUENCE[] contains no nulls and has only one value, of length 10
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_SHAPE_SEQUENCE[].getClass().getName() == [java.awt.geom.Rectangle2D.Double, java.awt.geom.Ellipse2D.Double, java.awt.Polygon, java.awt.Polygon, java.awt.geom.Rectangle2D.Double, java.awt.Polygon, java.awt.geom.Ellipse2D.Double, java.awt.Polygon, java.awt.geom.Rectangle2D.Double, java.awt.Polygon]
size(org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_PAINT_SEQUENCE[]) == 34
size(org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_OUTLINE_PAINT_SEQUENCE[]) == 1
size(org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_FILL_PAINT_SEQUENCE[]) == 1
size(org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_STROKE_SEQUENCE[]) == 1
size(org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_OUTLINE_STROKE_SEQUENCE[]) == 1
size(org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_SHAPE_SEQUENCE[]) == 10
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_PAINT_SEQUENCE.getClass().getName() != org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_STROKE_SEQUENCE.getClass().getName()
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_PAINT_SEQUENCE.getClass().getName() != org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_SHAPE_SEQUENCE.getClass().getName()
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_STROKE_SEQUENCE.getClass().getName() != org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_SHAPE_SEQUENCE.getClass().getName()
===========================================================================
org.jfree.chart.plot.DefaultDrawingSupplier:::OBJECT
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_PAINT_SEQUENCE.getClass().getName() == this.paintSequence.getClass().getName()
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_PAINT_SEQUENCE.getClass().getName() == this.outlinePaintSequence.getClass().getName()
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_PAINT_SEQUENCE.getClass().getName() == this.fillPaintSequence.getClass().getName()
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_STROKE_SEQUENCE.getClass().getName() == this.strokeSequence.getClass().getName()
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_STROKE_SEQUENCE.getClass().getName() == this.outlineStrokeSequence.getClass().getName()
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_SHAPE_SEQUENCE.getClass().getName() == this.shapeSequence.getClass().getName()
this.paintSequence has only one value
this.paintSequence[] contains no nulls and has only one value, of length 34
this.paintSequence[].getClass().getName() == [java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color]
this.paintSequence[].getClass().getName() elements == java.awt.Color.class
this.paintIndex == 0
this.outlinePaintSequence has only one value
this.outlinePaintSequence[] contains no nulls and has only one value, of length 1
this.outlinePaintSequence[] elements has only one value
this.outlinePaintSequence[].getClass().getName() == [java.awt.Color]
this.outlinePaintSequence[].getClass().getName() elements == java.awt.Color.class
this.outlinePaintIndex == 0
this.fillPaintSequence has only one value
this.fillPaintSequence[] contains no nulls and has only one value, of length 1
this.fillPaintSequence[] elements has only one value
this.fillPaintSequence[].getClass().getName() == [java.awt.Color]
this.fillPaintSequence[].getClass().getName() elements == java.awt.Color.class
this.fillPaintIndex == 0
this.strokeSequence has only one value
this.strokeSequence[] contains no nulls and has only one value, of length 1
this.strokeSequence[] elements has only one value
this.strokeSequence[].getClass().getName() == [java.awt.BasicStroke]
this.strokeSequence[].getClass().getName() elements == java.awt.BasicStroke.class
this.strokeIndex == 0
this.outlineStrokeSequence has only one value
this.outlineStrokeSequence[] contains no nulls and has only one value, of length 1
this.outlineStrokeSequence[] elements has only one value
this.outlineStrokeSequence[].getClass().getName() == [java.awt.BasicStroke]
this.outlineStrokeSequence[].getClass().getName() elements == java.awt.BasicStroke.class
this.outlineStrokeIndex == 0
this.shapeSequence has only one value
this.shapeSequence[] contains no nulls and has only one value, of length 10
this.shapeSequence[].getClass().getName() == [java.awt.geom.Rectangle2D.Double, java.awt.geom.Ellipse2D.Double, java.awt.Polygon, java.awt.Polygon, java.awt.geom.Rectangle2D.Double, java.awt.Polygon, java.awt.geom.Ellipse2D.Double, java.awt.Polygon, java.awt.geom.Rectangle2D.Double, java.awt.Polygon]
this.shapeIndex == 0
size(this.paintSequence[]) == 34
size(this.outlinePaintSequence[]) == 1
size(this.fillPaintSequence[]) == 1
size(this.strokeSequence[]) == 1
size(this.outlineStrokeSequence[]) == 1
size(this.shapeSequence[]) == 10
===========================================================================
org.jfree.chart.plot.DefaultDrawingSupplier.DefaultDrawingSupplier():::EXIT
===========================================================================
org.jfree.chart.plot.DefaultDrawingSupplier.DefaultDrawingSupplier(java.awt.Paint[], java.awt.Paint[], java.awt.Paint[], java.awt.Stroke[], java.awt.Stroke[], java.awt.Shape[]):::ENTER
paintSequence.getClass().getName() == fillPaintSequence.getClass().getName()
paintSequence.getClass().getName() == outlinePaintSequence.getClass().getName()
strokeSequence.getClass().getName() == outlineStrokeSequence.getClass().getName()
paintSequence has only one value
paintSequence.getClass().getName() == java.awt.Paint[].class
paintSequence[] contains no nulls and has only one value, of length 34
fillPaintSequence has only one value
fillPaintSequence[] contains no nulls and has only one value, of length 1
fillPaintSequence[] elements has only one value
outlinePaintSequence has only one value
outlinePaintSequence[] contains no nulls and has only one value, of length 1
outlinePaintSequence[] elements has only one value
strokeSequence has only one value
strokeSequence.getClass().getName() == java.awt.Stroke[].class
strokeSequence[] contains no nulls and has only one value, of length 1
strokeSequence[] elements has only one value
outlineStrokeSequence has only one value
outlineStrokeSequence[] contains no nulls and has only one value, of length 1
outlineStrokeSequence[] elements has only one value
shapeSequence has only one value
shapeSequence.getClass().getName() == java.awt.Shape[].class
shapeSequence[] contains no nulls and has only one value, of length 10
size(paintSequence[]) == 34
size(fillPaintSequence[]) == 1
size(outlinePaintSequence[]) == 1
size(strokeSequence[]) == 1
size(outlineStrokeSequence[]) == 1
size(shapeSequence[]) == 10
===========================================================================
org.jfree.chart.plot.DefaultDrawingSupplier.DefaultDrawingSupplier(java.awt.Paint[], java.awt.Paint[], java.awt.Paint[], java.awt.Stroke[], java.awt.Stroke[], java.awt.Shape[]):::EXIT
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_PAINT_SEQUENCE.getClass().getName() == orig(paintSequence.getClass().getName())
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_PAINT_SEQUENCE.getClass().getName() == orig(fillPaintSequence.getClass().getName())
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_PAINT_SEQUENCE.getClass().getName() == orig(outlinePaintSequence.getClass().getName())
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_STROKE_SEQUENCE.getClass().getName() == orig(strokeSequence.getClass().getName())
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_STROKE_SEQUENCE.getClass().getName() == orig(outlineStrokeSequence.getClass().getName())
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_SHAPE_SEQUENCE.getClass().getName() == orig(shapeSequence.getClass().getName())
paintSequence[] == orig(paintSequence[])
fillPaintSequence[] == orig(fillPaintSequence[])
outlinePaintSequence[] == orig(outlinePaintSequence[])
strokeSequence[] == orig(strokeSequence[])
outlineStrokeSequence[] == orig(outlineStrokeSequence[])
shapeSequence[] == orig(shapeSequence[])
paintSequence[] contains no nulls and has only one value, of length 34
fillPaintSequence[] contains no nulls and has only one value, of length 1
fillPaintSequence[] elements has only one value
outlinePaintSequence[] contains no nulls and has only one value, of length 1
outlinePaintSequence[] elements has only one value
strokeSequence[] contains no nulls and has only one value, of length 1
strokeSequence[] elements has only one value
outlineStrokeSequence[] contains no nulls and has only one value, of length 1
outlineStrokeSequence[] elements has only one value
shapeSequence[] contains no nulls and has only one value, of length 10
===========================================================================
org.jfree.chart.plot.DefaultDrawingSupplier.createStandardSeriesShapes():::ENTER
===========================================================================
org.jfree.chart.plot.DefaultDrawingSupplier.createStandardSeriesShapes():::EXIT
return has only one value
return.getClass().getName() == java.awt.Shape[].class
return[] contains no nulls and has only one value, of length 10
size(return[]) == 10
===========================================================================
org.jfree.chart.plot.DefaultDrawingSupplier.intArray(double, double, double):::ENTER
a one of { -3.0, 0.0 }
b one of { -3.0, 0.0, 3.0 }
c one of { -3.0, 0.0, 3.0 }
===========================================================================
org.jfree.chart.plot.DefaultDrawingSupplier.intArray(double, double, double):::EXIT
return[] elements one of { -3, 0, 3 }
size(return[]) == 3
===========================================================================
org.jfree.chart.plot.DefaultDrawingSupplier.intArray(double, double, double, double):::ENTER
a one of { -3.0, 0.0 }
b one of { 0.0, 3.0 }
c one of { 0.0, 3.0 }
d one of { -3.0, 0.0 }
===========================================================================
org.jfree.chart.plot.DefaultDrawingSupplier.intArray(double, double, double, double):::EXIT
return[] elements one of { -3, 0, 3 }
return[] one of { [-3, 0, 3, 0], [0, 3, 0, -3] }
size(return[]) == 4
===========================================================================
org.jfree.chart.plot.Marker:::CLASS
===========================================================================
org.jfree.chart.plot.Marker:::OBJECT
this.paint != null
this.paint.getClass().getName() == java.awt.Color.class
this.stroke != null
this.stroke.getClass().getName() == java.awt.BasicStroke.class
this.outlinePaint != null
this.outlinePaint.getClass().getName() == java.awt.Color.class
this.outlineStroke != null
this.outlineStroke.getClass().getName() == java.awt.BasicStroke.class
this.alpha one of { 0.6, 0.8, 1.0 }
this.label == null
this.labelFont != null
this.labelPaint has only one value
this.labelPaint != null
this.labelPaint.getClass().getName() == java.awt.Color.class
this.labelAnchor has only one value
this.labelAnchor != null
org.jfree.chart.util.RectangleAnchor.CENTER has only one value
org.jfree.chart.util.RectangleAnchor.CENTER != null
org.jfree.chart.util.RectangleAnchor.TOP has only one value
org.jfree.chart.util.RectangleAnchor.TOP != null
org.jfree.chart.util.RectangleAnchor.TOP_LEFT has only one value
org.jfree.chart.util.RectangleAnchor.TOP_LEFT != null
org.jfree.chart.util.RectangleAnchor.TOP_RIGHT has only one value
org.jfree.chart.util.RectangleAnchor.TOP_RIGHT != null
org.jfree.chart.util.RectangleAnchor.BOTTOM has only one value
org.jfree.chart.util.RectangleAnchor.BOTTOM != null
org.jfree.chart.util.RectangleAnchor.BOTTOM_LEFT has only one value
org.jfree.chart.util.RectangleAnchor.BOTTOM_LEFT != null
org.jfree.chart.util.RectangleAnchor.BOTTOM_RIGHT has only one value
org.jfree.chart.util.RectangleAnchor.BOTTOM_RIGHT != null
org.jfree.chart.util.RectangleAnchor.LEFT has only one value
org.jfree.chart.util.RectangleAnchor.LEFT != null
org.jfree.chart.util.RectangleAnchor.RIGHT has only one value
org.jfree.chart.util.RectangleAnchor.RIGHT != null
org.jfree.chart.util.RectangleAnchor.CENTER.name has only one value
org.jfree.chart.util.RectangleAnchor.CENTER.name != null
org.jfree.chart.util.RectangleAnchor.CENTER.name.toString == "RectangleAnchor.CENTER"
org.jfree.chart.util.RectangleAnchor.TOP.name has only one value
org.jfree.chart.util.RectangleAnchor.TOP.name != null
org.jfree.chart.util.RectangleAnchor.TOP.name.toString == "RectangleAnchor.TOP"
org.jfree.chart.util.RectangleAnchor.TOP_LEFT.name has only one value
org.jfree.chart.util.RectangleAnchor.TOP_LEFT.name != null
org.jfree.chart.util.RectangleAnchor.TOP_LEFT.name.toString == "RectangleAnchor.TOP_LEFT"
org.jfree.chart.util.RectangleAnchor.TOP_RIGHT.name has only one value
org.jfree.chart.util.RectangleAnchor.TOP_RIGHT.name != null
org.jfree.chart.util.RectangleAnchor.TOP_RIGHT.name.toString == "RectangleAnchor.TOP_RIGHT"
org.jfree.chart.util.RectangleAnchor.BOTTOM.name has only one value
org.jfree.chart.util.RectangleAnchor.BOTTOM.name != null
org.jfree.chart.util.RectangleAnchor.BOTTOM.name.toString == "RectangleAnchor.BOTTOM"
org.jfree.chart.util.RectangleAnchor.BOTTOM_LEFT.name has only one value
org.jfree.chart.util.RectangleAnchor.BOTTOM_LEFT.name != null
org.jfree.chart.util.RectangleAnchor.BOTTOM_LEFT.name.toString == "RectangleAnchor.BOTTOM_LEFT"
org.jfree.chart.util.RectangleAnchor.BOTTOM_RIGHT.name has only one value
org.jfree.chart.util.RectangleAnchor.BOTTOM_RIGHT.name != null
org.jfree.chart.util.RectangleAnchor.BOTTOM_RIGHT.name.toString == "RectangleAnchor.BOTTOM_RIGHT"
org.jfree.chart.util.RectangleAnchor.LEFT.name has only one value
org.jfree.chart.util.RectangleAnchor.LEFT.name != null
org.jfree.chart.util.RectangleAnchor.LEFT.name.toString == "RectangleAnchor.LEFT"
org.jfree.chart.util.RectangleAnchor.RIGHT.name has only one value
org.jfree.chart.util.RectangleAnchor.RIGHT.name != null
org.jfree.chart.util.RectangleAnchor.RIGHT.name.toString == "RectangleAnchor.RIGHT"
this.labelAnchor.name has only one value
this.labelAnchor.name != null
this.labelAnchor.name.toString == "RectangleAnchor.TOP_LEFT"
this.labelTextAnchor has only one value
this.labelTextAnchor != null
org.jfree.chart.text.TextAnchor.TOP_LEFT has only one value
org.jfree.chart.text.TextAnchor.TOP_LEFT != null
org.jfree.chart.text.TextAnchor.TOP_CENTER has only one value
org.jfree.chart.text.TextAnchor.TOP_CENTER != null
org.jfree.chart.text.TextAnchor.TOP_RIGHT has only one value
org.jfree.chart.text.TextAnchor.TOP_RIGHT != null
org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT has only one value
org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT != null
org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER has only one value
org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER != null
org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT has only one value
org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT != null
org.jfree.chart.text.TextAnchor.CENTER_LEFT has only one value
org.jfree.chart.text.TextAnchor.CENTER_LEFT != null
org.jfree.chart.text.TextAnchor.CENTER has only one value
org.jfree.chart.text.TextAnchor.CENTER != null
org.jfree.chart.text.TextAnchor.CENTER_RIGHT has only one value
org.jfree.chart.text.TextAnchor.CENTER_RIGHT != null
org.jfree.chart.text.TextAnchor.BASELINE_LEFT has only one value
org.jfree.chart.text.TextAnchor.BASELINE_LEFT != null
org.jfree.chart.text.TextAnchor.BASELINE_CENTER has only one value
org.jfree.chart.text.TextAnchor.BASELINE_CENTER != null
org.jfree.chart.text.TextAnchor.BASELINE_RIGHT has only one value
org.jfree.chart.text.TextAnchor.BASELINE_RIGHT != null
org.jfree.chart.text.TextAnchor.BOTTOM_LEFT has only one value
org.jfree.chart.text.TextAnchor.BOTTOM_LEFT != null
org.jfree.chart.text.TextAnchor.BOTTOM_CENTER has only one value
org.jfree.chart.text.TextAnchor.BOTTOM_CENTER != null
org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT has only one value
org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT != null
org.jfree.chart.text.TextAnchor.TOP_LEFT.name has only one value
org.jfree.chart.text.TextAnchor.TOP_LEFT.name != null
org.jfree.chart.text.TextAnchor.TOP_LEFT.name.toString == "TextAnchor.TOP_LEFT"
org.jfree.chart.text.TextAnchor.TOP_CENTER.name has only one value
org.jfree.chart.text.TextAnchor.TOP_CENTER.name != null
org.jfree.chart.text.TextAnchor.TOP_CENTER.name.toString == "TextAnchor.TOP_CENTER"
org.jfree.chart.text.TextAnchor.TOP_RIGHT.name has only one value
org.jfree.chart.text.TextAnchor.TOP_RIGHT.name != null
org.jfree.chart.text.TextAnchor.TOP_RIGHT.name.toString == "TextAnchor.TOP_RIGHT"
org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT.name has only one value
org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT.name != null
org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT.name.toString == "TextAnchor.HALF_ASCENT_LEFT"
org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER.name has only one value
org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER.name != null
org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER.name.toString == "TextAnchor.HALF_ASCENT_CENTER"
org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT.name has only one value
org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT.name != null
org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT.name.toString == "TextAnchor.HALF_ASCENT_RIGHT"
org.jfree.chart.text.TextAnchor.CENTER_LEFT.name has only one value
org.jfree.chart.text.TextAnchor.CENTER_LEFT.name != null
org.jfree.chart.text.TextAnchor.CENTER_LEFT.name.toString == "TextAnchor.CENTER_LEFT"
org.jfree.chart.text.TextAnchor.CENTER.name has only one value
org.jfree.chart.text.TextAnchor.CENTER.name != null
org.jfree.chart.text.TextAnchor.CENTER.name.toString == "TextAnchor.CENTER"
org.jfree.chart.text.TextAnchor.CENTER_RIGHT.name has only one value
org.jfree.chart.text.TextAnchor.CENTER_RIGHT.name != null
org.jfree.chart.text.TextAnchor.CENTER_RIGHT.name.toString == "TextAnchor.CENTER_RIGHT"
org.jfree.chart.text.TextAnchor.BASELINE_LEFT.name has only one value
org.jfree.chart.text.TextAnchor.BASELINE_LEFT.name != null
org.jfree.chart.text.TextAnchor.BASELINE_LEFT.name.toString == "TextAnchor.BASELINE_LEFT"
org.jfree.chart.text.TextAnchor.BASELINE_CENTER.name has only one value
org.jfree.chart.text.TextAnchor.BASELINE_CENTER.name != null
org.jfree.chart.text.TextAnchor.BASELINE_CENTER.name.toString == "TextAnchor.BASELINE_CENTER"
org.jfree.chart.text.TextAnchor.BASELINE_RIGHT.name has only one value
org.jfree.chart.text.TextAnchor.BASELINE_RIGHT.name != null
org.jfree.chart.text.TextAnchor.BASELINE_RIGHT.name.toString == "TextAnchor.BASELINE_RIGHT"
org.jfree.chart.text.TextAnchor.BOTTOM_LEFT.name has only one value
org.jfree.chart.text.TextAnchor.BOTTOM_LEFT.name != null
org.jfree.chart.text.TextAnchor.BOTTOM_LEFT.name.toString == "TextAnchor.BOTTOM_LEFT"
org.jfree.chart.text.TextAnchor.BOTTOM_CENTER.name has only one value
org.jfree.chart.text.TextAnchor.BOTTOM_CENTER.name != null
org.jfree.chart.text.TextAnchor.BOTTOM_CENTER.name.toString == "TextAnchor.BOTTOM_CENTER"
org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT.name has only one value
org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT.name != null
org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT.name.toString == "TextAnchor.BOTTOM_RIGHT"
this.labelTextAnchor.name has only one value
this.labelTextAnchor.name != null
this.labelTextAnchor.name.toString == "TextAnchor.CENTER"
this.labelOffset != null
org.jfree.chart.util.RectangleInsets.ZERO_INSETS has only one value
org.jfree.chart.util.RectangleInsets.ZERO_INSETS != null
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType has only one value
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType != null
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.top == 0.0
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.left == 0.0
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.bottom == 0.0
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.right == 0.0
this.labelOffset.unitType has only one value
this.labelOffset.unitType != null
org.jfree.chart.util.UnitType.ABSOLUTE has only one value
org.jfree.chart.util.UnitType.ABSOLUTE != null
org.jfree.chart.util.UnitType.RELATIVE has only one value
org.jfree.chart.util.UnitType.RELATIVE != null
this.labelOffset.unitType.name has only one value
this.labelOffset.unitType.name != null
this.labelOffset.unitType.name.toString == "UnitType.ABSOLUTE"
this.labelOffset.top == 3.0
this.labelOffset.left == 3.0
this.labelOffset.bottom == 3.0
this.labelOffset.right == 3.0
this.labelOffsetType != null
org.jfree.chart.util.LengthAdjustmentType.NO_CHANGE has only one value
org.jfree.chart.util.LengthAdjustmentType.NO_CHANGE != null
org.jfree.chart.util.LengthAdjustmentType.EXPAND has only one value
org.jfree.chart.util.LengthAdjustmentType.EXPAND != null
org.jfree.chart.util.LengthAdjustmentType.CONTRACT has only one value
org.jfree.chart.util.LengthAdjustmentType.CONTRACT != null
org.jfree.chart.util.LengthAdjustmentType.NO_CHANGE.name has only one value
org.jfree.chart.util.LengthAdjustmentType.NO_CHANGE.name != null
org.jfree.chart.util.LengthAdjustmentType.NO_CHANGE.name.toString == "NO_CHANGE"
org.jfree.chart.util.LengthAdjustmentType.EXPAND.name has only one value
org.jfree.chart.util.LengthAdjustmentType.EXPAND.name != null
org.jfree.chart.util.LengthAdjustmentType.EXPAND.name.toString == "EXPAND"
org.jfree.chart.util.LengthAdjustmentType.CONTRACT.name has only one value
org.jfree.chart.util.LengthAdjustmentType.CONTRACT.name != null
org.jfree.chart.util.LengthAdjustmentType.CONTRACT.name.toString == "CONTRACT"
this.labelOffsetType.name != null
this.labelOffsetType.name.toString one of { "CONTRACT", "EXPAND" }
this.listenerList != null
===========================================================================
org.jfree.chart.plot.Marker.Marker():::EXIT
this.paint has only one value
this.outlinePaint has only one value
this.alpha == 0.8
this.labelOffsetType has only one value
this.labelOffsetType.name has only one value
this.labelOffsetType.name.toString == "CONTRACT"
org.jfree.chart.plot.Marker.class$org$jfree$chart$event$MarkerChangeListener has only one value
===========================================================================
org.jfree.chart.plot.Marker.Marker(java.awt.Paint):::ENTER
paint has only one value
paint.getClass().getName() == java.awt.Color.class
===========================================================================
org.jfree.chart.plot.Marker.Marker(java.awt.Paint):::EXIT
this.paint has only one value
this.outlinePaint has only one value
this.alpha == 0.8
this.labelOffsetType has only one value
this.labelOffsetType.name has only one value
this.labelOffsetType.name.toString == "CONTRACT"
org.jfree.chart.plot.Marker.class$org$jfree$chart$event$MarkerChangeListener has only one value
===========================================================================
org.jfree.chart.plot.Marker.Marker(java.awt.Paint, java.awt.Stroke, java.awt.Paint, java.awt.Stroke, float):::ENTER
paint.getClass().getName() == java.awt.Color.class
stroke.getClass().getName() == java.awt.BasicStroke.class
outlinePaint.getClass().getName() == java.awt.Color.class
outlineStroke.getClass().getName() == java.awt.BasicStroke.class
alpha one of { 0.6, 0.8, 1.0 }
===========================================================================
org.jfree.chart.plot.Marker.Marker(java.awt.Paint, java.awt.Stroke, java.awt.Paint, java.awt.Stroke, float):::EXIT
this.labelOffsetType has only one value
this.labelOffsetType.name has only one value
this.labelOffsetType.name.toString == "CONTRACT"
===========================================================================
org.jfree.chart.plot.Marker.addChangeListener(org.jfree.chart.event.MarkerChangeListener):::ENTER
this.getClass().getName() == org.jfree.chart.plot.ValueMarker.class
this.alpha == 0.6
this.labelOffsetType has only one value
this.labelOffsetType.name has only one value
this.labelOffsetType.name.toString == "CONTRACT"
listener.getClass().getName() == org.jfree.chart.plot.CategoryPlot.class
===========================================================================
org.jfree.chart.plot.Marker.addChangeListener(org.jfree.chart.event.MarkerChangeListener):::EXIT
this.paint == orig(this.paint)
this.paint.getClass().getName() == orig(this.paint.getClass().getName())
this.stroke == orig(this.stroke)
this.stroke.getClass().getName() == orig(this.stroke.getClass().getName())
this.outlinePaint == orig(this.outlinePaint)
this.outlinePaint.getClass().getName() == orig(this.outlinePaint.getClass().getName())
this.outlineStroke == orig(this.outlineStroke)
this.outlineStroke.getClass().getName() == orig(this.outlineStroke.getClass().getName())
this.alpha == orig(this.alpha)
this.label == orig(this.label)
this.labelFont == orig(this.labelFont)
this.labelPaint == orig(this.labelPaint)
this.labelPaint.getClass().getName() == orig(this.labelPaint.getClass().getName())
this.labelAnchor == orig(this.labelAnchor)
org.jfree.chart.util.RectangleAnchor.CENTER == orig(org.jfree.chart.util.RectangleAnchor.CENTER)
org.jfree.chart.util.RectangleAnchor.TOP == orig(org.jfree.chart.util.RectangleAnchor.TOP)
org.jfree.chart.util.RectangleAnchor.TOP_LEFT == orig(org.jfree.chart.util.RectangleAnchor.TOP_LEFT)
org.jfree.chart.util.RectangleAnchor.TOP_RIGHT == orig(org.jfree.chart.util.RectangleAnchor.TOP_RIGHT)
org.jfree.chart.util.RectangleAnchor.BOTTOM == orig(org.jfree.chart.util.RectangleAnchor.BOTTOM)
org.jfree.chart.util.RectangleAnchor.BOTTOM_LEFT == orig(org.jfree.chart.util.RectangleAnchor.BOTTOM_LEFT)
org.jfree.chart.util.RectangleAnchor.BOTTOM_RIGHT == orig(org.jfree.chart.util.RectangleAnchor.BOTTOM_RIGHT)
org.jfree.chart.util.RectangleAnchor.LEFT == orig(org.jfree.chart.util.RectangleAnchor.LEFT)
org.jfree.chart.util.RectangleAnchor.RIGHT == orig(org.jfree.chart.util.RectangleAnchor.RIGHT)
org.jfree.chart.util.RectangleAnchor.CENTER.name == orig(org.jfree.chart.util.RectangleAnchor.CENTER.name)
org.jfree.chart.util.RectangleAnchor.CENTER.name.toString == orig(org.jfree.chart.util.RectangleAnchor.CENTER.name.toString)
org.jfree.chart.util.RectangleAnchor.TOP.name == orig(org.jfree.chart.util.RectangleAnchor.TOP.name)
org.jfree.chart.util.RectangleAnchor.TOP.name.toString == orig(org.jfree.chart.util.RectangleAnchor.TOP.name.toString)
org.jfree.chart.util.RectangleAnchor.TOP_LEFT.name == orig(org.jfree.chart.util.RectangleAnchor.TOP_LEFT.name)
org.jfree.chart.util.RectangleAnchor.TOP_LEFT.name.toString == orig(org.jfree.chart.util.RectangleAnchor.TOP_LEFT.name.toString)
org.jfree.chart.util.RectangleAnchor.TOP_RIGHT.name == orig(org.jfree.chart.util.RectangleAnchor.TOP_RIGHT.name)
org.jfree.chart.util.RectangleAnchor.TOP_RIGHT.name.toString == orig(org.jfree.chart.util.RectangleAnchor.TOP_RIGHT.name.toString)
org.jfree.chart.util.RectangleAnchor.BOTTOM.name == orig(org.jfree.chart.util.RectangleAnchor.BOTTOM.name)
org.jfree.chart.util.RectangleAnchor.BOTTOM.name.toString == orig(org.jfree.chart.util.RectangleAnchor.BOTTOM.name.toString)
org.jfree.chart.util.RectangleAnchor.BOTTOM_LEFT.name == orig(org.jfree.chart.util.RectangleAnchor.BOTTOM_LEFT.name)
org.jfree.chart.util.RectangleAnchor.BOTTOM_LEFT.name.toString == orig(org.jfree.chart.util.RectangleAnchor.BOTTOM_LEFT.name.toString)
org.jfree.chart.util.RectangleAnchor.BOTTOM_RIGHT.name == orig(org.jfree.chart.util.RectangleAnchor.BOTTOM_RIGHT.name)
org.jfree.chart.util.RectangleAnchor.BOTTOM_RIGHT.name.toString == orig(org.jfree.chart.util.RectangleAnchor.BOTTOM_RIGHT.name.toString)
org.jfree.chart.util.RectangleAnchor.LEFT.name == orig(org.jfree.chart.util.RectangleAnchor.LEFT.name)
org.jfree.chart.util.RectangleAnchor.LEFT.name.toString == orig(org.jfree.chart.util.RectangleAnchor.LEFT.name.toString)
org.jfree.chart.util.RectangleAnchor.RIGHT.name == orig(org.jfree.chart.util.RectangleAnchor.RIGHT.name)
org.jfree.chart.util.RectangleAnchor.RIGHT.name.toString == orig(org.jfree.chart.util.RectangleAnchor.RIGHT.name.toString)
this.labelAnchor.name == orig(this.labelAnchor.name)
this.labelAnchor.name.toString == orig(this.labelAnchor.name.toString)
this.labelTextAnchor == orig(this.labelTextAnchor)
org.jfree.chart.text.TextAnchor.TOP_LEFT == orig(org.jfree.chart.text.TextAnchor.TOP_LEFT)
org.jfree.chart.text.TextAnchor.TOP_CENTER == orig(org.jfree.chart.text.TextAnchor.TOP_CENTER)
org.jfree.chart.text.TextAnchor.TOP_RIGHT == orig(org.jfree.chart.text.TextAnchor.TOP_RIGHT)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT)
org.jfree.chart.text.TextAnchor.CENTER_LEFT == orig(org.jfree.chart.text.TextAnchor.CENTER_LEFT)
org.jfree.chart.text.TextAnchor.CENTER == orig(org.jfree.chart.text.TextAnchor.CENTER)
org.jfree.chart.text.TextAnchor.CENTER_RIGHT == orig(org.jfree.chart.text.TextAnchor.CENTER_RIGHT)
org.jfree.chart.text.TextAnchor.BASELINE_LEFT == orig(org.jfree.chart.text.TextAnchor.BASELINE_LEFT)
org.jfree.chart.text.TextAnchor.BASELINE_CENTER == orig(org.jfree.chart.text.TextAnchor.BASELINE_CENTER)
org.jfree.chart.text.TextAnchor.BASELINE_RIGHT == orig(org.jfree.chart.text.TextAnchor.BASELINE_RIGHT)
org.jfree.chart.text.TextAnchor.BOTTOM_LEFT == orig(org.jfree.chart.text.TextAnchor.BOTTOM_LEFT)
org.jfree.chart.text.TextAnchor.BOTTOM_CENTER == orig(org.jfree.chart.text.TextAnchor.BOTTOM_CENTER)
org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT == orig(org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT)
org.jfree.chart.text.TextAnchor.TOP_LEFT.name == orig(org.jfree.chart.text.TextAnchor.TOP_LEFT.name)
org.jfree.chart.text.TextAnchor.TOP_LEFT.name.toString == orig(org.jfree.chart.text.TextAnchor.TOP_LEFT.name.toString)
org.jfree.chart.text.TextAnchor.TOP_CENTER.name == orig(org.jfree.chart.text.TextAnchor.TOP_CENTER.name)
org.jfree.chart.text.TextAnchor.TOP_CENTER.name.toString == orig(org.jfree.chart.text.TextAnchor.TOP_CENTER.name.toString)
org.jfree.chart.text.TextAnchor.TOP_RIGHT.name == orig(org.jfree.chart.text.TextAnchor.TOP_RIGHT.name)
org.jfree.chart.text.TextAnchor.TOP_RIGHT.name.toString == orig(org.jfree.chart.text.TextAnchor.TOP_RIGHT.name.toString)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT.name == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT.name)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT.name.toString == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT.name.toString)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER.name == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER.name)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER.name.toString == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER.name.toString)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT.name == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT.name)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT.name.toString == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT.name.toString)
org.jfree.chart.text.TextAnchor.CENTER_LEFT.name == orig(org.jfree.chart.text.TextAnchor.CENTER_LEFT.name)
org.jfree.chart.text.TextAnchor.CENTER_LEFT.name.toString == orig(org.jfree.chart.text.TextAnchor.CENTER_LEFT.name.toString)
org.jfree.chart.text.TextAnchor.CENTER.name == orig(org.jfree.chart.text.TextAnchor.CENTER.name)
org.jfree.chart.text.TextAnchor.CENTER.name.toString == orig(org.jfree.chart.text.TextAnchor.CENTER.name.toString)
org.jfree.chart.text.TextAnchor.CENTER_RIGHT.name == orig(org.jfree.chart.text.TextAnchor.CENTER_RIGHT.name)
org.jfree.chart.text.TextAnchor.CENTER_RIGHT.name.toString == orig(org.jfree.chart.text.TextAnchor.CENTER_RIGHT.name.toString)
org.jfree.chart.text.TextAnchor.BASELINE_LEFT.name == orig(org.jfree.chart.text.TextAnchor.BASELINE_LEFT.name)
org.jfree.chart.text.TextAnchor.BASELINE_LEFT.name.toString == orig(org.jfree.chart.text.TextAnchor.BASELINE_LEFT.name.toString)
org.jfree.chart.text.TextAnchor.BASELINE_CENTER.name == orig(org.jfree.chart.text.TextAnchor.BASELINE_CENTER.name)
org.jfree.chart.text.TextAnchor.BASELINE_CENTER.name.toString == orig(org.jfree.chart.text.TextAnchor.BASELINE_CENTER.name.toString)
org.jfree.chart.text.TextAnchor.BASELINE_RIGHT.name == orig(org.jfree.chart.text.TextAnchor.BASELINE_RIGHT.name)
org.jfree.chart.text.TextAnchor.BASELINE_RIGHT.name.toString == orig(org.jfree.chart.text.TextAnchor.BASELINE_RIGHT.name.toString)
org.jfree.chart.text.TextAnchor.BOTTOM_LEFT.name == orig(org.jfree.chart.text.TextAnchor.BOTTOM_LEFT.name)
org.jfree.chart.text.TextAnchor.BOTTOM_LEFT.name.toString == orig(org.jfree.chart.text.TextAnchor.BOTTOM_LEFT.name.toString)
org.jfree.chart.text.TextAnchor.BOTTOM_CENTER.name == orig(org.jfree.chart.text.TextAnchor.BOTTOM_CENTER.name)
org.jfree.chart.text.TextAnchor.BOTTOM_CENTER.name.toString == orig(org.jfree.chart.text.TextAnchor.BOTTOM_CENTER.name.toString)
org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT.name == orig(org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT.name)
org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT.name.toString == orig(org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT.name.toString)
this.labelTextAnchor.name == orig(this.labelTextAnchor.name)
this.labelTextAnchor.name.toString == orig(this.labelTextAnchor.name.toString)
this.labelOffset == orig(this.labelOffset)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.top == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.top)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.left == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.left)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.bottom == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.bottom)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.right == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.right)
this.labelOffset.unitType == orig(this.labelOffset.unitType)
org.jfree.chart.util.UnitType.ABSOLUTE == orig(org.jfree.chart.util.UnitType.ABSOLUTE)
org.jfree.chart.util.UnitType.RELATIVE == orig(org.jfree.chart.util.UnitType.RELATIVE)
this.labelOffset.unitType.name == orig(this.labelOffset.unitType.name)
this.labelOffset.unitType.name.toString == orig(this.labelOffset.unitType.name.toString)
this.labelOffset.top == orig(this.labelOffset.top)
this.labelOffset.left == orig(this.labelOffset.left)
this.labelOffset.bottom == orig(this.labelOffset.bottom)
this.labelOffset.right == orig(this.labelOffset.right)
this.labelOffsetType == orig(this.labelOffsetType)
org.jfree.chart.util.LengthAdjustmentType.NO_CHANGE == orig(org.jfree.chart.util.LengthAdjustmentType.NO_CHANGE)
org.jfree.chart.util.LengthAdjustmentType.EXPAND == orig(org.jfree.chart.util.LengthAdjustmentType.EXPAND)
org.jfree.chart.util.LengthAdjustmentType.CONTRACT == orig(org.jfree.chart.util.LengthAdjustmentType.CONTRACT)
org.jfree.chart.util.LengthAdjustmentType.NO_CHANGE.name == orig(org.jfree.chart.util.LengthAdjustmentType.NO_CHANGE.name)
org.jfree.chart.util.LengthAdjustmentType.NO_CHANGE.name.toString == orig(org.jfree.chart.util.LengthAdjustmentType.NO_CHANGE.name.toString)
org.jfree.chart.util.LengthAdjustmentType.EXPAND.name == orig(org.jfree.chart.util.LengthAdjustmentType.EXPAND.name)
org.jfree.chart.util.LengthAdjustmentType.EXPAND.name.toString == orig(org.jfree.chart.util.LengthAdjustmentType.EXPAND.name.toString)
org.jfree.chart.util.LengthAdjustmentType.CONTRACT.name == orig(org.jfree.chart.util.LengthAdjustmentType.CONTRACT.name)
org.jfree.chart.util.LengthAdjustmentType.CONTRACT.name.toString == orig(org.jfree.chart.util.LengthAdjustmentType.CONTRACT.name.toString)
this.labelOffsetType.name == orig(this.labelOffsetType.name)
this.labelOffsetType.name.toString == orig(this.labelOffsetType.name.toString)
this.listenerList == orig(this.listenerList)
this.alpha == 0.6
this.labelOffsetType has only one value
this.labelOffsetType.name has only one value
this.labelOffsetType.name.toString == "CONTRACT"
org.jfree.chart.plot.Marker.class$org$jfree$chart$event$MarkerChangeListener has only one value
===========================================================================
org.jfree.chart.plot.Marker.class$(java.lang.String):::ENTER
org.jfree.chart.plot.Marker.class$org$jfree$chart$event$MarkerChangeListener == null
x0 has only one value
x0.toString == "org.jfree.chart.event.MarkerChangeListener"
===========================================================================
org.jfree.chart.plot.Marker.class$(java.lang.String):::EXIT
org.jfree.chart.plot.Marker.class$org$jfree$chart$event$MarkerChangeListener == orig(org.jfree.chart.plot.Marker.class$org$jfree$chart$event$MarkerChangeListener)
x0.toString == orig(x0.toString)
org.jfree.chart.plot.Marker.class$org$jfree$chart$event$MarkerChangeListener == null
x0.toString == "org.jfree.chart.event.MarkerChangeListener"
return has only one value
===========================================================================
org.jfree.chart.plot.Marker.notifyListeners(org.jfree.chart.event.MarkerChangeEvent):::ENTER
this has only one value
this.getClass().getName() == org.jfree.chart.plot.CategoryMarker.class
this.paint has only one value
this.stroke has only one value
this.outlinePaint has only one value
this.outlineStroke has only one value
this.alpha == 1.0
this.labelFont has only one value
this.labelOffset has only one value
this.labelOffsetType has only one value
this.labelOffsetType.name has only one value
this.labelOffsetType.name.toString == "EXPAND"
this.listenerList has only one value
org.jfree.chart.plot.Marker.class$org$jfree$chart$event$MarkerChangeListener has only one value
event has only one value
event.marker has only one value
event.marker.getClass().getName() == org.jfree.chart.plot.CategoryMarker.class
event.marker.paint has only one value
event.marker.paint.getClass().getName() == java.awt.Color.class
event.marker.stroke has only one value
event.marker.stroke.getClass().getName() == java.awt.BasicStroke.class
event.marker.outlinePaint has only one value
event.marker.outlinePaint.getClass().getName() == java.awt.Color.class
event.marker.outlineStroke has only one value
event.marker.outlineStroke.getClass().getName() == java.awt.BasicStroke.class
event.marker.alpha == 1.0
event.marker.label == null
event.marker.labelFont has only one value
event.marker.labelPaint has only one value
event.marker.labelPaint.getClass().getName() == java.awt.Color.class
event.marker.labelAnchor has only one value
event.marker.labelTextAnchor has only one value
event.marker.labelOffset has only one value
event.marker.labelOffsetType has only one value
event.marker.listenerList has only one value
event.type has only one value
org.jfree.chart.event.ChartChangeEventType.GENERAL has only one value
org.jfree.chart.event.ChartChangeEventType.NEW_DATASET has only one value
org.jfree.chart.event.ChartChangeEventType.DATASET_UPDATED has only one value
event.type.name has only one value
event.type.name.toString == "ChartChangeEventType.GENERAL"
event.chart == null
===========================================================================
org.jfree.chart.plot.Marker.notifyListeners(org.jfree.chart.event.MarkerChangeEvent):::EXIT
this.paint == orig(this.paint)
this.paint.getClass().getName() == orig(this.paint.getClass().getName())
this.stroke == orig(this.stroke)
this.stroke.getClass().getName() == orig(this.stroke.getClass().getName())
this.outlinePaint == orig(this.outlinePaint)
this.outlinePaint.getClass().getName() == orig(this.outlinePaint.getClass().getName())
this.outlineStroke == orig(this.outlineStroke)
this.outlineStroke.getClass().getName() == orig(this.outlineStroke.getClass().getName())
this.alpha == orig(this.alpha)
this.label == orig(this.label)
this.labelFont == orig(this.labelFont)
this.labelPaint == orig(this.labelPaint)
this.labelPaint.getClass().getName() == orig(this.labelPaint.getClass().getName())
this.labelAnchor == orig(this.labelAnchor)
org.jfree.chart.util.RectangleAnchor.CENTER == orig(org.jfree.chart.util.RectangleAnchor.CENTER)
org.jfree.chart.util.RectangleAnchor.TOP == orig(org.jfree.chart.util.RectangleAnchor.TOP)
org.jfree.chart.util.RectangleAnchor.TOP_LEFT == orig(org.jfree.chart.util.RectangleAnchor.TOP_LEFT)
org.jfree.chart.util.RectangleAnchor.TOP_RIGHT == orig(org.jfree.chart.util.RectangleAnchor.TOP_RIGHT)
org.jfree.chart.util.RectangleAnchor.BOTTOM == orig(org.jfree.chart.util.RectangleAnchor.BOTTOM)
org.jfree.chart.util.RectangleAnchor.BOTTOM_LEFT == orig(org.jfree.chart.util.RectangleAnchor.BOTTOM_LEFT)
org.jfree.chart.util.RectangleAnchor.BOTTOM_RIGHT == orig(org.jfree.chart.util.RectangleAnchor.BOTTOM_RIGHT)
org.jfree.chart.util.RectangleAnchor.LEFT == orig(org.jfree.chart.util.RectangleAnchor.LEFT)
org.jfree.chart.util.RectangleAnchor.RIGHT == orig(org.jfree.chart.util.RectangleAnchor.RIGHT)
org.jfree.chart.util.RectangleAnchor.CENTER.name == orig(org.jfree.chart.util.RectangleAnchor.CENTER.name)
org.jfree.chart.util.RectangleAnchor.CENTER.name.toString == orig(org.jfree.chart.util.RectangleAnchor.CENTER.name.toString)
org.jfree.chart.util.RectangleAnchor.TOP.name == orig(org.jfree.chart.util.RectangleAnchor.TOP.name)
org.jfree.chart.util.RectangleAnchor.TOP.name.toString == orig(org.jfree.chart.util.RectangleAnchor.TOP.name.toString)
org.jfree.chart.util.RectangleAnchor.TOP_LEFT.name == orig(org.jfree.chart.util.RectangleAnchor.TOP_LEFT.name)
org.jfree.chart.util.RectangleAnchor.TOP_LEFT.name.toString == orig(org.jfree.chart.util.RectangleAnchor.TOP_LEFT.name.toString)
org.jfree.chart.util.RectangleAnchor.TOP_RIGHT.name == orig(org.jfree.chart.util.RectangleAnchor.TOP_RIGHT.name)
org.jfree.chart.util.RectangleAnchor.TOP_RIGHT.name.toString == orig(org.jfree.chart.util.RectangleAnchor.TOP_RIGHT.name.toString)
org.jfree.chart.util.RectangleAnchor.BOTTOM.name == orig(org.jfree.chart.util.RectangleAnchor.BOTTOM.name)
org.jfree.chart.util.RectangleAnchor.BOTTOM.name.toString == orig(org.jfree.chart.util.RectangleAnchor.BOTTOM.name.toString)
org.jfree.chart.util.RectangleAnchor.BOTTOM_LEFT.name == orig(org.jfree.chart.util.RectangleAnchor.BOTTOM_LEFT.name)
org.jfree.chart.util.RectangleAnchor.BOTTOM_LEFT.name.toString == orig(org.jfree.chart.util.RectangleAnchor.BOTTOM_LEFT.name.toString)
org.jfree.chart.util.RectangleAnchor.BOTTOM_RIGHT.name == orig(org.jfree.chart.util.RectangleAnchor.BOTTOM_RIGHT.name)
org.jfree.chart.util.RectangleAnchor.BOTTOM_RIGHT.name.toString == orig(org.jfree.chart.util.RectangleAnchor.BOTTOM_RIGHT.name.toString)
org.jfree.chart.util.RectangleAnchor.LEFT.name == orig(org.jfree.chart.util.RectangleAnchor.LEFT.name)
org.jfree.chart.util.RectangleAnchor.LEFT.name.toString == orig(org.jfree.chart.util.RectangleAnchor.LEFT.name.toString)
org.jfree.chart.util.RectangleAnchor.RIGHT.name == orig(org.jfree.chart.util.RectangleAnchor.RIGHT.name)
org.jfree.chart.util.RectangleAnchor.RIGHT.name.toString == orig(org.jfree.chart.util.RectangleAnchor.RIGHT.name.toString)
this.labelAnchor.name == orig(this.labelAnchor.name)
this.labelAnchor.name.toString == orig(this.labelAnchor.name.toString)
this.labelTextAnchor == orig(this.labelTextAnchor)
org.jfree.chart.text.TextAnchor.TOP_LEFT == orig(org.jfree.chart.text.TextAnchor.TOP_LEFT)
org.jfree.chart.text.TextAnchor.TOP_CENTER == orig(org.jfree.chart.text.TextAnchor.TOP_CENTER)
org.jfree.chart.text.TextAnchor.TOP_RIGHT == orig(org.jfree.chart.text.TextAnchor.TOP_RIGHT)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT)
org.jfree.chart.text.TextAnchor.CENTER_LEFT == orig(org.jfree.chart.text.TextAnchor.CENTER_LEFT)
org.jfree.chart.text.TextAnchor.CENTER == orig(org.jfree.chart.text.TextAnchor.CENTER)
org.jfree.chart.text.TextAnchor.CENTER_RIGHT == orig(org.jfree.chart.text.TextAnchor.CENTER_RIGHT)
org.jfree.chart.text.TextAnchor.BASELINE_LEFT == orig(org.jfree.chart.text.TextAnchor.BASELINE_LEFT)
org.jfree.chart.text.TextAnchor.BASELINE_CENTER == orig(org.jfree.chart.text.TextAnchor.BASELINE_CENTER)
org.jfree.chart.text.TextAnchor.BASELINE_RIGHT == orig(org.jfree.chart.text.TextAnchor.BASELINE_RIGHT)
org.jfree.chart.text.TextAnchor.BOTTOM_LEFT == orig(org.jfree.chart.text.TextAnchor.BOTTOM_LEFT)
org.jfree.chart.text.TextAnchor.BOTTOM_CENTER == orig(org.jfree.chart.text.TextAnchor.BOTTOM_CENTER)
org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT == orig(org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT)
org.jfree.chart.text.TextAnchor.TOP_LEFT.name == orig(org.jfree.chart.text.TextAnchor.TOP_LEFT.name)
org.jfree.chart.text.TextAnchor.TOP_LEFT.name.toString == orig(org.jfree.chart.text.TextAnchor.TOP_LEFT.name.toString)
org.jfree.chart.text.TextAnchor.TOP_CENTER.name == orig(org.jfree.chart.text.TextAnchor.TOP_CENTER.name)
org.jfree.chart.text.TextAnchor.TOP_CENTER.name.toString == orig(org.jfree.chart.text.TextAnchor.TOP_CENTER.name.toString)
org.jfree.chart.text.TextAnchor.TOP_RIGHT.name == orig(org.jfree.chart.text.TextAnchor.TOP_RIGHT.name)
org.jfree.chart.text.TextAnchor.TOP_RIGHT.name.toString == orig(org.jfree.chart.text.TextAnchor.TOP_RIGHT.name.toString)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT.name == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT.name)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT.name.toString == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT.name.toString)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER.name == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER.name)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER.name.toString == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER.name.toString)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT.name == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT.name)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT.name.toString == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT.name.toString)
org.jfree.chart.text.TextAnchor.CENTER_LEFT.name == orig(org.jfree.chart.text.TextAnchor.CENTER_LEFT.name)
org.jfree.chart.text.TextAnchor.CENTER_LEFT.name.toString == orig(org.jfree.chart.text.TextAnchor.CENTER_LEFT.name.toString)
org.jfree.chart.text.TextAnchor.CENTER.name == orig(org.jfree.chart.text.TextAnchor.CENTER.name)
org.jfree.chart.text.TextAnchor.CENTER.name.toString == orig(org.jfree.chart.text.TextAnchor.CENTER.name.toString)
org.jfree.chart.text.TextAnchor.CENTER_RIGHT.name == orig(org.jfree.chart.text.TextAnchor.CENTER_RIGHT.name)
org.jfree.chart.text.TextAnchor.CENTER_RIGHT.name.toString == orig(org.jfree.chart.text.TextAnchor.CENTER_RIGHT.name.toString)
org.jfree.chart.text.TextAnchor.BASELINE_LEFT.name == orig(org.jfree.chart.text.TextAnchor.BASELINE_LEFT.name)
org.jfree.chart.text.TextAnchor.BASELINE_LEFT.name.toString == orig(org.jfree.chart.text.TextAnchor.BASELINE_LEFT.name.toString)
org.jfree.chart.text.TextAnchor.BASELINE_CENTER.name == orig(org.jfree.chart.text.TextAnchor.BASELINE_CENTER.name)
org.jfree.chart.text.TextAnchor.BASELINE_CENTER.name.toString == orig(org.jfree.chart.text.TextAnchor.BASELINE_CENTER.name.toString)
org.jfree.chart.text.TextAnchor.BASELINE_RIGHT.name == orig(org.jfree.chart.text.TextAnchor.BASELINE_RIGHT.name)
org.jfree.chart.text.TextAnchor.BASELINE_RIGHT.name.toString == orig(org.jfree.chart.text.TextAnchor.BASELINE_RIGHT.name.toString)
org.jfree.chart.text.TextAnchor.BOTTOM_LEFT.name == orig(org.jfree.chart.text.TextAnchor.BOTTOM_LEFT.name)
org.jfree.chart.text.TextAnchor.BOTTOM_LEFT.name.toString == orig(org.jfree.chart.text.TextAnchor.BOTTOM_LEFT.name.toString)
org.jfree.chart.text.TextAnchor.BOTTOM_CENTER.name == orig(org.jfree.chart.text.TextAnchor.BOTTOM_CENTER.name)
org.jfree.chart.text.TextAnchor.BOTTOM_CENTER.name.toString == orig(org.jfree.chart.text.TextAnchor.BOTTOM_CENTER.name.toString)
org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT.name == orig(org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT.name)
org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT.name.toString == orig(org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT.name.toString)
this.labelTextAnchor.name == orig(this.labelTextAnchor.name)
this.labelTextAnchor.name.toString == orig(this.labelTextAnchor.name.toString)
this.labelOffset == orig(this.labelOffset)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.top == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.top)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.left == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.left)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.bottom == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.bottom)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.right == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.right)
this.labelOffset.unitType == orig(this.labelOffset.unitType)
org.jfree.chart.util.UnitType.ABSOLUTE == orig(org.jfree.chart.util.UnitType.ABSOLUTE)
org.jfree.chart.util.UnitType.RELATIVE == orig(org.jfree.chart.util.UnitType.RELATIVE)
this.labelOffset.unitType.name == orig(this.labelOffset.unitType.name)
this.labelOffset.unitType.name.toString == orig(this.labelOffset.unitType.name.toString)
this.labelOffset.top == orig(this.labelOffset.top)
this.labelOffset.left == orig(this.labelOffset.left)
this.labelOffset.bottom == orig(this.labelOffset.bottom)
this.labelOffset.right == orig(this.labelOffset.right)
this.labelOffsetType == orig(this.labelOffsetType)
org.jfree.chart.util.LengthAdjustmentType.NO_CHANGE == orig(org.jfree.chart.util.LengthAdjustmentType.NO_CHANGE)
org.jfree.chart.util.LengthAdjustmentType.EXPAND == orig(org.jfree.chart.util.LengthAdjustmentType.EXPAND)
org.jfree.chart.util.LengthAdjustmentType.CONTRACT == orig(org.jfree.chart.util.LengthAdjustmentType.CONTRACT)
org.jfree.chart.util.LengthAdjustmentType.NO_CHANGE.name == orig(org.jfree.chart.util.LengthAdjustmentType.NO_CHANGE.name)
org.jfree.chart.util.LengthAdjustmentType.NO_CHANGE.name.toString == orig(org.jfree.chart.util.LengthAdjustmentType.NO_CHANGE.name.toString)
org.jfree.chart.util.LengthAdjustmentType.EXPAND.name == orig(org.jfree.chart.util.LengthAdjustmentType.EXPAND.name)
org.jfree.chart.util.LengthAdjustmentType.EXPAND.name.toString == orig(org.jfree.chart.util.LengthAdjustmentType.EXPAND.name.toString)
org.jfree.chart.util.LengthAdjustmentType.CONTRACT.name == orig(org.jfree.chart.util.LengthAdjustmentType.CONTRACT.name)
org.jfree.chart.util.LengthAdjustmentType.CONTRACT.name.toString == orig(org.jfree.chart.util.LengthAdjustmentType.CONTRACT.name.toString)
this.labelOffsetType.name == orig(this.labelOffsetType.name)
this.labelOffsetType.name.toString == orig(this.labelOffsetType.name.toString)
this.listenerList == orig(this.listenerList)
org.jfree.chart.plot.Marker.class$org$jfree$chart$event$MarkerChangeListener == orig(org.jfree.chart.plot.Marker.class$org$jfree$chart$event$MarkerChangeListener)
event.marker == orig(event.marker)
event.marker.getClass().getName() == orig(event.marker.getClass().getName())
event.marker.paint == orig(event.marker.paint)
event.marker.paint.getClass().getName() == orig(event.marker.paint.getClass().getName())
event.marker.stroke == orig(event.marker.stroke)
event.marker.stroke.getClass().getName() == orig(event.marker.stroke.getClass().getName())
event.marker.outlinePaint == orig(event.marker.outlinePaint)
event.marker.outlinePaint.getClass().getName() == orig(event.marker.outlinePaint.getClass().getName())
event.marker.outlineStroke == orig(event.marker.outlineStroke)
event.marker.outlineStroke.getClass().getName() == orig(event.marker.outlineStroke.getClass().getName())
event.marker.alpha == orig(event.marker.alpha)
event.marker.label == orig(event.marker.label)
event.marker.labelFont == orig(event.marker.labelFont)
event.marker.labelPaint == orig(event.marker.labelPaint)
event.marker.labelPaint.getClass().getName() == orig(event.marker.labelPaint.getClass().getName())
event.marker.labelAnchor == orig(event.marker.labelAnchor)
event.marker.labelTextAnchor == orig(event.marker.labelTextAnchor)
event.marker.labelOffset == orig(event.marker.labelOffset)
event.marker.labelOffsetType == orig(event.marker.labelOffsetType)
event.marker.listenerList == orig(event.marker.listenerList)
event.type == orig(event.type)
org.jfree.chart.event.ChartChangeEventType.GENERAL == orig(org.jfree.chart.event.ChartChangeEventType.GENERAL)
org.jfree.chart.event.ChartChangeEventType.NEW_DATASET == orig(org.jfree.chart.event.ChartChangeEventType.NEW_DATASET)
org.jfree.chart.event.ChartChangeEventType.DATASET_UPDATED == orig(org.jfree.chart.event.ChartChangeEventType.DATASET_UPDATED)
event.type.name == orig(event.type.name)
event.type.name.toString == orig(event.type.name.toString)
event.chart == orig(event.chart)
this.paint has only one value
this.stroke has only one value
this.outlinePaint has only one value
this.outlineStroke has only one value
this.alpha == 1.0
this.labelFont has only one value
this.labelOffset has only one value
this.labelOffsetType has only one value
this.labelOffsetType.name has only one value
this.labelOffsetType.name.toString == "EXPAND"
this.listenerList has only one value
org.jfree.chart.plot.Marker.class$org$jfree$chart$event$MarkerChangeListener has only one value
event.marker has only one value
event.marker.getClass().getName() == org.jfree.chart.plot.CategoryMarker.class
event.marker.paint has only one value
event.marker.paint.getClass().getName() == java.awt.Color.class
event.marker.stroke has only one value
event.marker.stroke.getClass().getName() == java.awt.BasicStroke.class
event.marker.outlinePaint has only one value
event.marker.outlinePaint.getClass().getName() == java.awt.Color.class
event.marker.outlineStroke has only one value
event.marker.outlineStroke.getClass().getName() == java.awt.BasicStroke.class
event.marker.alpha == 1.0
event.marker.label == null
event.marker.labelFont has only one value
event.marker.labelPaint has only one value
event.marker.labelPaint.getClass().getName() == java.awt.Color.class
event.marker.labelAnchor has only one value
event.marker.labelTextAnchor has only one value
event.marker.labelOffset has only one value
event.marker.labelOffsetType has only one value
event.marker.listenerList has only one value
event.type has only one value
org.jfree.chart.event.ChartChangeEventType.GENERAL has only one value
org.jfree.chart.event.ChartChangeEventType.NEW_DATASET has only one value
org.jfree.chart.event.ChartChangeEventType.DATASET_UPDATED has only one value
event.type.name has only one value
event.type.name.toString == "ChartChangeEventType.GENERAL"
event.chart == null
===========================================================================
org.jfree.chart.plot.Marker.setLabelOffsetType(org.jfree.chart.util.LengthAdjustmentType):::ENTER
this has only one value
this.getClass().getName() == org.jfree.chart.plot.CategoryMarker.class
this.paint has only one value
this.stroke has only one value
this.outlinePaint has only one value
this.outlineStroke has only one value
this.alpha == 1.0
this.labelFont has only one value
this.labelOffset has only one value
this.labelOffsetType has only one value
this.labelOffsetType.name has only one value
this.labelOffsetType.name.toString == "CONTRACT"
this.listenerList has only one value
org.jfree.chart.plot.Marker.class$org$jfree$chart$event$MarkerChangeListener has only one value
adj has only one value
adj.name has only one value
adj.name.toString == "EXPAND"
===========================================================================
org.jfree.chart.plot.Marker.setLabelOffsetType(org.jfree.chart.util.LengthAdjustmentType):::EXIT
this.paint == orig(this.paint)
this.paint.getClass().getName() == orig(this.paint.getClass().getName())
this.stroke == orig(this.stroke)
this.stroke.getClass().getName() == orig(this.stroke.getClass().getName())
this.outlinePaint == orig(this.outlinePaint)
this.outlinePaint.getClass().getName() == orig(this.outlinePaint.getClass().getName())
this.outlineStroke == orig(this.outlineStroke)
this.outlineStroke.getClass().getName() == orig(this.outlineStroke.getClass().getName())
this.alpha == orig(this.alpha)
this.label == orig(this.label)
this.labelFont == orig(this.labelFont)
this.labelPaint == orig(this.labelPaint)
this.labelPaint.getClass().getName() == orig(this.labelPaint.getClass().getName())
this.labelAnchor == orig(this.labelAnchor)
org.jfree.chart.util.RectangleAnchor.CENTER == orig(org.jfree.chart.util.RectangleAnchor.CENTER)
org.jfree.chart.util.RectangleAnchor.TOP == orig(org.jfree.chart.util.RectangleAnchor.TOP)
org.jfree.chart.util.RectangleAnchor.TOP_LEFT == orig(org.jfree.chart.util.RectangleAnchor.TOP_LEFT)
org.jfree.chart.util.RectangleAnchor.TOP_RIGHT == orig(org.jfree.chart.util.RectangleAnchor.TOP_RIGHT)
org.jfree.chart.util.RectangleAnchor.BOTTOM == orig(org.jfree.chart.util.RectangleAnchor.BOTTOM)
org.jfree.chart.util.RectangleAnchor.BOTTOM_LEFT == orig(org.jfree.chart.util.RectangleAnchor.BOTTOM_LEFT)
org.jfree.chart.util.RectangleAnchor.BOTTOM_RIGHT == orig(org.jfree.chart.util.RectangleAnchor.BOTTOM_RIGHT)
org.jfree.chart.util.RectangleAnchor.LEFT == orig(org.jfree.chart.util.RectangleAnchor.LEFT)
org.jfree.chart.util.RectangleAnchor.RIGHT == orig(org.jfree.chart.util.RectangleAnchor.RIGHT)
org.jfree.chart.util.RectangleAnchor.CENTER.name == orig(org.jfree.chart.util.RectangleAnchor.CENTER.name)
org.jfree.chart.util.RectangleAnchor.CENTER.name.toString == orig(org.jfree.chart.util.RectangleAnchor.CENTER.name.toString)
org.jfree.chart.util.RectangleAnchor.TOP.name == orig(org.jfree.chart.util.RectangleAnchor.TOP.name)
org.jfree.chart.util.RectangleAnchor.TOP.name.toString == orig(org.jfree.chart.util.RectangleAnchor.TOP.name.toString)
org.jfree.chart.util.RectangleAnchor.TOP_LEFT.name == orig(org.jfree.chart.util.RectangleAnchor.TOP_LEFT.name)
org.jfree.chart.util.RectangleAnchor.TOP_LEFT.name.toString == orig(org.jfree.chart.util.RectangleAnchor.TOP_LEFT.name.toString)
org.jfree.chart.util.RectangleAnchor.TOP_RIGHT.name == orig(org.jfree.chart.util.RectangleAnchor.TOP_RIGHT.name)
org.jfree.chart.util.RectangleAnchor.TOP_RIGHT.name.toString == orig(org.jfree.chart.util.RectangleAnchor.TOP_RIGHT.name.toString)
org.jfree.chart.util.RectangleAnchor.BOTTOM.name == orig(org.jfree.chart.util.RectangleAnchor.BOTTOM.name)
org.jfree.chart.util.RectangleAnchor.BOTTOM.name.toString == orig(org.jfree.chart.util.RectangleAnchor.BOTTOM.name.toString)
org.jfree.chart.util.RectangleAnchor.BOTTOM_LEFT.name == orig(org.jfree.chart.util.RectangleAnchor.BOTTOM_LEFT.name)
org.jfree.chart.util.RectangleAnchor.BOTTOM_LEFT.name.toString == orig(org.jfree.chart.util.RectangleAnchor.BOTTOM_LEFT.name.toString)
org.jfree.chart.util.RectangleAnchor.BOTTOM_RIGHT.name == orig(org.jfree.chart.util.RectangleAnchor.BOTTOM_RIGHT.name)
org.jfree.chart.util.RectangleAnchor.BOTTOM_RIGHT.name.toString == orig(org.jfree.chart.util.RectangleAnchor.BOTTOM_RIGHT.name.toString)
org.jfree.chart.util.RectangleAnchor.LEFT.name == orig(org.jfree.chart.util.RectangleAnchor.LEFT.name)
org.jfree.chart.util.RectangleAnchor.LEFT.name.toString == orig(org.jfree.chart.util.RectangleAnchor.LEFT.name.toString)
org.jfree.chart.util.RectangleAnchor.RIGHT.name == orig(org.jfree.chart.util.RectangleAnchor.RIGHT.name)
org.jfree.chart.util.RectangleAnchor.RIGHT.name.toString == orig(org.jfree.chart.util.RectangleAnchor.RIGHT.name.toString)
this.labelAnchor.name == orig(this.labelAnchor.name)
this.labelAnchor.name.toString == orig(this.labelAnchor.name.toString)
this.labelTextAnchor == orig(this.labelTextAnchor)
org.jfree.chart.text.TextAnchor.TOP_LEFT == orig(org.jfree.chart.text.TextAnchor.TOP_LEFT)
org.jfree.chart.text.TextAnchor.TOP_CENTER == orig(org.jfree.chart.text.TextAnchor.TOP_CENTER)
org.jfree.chart.text.TextAnchor.TOP_RIGHT == orig(org.jfree.chart.text.TextAnchor.TOP_RIGHT)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT)
org.jfree.chart.text.TextAnchor.CENTER_LEFT == orig(org.jfree.chart.text.TextAnchor.CENTER_LEFT)
org.jfree.chart.text.TextAnchor.CENTER == orig(org.jfree.chart.text.TextAnchor.CENTER)
org.jfree.chart.text.TextAnchor.CENTER_RIGHT == orig(org.jfree.chart.text.TextAnchor.CENTER_RIGHT)
org.jfree.chart.text.TextAnchor.BASELINE_LEFT == orig(org.jfree.chart.text.TextAnchor.BASELINE_LEFT)
org.jfree.chart.text.TextAnchor.BASELINE_CENTER == orig(org.jfree.chart.text.TextAnchor.BASELINE_CENTER)
org.jfree.chart.text.TextAnchor.BASELINE_RIGHT == orig(org.jfree.chart.text.TextAnchor.BASELINE_RIGHT)
org.jfree.chart.text.TextAnchor.BOTTOM_LEFT == orig(org.jfree.chart.text.TextAnchor.BOTTOM_LEFT)
org.jfree.chart.text.TextAnchor.BOTTOM_CENTER == orig(org.jfree.chart.text.TextAnchor.BOTTOM_CENTER)
org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT == orig(org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT)
org.jfree.chart.text.TextAnchor.TOP_LEFT.name == orig(org.jfree.chart.text.TextAnchor.TOP_LEFT.name)
org.jfree.chart.text.TextAnchor.TOP_LEFT.name.toString == orig(org.jfree.chart.text.TextAnchor.TOP_LEFT.name.toString)
org.jfree.chart.text.TextAnchor.TOP_CENTER.name == orig(org.jfree.chart.text.TextAnchor.TOP_CENTER.name)
org.jfree.chart.text.TextAnchor.TOP_CENTER.name.toString == orig(org.jfree.chart.text.TextAnchor.TOP_CENTER.name.toString)
org.jfree.chart.text.TextAnchor.TOP_RIGHT.name == orig(org.jfree.chart.text.TextAnchor.TOP_RIGHT.name)
org.jfree.chart.text.TextAnchor.TOP_RIGHT.name.toString == orig(org.jfree.chart.text.TextAnchor.TOP_RIGHT.name.toString)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT.name == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT.name)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT.name.toString == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT.name.toString)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER.name == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER.name)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER.name.toString == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER.name.toString)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT.name == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT.name)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT.name.toString == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT.name.toString)
org.jfree.chart.text.TextAnchor.CENTER_LEFT.name == orig(org.jfree.chart.text.TextAnchor.CENTER_LEFT.name)
org.jfree.chart.text.TextAnchor.CENTER_LEFT.name.toString == orig(org.jfree.chart.text.TextAnchor.CENTER_LEFT.name.toString)
org.jfree.chart.text.TextAnchor.CENTER.name == orig(org.jfree.chart.text.TextAnchor.CENTER.name)
org.jfree.chart.text.TextAnchor.CENTER.name.toString == orig(org.jfree.chart.text.TextAnchor.CENTER.name.toString)
org.jfree.chart.text.TextAnchor.CENTER_RIGHT.name == orig(org.jfree.chart.text.TextAnchor.CENTER_RIGHT.name)
org.jfree.chart.text.TextAnchor.CENTER_RIGHT.name.toString == orig(org.jfree.chart.text.TextAnchor.CENTER_RIGHT.name.toString)
org.jfree.chart.text.TextAnchor.BASELINE_LEFT.name == orig(org.jfree.chart.text.TextAnchor.BASELINE_LEFT.name)
org.jfree.chart.text.TextAnchor.BASELINE_LEFT.name.toString == orig(org.jfree.chart.text.TextAnchor.BASELINE_LEFT.name.toString)
org.jfree.chart.text.TextAnchor.BASELINE_CENTER.name == orig(org.jfree.chart.text.TextAnchor.BASELINE_CENTER.name)
org.jfree.chart.text.TextAnchor.BASELINE_CENTER.name.toString == orig(org.jfree.chart.text.TextAnchor.BASELINE_CENTER.name.toString)
org.jfree.chart.text.TextAnchor.BASELINE_RIGHT.name == orig(org.jfree.chart.text.TextAnchor.BASELINE_RIGHT.name)
org.jfree.chart.text.TextAnchor.BASELINE_RIGHT.name.toString == orig(org.jfree.chart.text.TextAnchor.BASELINE_RIGHT.name.toString)
org.jfree.chart.text.TextAnchor.BOTTOM_LEFT.name == orig(org.jfree.chart.text.TextAnchor.BOTTOM_LEFT.name)
org.jfree.chart.text.TextAnchor.BOTTOM_LEFT.name.toString == orig(org.jfree.chart.text.TextAnchor.BOTTOM_LEFT.name.toString)
org.jfree.chart.text.TextAnchor.BOTTOM_CENTER.name == orig(org.jfree.chart.text.TextAnchor.BOTTOM_CENTER.name)
org.jfree.chart.text.TextAnchor.BOTTOM_CENTER.name.toString == orig(org.jfree.chart.text.TextAnchor.BOTTOM_CENTER.name.toString)
org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT.name == orig(org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT.name)
org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT.name.toString == orig(org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT.name.toString)
this.labelTextAnchor.name == orig(this.labelTextAnchor.name)
this.labelTextAnchor.name.toString == orig(this.labelTextAnchor.name.toString)
this.labelOffset == orig(this.labelOffset)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.top == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.top)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.left == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.left)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.bottom == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.bottom)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.right == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.right)
this.labelOffset.unitType == orig(this.labelOffset.unitType)
org.jfree.chart.util.UnitType.ABSOLUTE == orig(org.jfree.chart.util.UnitType.ABSOLUTE)
org.jfree.chart.util.UnitType.RELATIVE == orig(org.jfree.chart.util.UnitType.RELATIVE)
this.labelOffset.unitType.name == orig(this.labelOffset.unitType.name)
this.labelOffset.unitType.name.toString == orig(this.labelOffset.unitType.name.toString)
this.labelOffset.top == orig(this.labelOffset.top)
this.labelOffset.left == orig(this.labelOffset.left)
this.labelOffset.bottom == orig(this.labelOffset.bottom)
this.labelOffset.right == orig(this.labelOffset.right)
org.jfree.chart.util.LengthAdjustmentType.NO_CHANGE == orig(org.jfree.chart.util.LengthAdjustmentType.NO_CHANGE)
org.jfree.chart.util.LengthAdjustmentType.EXPAND == orig(org.jfree.chart.util.LengthAdjustmentType.EXPAND)
org.jfree.chart.util.LengthAdjustmentType.CONTRACT == orig(org.jfree.chart.util.LengthAdjustmentType.CONTRACT)
org.jfree.chart.util.LengthAdjustmentType.NO_CHANGE.name == orig(org.jfree.chart.util.LengthAdjustmentType.NO_CHANGE.name)
org.jfree.chart.util.LengthAdjustmentType.NO_CHANGE.name.toString == orig(org.jfree.chart.util.LengthAdjustmentType.NO_CHANGE.name.toString)
org.jfree.chart.util.LengthAdjustmentType.EXPAND.name == orig(org.jfree.chart.util.LengthAdjustmentType.EXPAND.name)
org.jfree.chart.util.LengthAdjustmentType.EXPAND.name.toString == orig(org.jfree.chart.util.LengthAdjustmentType.EXPAND.name.toString)
org.jfree.chart.util.LengthAdjustmentType.CONTRACT.name == orig(org.jfree.chart.util.LengthAdjustmentType.CONTRACT.name)
org.jfree.chart.util.LengthAdjustmentType.CONTRACT.name.toString == orig(org.jfree.chart.util.LengthAdjustmentType.CONTRACT.name.toString)
this.listenerList == orig(this.listenerList)
org.jfree.chart.plot.Marker.class$org$jfree$chart$event$MarkerChangeListener == orig(org.jfree.chart.plot.Marker.class$org$jfree$chart$event$MarkerChangeListener)
adj.name == orig(adj.name)
adj.name.toString == orig(adj.name.toString)
this.paint has only one value
this.stroke has only one value
this.outlinePaint has only one value
this.outlineStroke has only one value
this.alpha == 1.0
this.labelFont has only one value
this.labelOffset has only one value
this.labelOffsetType has only one value
this.labelOffsetType.name has only one value
this.labelOffsetType.name.toString == "EXPAND"
this.listenerList has only one value
org.jfree.chart.plot.Marker.class$org$jfree$chart$event$MarkerChangeListener has only one value
adj.name has only one value
adj.name.toString == "EXPAND"
===========================================================================
org.jfree.chart.plot.Plot:::CLASS
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() == org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName()
org.jfree.chart.plot.Plot.ZERO has only one value
org.jfree.chart.plot.Plot.ZERO != null
org.jfree.chart.plot.Plot.ZERO.getClass().getName() == java.lang.Integer.class
org.jfree.chart.plot.Plot.DEFAULT_INSETS has only one value
org.jfree.chart.plot.Plot.DEFAULT_INSETS != null
org.jfree.chart.util.RectangleInsets.ZERO_INSETS has only one value
org.jfree.chart.util.RectangleInsets.ZERO_INSETS != null
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType has only one value
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType != null
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.top == 0.0
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.left == 0.0
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.bottom == 0.0
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.right == 0.0
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType has only one value
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType != null
org.jfree.chart.util.UnitType.ABSOLUTE has only one value
org.jfree.chart.util.UnitType.ABSOLUTE != null
org.jfree.chart.util.UnitType.RELATIVE has only one value
org.jfree.chart.util.UnitType.RELATIVE != null
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name has only one value
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name != null
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name.toString == "UnitType.ABSOLUTE"
org.jfree.chart.plot.Plot.DEFAULT_INSETS.top == 4.0
org.jfree.chart.plot.Plot.DEFAULT_INSETS.left == 8.0
org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom == 4.0
org.jfree.chart.plot.Plot.DEFAULT_INSETS.right == 8.0
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE has only one value
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE != null
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName() == java.awt.BasicStroke.class
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT has only one value
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT != null
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() == java.awt.Color.class
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT has only one value
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT != null
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX has only one value
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX != null
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName() == java.awt.geom.Rectangle2D$Double.class
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE has only one value
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE != null
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName() == java.awt.geom.Ellipse2D$Double.class
org.jfree.chart.plot.Plot.ZERO.getClass().getName() != org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName()
org.jfree.chart.plot.Plot.ZERO.getClass().getName() != org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName()
org.jfree.chart.plot.Plot.ZERO.getClass().getName() != org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName()
org.jfree.chart.plot.Plot.ZERO.getClass().getName() != org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName()
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName() != org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName()
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName() != org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName()
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName() != org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName()
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() != org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName()
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() != org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName()
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName() != org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName()
===========================================================================
org.jfree.chart.plot.Plot:::OBJECT
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName() == this.outlineStroke.getClass().getName()
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() == this.noDataMessagePaint.getClass().getName()
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() == this.outlinePaint.getClass().getName()
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() == this.backgroundPaint.getClass().getName()
this.parent == null
org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener == null
this.datasetGroup == null
this.noDataMessage == null
this.noDataMessageFont != null
this.noDataMessagePaint has only one value
this.noDataMessagePaint != null
this.insets has only one value
this.insets != null
this.insets.unitType has only one value
this.insets.unitType != null
this.insets.unitType.name has only one value
this.insets.unitType.name != null
this.insets.unitType.name.toString == "UnitType.ABSOLUTE"
this.insets.top == 4.0
this.insets.left == 8.0
this.insets.bottom == 4.0
this.insets.right == 8.0
this.outlineVisible == true
this.outlineStroke has only one value
this.outlineStroke != null
this.outlinePaint has only one value
this.outlinePaint != null
this.backgroundPaint has only one value
this.backgroundPaint != null
this.backgroundImage == null
this.backgroundImageAlignment == 15
this.backgroundImageAlpha == 0.5
this.foregroundAlpha == 1.0
this.backgroundAlpha == 1.0
this.drawingSupplier != null
this.drawingSupplier.getClass().getName() == org.jfree.chart.plot.DefaultDrawingSupplier.class
this.listenerList != null
this.getClass().getName() != org.jfree.chart.plot.Plot.ZERO.getClass().getName()
this.getClass().getName() != org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName()
this.getClass().getName() != org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName()
this.getClass().getName() != org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName()
this.getClass().getName() != org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName()
this.getClass().getName() != this.drawingSupplier.getClass().getName()
org.jfree.chart.plot.Plot.ZERO.getClass().getName() != this.drawingSupplier.getClass().getName()
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName() != this.drawingSupplier.getClass().getName()
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() != this.drawingSupplier.getClass().getName()
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName() != this.drawingSupplier.getClass().getName()
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName() != this.drawingSupplier.getClass().getName()
===========================================================================
org.jfree.chart.plot.Plot.Plot():::EXIT
===========================================================================
org.jfree.chart.plot.Plot.fireChangeEvent():::ENTER
this.getClass().getName() == org.jfree.chart.plot.CategoryPlot.class
===========================================================================
org.jfree.chart.plot.Plot.fireChangeEvent():::EXIT
org.jfree.chart.plot.Plot.ZERO == orig(org.jfree.chart.plot.Plot.ZERO)
org.jfree.chart.plot.Plot.ZERO.getClass().getName() == orig(org.jfree.chart.plot.Plot.ZERO.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_INSETS == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.top == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.top)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.left == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.left)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.bottom == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.bottom)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.right == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.right)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType)
org.jfree.chart.util.UnitType.ABSOLUTE == orig(org.jfree.chart.util.UnitType.ABSOLUTE)
org.jfree.chart.util.UnitType.RELATIVE == orig(org.jfree.chart.util.UnitType.RELATIVE)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name.toString == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name.toString)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.top == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.top)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.left == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.left)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.right == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.right)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName() == orig(this.outlineStroke.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() == orig(this.noDataMessagePaint.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() == orig(this.outlinePaint.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() == orig(this.backgroundPaint.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName())
this.parent == orig(this.parent)
org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener == orig(org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener)
this.datasetGroup == orig(this.datasetGroup)
this.noDataMessage == orig(this.noDataMessage)
this.noDataMessageFont == orig(this.noDataMessageFont)
this.noDataMessagePaint == orig(this.noDataMessagePaint)
this.insets == orig(this.insets)
this.insets.unitType == orig(this.insets.unitType)
this.insets.unitType.name == orig(this.insets.unitType.name)
this.insets.unitType.name.toString == orig(this.insets.unitType.name.toString)
this.insets.top == orig(this.insets.top)
this.insets.left == orig(this.insets.left)
this.insets.bottom == orig(this.insets.bottom)
this.insets.right == orig(this.insets.right)
this.outlineVisible == orig(this.outlineVisible)
this.outlineStroke == orig(this.outlineStroke)
this.outlinePaint == orig(this.outlinePaint)
this.backgroundPaint == orig(this.backgroundPaint)
this.backgroundImage == orig(this.backgroundImage)
this.backgroundImageAlignment == orig(this.backgroundImageAlignment)
this.backgroundImageAlpha == orig(this.backgroundImageAlpha)
this.foregroundAlpha == orig(this.foregroundAlpha)
this.backgroundAlpha == orig(this.backgroundAlpha)
this.drawingSupplier == orig(this.drawingSupplier)
this.drawingSupplier.getClass().getName() == orig(this.drawingSupplier.getClass().getName())
this.listenerList == orig(this.listenerList)
===========================================================================
org.jfree.chart.plot.Plot.getParent():::ENTER
===========================================================================
org.jfree.chart.plot.Plot.getParent():::EXIT
org.jfree.chart.plot.Plot.ZERO == orig(org.jfree.chart.plot.Plot.ZERO)
org.jfree.chart.plot.Plot.ZERO.getClass().getName() == orig(org.jfree.chart.plot.Plot.ZERO.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_INSETS == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.top == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.top)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.left == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.left)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.bottom == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.bottom)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.right == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.right)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType)
org.jfree.chart.util.UnitType.ABSOLUTE == orig(org.jfree.chart.util.UnitType.ABSOLUTE)
org.jfree.chart.util.UnitType.RELATIVE == orig(org.jfree.chart.util.UnitType.RELATIVE)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name.toString == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name.toString)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.top == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.top)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.left == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.left)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.right == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.right)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName() == orig(this.outlineStroke.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() == orig(this.noDataMessagePaint.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() == orig(this.outlinePaint.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() == orig(this.backgroundPaint.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName())
this.parent == orig(this.parent)
org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener == orig(org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener)
this.datasetGroup == orig(this.datasetGroup)
this.noDataMessage == orig(this.noDataMessage)
this.noDataMessageFont == orig(this.noDataMessageFont)
this.noDataMessagePaint == orig(this.noDataMessagePaint)
this.insets == orig(this.insets)
this.insets.unitType == orig(this.insets.unitType)
this.insets.unitType.name == orig(this.insets.unitType.name)
this.insets.unitType.name.toString == orig(this.insets.unitType.name.toString)
this.insets.top == orig(this.insets.top)
this.insets.left == orig(this.insets.left)
this.insets.bottom == orig(this.insets.bottom)
this.insets.right == orig(this.insets.right)
this.outlineVisible == orig(this.outlineVisible)
this.outlineStroke == orig(this.outlineStroke)
this.outlinePaint == orig(this.outlinePaint)
this.backgroundPaint == orig(this.backgroundPaint)
this.backgroundImage == orig(this.backgroundImage)
this.backgroundImageAlignment == orig(this.backgroundImageAlignment)
this.backgroundImageAlpha == orig(this.backgroundImageAlpha)
this.foregroundAlpha == orig(this.foregroundAlpha)
this.backgroundAlpha == orig(this.backgroundAlpha)
this.drawingSupplier == orig(this.drawingSupplier)
this.drawingSupplier.getClass().getName() == orig(this.drawingSupplier.getClass().getName())
this.listenerList == orig(this.listenerList)
return == null
org.jfree.chart.plot.Plot.ZERO.getClass().getName() != orig(this.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName() != orig(this.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() != orig(this.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName() != orig(this.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName() != orig(this.getClass().getName())
this.drawingSupplier.getClass().getName() != orig(this.getClass().getName())
===========================================================================
org.jfree.chart.plot.Plot.notifyListeners(org.jfree.chart.event.PlotChangeEvent):::ENTER
this.getClass().getName() == event.plot.getClass().getName()
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName() == event.plot.outlineStroke.getClass().getName()
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() == event.plot.noDataMessagePaint.getClass().getName()
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() == event.plot.outlinePaint.getClass().getName()
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() == event.plot.backgroundPaint.getClass().getName()
this.drawingSupplier.getClass().getName() == event.plot.drawingSupplier.getClass().getName()
event.plot.parent == null
event.plot.datasetGroup == null
event.plot.noDataMessage == null
event.plot.noDataMessagePaint has only one value
event.plot.insets has only one value
event.plot.outlineVisible == true
event.plot.outlineStroke has only one value
event.plot.outlinePaint has only one value
event.plot.backgroundPaint has only one value
event.plot.backgroundImage == null
event.plot.backgroundImageAlignment == 15
event.plot.backgroundImageAlpha == 0.5
event.plot.foregroundAlpha == 1.0
event.plot.backgroundAlpha == 1.0
org.jfree.chart.event.ChartChangeEventType.GENERAL has only one value
org.jfree.chart.event.ChartChangeEventType.NEW_DATASET has only one value
org.jfree.chart.event.ChartChangeEventType.DATASET_UPDATED has only one value
event.type.name.toString one of { "ChartChangeEventType.DATASET_UPDATED", "ChartChangeEventType.GENERAL" }
event.chart == null
===========================================================================
org.jfree.chart.plot.Plot.notifyListeners(org.jfree.chart.event.PlotChangeEvent):::EXIT
org.jfree.chart.plot.Plot.ZERO == orig(org.jfree.chart.plot.Plot.ZERO)
org.jfree.chart.plot.Plot.ZERO.getClass().getName() == orig(org.jfree.chart.plot.Plot.ZERO.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_INSETS == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.top == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.top)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.left == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.left)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.bottom == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.bottom)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.right == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.right)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType)
org.jfree.chart.util.UnitType.ABSOLUTE == orig(org.jfree.chart.util.UnitType.ABSOLUTE)
org.jfree.chart.util.UnitType.RELATIVE == orig(org.jfree.chart.util.UnitType.RELATIVE)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name.toString == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name.toString)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.top == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.top)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.left == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.left)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.right == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.right)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName() == event.plot.outlineStroke.getClass().getName()
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName() == orig(this.outlineStroke.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName() == orig(event.plot.outlineStroke.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() == event.plot.noDataMessagePaint.getClass().getName()
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() == event.plot.outlinePaint.getClass().getName()
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() == event.plot.backgroundPaint.getClass().getName()
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() == orig(this.noDataMessagePaint.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() == orig(this.outlinePaint.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() == orig(this.backgroundPaint.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() == orig(event.plot.noDataMessagePaint.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() == orig(event.plot.outlinePaint.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() == orig(event.plot.backgroundPaint.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName())
this.parent == orig(this.parent)
org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener == orig(org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener)
this.datasetGroup == orig(this.datasetGroup)
this.noDataMessage == orig(this.noDataMessage)
this.noDataMessageFont == orig(this.noDataMessageFont)
this.noDataMessagePaint == orig(this.noDataMessagePaint)
this.insets == orig(this.insets)
this.insets.unitType == orig(this.insets.unitType)
this.insets.unitType.name == orig(this.insets.unitType.name)
this.insets.unitType.name.toString == orig(this.insets.unitType.name.toString)
this.insets.top == orig(this.insets.top)
this.insets.left == orig(this.insets.left)
this.insets.bottom == orig(this.insets.bottom)
this.insets.right == orig(this.insets.right)
this.outlineVisible == orig(this.outlineVisible)
this.outlineStroke == orig(this.outlineStroke)
this.outlinePaint == orig(this.outlinePaint)
this.backgroundPaint == orig(this.backgroundPaint)
this.backgroundImage == orig(this.backgroundImage)
this.backgroundImageAlignment == orig(this.backgroundImageAlignment)
this.backgroundImageAlpha == orig(this.backgroundImageAlpha)
this.foregroundAlpha == orig(this.foregroundAlpha)
this.backgroundAlpha == orig(this.backgroundAlpha)
this.drawingSupplier == orig(this.drawingSupplier)
this.drawingSupplier.getClass().getName() == event.plot.drawingSupplier.getClass().getName()
this.drawingSupplier.getClass().getName() == orig(this.drawingSupplier.getClass().getName())
this.drawingSupplier.getClass().getName() == orig(event.plot.drawingSupplier.getClass().getName())
this.listenerList == orig(this.listenerList)
event.plot == orig(event.plot)
event.plot.getClass().getName() == orig(this.getClass().getName())
event.plot.getClass().getName() == orig(event.plot.getClass().getName())
event.plot.parent == orig(event.plot.parent)
event.plot.datasetGroup == orig(event.plot.datasetGroup)
event.plot.noDataMessage == orig(event.plot.noDataMessage)
event.plot.noDataMessageFont == orig(event.plot.noDataMessageFont)
event.plot.noDataMessagePaint == orig(event.plot.noDataMessagePaint)
event.plot.insets == orig(event.plot.insets)
event.plot.outlineVisible == orig(event.plot.outlineVisible)
event.plot.outlineStroke == orig(event.plot.outlineStroke)
event.plot.outlinePaint == orig(event.plot.outlinePaint)
event.plot.backgroundPaint == orig(event.plot.backgroundPaint)
event.plot.backgroundImage == orig(event.plot.backgroundImage)
event.plot.backgroundImageAlignment == orig(event.plot.backgroundImageAlignment)
event.plot.backgroundImageAlpha == orig(event.plot.backgroundImageAlpha)
event.plot.foregroundAlpha == orig(event.plot.foregroundAlpha)
event.plot.backgroundAlpha == orig(event.plot.backgroundAlpha)
event.plot.drawingSupplier == orig(event.plot.drawingSupplier)
event.plot.listenerList == orig(event.plot.listenerList)
event.type == orig(event.type)
org.jfree.chart.event.ChartChangeEventType.GENERAL == orig(org.jfree.chart.event.ChartChangeEventType.GENERAL)
org.jfree.chart.event.ChartChangeEventType.NEW_DATASET == orig(org.jfree.chart.event.ChartChangeEventType.NEW_DATASET)
org.jfree.chart.event.ChartChangeEventType.DATASET_UPDATED == orig(org.jfree.chart.event.ChartChangeEventType.DATASET_UPDATED)
event.type.name == orig(event.type.name)
event.type.name.toString == orig(event.type.name.toString)
event.chart == orig(event.chart)
event.plot.parent == null
event.plot.datasetGroup == null
event.plot.noDataMessage == null
event.plot.noDataMessagePaint has only one value
event.plot.insets has only one value
event.plot.outlineVisible == true
event.plot.outlineStroke has only one value
event.plot.outlinePaint has only one value
event.plot.backgroundPaint has only one value
event.plot.backgroundImage == null
event.plot.backgroundImageAlignment == 15
event.plot.backgroundImageAlpha == 0.5
event.plot.foregroundAlpha == 1.0
event.plot.backgroundAlpha == 1.0
org.jfree.chart.event.ChartChangeEventType.GENERAL has only one value
org.jfree.chart.event.ChartChangeEventType.NEW_DATASET has only one value
org.jfree.chart.event.ChartChangeEventType.DATASET_UPDATED has only one value
event.type.name.toString one of { "ChartChangeEventType.DATASET_UPDATED", "ChartChangeEventType.GENERAL" }
event.chart == null
org.jfree.chart.plot.Plot.ZERO.getClass().getName() != event.plot.getClass().getName()
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName() != event.plot.getClass().getName()
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() != event.plot.getClass().getName()
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName() != event.plot.getClass().getName()
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName() != event.plot.getClass().getName()
this.drawingSupplier.getClass().getName() != event.plot.getClass().getName()
===========================================================================
org.jfree.chart.plot.PlotOrientation:::CLASS
===========================================================================
org.jfree.chart.plot.PlotOrientation:::OBJECT
this.name.toString one of { "PlotOrientation.HORIZONTAL", "PlotOrientation.VERTICAL" }
===========================================================================
org.jfree.chart.plot.PlotOrientation.PlotOrientation(java.lang.String):::ENTER
name.toString one of { "PlotOrientation.HORIZONTAL", "PlotOrientation.VERTICAL" }
===========================================================================
org.jfree.chart.plot.PlotOrientation.PlotOrientation(java.lang.String):::EXIT
name.toString == orig(name.toString)
name.toString one of { "PlotOrientation.HORIZONTAL", "PlotOrientation.VERTICAL" }
===========================================================================
org.jfree.chart.plot.SeriesRenderingOrder:::CLASS
===========================================================================
org.jfree.chart.plot.SeriesRenderingOrder:::OBJECT
this.name.toString one of { "SeriesRenderingOrder.FORWARD", "SeriesRenderingOrder.REVERSE" }
===========================================================================
org.jfree.chart.plot.SeriesRenderingOrder.SeriesRenderingOrder(java.lang.String):::ENTER
name.toString one of { "SeriesRenderingOrder.FORWARD", "SeriesRenderingOrder.REVERSE" }
===========================================================================
org.jfree.chart.plot.SeriesRenderingOrder.SeriesRenderingOrder(java.lang.String):::EXIT
name.toString == orig(name.toString)
name.toString one of { "SeriesRenderingOrder.FORWARD", "SeriesRenderingOrder.REVERSE" }
===========================================================================
org.jfree.chart.plot.ValueMarker:::CLASS
===========================================================================
org.jfree.chart.plot.ValueMarker:::OBJECT
this.value one of { 0.0, 0.5 }
this.paint.getClass().getName() == java.awt.Color.class
this.stroke.getClass().getName() == java.awt.BasicStroke.class
this.outlinePaint.getClass().getName() == java.awt.Color.class
this.outlineStroke.getClass().getName() == java.awt.BasicStroke.class
this.alpha one of { 0.6, 0.8 }
this.label == null
this.labelPaint has only one value
this.labelPaint.getClass().getName() == java.awt.Color.class
this.labelAnchor has only one value
org.jfree.chart.util.RectangleAnchor.CENTER has only one value
org.jfree.chart.util.RectangleAnchor.TOP has only one value
org.jfree.chart.util.RectangleAnchor.TOP_LEFT has only one value
org.jfree.chart.util.RectangleAnchor.TOP_RIGHT has only one value
org.jfree.chart.util.RectangleAnchor.BOTTOM has only one value
org.jfree.chart.util.RectangleAnchor.BOTTOM_LEFT has only one value
org.jfree.chart.util.RectangleAnchor.BOTTOM_RIGHT has only one value
org.jfree.chart.util.RectangleAnchor.LEFT has only one value
org.jfree.chart.util.RectangleAnchor.RIGHT has only one value
org.jfree.chart.util.RectangleAnchor.CENTER.name has only one value
org.jfree.chart.util.RectangleAnchor.CENTER.name.toString == "RectangleAnchor.CENTER"
org.jfree.chart.util.RectangleAnchor.TOP.name has only one value
org.jfree.chart.util.RectangleAnchor.TOP.name.toString == "RectangleAnchor.TOP"
org.jfree.chart.util.RectangleAnchor.TOP_LEFT.name has only one value
org.jfree.chart.util.RectangleAnchor.TOP_LEFT.name.toString == "RectangleAnchor.TOP_LEFT"
org.jfree.chart.util.RectangleAnchor.TOP_RIGHT.name has only one value
org.jfree.chart.util.RectangleAnchor.TOP_RIGHT.name.toString == "RectangleAnchor.TOP_RIGHT"
org.jfree.chart.util.RectangleAnchor.BOTTOM.name has only one value
org.jfree.chart.util.RectangleAnchor.BOTTOM.name.toString == "RectangleAnchor.BOTTOM"
org.jfree.chart.util.RectangleAnchor.BOTTOM_LEFT.name has only one value
org.jfree.chart.util.RectangleAnchor.BOTTOM_LEFT.name.toString == "RectangleAnchor.BOTTOM_LEFT"
org.jfree.chart.util.RectangleAnchor.BOTTOM_RIGHT.name has only one value
org.jfree.chart.util.RectangleAnchor.BOTTOM_RIGHT.name.toString == "RectangleAnchor.BOTTOM_RIGHT"
org.jfree.chart.util.RectangleAnchor.LEFT.name has only one value
org.jfree.chart.util.RectangleAnchor.LEFT.name.toString == "RectangleAnchor.LEFT"
org.jfree.chart.util.RectangleAnchor.RIGHT.name has only one value
org.jfree.chart.util.RectangleAnchor.RIGHT.name.toString == "RectangleAnchor.RIGHT"
this.labelAnchor.name has only one value
this.labelAnchor.name.toString == "RectangleAnchor.TOP_LEFT"
this.labelTextAnchor has only one value
org.jfree.chart.text.TextAnchor.TOP_LEFT has only one value
org.jfree.chart.text.TextAnchor.TOP_CENTER has only one value
org.jfree.chart.text.TextAnchor.TOP_RIGHT has only one value
org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT has only one value
org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER has only one value
org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT has only one value
org.jfree.chart.text.TextAnchor.CENTER_LEFT has only one value
org.jfree.chart.text.TextAnchor.CENTER has only one value
org.jfree.chart.text.TextAnchor.CENTER_RIGHT has only one value
org.jfree.chart.text.TextAnchor.BASELINE_LEFT has only one value
org.jfree.chart.text.TextAnchor.BASELINE_CENTER has only one value
org.jfree.chart.text.TextAnchor.BASELINE_RIGHT has only one value
org.jfree.chart.text.TextAnchor.BOTTOM_LEFT has only one value
org.jfree.chart.text.TextAnchor.BOTTOM_CENTER has only one value
org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT has only one value
org.jfree.chart.text.TextAnchor.TOP_LEFT.name has only one value
org.jfree.chart.text.TextAnchor.TOP_LEFT.name.toString == "TextAnchor.TOP_LEFT"
org.jfree.chart.text.TextAnchor.TOP_CENTER.name has only one value
org.jfree.chart.text.TextAnchor.TOP_CENTER.name.toString == "TextAnchor.TOP_CENTER"
org.jfree.chart.text.TextAnchor.TOP_RIGHT.name has only one value
org.jfree.chart.text.TextAnchor.TOP_RIGHT.name.toString == "TextAnchor.TOP_RIGHT"
org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT.name has only one value
org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT.name.toString == "TextAnchor.HALF_ASCENT_LEFT"
org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER.name has only one value
org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER.name.toString == "TextAnchor.HALF_ASCENT_CENTER"
org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT.name has only one value
org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT.name.toString == "TextAnchor.HALF_ASCENT_RIGHT"
org.jfree.chart.text.TextAnchor.CENTER_LEFT.name has only one value
org.jfree.chart.text.TextAnchor.CENTER_LEFT.name.toString == "TextAnchor.CENTER_LEFT"
org.jfree.chart.text.TextAnchor.CENTER.name has only one value
org.jfree.chart.text.TextAnchor.CENTER.name.toString == "TextAnchor.CENTER"
org.jfree.chart.text.TextAnchor.CENTER_RIGHT.name has only one value
org.jfree.chart.text.TextAnchor.CENTER_RIGHT.name.toString == "TextAnchor.CENTER_RIGHT"
org.jfree.chart.text.TextAnchor.BASELINE_LEFT.name has only one value
org.jfree.chart.text.TextAnchor.BASELINE_LEFT.name.toString == "TextAnchor.BASELINE_LEFT"
org.jfree.chart.text.TextAnchor.BASELINE_CENTER.name has only one value
org.jfree.chart.text.TextAnchor.BASELINE_CENTER.name.toString == "TextAnchor.BASELINE_CENTER"
org.jfree.chart.text.TextAnchor.BASELINE_RIGHT.name has only one value
org.jfree.chart.text.TextAnchor.BASELINE_RIGHT.name.toString == "TextAnchor.BASELINE_RIGHT"
org.jfree.chart.text.TextAnchor.BOTTOM_LEFT.name has only one value
org.jfree.chart.text.TextAnchor.BOTTOM_LEFT.name.toString == "TextAnchor.BOTTOM_LEFT"
org.jfree.chart.text.TextAnchor.BOTTOM_CENTER.name has only one value
org.jfree.chart.text.TextAnchor.BOTTOM_CENTER.name.toString == "TextAnchor.BOTTOM_CENTER"
org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT.name has only one value
org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT.name.toString == "TextAnchor.BOTTOM_RIGHT"
this.labelTextAnchor.name has only one value
this.labelTextAnchor.name.toString == "TextAnchor.CENTER"
org.jfree.chart.util.RectangleInsets.ZERO_INSETS has only one value
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType has only one value
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.top == 0.0
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.left == 0.0
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.bottom == 0.0
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.right == 0.0
this.labelOffset.unitType has only one value
org.jfree.chart.util.UnitType.ABSOLUTE has only one value
org.jfree.chart.util.UnitType.RELATIVE has only one value
this.labelOffset.unitType.name has only one value
this.labelOffset.unitType.name.toString == "UnitType.ABSOLUTE"
this.labelOffset.top == 3.0
this.labelOffset.left == 3.0
this.labelOffset.bottom == 3.0
this.labelOffset.right == 3.0
this.labelOffsetType has only one value
org.jfree.chart.util.LengthAdjustmentType.NO_CHANGE has only one value
org.jfree.chart.util.LengthAdjustmentType.EXPAND has only one value
org.jfree.chart.util.LengthAdjustmentType.CONTRACT has only one value
org.jfree.chart.util.LengthAdjustmentType.NO_CHANGE.name has only one value
org.jfree.chart.util.LengthAdjustmentType.NO_CHANGE.name.toString == "NO_CHANGE"
org.jfree.chart.util.LengthAdjustmentType.EXPAND.name has only one value
org.jfree.chart.util.LengthAdjustmentType.EXPAND.name.toString == "EXPAND"
org.jfree.chart.util.LengthAdjustmentType.CONTRACT.name has only one value
org.jfree.chart.util.LengthAdjustmentType.CONTRACT.name.toString == "CONTRACT"
this.labelOffsetType.name has only one value
this.labelOffsetType.name.toString == "CONTRACT"
===========================================================================
org.jfree.chart.plot.ValueMarker.ValueMarker(double):::ENTER
value == 0.5
===========================================================================
org.jfree.chart.plot.ValueMarker.ValueMarker(double):::EXIT
this.value == 0.5
this.paint has only one value
this.outlinePaint has only one value
this.alpha == 0.8
org.jfree.chart.plot.Marker.class$org$jfree$chart$event$MarkerChangeListener has only one value
===========================================================================
org.jfree.chart.plot.ValueMarker.ValueMarker(double, java.awt.Paint, java.awt.Stroke, java.awt.Paint, java.awt.Stroke, float):::ENTER
value == 0.0
paint.getClass().getName() == java.awt.Color.class
stroke.getClass().getName() == java.awt.BasicStroke.class
outlinePaint.getClass().getName() == java.awt.Color.class
outlineStroke.getClass().getName() == java.awt.BasicStroke.class
alpha == 0.6
===========================================================================
org.jfree.chart.plot.ValueMarker.ValueMarker(double, java.awt.Paint, java.awt.Stroke, java.awt.Paint, java.awt.Stroke, float):::EXIT
this.value == 0.0
this.alpha == 0.6
===========================================================================
org.jfree.chart.plot.XYPlot:::CLASS
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName() == org.jfree.chart.plot.XYPlot.DEFAULT_CROSSHAIR_STROKE.getClass().getName()
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName() == org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName()
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == org.jfree.chart.plot.XYPlot.DEFAULT_CROSSHAIR_PAINT.getClass().getName()
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName()
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName()
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE has only one value
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE != null
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName() == java.awt.BasicStroke.class
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_PAINT has only one value
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_PAINT != null
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == java.awt.Color.class
org.jfree.chart.plot.XYPlot.DEFAULT_CROSSHAIR_STROKE has only one value
org.jfree.chart.plot.XYPlot.DEFAULT_CROSSHAIR_STROKE != null
org.jfree.chart.plot.XYPlot.DEFAULT_CROSSHAIR_PAINT has only one value
org.jfree.chart.plot.XYPlot.DEFAULT_CROSSHAIR_PAINT != null
org.jfree.chart.plot.XYPlot.localizationResources has only one value
org.jfree.chart.plot.XYPlot.localizationResources != null
org.jfree.chart.plot.XYPlot.localizationResources.getClass().getName() == java.util.PropertyResourceBundle.class
org.jfree.chart.plot.Plot.ZERO has only one value
org.jfree.chart.plot.Plot.ZERO != null
org.jfree.chart.plot.Plot.ZERO.getClass().getName() == java.lang.Integer.class
org.jfree.chart.plot.Plot.DEFAULT_INSETS has only one value
org.jfree.chart.plot.Plot.DEFAULT_INSETS != null
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType has only one value
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType != null
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name has only one value
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name != null
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name.toString == "UnitType.ABSOLUTE"
org.jfree.chart.plot.Plot.DEFAULT_INSETS.top == 4.0
org.jfree.chart.plot.Plot.DEFAULT_INSETS.left == 8.0
org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom == 4.0
org.jfree.chart.plot.Plot.DEFAULT_INSETS.right == 8.0
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE has only one value
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE != null
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT has only one value
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT != null
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT has only one value
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT != null
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX has only one value
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX != null
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName() == java.awt.geom.Rectangle2D$Double.class
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE has only one value
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE != null
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName() == java.awt.geom.Ellipse2D$Double.class
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName() != org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName()
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName() != org.jfree.chart.plot.XYPlot.localizationResources.getClass().getName()
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName() != org.jfree.chart.plot.Plot.ZERO.getClass().getName()
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName() != org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName()
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName() != org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName()
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() != org.jfree.chart.plot.XYPlot.localizationResources.getClass().getName()
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() != org.jfree.chart.plot.Plot.ZERO.getClass().getName()
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() != org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName()
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() != org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName()
org.jfree.chart.plot.XYPlot.localizationResources.getClass().getName() != org.jfree.chart.plot.Plot.ZERO.getClass().getName()
org.jfree.chart.plot.XYPlot.localizationResources.getClass().getName() != org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName()
org.jfree.chart.plot.XYPlot.localizationResources.getClass().getName() != org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName()
org.jfree.chart.plot.Plot.ZERO.getClass().getName() != org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName()
org.jfree.chart.plot.Plot.ZERO.getClass().getName() != org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName()
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName() != org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName()
===========================================================================
org.jfree.chart.plot.XYPlot:::OBJECT
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName() == this.domainGridlineStroke.getClass().getName()
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName() == this.outlineStroke.getClass().getName()
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == this.domainGridlinePaint.getClass().getName()
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == this.noDataMessagePaint.getClass().getName()
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == this.outlinePaint.getClass().getName()
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == this.backgroundPaint.getClass().getName()
this.domainAxes.objects.getClass().getName() == this.domainAxisLocations.objects.getClass().getName()
this.domainAxes.objects.getClass().getName() == this.rangeAxes.objects.getClass().getName()
this.domainAxes.objects.getClass().getName() == this.rangeAxisLocations.objects.getClass().getName()
this.domainAxes.objects.getClass().getName() == this.datasets.objects.getClass().getName()
this.domainAxes.objects.getClass().getName() == this.renderers.objects.getClass().getName()
this.datasetToDomainAxisMap.getClass().getName() == this.datasetToRangeAxisMap.getClass().getName()
this.domainGridlineStroke.getClass().getName() == this.rangeGridlineStroke.getClass().getName()
this.domainGridlineStroke.getClass().getName() == this.domainZeroBaselineStroke.getClass().getName()
this.domainGridlineStroke.getClass().getName() == this.rangeZeroBaselineStroke.getClass().getName()
this.domainGridlineStroke.getClass().getName() == this.domainCrosshairStroke.getClass().getName()
this.domainGridlineStroke.getClass().getName() == this.rangeCrosshairStroke.getClass().getName()
this.domainGridlinePaint.getClass().getName() == this.rangeGridlinePaint.getClass().getName()
this.domainGridlinePaint.getClass().getName() == this.domainZeroBaselinePaint.getClass().getName()
this.domainGridlinePaint.getClass().getName() == this.rangeZeroBaselinePaint.getClass().getName()
this.domainGridlinePaint.getClass().getName() == this.domainCrosshairPaint.getClass().getName()
this.domainGridlinePaint.getClass().getName() == this.rangeCrosshairPaint.getClass().getName()
this.foregroundDomainMarkers.getClass().getName() == this.backgroundDomainMarkers.getClass().getName()
this.foregroundDomainMarkers.getClass().getName() == this.foregroundRangeMarkers.getClass().getName()
this.foregroundDomainMarkers.getClass().getName() == this.backgroundRangeMarkers.getClass().getName()
this.orientation has only one value
this.orientation != null
org.jfree.chart.plot.PlotOrientation.HORIZONTAL has only one value
org.jfree.chart.plot.PlotOrientation.HORIZONTAL != null
org.jfree.chart.plot.PlotOrientation.VERTICAL has only one value
org.jfree.chart.plot.PlotOrientation.VERTICAL != null
org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name has only one value
org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name != null
org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name.toString == "PlotOrientation.HORIZONTAL"
org.jfree.chart.plot.PlotOrientation.VERTICAL.name has only one value
org.jfree.chart.plot.PlotOrientation.VERTICAL.name != null
org.jfree.chart.plot.PlotOrientation.VERTICAL.name.toString == "PlotOrientation.VERTICAL"
this.orientation.name has only one value
this.orientation.name != null
this.orientation.name.toString == "PlotOrientation.VERTICAL"
this.axisOffset != null
org.jfree.chart.util.RectangleInsets.ZERO_INSETS has only one value
org.jfree.chart.util.RectangleInsets.ZERO_INSETS != null
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType has only one value
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType != null
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.top == 0.0
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.left == 0.0
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.bottom == 0.0
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.right == 0.0
this.axisOffset.unitType has only one value
this.axisOffset.unitType != null
org.jfree.chart.util.UnitType.ABSOLUTE has only one value
org.jfree.chart.util.UnitType.ABSOLUTE != null
org.jfree.chart.util.UnitType.RELATIVE has only one value
org.jfree.chart.util.UnitType.RELATIVE != null
this.axisOffset.unitType.name has only one value
this.axisOffset.unitType.name != null
this.axisOffset.unitType.name.toString == "UnitType.ABSOLUTE"
this.axisOffset.top == 4.0
this.axisOffset.left == 4.0
this.axisOffset.bottom == 4.0
this.axisOffset.right == 4.0
this.domainAxes != null
this.domainAxes.objects != null
this.domainAxes.objects.getClass().getName() == java.lang.Object[].class
this.domainAxes.objects[] contains only nulls and has only one value, of length 8
this.domainAxes.objects[] elements == null
this.domainAxes.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.domainAxes.objects[].getClass().getName() elements == null
this.domainAxes.size == 1
this.domainAxes.increment == 8
this.domainAxisLocations != null
this.domainAxisLocations.objects != null
this.domainAxisLocations.objects[].getClass().getName() one of { [null, null, null, null, null, null, null, null], [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null] }
this.domainAxisLocations.size one of { 0, 1 }
this.domainAxisLocations.increment == 8
this.rangeAxes != null
this.rangeAxes.objects != null
this.rangeAxes.objects[] contains only nulls and has only one value, of length 8
this.rangeAxes.objects[] elements == null
this.rangeAxes.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.rangeAxes.objects[].getClass().getName() elements == null
this.rangeAxes.size one of { 0, 1 }
this.rangeAxes.increment == 8
this.rangeAxisLocations != null
this.rangeAxisLocations.objects != null
this.rangeAxisLocations.objects[].getClass().getName() one of { [null, null, null, null, null, null, null, null], [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null] }
this.rangeAxisLocations.size one of { 0, 1 }
this.rangeAxisLocations.increment == 8
this.datasets != null
this.datasets.objects != null
this.datasets.objects[] contains only nulls and has only one value, of length 8
this.datasets.objects[] elements == null
this.datasets.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.datasets.objects[].getClass().getName() elements == null
this.datasets.size == 1
this.datasets.increment == 8
this.renderers != null
this.renderers.objects != null
this.renderers.objects[] contains only nulls and has only one value, of length 8
this.renderers.objects[] elements == null
this.renderers.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.renderers.objects[].getClass().getName() elements == null
this.renderers.size == 1
this.renderers.increment == 8
this.datasetToDomainAxisMap != null
this.datasetToDomainAxisMap.getClass().getName() == java.util.TreeMap.class
this.datasetToRangeAxisMap != null
this.quadrantOrigin != null
this.quadrantOrigin.getClass().getName() == java.awt.geom.Point2D$Double.class
this.quadrantPaint != null
this.quadrantPaint.getClass().getName() == java.awt.Paint[].class
this.quadrantPaint[] contains only nulls and has only one value, of length 4
this.quadrantPaint[] elements == null
this.quadrantPaint[].getClass().getName() == [null, null, null, null]
this.quadrantPaint[].getClass().getName() elements == null
this.domainGridlineStroke.getClass().getName() == java.awt.BasicStroke.class
this.domainGridlinePaint.getClass().getName() == java.awt.Color.class
this.domainZeroBaselineVisible == false
this.rangeZeroBaselineVisible == false
this.domainCrosshairVisible == false
this.domainCrosshairValue == 0.0
this.domainCrosshairLockedOnData == true
this.rangeCrosshairVisible == false
this.rangeCrosshairValue == 0.0
this.rangeCrosshairLockedOnData == true
this.foregroundDomainMarkers != null
this.foregroundDomainMarkers.getClass().getName() == java.util.HashMap.class
this.backgroundDomainMarkers != null
this.foregroundRangeMarkers != null
this.backgroundRangeMarkers != null
this.annotations[] == []
this.annotations[].getClass().getName() == []
this.annotations.getClass().getName() == java.util.ArrayList.class
this.domainTickBandPaint == null
this.rangeTickBandPaint == null
this.fixedDomainAxisSpace == null
this.fixedRangeAxisSpace == null
this.datasetRenderingOrder has only one value
this.datasetRenderingOrder != null
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD has only one value
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD != null
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE has only one value
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE != null
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name has only one value
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name != null
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name.toString == "DatasetRenderingOrder.FORWARD"
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name has only one value
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name != null
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name.toString == "DatasetRenderingOrder.REVERSE"
this.datasetRenderingOrder.name has only one value
this.datasetRenderingOrder.name != null
this.datasetRenderingOrder.name.toString == "DatasetRenderingOrder.REVERSE"
this.seriesRenderingOrder has only one value
this.seriesRenderingOrder != null
org.jfree.chart.plot.SeriesRenderingOrder.FORWARD has only one value
org.jfree.chart.plot.SeriesRenderingOrder.FORWARD != null
org.jfree.chart.plot.SeriesRenderingOrder.REVERSE has only one value
org.jfree.chart.plot.SeriesRenderingOrder.REVERSE != null
org.jfree.chart.plot.SeriesRenderingOrder.FORWARD.name has only one value
org.jfree.chart.plot.SeriesRenderingOrder.FORWARD.name != null
org.jfree.chart.plot.SeriesRenderingOrder.FORWARD.name.toString == "SeriesRenderingOrder.FORWARD"
org.jfree.chart.plot.SeriesRenderingOrder.REVERSE.name has only one value
org.jfree.chart.plot.SeriesRenderingOrder.REVERSE.name != null
org.jfree.chart.plot.SeriesRenderingOrder.REVERSE.name.toString == "SeriesRenderingOrder.REVERSE"
this.seriesRenderingOrder.name has only one value
this.seriesRenderingOrder.name != null
this.seriesRenderingOrder.name.toString == "SeriesRenderingOrder.REVERSE"
this.weight == 1
this.fixedLegendItems == null
this.parent == null
org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener == null
this.datasetGroup == null
this.noDataMessage == null
this.noDataMessageFont != null
this.noDataMessagePaint has only one value
this.noDataMessagePaint != null
this.insets has only one value
this.insets != null
this.insets.unitType has only one value
this.insets.unitType != null
this.insets.unitType.name has only one value
this.insets.unitType.name != null
this.insets.unitType.name.toString == "UnitType.ABSOLUTE"
this.insets.top == 4.0
this.insets.left == 8.0
this.insets.bottom == 4.0
this.insets.right == 8.0
this.outlineVisible == true
this.outlineStroke has only one value
this.outlineStroke != null
this.outlinePaint has only one value
this.outlinePaint != null
this.backgroundPaint has only one value
this.backgroundPaint != null
this.backgroundImage == null
this.backgroundImageAlignment == 15
this.backgroundImageAlpha == 0.5
this.foregroundAlpha == 1.0
this.backgroundAlpha == 1.0
this.drawingSupplier != null
this.drawingSupplier.getClass().getName() == org.jfree.chart.plot.DefaultDrawingSupplier.class
this.listenerList != null
size(this.domainAxes.objects[]) == 8
size(this.domainAxisLocations.objects[]) == 8
size(this.rangeAxes.objects[]) == 8
size(this.rangeAxisLocations.objects[]) == 8
size(this.datasets.objects[]) == 8
size(this.renderers.objects[]) == 8
size(this.quadrantPaint[]) == 4
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName() != this.domainAxes.objects.getClass().getName()
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName() != this.datasetToDomainAxisMap.getClass().getName()
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName() != this.quadrantOrigin.getClass().getName()
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName() != this.quadrantPaint.getClass().getName()
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName() != this.foregroundDomainMarkers.getClass().getName()
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName() != this.drawingSupplier.getClass().getName()
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() != this.domainAxes.objects.getClass().getName()
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() != this.datasetToDomainAxisMap.getClass().getName()
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() != this.quadrantOrigin.getClass().getName()
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() != this.quadrantPaint.getClass().getName()
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() != this.foregroundDomainMarkers.getClass().getName()
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() != this.drawingSupplier.getClass().getName()
org.jfree.chart.plot.XYPlot.localizationResources.getClass().getName() != this.domainAxes.objects.getClass().getName()
org.jfree.chart.plot.XYPlot.localizationResources.getClass().getName() != this.datasetToDomainAxisMap.getClass().getName()
org.jfree.chart.plot.XYPlot.localizationResources.getClass().getName() != this.quadrantOrigin.getClass().getName()
org.jfree.chart.plot.XYPlot.localizationResources.getClass().getName() != this.quadrantPaint.getClass().getName()
org.jfree.chart.plot.XYPlot.localizationResources.getClass().getName() != this.foregroundDomainMarkers.getClass().getName()
org.jfree.chart.plot.XYPlot.localizationResources.getClass().getName() != this.drawingSupplier.getClass().getName()
this.domainAxes.objects.getClass().getName() != this.datasetToDomainAxisMap.getClass().getName()
this.domainAxes.objects.getClass().getName() != this.quadrantOrigin.getClass().getName()
this.domainAxes.objects.getClass().getName() != this.quadrantPaint.getClass().getName()
this.domainAxes.objects.getClass().getName() != this.foregroundDomainMarkers.getClass().getName()
this.domainAxes.objects.getClass().getName() != org.jfree.chart.plot.Plot.ZERO.getClass().getName()
this.domainAxes.objects.getClass().getName() != org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName()
this.domainAxes.objects.getClass().getName() != org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName()
this.domainAxes.objects.getClass().getName() != this.drawingSupplier.getClass().getName()
this.datasetToDomainAxisMap.getClass().getName() != this.quadrantOrigin.getClass().getName()
this.datasetToDomainAxisMap.getClass().getName() != this.quadrantPaint.getClass().getName()
this.datasetToDomainAxisMap.getClass().getName() != this.foregroundDomainMarkers.getClass().getName()
this.datasetToDomainAxisMap.getClass().getName() != org.jfree.chart.plot.Plot.ZERO.getClass().getName()
this.datasetToDomainAxisMap.getClass().getName() != org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName()
this.datasetToDomainAxisMap.getClass().getName() != org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName()
this.datasetToDomainAxisMap.getClass().getName() != this.drawingSupplier.getClass().getName()
this.quadrantOrigin.getClass().getName() != this.quadrantPaint.getClass().getName()
this.quadrantOrigin.getClass().getName() != this.foregroundDomainMarkers.getClass().getName()
this.quadrantOrigin.getClass().getName() != org.jfree.chart.plot.Plot.ZERO.getClass().getName()
this.quadrantOrigin.getClass().getName() != org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName()
this.quadrantOrigin.getClass().getName() != org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName()
this.quadrantOrigin.getClass().getName() != this.drawingSupplier.getClass().getName()
this.quadrantPaint.getClass().getName() != this.foregroundDomainMarkers.getClass().getName()
this.quadrantPaint.getClass().getName() != org.jfree.chart.plot.Plot.ZERO.getClass().getName()
this.quadrantPaint.getClass().getName() != org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName()
this.quadrantPaint.getClass().getName() != org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName()
this.quadrantPaint.getClass().getName() != this.drawingSupplier.getClass().getName()
this.foregroundDomainMarkers.getClass().getName() != org.jfree.chart.plot.Plot.ZERO.getClass().getName()
this.foregroundDomainMarkers.getClass().getName() != org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName()
this.foregroundDomainMarkers.getClass().getName() != org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName()
this.foregroundDomainMarkers.getClass().getName() != this.drawingSupplier.getClass().getName()
org.jfree.chart.plot.Plot.ZERO.getClass().getName() != this.drawingSupplier.getClass().getName()
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName() != this.drawingSupplier.getClass().getName()
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName() != this.drawingSupplier.getClass().getName()
===========================================================================
org.jfree.chart.plot.XYPlot.XYPlot():::EXIT
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName() == this.rangeGridlineStroke.getClass().getName()
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName() == this.domainZeroBaselineStroke.getClass().getName()
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName() == this.rangeZeroBaselineStroke.getClass().getName()
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName() == this.domainCrosshairStroke.getClass().getName()
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName() == this.rangeCrosshairStroke.getClass().getName()
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == this.rangeGridlinePaint.getClass().getName()
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == this.domainZeroBaselinePaint.getClass().getName()
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == this.rangeZeroBaselinePaint.getClass().getName()
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == this.domainCrosshairPaint.getClass().getName()
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == this.rangeCrosshairPaint.getClass().getName()
this.domainAxisLocations.objects[] has only one value, of length 8
this.domainAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.domainAxisLocations.size == 1
this.rangeAxes.size == 1
this.rangeAxisLocations.objects[] has only one value, of length 8
this.rangeAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.rangeAxisLocations.size == 1
this.domainGridlinesVisible == true
this.domainGridlineStroke has only one value
this.domainGridlinePaint has only one value
this.rangeGridlinesVisible == true
this.rangeGridlineStroke has only one value
this.rangeGridlinePaint has only one value
this.domainZeroBaselinePaint has only one value
this.rangeZeroBaselinePaint has only one value
this.domainCrosshairStroke has only one value
this.domainCrosshairPaint has only one value
this.rangeCrosshairStroke has only one value
this.rangeCrosshairPaint has only one value
===========================================================================
org.jfree.chart.plot.XYPlot.XYPlot(org.jfree.data.xy.XYDataset, org.jfree.chart.axis.ValueAxis, org.jfree.chart.axis.ValueAxis, org.jfree.chart.renderer.xy.XYItemRenderer):::ENTER
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() == org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName()
dataset == null
domainAxis == null
org.jfree.chart.util.RectangleInsets.ZERO_INSETS has only one value
org.jfree.chart.plot.Plot.ZERO has only one value
org.jfree.chart.plot.Plot.ZERO.getClass().getName() == java.lang.Integer.class
org.jfree.chart.plot.Plot.DEFAULT_INSETS has only one value
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE has only one value
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName() == java.awt.BasicStroke.class
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT has only one value
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() == java.awt.Color.class
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT has only one value
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX has only one value
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName() == java.awt.geom.Rectangle2D$Double.class
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE has only one value
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName() == java.awt.geom.Ellipse2D$Double.class
org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener == null
rangeAxis == null
renderer == null
===========================================================================
org.jfree.chart.plot.XYPlot.XYPlot(org.jfree.data.xy.XYDataset, org.jfree.chart.axis.ValueAxis, org.jfree.chart.axis.ValueAxis, org.jfree.chart.renderer.xy.XYItemRenderer):::EXIT
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName() == this.rangeGridlineStroke.getClass().getName()
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName() == this.domainZeroBaselineStroke.getClass().getName()
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName() == this.rangeZeroBaselineStroke.getClass().getName()
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName() == this.domainCrosshairStroke.getClass().getName()
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName() == this.rangeCrosshairStroke.getClass().getName()
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName())
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == this.rangeGridlinePaint.getClass().getName()
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == this.domainZeroBaselinePaint.getClass().getName()
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == this.rangeZeroBaselinePaint.getClass().getName()
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == this.domainCrosshairPaint.getClass().getName()
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == this.rangeCrosshairPaint.getClass().getName()
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName())
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName())
org.jfree.chart.util.RectangleInsets.ZERO_INSETS == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS)
org.jfree.chart.plot.Plot.ZERO == orig(org.jfree.chart.plot.Plot.ZERO)
org.jfree.chart.plot.Plot.ZERO.getClass().getName() == orig(org.jfree.chart.plot.Plot.ZERO.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_INSETS == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName())
org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener == orig(org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener)
this.domainAxisLocations.objects[] has only one value, of length 8
this.domainAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.domainAxisLocations.size == 1
this.rangeAxes.size == 1
this.rangeAxisLocations.objects[] has only one value, of length 8
this.rangeAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.rangeAxisLocations.size == 1
this.domainGridlinesVisible == true
this.domainGridlineStroke has only one value
this.domainGridlinePaint has only one value
this.rangeGridlinesVisible == true
this.rangeGridlineStroke has only one value
this.rangeGridlinePaint has only one value
this.domainZeroBaselinePaint has only one value
this.rangeZeroBaselinePaint has only one value
this.domainCrosshairStroke has only one value
this.domainCrosshairPaint has only one value
this.rangeCrosshairStroke has only one value
this.rangeCrosshairPaint has only one value
===========================================================================
org.jfree.chart.plot.XYPlot.configureDomainAxes():::ENTER
this.domainGridlinesVisible == false
this.domainGridlineStroke == null
this.domainGridlinePaint == null
this.rangeGridlinesVisible == false
this.rangeGridlineStroke == null
this.rangeGridlinePaint == null
this.domainZeroBaselineStroke == null
this.domainZeroBaselinePaint == null
this.rangeZeroBaselineStroke == null
this.rangeZeroBaselinePaint == null
this.domainCrosshairStroke == null
this.domainCrosshairPaint == null
this.rangeCrosshairStroke == null
this.rangeCrosshairPaint == null
this.annotations == null
===========================================================================
org.jfree.chart.plot.XYPlot.configureDomainAxes():::EXIT
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE == orig(org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE)
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName())
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.XYPlot.DEFAULT_CROSSHAIR_STROKE.getClass().getName())
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName())
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName() == orig(this.outlineStroke.getClass().getName())
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_PAINT == orig(org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_PAINT)
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName())
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.XYPlot.DEFAULT_CROSSHAIR_PAINT.getClass().getName())
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName())
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName())
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == orig(this.noDataMessagePaint.getClass().getName())
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == orig(this.outlinePaint.getClass().getName())
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == orig(this.backgroundPaint.getClass().getName())
org.jfree.chart.plot.XYPlot.DEFAULT_CROSSHAIR_STROKE == orig(org.jfree.chart.plot.XYPlot.DEFAULT_CROSSHAIR_STROKE)
org.jfree.chart.plot.XYPlot.DEFAULT_CROSSHAIR_PAINT == orig(org.jfree.chart.plot.XYPlot.DEFAULT_CROSSHAIR_PAINT)
org.jfree.chart.plot.XYPlot.localizationResources == orig(org.jfree.chart.plot.XYPlot.localizationResources)
org.jfree.chart.plot.XYPlot.localizationResources.getClass().getName() == orig(org.jfree.chart.plot.XYPlot.localizationResources.getClass().getName())
this.orientation == orig(this.orientation)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL)
org.jfree.chart.plot.PlotOrientation.VERTICAL == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name.toString == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name.toString)
org.jfree.chart.plot.PlotOrientation.VERTICAL.name == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL.name)
org.jfree.chart.plot.PlotOrientation.VERTICAL.name.toString == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL.name.toString)
this.orientation.name == orig(this.orientation.name)
this.orientation.name.toString == orig(this.orientation.name.toString)
this.axisOffset == orig(this.axisOffset)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.top == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.top)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.left == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.left)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.bottom == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.bottom)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.right == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.right)
this.axisOffset.unitType == orig(this.axisOffset.unitType)
org.jfree.chart.util.UnitType.ABSOLUTE == orig(org.jfree.chart.util.UnitType.ABSOLUTE)
org.jfree.chart.util.UnitType.RELATIVE == orig(org.jfree.chart.util.UnitType.RELATIVE)
this.axisOffset.unitType.name == orig(this.axisOffset.unitType.name)
this.axisOffset.unitType.name.toString == orig(this.axisOffset.unitType.name.toString)
this.axisOffset.top == orig(this.axisOffset.top)
this.axisOffset.left == orig(this.axisOffset.left)
this.axisOffset.bottom == orig(this.axisOffset.bottom)
this.axisOffset.right == orig(this.axisOffset.right)
this.domainAxes == orig(this.domainAxes)
this.domainAxes.objects == orig(this.domainAxes.objects)
this.domainAxes.objects.getClass().getName() == orig(this.domainAxes.objects.getClass().getName())
this.domainAxes.objects.getClass().getName() == orig(this.domainAxisLocations.objects.getClass().getName())
this.domainAxes.objects.getClass().getName() == orig(this.rangeAxes.objects.getClass().getName())
this.domainAxes.objects.getClass().getName() == orig(this.rangeAxisLocations.objects.getClass().getName())
this.domainAxes.objects.getClass().getName() == orig(this.datasets.objects.getClass().getName())
this.domainAxes.objects.getClass().getName() == orig(this.renderers.objects.getClass().getName())
this.domainAxes.objects[] == orig(this.domainAxes.objects[])
this.domainAxes.size == orig(this.domainAxes.size)
this.domainAxes.increment == orig(this.domainAxes.increment)
this.domainAxisLocations == orig(this.domainAxisLocations)
this.domainAxisLocations.objects == orig(this.domainAxisLocations.objects)
this.domainAxisLocations.objects[] == orig(this.domainAxisLocations.objects[])
this.domainAxisLocations.size == orig(this.domainAxisLocations.size)
this.domainAxisLocations.increment == orig(this.domainAxisLocations.increment)
this.rangeAxes == orig(this.rangeAxes)
this.rangeAxes.objects == orig(this.rangeAxes.objects)
this.rangeAxes.objects[] == orig(this.rangeAxes.objects[])
this.rangeAxes.size == orig(this.rangeAxes.size)
this.rangeAxes.increment == orig(this.rangeAxes.increment)
this.rangeAxisLocations == orig(this.rangeAxisLocations)
this.rangeAxisLocations.objects == orig(this.rangeAxisLocations.objects)
this.rangeAxisLocations.objects[] == orig(this.rangeAxisLocations.objects[])
this.rangeAxisLocations.size == orig(this.rangeAxisLocations.size)
this.rangeAxisLocations.increment == orig(this.rangeAxisLocations.increment)
this.datasets == orig(this.datasets)
this.datasets.objects == orig(this.datasets.objects)
this.datasets.objects[] == orig(this.datasets.objects[])
this.datasets.size == orig(this.datasets.size)
this.datasets.increment == orig(this.datasets.increment)
this.renderers == orig(this.renderers)
this.renderers.objects == orig(this.renderers.objects)
this.renderers.objects[] == orig(this.renderers.objects[])
this.renderers.size == orig(this.renderers.size)
this.renderers.increment == orig(this.renderers.increment)
this.datasetToDomainAxisMap == orig(this.datasetToDomainAxisMap)
this.datasetToDomainAxisMap.getClass().getName() == orig(this.datasetToDomainAxisMap.getClass().getName())
this.datasetToDomainAxisMap.getClass().getName() == orig(this.datasetToRangeAxisMap.getClass().getName())
this.datasetToRangeAxisMap == orig(this.datasetToRangeAxisMap)
this.quadrantOrigin == orig(this.quadrantOrigin)
this.quadrantOrigin.getClass().getName() == orig(this.quadrantOrigin.getClass().getName())
this.quadrantPaint == orig(this.quadrantPaint)
this.quadrantPaint.getClass().getName() == orig(this.quadrantPaint.getClass().getName())
this.quadrantPaint[] == orig(this.quadrantPaint[])
this.domainGridlinesVisible == orig(this.domainGridlinesVisible)
this.domainGridlineStroke == orig(this.domainGridlineStroke)
this.domainGridlinePaint == orig(this.domainGridlinePaint)
this.rangeGridlinesVisible == orig(this.rangeGridlinesVisible)
this.rangeGridlineStroke == orig(this.rangeGridlineStroke)
this.rangeGridlinePaint == orig(this.rangeGridlinePaint)
this.domainZeroBaselineVisible == orig(this.domainZeroBaselineVisible)
this.domainZeroBaselineStroke == orig(this.domainZeroBaselineStroke)
this.domainZeroBaselinePaint == orig(this.domainZeroBaselinePaint)
this.rangeZeroBaselineVisible == orig(this.rangeZeroBaselineVisible)
this.rangeZeroBaselineStroke == orig(this.rangeZeroBaselineStroke)
this.rangeZeroBaselinePaint == orig(this.rangeZeroBaselinePaint)
this.domainCrosshairVisible == orig(this.domainCrosshairVisible)
this.domainCrosshairValue == orig(this.domainCrosshairValue)
this.domainCrosshairStroke == orig(this.domainCrosshairStroke)
this.domainCrosshairPaint == orig(this.domainCrosshairPaint)
this.domainCrosshairLockedOnData == orig(this.domainCrosshairLockedOnData)
this.rangeCrosshairVisible == orig(this.rangeCrosshairVisible)
this.rangeCrosshairValue == orig(this.rangeCrosshairValue)
this.rangeCrosshairStroke == orig(this.rangeCrosshairStroke)
this.rangeCrosshairPaint == orig(this.rangeCrosshairPaint)
this.rangeCrosshairLockedOnData == orig(this.rangeCrosshairLockedOnData)
this.foregroundDomainMarkers == orig(this.foregroundDomainMarkers)
this.foregroundDomainMarkers.getClass().getName() == orig(this.foregroundDomainMarkers.getClass().getName())
this.foregroundDomainMarkers.getClass().getName() == orig(this.backgroundDomainMarkers.getClass().getName())
this.foregroundDomainMarkers.getClass().getName() == orig(this.foregroundRangeMarkers.getClass().getName())
this.foregroundDomainMarkers.getClass().getName() == orig(this.backgroundRangeMarkers.getClass().getName())
this.backgroundDomainMarkers == orig(this.backgroundDomainMarkers)
this.foregroundRangeMarkers == orig(this.foregroundRangeMarkers)
this.backgroundRangeMarkers == orig(this.backgroundRangeMarkers)
this.annotations == orig(this.annotations)
this.domainTickBandPaint == orig(this.domainTickBandPaint)
this.rangeTickBandPaint == orig(this.rangeTickBandPaint)
this.fixedDomainAxisSpace == orig(this.fixedDomainAxisSpace)
this.fixedRangeAxisSpace == orig(this.fixedRangeAxisSpace)
this.datasetRenderingOrder == orig(this.datasetRenderingOrder)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name.toString == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name.toString)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name.toString == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name.toString)
this.datasetRenderingOrder.name == orig(this.datasetRenderingOrder.name)
this.datasetRenderingOrder.name.toString == orig(this.datasetRenderingOrder.name.toString)
this.seriesRenderingOrder == orig(this.seriesRenderingOrder)
org.jfree.chart.plot.SeriesRenderingOrder.FORWARD == orig(org.jfree.chart.plot.SeriesRenderingOrder.FORWARD)
org.jfree.chart.plot.SeriesRenderingOrder.REVERSE == orig(org.jfree.chart.plot.SeriesRenderingOrder.REVERSE)
org.jfree.chart.plot.SeriesRenderingOrder.FORWARD.name == orig(org.jfree.chart.plot.SeriesRenderingOrder.FORWARD.name)
org.jfree.chart.plot.SeriesRenderingOrder.FORWARD.name.toString == orig(org.jfree.chart.plot.SeriesRenderingOrder.FORWARD.name.toString)
org.jfree.chart.plot.SeriesRenderingOrder.REVERSE.name == orig(org.jfree.chart.plot.SeriesRenderingOrder.REVERSE.name)
org.jfree.chart.plot.SeriesRenderingOrder.REVERSE.name.toString == orig(org.jfree.chart.plot.SeriesRenderingOrder.REVERSE.name.toString)
this.seriesRenderingOrder.name == orig(this.seriesRenderingOrder.name)
this.seriesRenderingOrder.name.toString == orig(this.seriesRenderingOrder.name.toString)
this.weight == orig(this.weight)
this.fixedLegendItems == orig(this.fixedLegendItems)
org.jfree.chart.plot.Plot.ZERO == orig(org.jfree.chart.plot.Plot.ZERO)
org.jfree.chart.plot.Plot.ZERO.getClass().getName() == orig(org.jfree.chart.plot.Plot.ZERO.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_INSETS == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name.toString == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name.toString)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.top == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.top)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.left == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.left)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.right == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.right)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName())
this.parent == orig(this.parent)
org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener == orig(org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener)
this.datasetGroup == orig(this.datasetGroup)
this.noDataMessage == orig(this.noDataMessage)
this.noDataMessageFont == orig(this.noDataMessageFont)
this.noDataMessagePaint == orig(this.noDataMessagePaint)
this.insets == orig(this.insets)
this.insets.unitType == orig(this.insets.unitType)
this.insets.unitType.name == orig(this.insets.unitType.name)
this.insets.unitType.name.toString == orig(this.insets.unitType.name.toString)
this.insets.top == orig(this.insets.top)
this.insets.left == orig(this.insets.left)
this.insets.bottom == orig(this.insets.bottom)
this.insets.right == orig(this.insets.right)
this.outlineVisible == orig(this.outlineVisible)
this.outlineStroke == orig(this.outlineStroke)
this.outlinePaint == orig(this.outlinePaint)
this.backgroundPaint == orig(this.backgroundPaint)
this.backgroundImage == orig(this.backgroundImage)
this.backgroundImageAlignment == orig(this.backgroundImageAlignment)
this.backgroundImageAlpha == orig(this.backgroundImageAlpha)
this.foregroundAlpha == orig(this.foregroundAlpha)
this.backgroundAlpha == orig(this.backgroundAlpha)
this.drawingSupplier == orig(this.drawingSupplier)
this.drawingSupplier.getClass().getName() == orig(this.drawingSupplier.getClass().getName())
this.listenerList == orig(this.listenerList)
this.domainGridlinesVisible == false
this.domainGridlineStroke == null
this.domainGridlinePaint == null
this.rangeGridlinesVisible == false
this.rangeGridlineStroke == null
this.rangeGridlinePaint == null
this.domainZeroBaselineStroke == null
this.domainZeroBaselinePaint == null
this.rangeZeroBaselineStroke == null
this.rangeZeroBaselinePaint == null
this.domainCrosshairStroke == null
this.domainCrosshairPaint == null
this.rangeCrosshairStroke == null
this.rangeCrosshairPaint == null
this.annotations == null
===========================================================================
org.jfree.chart.plot.XYPlot.configureRangeAxes():::ENTER
this.domainGridlinesVisible == false
this.domainGridlineStroke == null
this.domainGridlinePaint == null
this.rangeGridlinesVisible == false
this.rangeGridlineStroke == null
this.rangeGridlinePaint == null
this.domainZeroBaselineStroke == null
this.domainZeroBaselinePaint == null
this.rangeZeroBaselineStroke == null
this.rangeZeroBaselinePaint == null
this.domainCrosshairStroke == null
this.domainCrosshairPaint == null
this.rangeCrosshairStroke == null
this.rangeCrosshairPaint == null
this.annotations == null
===========================================================================
org.jfree.chart.plot.XYPlot.configureRangeAxes():::EXIT
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE == orig(org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE)
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName())
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.XYPlot.DEFAULT_CROSSHAIR_STROKE.getClass().getName())
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName())
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName() == orig(this.outlineStroke.getClass().getName())
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_PAINT == orig(org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_PAINT)
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName())
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.XYPlot.DEFAULT_CROSSHAIR_PAINT.getClass().getName())
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName())
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName())
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == orig(this.noDataMessagePaint.getClass().getName())
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == orig(this.outlinePaint.getClass().getName())
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == orig(this.backgroundPaint.getClass().getName())
org.jfree.chart.plot.XYPlot.DEFAULT_CROSSHAIR_STROKE == orig(org.jfree.chart.plot.XYPlot.DEFAULT_CROSSHAIR_STROKE)
org.jfree.chart.plot.XYPlot.DEFAULT_CROSSHAIR_PAINT == orig(org.jfree.chart.plot.XYPlot.DEFAULT_CROSSHAIR_PAINT)
org.jfree.chart.plot.XYPlot.localizationResources == orig(org.jfree.chart.plot.XYPlot.localizationResources)
org.jfree.chart.plot.XYPlot.localizationResources.getClass().getName() == orig(org.jfree.chart.plot.XYPlot.localizationResources.getClass().getName())
this.orientation == orig(this.orientation)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL)
org.jfree.chart.plot.PlotOrientation.VERTICAL == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name.toString == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name.toString)
org.jfree.chart.plot.PlotOrientation.VERTICAL.name == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL.name)
org.jfree.chart.plot.PlotOrientation.VERTICAL.name.toString == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL.name.toString)
this.orientation.name == orig(this.orientation.name)
this.orientation.name.toString == orig(this.orientation.name.toString)
this.axisOffset == orig(this.axisOffset)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.top == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.top)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.left == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.left)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.bottom == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.bottom)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.right == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.right)
this.axisOffset.unitType == orig(this.axisOffset.unitType)
org.jfree.chart.util.UnitType.ABSOLUTE == orig(org.jfree.chart.util.UnitType.ABSOLUTE)
org.jfree.chart.util.UnitType.RELATIVE == orig(org.jfree.chart.util.UnitType.RELATIVE)
this.axisOffset.unitType.name == orig(this.axisOffset.unitType.name)
this.axisOffset.unitType.name.toString == orig(this.axisOffset.unitType.name.toString)
this.axisOffset.top == orig(this.axisOffset.top)
this.axisOffset.left == orig(this.axisOffset.left)
this.axisOffset.bottom == orig(this.axisOffset.bottom)
this.axisOffset.right == orig(this.axisOffset.right)
this.domainAxes == orig(this.domainAxes)
this.domainAxes.objects == orig(this.domainAxes.objects)
this.domainAxes.objects.getClass().getName() == orig(this.domainAxes.objects.getClass().getName())
this.domainAxes.objects.getClass().getName() == orig(this.domainAxisLocations.objects.getClass().getName())
this.domainAxes.objects.getClass().getName() == orig(this.rangeAxes.objects.getClass().getName())
this.domainAxes.objects.getClass().getName() == orig(this.rangeAxisLocations.objects.getClass().getName())
this.domainAxes.objects.getClass().getName() == orig(this.datasets.objects.getClass().getName())
this.domainAxes.objects.getClass().getName() == orig(this.renderers.objects.getClass().getName())
this.domainAxes.objects[] == orig(this.domainAxes.objects[])
this.domainAxes.size == orig(this.domainAxes.size)
this.domainAxes.increment == orig(this.domainAxes.increment)
this.domainAxisLocations == orig(this.domainAxisLocations)
this.domainAxisLocations.objects == orig(this.domainAxisLocations.objects)
this.domainAxisLocations.objects[] == orig(this.domainAxisLocations.objects[])
this.domainAxisLocations.size == orig(this.domainAxisLocations.size)
this.domainAxisLocations.increment == orig(this.domainAxisLocations.increment)
this.rangeAxes == orig(this.rangeAxes)
this.rangeAxes.objects == orig(this.rangeAxes.objects)
this.rangeAxes.objects[] == orig(this.rangeAxes.objects[])
this.rangeAxes.size == orig(this.rangeAxes.size)
this.rangeAxes.increment == orig(this.rangeAxes.increment)
this.rangeAxisLocations == orig(this.rangeAxisLocations)
this.rangeAxisLocations.objects == orig(this.rangeAxisLocations.objects)
this.rangeAxisLocations.objects[] == orig(this.rangeAxisLocations.objects[])
this.rangeAxisLocations.size == orig(this.rangeAxisLocations.size)
this.rangeAxisLocations.increment == orig(this.rangeAxisLocations.increment)
this.datasets == orig(this.datasets)
this.datasets.objects == orig(this.datasets.objects)
this.datasets.objects[] == orig(this.datasets.objects[])
this.datasets.size == orig(this.datasets.size)
this.datasets.increment == orig(this.datasets.increment)
this.renderers == orig(this.renderers)
this.renderers.objects == orig(this.renderers.objects)
this.renderers.objects[] == orig(this.renderers.objects[])
this.renderers.size == orig(this.renderers.size)
this.renderers.increment == orig(this.renderers.increment)
this.datasetToDomainAxisMap == orig(this.datasetToDomainAxisMap)
this.datasetToDomainAxisMap.getClass().getName() == orig(this.datasetToDomainAxisMap.getClass().getName())
this.datasetToDomainAxisMap.getClass().getName() == orig(this.datasetToRangeAxisMap.getClass().getName())
this.datasetToRangeAxisMap == orig(this.datasetToRangeAxisMap)
this.quadrantOrigin == orig(this.quadrantOrigin)
this.quadrantOrigin.getClass().getName() == orig(this.quadrantOrigin.getClass().getName())
this.quadrantPaint == orig(this.quadrantPaint)
this.quadrantPaint.getClass().getName() == orig(this.quadrantPaint.getClass().getName())
this.quadrantPaint[] == orig(this.quadrantPaint[])
this.domainGridlinesVisible == orig(this.domainGridlinesVisible)
this.domainGridlineStroke == orig(this.domainGridlineStroke)
this.domainGridlinePaint == orig(this.domainGridlinePaint)
this.rangeGridlinesVisible == orig(this.rangeGridlinesVisible)
this.rangeGridlineStroke == orig(this.rangeGridlineStroke)
this.rangeGridlinePaint == orig(this.rangeGridlinePaint)
this.domainZeroBaselineVisible == orig(this.domainZeroBaselineVisible)
this.domainZeroBaselineStroke == orig(this.domainZeroBaselineStroke)
this.domainZeroBaselinePaint == orig(this.domainZeroBaselinePaint)
this.rangeZeroBaselineVisible == orig(this.rangeZeroBaselineVisible)
this.rangeZeroBaselineStroke == orig(this.rangeZeroBaselineStroke)
this.rangeZeroBaselinePaint == orig(this.rangeZeroBaselinePaint)
this.domainCrosshairVisible == orig(this.domainCrosshairVisible)
this.domainCrosshairValue == orig(this.domainCrosshairValue)
this.domainCrosshairStroke == orig(this.domainCrosshairStroke)
this.domainCrosshairPaint == orig(this.domainCrosshairPaint)
this.domainCrosshairLockedOnData == orig(this.domainCrosshairLockedOnData)
this.rangeCrosshairVisible == orig(this.rangeCrosshairVisible)
this.rangeCrosshairValue == orig(this.rangeCrosshairValue)
this.rangeCrosshairStroke == orig(this.rangeCrosshairStroke)
this.rangeCrosshairPaint == orig(this.rangeCrosshairPaint)
this.rangeCrosshairLockedOnData == orig(this.rangeCrosshairLockedOnData)
this.foregroundDomainMarkers == orig(this.foregroundDomainMarkers)
this.foregroundDomainMarkers.getClass().getName() == orig(this.foregroundDomainMarkers.getClass().getName())
this.foregroundDomainMarkers.getClass().getName() == orig(this.backgroundDomainMarkers.getClass().getName())
this.foregroundDomainMarkers.getClass().getName() == orig(this.foregroundRangeMarkers.getClass().getName())
this.foregroundDomainMarkers.getClass().getName() == orig(this.backgroundRangeMarkers.getClass().getName())
this.backgroundDomainMarkers == orig(this.backgroundDomainMarkers)
this.foregroundRangeMarkers == orig(this.foregroundRangeMarkers)
this.backgroundRangeMarkers == orig(this.backgroundRangeMarkers)
this.annotations == orig(this.annotations)
this.domainTickBandPaint == orig(this.domainTickBandPaint)
this.rangeTickBandPaint == orig(this.rangeTickBandPaint)
this.fixedDomainAxisSpace == orig(this.fixedDomainAxisSpace)
this.fixedRangeAxisSpace == orig(this.fixedRangeAxisSpace)
this.datasetRenderingOrder == orig(this.datasetRenderingOrder)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name.toString == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name.toString)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name.toString == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name.toString)
this.datasetRenderingOrder.name == orig(this.datasetRenderingOrder.name)
this.datasetRenderingOrder.name.toString == orig(this.datasetRenderingOrder.name.toString)
this.seriesRenderingOrder == orig(this.seriesRenderingOrder)
org.jfree.chart.plot.SeriesRenderingOrder.FORWARD == orig(org.jfree.chart.plot.SeriesRenderingOrder.FORWARD)
org.jfree.chart.plot.SeriesRenderingOrder.REVERSE == orig(org.jfree.chart.plot.SeriesRenderingOrder.REVERSE)
org.jfree.chart.plot.SeriesRenderingOrder.FORWARD.name == orig(org.jfree.chart.plot.SeriesRenderingOrder.FORWARD.name)
org.jfree.chart.plot.SeriesRenderingOrder.FORWARD.name.toString == orig(org.jfree.chart.plot.SeriesRenderingOrder.FORWARD.name.toString)
org.jfree.chart.plot.SeriesRenderingOrder.REVERSE.name == orig(org.jfree.chart.plot.SeriesRenderingOrder.REVERSE.name)
org.jfree.chart.plot.SeriesRenderingOrder.REVERSE.name.toString == orig(org.jfree.chart.plot.SeriesRenderingOrder.REVERSE.name.toString)
this.seriesRenderingOrder.name == orig(this.seriesRenderingOrder.name)
this.seriesRenderingOrder.name.toString == orig(this.seriesRenderingOrder.name.toString)
this.weight == orig(this.weight)
this.fixedLegendItems == orig(this.fixedLegendItems)
org.jfree.chart.plot.Plot.ZERO == orig(org.jfree.chart.plot.Plot.ZERO)
org.jfree.chart.plot.Plot.ZERO.getClass().getName() == orig(org.jfree.chart.plot.Plot.ZERO.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_INSETS == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name.toString == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name.toString)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.top == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.top)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.left == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.left)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.right == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.right)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName())
this.parent == orig(this.parent)
org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener == orig(org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener)
this.datasetGroup == orig(this.datasetGroup)
this.noDataMessage == orig(this.noDataMessage)
this.noDataMessageFont == orig(this.noDataMessageFont)
this.noDataMessagePaint == orig(this.noDataMessagePaint)
this.insets == orig(this.insets)
this.insets.unitType == orig(this.insets.unitType)
this.insets.unitType.name == orig(this.insets.unitType.name)
this.insets.unitType.name.toString == orig(this.insets.unitType.name.toString)
this.insets.top == orig(this.insets.top)
this.insets.left == orig(this.insets.left)
this.insets.bottom == orig(this.insets.bottom)
this.insets.right == orig(this.insets.right)
this.outlineVisible == orig(this.outlineVisible)
this.outlineStroke == orig(this.outlineStroke)
this.outlinePaint == orig(this.outlinePaint)
this.backgroundPaint == orig(this.backgroundPaint)
this.backgroundImage == orig(this.backgroundImage)
this.backgroundImageAlignment == orig(this.backgroundImageAlignment)
this.backgroundImageAlpha == orig(this.backgroundImageAlpha)
this.foregroundAlpha == orig(this.foregroundAlpha)
this.backgroundAlpha == orig(this.backgroundAlpha)
this.drawingSupplier == orig(this.drawingSupplier)
this.drawingSupplier.getClass().getName() == orig(this.drawingSupplier.getClass().getName())
this.listenerList == orig(this.listenerList)
this.domainGridlinesVisible == false
this.domainGridlineStroke == null
this.domainGridlinePaint == null
this.rangeGridlinesVisible == false
this.rangeGridlineStroke == null
this.rangeGridlinePaint == null
this.domainZeroBaselineStroke == null
this.domainZeroBaselinePaint == null
this.rangeZeroBaselineStroke == null
this.rangeZeroBaselinePaint == null
this.domainCrosshairStroke == null
this.domainCrosshairPaint == null
this.rangeCrosshairStroke == null
this.rangeCrosshairPaint == null
this.annotations == null
===========================================================================
org.jfree.chart.plot.XYPlot.datasetChanged(org.jfree.data.general.DatasetChangeEvent):::ENTER
this.rangeAxisLocations.objects[] contains only nulls and has only one value, of length 8
this.rangeAxisLocations.objects[] elements == null
this.rangeAxisLocations.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.rangeAxisLocations.objects[].getClass().getName() elements == null
this.rangeAxisLocations.size == 0
this.domainGridlinesVisible == false
this.domainGridlineStroke == null
this.domainGridlinePaint == null
this.rangeGridlinesVisible == false
this.rangeGridlineStroke == null
this.rangeGridlinePaint == null
this.domainZeroBaselineStroke == null
this.domainZeroBaselinePaint == null
this.rangeZeroBaselineStroke == null
this.rangeZeroBaselinePaint == null
this.domainCrosshairStroke == null
this.domainCrosshairPaint == null
this.rangeCrosshairStroke == null
this.rangeCrosshairPaint == null
this.annotations == null
event.dataset == null
===========================================================================
org.jfree.chart.plot.XYPlot.datasetChanged(org.jfree.data.general.DatasetChangeEvent):::EXIT
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE == orig(org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE)
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName())
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.XYPlot.DEFAULT_CROSSHAIR_STROKE.getClass().getName())
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName())
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName() == orig(this.outlineStroke.getClass().getName())
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_PAINT == orig(org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_PAINT)
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName())
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.XYPlot.DEFAULT_CROSSHAIR_PAINT.getClass().getName())
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName())
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName())
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == orig(this.noDataMessagePaint.getClass().getName())
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == orig(this.outlinePaint.getClass().getName())
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == orig(this.backgroundPaint.getClass().getName())
org.jfree.chart.plot.XYPlot.DEFAULT_CROSSHAIR_STROKE == orig(org.jfree.chart.plot.XYPlot.DEFAULT_CROSSHAIR_STROKE)
org.jfree.chart.plot.XYPlot.DEFAULT_CROSSHAIR_PAINT == orig(org.jfree.chart.plot.XYPlot.DEFAULT_CROSSHAIR_PAINT)
org.jfree.chart.plot.XYPlot.localizationResources == orig(org.jfree.chart.plot.XYPlot.localizationResources)
org.jfree.chart.plot.XYPlot.localizationResources.getClass().getName() == orig(org.jfree.chart.plot.XYPlot.localizationResources.getClass().getName())
this.orientation == orig(this.orientation)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL)
org.jfree.chart.plot.PlotOrientation.VERTICAL == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name.toString == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name.toString)
org.jfree.chart.plot.PlotOrientation.VERTICAL.name == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL.name)
org.jfree.chart.plot.PlotOrientation.VERTICAL.name.toString == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL.name.toString)
this.orientation.name == orig(this.orientation.name)
this.orientation.name.toString == orig(this.orientation.name.toString)
this.axisOffset == orig(this.axisOffset)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.top == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.top)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.left == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.left)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.bottom == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.bottom)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.right == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.right)
this.axisOffset.unitType == orig(this.axisOffset.unitType)
org.jfree.chart.util.UnitType.ABSOLUTE == orig(org.jfree.chart.util.UnitType.ABSOLUTE)
org.jfree.chart.util.UnitType.RELATIVE == orig(org.jfree.chart.util.UnitType.RELATIVE)
this.axisOffset.unitType.name == orig(this.axisOffset.unitType.name)
this.axisOffset.unitType.name.toString == orig(this.axisOffset.unitType.name.toString)
this.axisOffset.top == orig(this.axisOffset.top)
this.axisOffset.left == orig(this.axisOffset.left)
this.axisOffset.bottom == orig(this.axisOffset.bottom)
this.axisOffset.right == orig(this.axisOffset.right)
this.domainAxes == orig(this.domainAxes)
this.domainAxes.objects == orig(this.domainAxes.objects)
this.domainAxes.objects.getClass().getName() == orig(this.domainAxes.objects.getClass().getName())
this.domainAxes.objects.getClass().getName() == orig(this.domainAxisLocations.objects.getClass().getName())
this.domainAxes.objects.getClass().getName() == orig(this.rangeAxes.objects.getClass().getName())
this.domainAxes.objects.getClass().getName() == orig(this.rangeAxisLocations.objects.getClass().getName())
this.domainAxes.objects.getClass().getName() == orig(this.datasets.objects.getClass().getName())
this.domainAxes.objects.getClass().getName() == orig(this.renderers.objects.getClass().getName())
this.domainAxes.objects[] == orig(this.domainAxes.objects[])
this.domainAxes.size == orig(this.domainAxes.size)
this.domainAxes.increment == orig(this.domainAxes.increment)
this.domainAxisLocations == orig(this.domainAxisLocations)
this.domainAxisLocations.objects == orig(this.domainAxisLocations.objects)
this.domainAxisLocations.objects[] == orig(this.domainAxisLocations.objects[])
this.domainAxisLocations.size == orig(this.domainAxisLocations.size)
this.domainAxisLocations.increment == orig(this.domainAxisLocations.increment)
this.rangeAxes == orig(this.rangeAxes)
this.rangeAxes.objects == orig(this.rangeAxes.objects)
this.rangeAxes.objects[] == orig(this.rangeAxes.objects[])
this.rangeAxes.size == orig(this.rangeAxes.size)
this.rangeAxes.increment == orig(this.rangeAxes.increment)
this.rangeAxisLocations == orig(this.rangeAxisLocations)
this.rangeAxisLocations.objects == orig(this.rangeAxisLocations.objects)
this.rangeAxisLocations.objects[] == orig(this.rangeAxisLocations.objects[])
this.rangeAxisLocations.size == orig(this.rangeAxisLocations.size)
this.rangeAxisLocations.increment == orig(this.rangeAxisLocations.increment)
this.datasets == orig(this.datasets)
this.datasets.objects == orig(this.datasets.objects)
this.datasets.objects[] == orig(this.datasets.objects[])
this.datasets.size == orig(this.datasets.size)
this.datasets.increment == orig(this.datasets.increment)
this.renderers == orig(this.renderers)
this.renderers.objects == orig(this.renderers.objects)
this.renderers.objects[] == orig(this.renderers.objects[])
this.renderers.size == orig(this.renderers.size)
this.renderers.increment == orig(this.renderers.increment)
this.datasetToDomainAxisMap == orig(this.datasetToDomainAxisMap)
this.datasetToDomainAxisMap.getClass().getName() == orig(this.datasetToDomainAxisMap.getClass().getName())
this.datasetToDomainAxisMap.getClass().getName() == orig(this.datasetToRangeAxisMap.getClass().getName())
this.datasetToRangeAxisMap == orig(this.datasetToRangeAxisMap)
this.quadrantOrigin == orig(this.quadrantOrigin)
this.quadrantOrigin.getClass().getName() == orig(this.quadrantOrigin.getClass().getName())
this.quadrantPaint == orig(this.quadrantPaint)
this.quadrantPaint.getClass().getName() == orig(this.quadrantPaint.getClass().getName())
this.quadrantPaint[] == orig(this.quadrantPaint[])
this.domainGridlinesVisible == orig(this.domainGridlinesVisible)
this.domainGridlineStroke == orig(this.domainGridlineStroke)
this.domainGridlinePaint == orig(this.domainGridlinePaint)
this.rangeGridlinesVisible == orig(this.rangeGridlinesVisible)
this.rangeGridlineStroke == orig(this.rangeGridlineStroke)
this.rangeGridlinePaint == orig(this.rangeGridlinePaint)
this.domainZeroBaselineVisible == orig(this.domainZeroBaselineVisible)
this.domainZeroBaselineStroke == orig(this.domainZeroBaselineStroke)
this.domainZeroBaselinePaint == orig(this.domainZeroBaselinePaint)
this.rangeZeroBaselineVisible == orig(this.rangeZeroBaselineVisible)
this.rangeZeroBaselineStroke == orig(this.rangeZeroBaselineStroke)
this.rangeZeroBaselinePaint == orig(this.rangeZeroBaselinePaint)
this.domainCrosshairVisible == orig(this.domainCrosshairVisible)
this.domainCrosshairValue == orig(this.domainCrosshairValue)
this.domainCrosshairStroke == orig(this.domainCrosshairStroke)
this.domainCrosshairPaint == orig(this.domainCrosshairPaint)
this.domainCrosshairLockedOnData == orig(this.domainCrosshairLockedOnData)
this.rangeCrosshairVisible == orig(this.rangeCrosshairVisible)
this.rangeCrosshairValue == orig(this.rangeCrosshairValue)
this.rangeCrosshairStroke == orig(this.rangeCrosshairStroke)
this.rangeCrosshairPaint == orig(this.rangeCrosshairPaint)
this.rangeCrosshairLockedOnData == orig(this.rangeCrosshairLockedOnData)
this.foregroundDomainMarkers == orig(this.foregroundDomainMarkers)
this.foregroundDomainMarkers.getClass().getName() == orig(this.foregroundDomainMarkers.getClass().getName())
this.foregroundDomainMarkers.getClass().getName() == orig(this.backgroundDomainMarkers.getClass().getName())
this.foregroundDomainMarkers.getClass().getName() == orig(this.foregroundRangeMarkers.getClass().getName())
this.foregroundDomainMarkers.getClass().getName() == orig(this.backgroundRangeMarkers.getClass().getName())
this.backgroundDomainMarkers == orig(this.backgroundDomainMarkers)
this.foregroundRangeMarkers == orig(this.foregroundRangeMarkers)
this.backgroundRangeMarkers == orig(this.backgroundRangeMarkers)
this.annotations == orig(this.annotations)
this.domainTickBandPaint == orig(this.domainTickBandPaint)
this.rangeTickBandPaint == orig(this.rangeTickBandPaint)
this.fixedDomainAxisSpace == orig(this.fixedDomainAxisSpace)
this.fixedRangeAxisSpace == orig(this.fixedRangeAxisSpace)
this.datasetRenderingOrder == orig(this.datasetRenderingOrder)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name.toString == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name.toString)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name.toString == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name.toString)
this.datasetRenderingOrder.name == orig(this.datasetRenderingOrder.name)
this.datasetRenderingOrder.name.toString == orig(this.datasetRenderingOrder.name.toString)
this.seriesRenderingOrder == orig(this.seriesRenderingOrder)
org.jfree.chart.plot.SeriesRenderingOrder.FORWARD == orig(org.jfree.chart.plot.SeriesRenderingOrder.FORWARD)
org.jfree.chart.plot.SeriesRenderingOrder.REVERSE == orig(org.jfree.chart.plot.SeriesRenderingOrder.REVERSE)
org.jfree.chart.plot.SeriesRenderingOrder.FORWARD.name == orig(org.jfree.chart.plot.SeriesRenderingOrder.FORWARD.name)
org.jfree.chart.plot.SeriesRenderingOrder.FORWARD.name.toString == orig(org.jfree.chart.plot.SeriesRenderingOrder.FORWARD.name.toString)
org.jfree.chart.plot.SeriesRenderingOrder.REVERSE.name == orig(org.jfree.chart.plot.SeriesRenderingOrder.REVERSE.name)
org.jfree.chart.plot.SeriesRenderingOrder.REVERSE.name.toString == orig(org.jfree.chart.plot.SeriesRenderingOrder.REVERSE.name.toString)
this.seriesRenderingOrder.name == orig(this.seriesRenderingOrder.name)
this.seriesRenderingOrder.name.toString == orig(this.seriesRenderingOrder.name.toString)
this.weight == orig(this.weight)
this.fixedLegendItems == orig(this.fixedLegendItems)
org.jfree.chart.plot.Plot.ZERO == orig(org.jfree.chart.plot.Plot.ZERO)
org.jfree.chart.plot.Plot.ZERO.getClass().getName() == orig(org.jfree.chart.plot.Plot.ZERO.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_INSETS == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name.toString == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name.toString)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.top == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.top)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.left == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.left)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.right == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.right)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName())
this.parent == orig(this.parent)
org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener == orig(org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener)
this.datasetGroup == orig(this.datasetGroup)
this.noDataMessage == orig(this.noDataMessage)
this.noDataMessageFont == orig(this.noDataMessageFont)
this.noDataMessagePaint == orig(this.noDataMessagePaint)
this.insets == orig(this.insets)
this.insets.unitType == orig(this.insets.unitType)
this.insets.unitType.name == orig(this.insets.unitType.name)
this.insets.unitType.name.toString == orig(this.insets.unitType.name.toString)
this.insets.top == orig(this.insets.top)
this.insets.left == orig(this.insets.left)
this.insets.bottom == orig(this.insets.bottom)
this.insets.right == orig(this.insets.right)
this.outlineVisible == orig(this.outlineVisible)
this.outlineStroke == orig(this.outlineStroke)
this.outlinePaint == orig(this.outlinePaint)
this.backgroundPaint == orig(this.backgroundPaint)
this.backgroundImage == orig(this.backgroundImage)
this.backgroundImageAlignment == orig(this.backgroundImageAlignment)
this.backgroundImageAlpha == orig(this.backgroundImageAlpha)
this.foregroundAlpha == orig(this.foregroundAlpha)
this.backgroundAlpha == orig(this.backgroundAlpha)
this.drawingSupplier == orig(this.drawingSupplier)
this.drawingSupplier.getClass().getName() == orig(this.drawingSupplier.getClass().getName())
this.listenerList == orig(this.listenerList)
event.dataset == orig(event.dataset)
this.rangeAxisLocations.objects[] contains only nulls and has only one value, of length 8
this.rangeAxisLocations.objects[] elements == null
this.rangeAxisLocations.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.rangeAxisLocations.objects[].getClass().getName() elements == null
this.rangeAxisLocations.size == 0
this.domainGridlinesVisible == false
this.domainGridlineStroke == null
this.domainGridlinePaint == null
this.rangeGridlinesVisible == false
this.rangeGridlineStroke == null
this.rangeGridlinePaint == null
this.domainZeroBaselineStroke == null
this.domainZeroBaselinePaint == null
this.rangeZeroBaselineStroke == null
this.rangeZeroBaselinePaint == null
this.domainCrosshairStroke == null
this.domainCrosshairPaint == null
this.rangeCrosshairStroke == null
this.rangeCrosshairPaint == null
this.annotations == null
event.dataset == null
===========================================================================
org.jfree.chart.plot.XYPlot.getDataset(int):::ENTER
this.rangeAxisLocations.objects[] contains only nulls and has only one value, of length 8
this.rangeAxisLocations.objects[] elements == null
this.rangeAxisLocations.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.rangeAxisLocations.objects[].getClass().getName() elements == null
this.rangeAxisLocations.size == 0
this.domainGridlinesVisible == false
this.domainGridlineStroke == null
this.domainGridlinePaint == null
this.rangeGridlinesVisible == false
this.rangeGridlineStroke == null
this.rangeGridlinePaint == null
this.domainZeroBaselineStroke == null
this.domainZeroBaselinePaint == null
this.rangeZeroBaselineStroke == null
this.rangeZeroBaselinePaint == null
this.domainCrosshairStroke == null
this.domainCrosshairPaint == null
this.rangeCrosshairStroke == null
this.rangeCrosshairPaint == null
this.annotations == null
index == 0
===========================================================================
org.jfree.chart.plot.XYPlot.getDataset(int):::EXIT
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE == orig(org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE)
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName())
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.XYPlot.DEFAULT_CROSSHAIR_STROKE.getClass().getName())
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName())
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName() == orig(this.outlineStroke.getClass().getName())
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_PAINT == orig(org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_PAINT)
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName())
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.XYPlot.DEFAULT_CROSSHAIR_PAINT.getClass().getName())
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName())
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName())
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == orig(this.noDataMessagePaint.getClass().getName())
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == orig(this.outlinePaint.getClass().getName())
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == orig(this.backgroundPaint.getClass().getName())
org.jfree.chart.plot.XYPlot.DEFAULT_CROSSHAIR_STROKE == orig(org.jfree.chart.plot.XYPlot.DEFAULT_CROSSHAIR_STROKE)
org.jfree.chart.plot.XYPlot.DEFAULT_CROSSHAIR_PAINT == orig(org.jfree.chart.plot.XYPlot.DEFAULT_CROSSHAIR_PAINT)
org.jfree.chart.plot.XYPlot.localizationResources == orig(org.jfree.chart.plot.XYPlot.localizationResources)
org.jfree.chart.plot.XYPlot.localizationResources.getClass().getName() == orig(org.jfree.chart.plot.XYPlot.localizationResources.getClass().getName())
this.orientation == orig(this.orientation)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL)
org.jfree.chart.plot.PlotOrientation.VERTICAL == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name.toString == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name.toString)
org.jfree.chart.plot.PlotOrientation.VERTICAL.name == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL.name)
org.jfree.chart.plot.PlotOrientation.VERTICAL.name.toString == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL.name.toString)
this.orientation.name == orig(this.orientation.name)
this.orientation.name.toString == orig(this.orientation.name.toString)
this.axisOffset == orig(this.axisOffset)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.top == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.top)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.left == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.left)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.bottom == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.bottom)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.right == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.right)
this.axisOffset.unitType == orig(this.axisOffset.unitType)
org.jfree.chart.util.UnitType.ABSOLUTE == orig(org.jfree.chart.util.UnitType.ABSOLUTE)
org.jfree.chart.util.UnitType.RELATIVE == orig(org.jfree.chart.util.UnitType.RELATIVE)
this.axisOffset.unitType.name == orig(this.axisOffset.unitType.name)
this.axisOffset.unitType.name.toString == orig(this.axisOffset.unitType.name.toString)
this.axisOffset.top == orig(this.axisOffset.top)
this.axisOffset.left == orig(this.axisOffset.left)
this.axisOffset.bottom == orig(this.axisOffset.bottom)
this.axisOffset.right == orig(this.axisOffset.right)
this.domainAxes == orig(this.domainAxes)
this.domainAxes.objects == orig(this.domainAxes.objects)
this.domainAxes.objects.getClass().getName() == orig(this.domainAxes.objects.getClass().getName())
this.domainAxes.objects.getClass().getName() == orig(this.domainAxisLocations.objects.getClass().getName())
this.domainAxes.objects.getClass().getName() == orig(this.rangeAxes.objects.getClass().getName())
this.domainAxes.objects.getClass().getName() == orig(this.rangeAxisLocations.objects.getClass().getName())
this.domainAxes.objects.getClass().getName() == orig(this.datasets.objects.getClass().getName())
this.domainAxes.objects.getClass().getName() == orig(this.renderers.objects.getClass().getName())
this.domainAxes.objects[] == orig(this.domainAxes.objects[])
this.domainAxes.size == orig(this.domainAxes.size)
this.domainAxes.increment == orig(this.domainAxes.increment)
this.domainAxisLocations == orig(this.domainAxisLocations)
this.domainAxisLocations.objects == orig(this.domainAxisLocations.objects)
this.domainAxisLocations.objects[] == orig(this.domainAxisLocations.objects[])
this.domainAxisLocations.size == orig(this.domainAxisLocations.size)
this.domainAxisLocations.increment == orig(this.domainAxisLocations.increment)
this.rangeAxes == orig(this.rangeAxes)
this.rangeAxes.objects == orig(this.rangeAxes.objects)
this.rangeAxes.objects[] == orig(this.rangeAxes.objects[])
this.rangeAxes.size == orig(this.rangeAxes.size)
this.rangeAxes.increment == orig(this.rangeAxes.increment)
this.rangeAxisLocations == orig(this.rangeAxisLocations)
this.rangeAxisLocations.objects == orig(this.rangeAxisLocations.objects)
this.rangeAxisLocations.objects[] == orig(this.rangeAxisLocations.objects[])
this.rangeAxisLocations.size == orig(this.rangeAxisLocations.size)
this.rangeAxisLocations.increment == orig(this.rangeAxisLocations.increment)
this.datasets == orig(this.datasets)
this.datasets.objects == orig(this.datasets.objects)
this.datasets.objects[] == orig(this.datasets.objects[])
this.datasets.size == orig(this.datasets.size)
this.datasets.increment == orig(this.datasets.increment)
this.renderers == orig(this.renderers)
this.renderers.objects == orig(this.renderers.objects)
this.renderers.objects[] == orig(this.renderers.objects[])
this.renderers.size == orig(this.renderers.size)
this.renderers.increment == orig(this.renderers.increment)
this.datasetToDomainAxisMap == orig(this.datasetToDomainAxisMap)
this.datasetToDomainAxisMap.getClass().getName() == orig(this.datasetToDomainAxisMap.getClass().getName())
this.datasetToDomainAxisMap.getClass().getName() == orig(this.datasetToRangeAxisMap.getClass().getName())
this.datasetToRangeAxisMap == orig(this.datasetToRangeAxisMap)
this.quadrantOrigin == orig(this.quadrantOrigin)
this.quadrantOrigin.getClass().getName() == orig(this.quadrantOrigin.getClass().getName())
this.quadrantPaint == orig(this.quadrantPaint)
this.quadrantPaint.getClass().getName() == orig(this.quadrantPaint.getClass().getName())
this.quadrantPaint[] == orig(this.quadrantPaint[])
this.domainGridlinesVisible == orig(this.domainGridlinesVisible)
this.domainGridlineStroke == orig(this.domainGridlineStroke)
this.domainGridlinePaint == orig(this.domainGridlinePaint)
this.rangeGridlinesVisible == orig(this.rangeGridlinesVisible)
this.rangeGridlineStroke == orig(this.rangeGridlineStroke)
this.rangeGridlinePaint == orig(this.rangeGridlinePaint)
this.domainZeroBaselineVisible == orig(this.domainZeroBaselineVisible)
this.domainZeroBaselineStroke == orig(this.domainZeroBaselineStroke)
this.domainZeroBaselinePaint == orig(this.domainZeroBaselinePaint)
this.rangeZeroBaselineVisible == orig(this.rangeZeroBaselineVisible)
this.rangeZeroBaselineStroke == orig(this.rangeZeroBaselineStroke)
this.rangeZeroBaselinePaint == orig(this.rangeZeroBaselinePaint)
this.domainCrosshairVisible == orig(this.domainCrosshairVisible)
this.domainCrosshairValue == orig(this.domainCrosshairValue)
this.domainCrosshairStroke == orig(this.domainCrosshairStroke)
this.domainCrosshairPaint == orig(this.domainCrosshairPaint)
this.domainCrosshairLockedOnData == orig(this.domainCrosshairLockedOnData)
this.rangeCrosshairVisible == orig(this.rangeCrosshairVisible)
this.rangeCrosshairValue == orig(this.rangeCrosshairValue)
this.rangeCrosshairStroke == orig(this.rangeCrosshairStroke)
this.rangeCrosshairPaint == orig(this.rangeCrosshairPaint)
this.rangeCrosshairLockedOnData == orig(this.rangeCrosshairLockedOnData)
this.foregroundDomainMarkers == orig(this.foregroundDomainMarkers)
this.foregroundDomainMarkers.getClass().getName() == orig(this.foregroundDomainMarkers.getClass().getName())
this.foregroundDomainMarkers.getClass().getName() == orig(this.backgroundDomainMarkers.getClass().getName())
this.foregroundDomainMarkers.getClass().getName() == orig(this.foregroundRangeMarkers.getClass().getName())
this.foregroundDomainMarkers.getClass().getName() == orig(this.backgroundRangeMarkers.getClass().getName())
this.backgroundDomainMarkers == orig(this.backgroundDomainMarkers)
this.foregroundRangeMarkers == orig(this.foregroundRangeMarkers)
this.backgroundRangeMarkers == orig(this.backgroundRangeMarkers)
this.annotations == orig(this.annotations)
this.domainTickBandPaint == orig(this.domainTickBandPaint)
this.rangeTickBandPaint == orig(this.rangeTickBandPaint)
this.fixedDomainAxisSpace == orig(this.fixedDomainAxisSpace)
this.fixedRangeAxisSpace == orig(this.fixedRangeAxisSpace)
this.datasetRenderingOrder == orig(this.datasetRenderingOrder)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name.toString == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name.toString)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name.toString == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name.toString)
this.datasetRenderingOrder.name == orig(this.datasetRenderingOrder.name)
this.datasetRenderingOrder.name.toString == orig(this.datasetRenderingOrder.name.toString)
this.seriesRenderingOrder == orig(this.seriesRenderingOrder)
org.jfree.chart.plot.SeriesRenderingOrder.FORWARD == orig(org.jfree.chart.plot.SeriesRenderingOrder.FORWARD)
org.jfree.chart.plot.SeriesRenderingOrder.REVERSE == orig(org.jfree.chart.plot.SeriesRenderingOrder.REVERSE)
org.jfree.chart.plot.SeriesRenderingOrder.FORWARD.name == orig(org.jfree.chart.plot.SeriesRenderingOrder.FORWARD.name)
org.jfree.chart.plot.SeriesRenderingOrder.FORWARD.name.toString == orig(org.jfree.chart.plot.SeriesRenderingOrder.FORWARD.name.toString)
org.jfree.chart.plot.SeriesRenderingOrder.REVERSE.name == orig(org.jfree.chart.plot.SeriesRenderingOrder.REVERSE.name)
org.jfree.chart.plot.SeriesRenderingOrder.REVERSE.name.toString == orig(org.jfree.chart.plot.SeriesRenderingOrder.REVERSE.name.toString)
this.seriesRenderingOrder.name == orig(this.seriesRenderingOrder.name)
this.seriesRenderingOrder.name.toString == orig(this.seriesRenderingOrder.name.toString)
this.weight == orig(this.weight)
this.fixedLegendItems == orig(this.fixedLegendItems)
org.jfree.chart.plot.Plot.ZERO == orig(org.jfree.chart.plot.Plot.ZERO)
org.jfree.chart.plot.Plot.ZERO.getClass().getName() == orig(org.jfree.chart.plot.Plot.ZERO.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_INSETS == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name.toString == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name.toString)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.top == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.top)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.left == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.left)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.right == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.right)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName())
this.parent == orig(this.parent)
org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener == orig(org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener)
this.datasetGroup == orig(this.datasetGroup)
this.noDataMessage == orig(this.noDataMessage)
this.noDataMessageFont == orig(this.noDataMessageFont)
this.noDataMessagePaint == orig(this.noDataMessagePaint)
this.insets == orig(this.insets)
this.insets.unitType == orig(this.insets.unitType)
this.insets.unitType.name == orig(this.insets.unitType.name)
this.insets.unitType.name.toString == orig(this.insets.unitType.name.toString)
this.insets.top == orig(this.insets.top)
this.insets.left == orig(this.insets.left)
this.insets.bottom == orig(this.insets.bottom)
this.insets.right == orig(this.insets.right)
this.outlineVisible == orig(this.outlineVisible)
this.outlineStroke == orig(this.outlineStroke)
this.outlinePaint == orig(this.outlinePaint)
this.backgroundPaint == orig(this.backgroundPaint)
this.backgroundImage == orig(this.backgroundImage)
this.backgroundImageAlignment == orig(this.backgroundImageAlignment)
this.backgroundImageAlpha == orig(this.backgroundImageAlpha)
this.foregroundAlpha == orig(this.foregroundAlpha)
this.backgroundAlpha == orig(this.backgroundAlpha)
this.drawingSupplier == orig(this.drawingSupplier)
this.drawingSupplier.getClass().getName() == orig(this.drawingSupplier.getClass().getName())
this.listenerList == orig(this.listenerList)
this.rangeAxisLocations.objects[] contains only nulls and has only one value, of length 8
this.rangeAxisLocations.objects[] elements == null
this.rangeAxisLocations.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.rangeAxisLocations.objects[].getClass().getName() elements == null
this.rangeAxisLocations.size == 0
this.domainGridlinesVisible == false
this.domainGridlineStroke == null
this.domainGridlinePaint == null
this.rangeGridlinesVisible == false
this.rangeGridlineStroke == null
this.rangeGridlinePaint == null
this.domainZeroBaselineStroke == null
this.domainZeroBaselinePaint == null
this.rangeZeroBaselineStroke == null
this.rangeZeroBaselinePaint == null
this.domainCrosshairStroke == null
this.domainCrosshairPaint == null
this.rangeCrosshairStroke == null
this.rangeCrosshairPaint == null
this.annotations == null
return == null
===========================================================================
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxis(int, int):::ENTER
this.domainAxisLocations.objects[] contains only nulls and has only one value, of length 8
this.domainAxisLocations.objects[] elements == null
this.domainAxisLocations.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.domainAxisLocations.objects[].getClass().getName() elements == null
this.domainAxisLocations.size == 0
this.rangeAxes.size == 0
this.rangeAxisLocations.objects[] contains only nulls and has only one value, of length 8
this.rangeAxisLocations.objects[] elements == null
this.rangeAxisLocations.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.rangeAxisLocations.objects[].getClass().getName() elements == null
this.rangeAxisLocations.size == 0
this.domainGridlinesVisible == false
this.domainGridlineStroke == null
this.domainGridlinePaint == null
this.rangeGridlinesVisible == false
this.rangeGridlineStroke == null
this.rangeGridlinePaint == null
this.domainZeroBaselineStroke == null
this.domainZeroBaselinePaint == null
this.rangeZeroBaselineStroke == null
this.rangeZeroBaselinePaint == null
this.domainCrosshairStroke == null
this.domainCrosshairPaint == null
this.rangeCrosshairStroke == null
this.rangeCrosshairPaint == null
this.annotations == null
index == 0
axisIndex == 0
===========================================================================
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxis(int, int):::EXIT
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE == orig(org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE)
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName())
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.XYPlot.DEFAULT_CROSSHAIR_STROKE.getClass().getName())
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName())
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName() == orig(this.outlineStroke.getClass().getName())
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_PAINT == orig(org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_PAINT)
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName())
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.XYPlot.DEFAULT_CROSSHAIR_PAINT.getClass().getName())
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName())
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName())
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == orig(this.noDataMessagePaint.getClass().getName())
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == orig(this.outlinePaint.getClass().getName())
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == orig(this.backgroundPaint.getClass().getName())
org.jfree.chart.plot.XYPlot.DEFAULT_CROSSHAIR_STROKE == orig(org.jfree.chart.plot.XYPlot.DEFAULT_CROSSHAIR_STROKE)
org.jfree.chart.plot.XYPlot.DEFAULT_CROSSHAIR_PAINT == orig(org.jfree.chart.plot.XYPlot.DEFAULT_CROSSHAIR_PAINT)
org.jfree.chart.plot.XYPlot.localizationResources == orig(org.jfree.chart.plot.XYPlot.localizationResources)
org.jfree.chart.plot.XYPlot.localizationResources.getClass().getName() == orig(org.jfree.chart.plot.XYPlot.localizationResources.getClass().getName())
this.orientation == orig(this.orientation)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL)
org.jfree.chart.plot.PlotOrientation.VERTICAL == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name.toString == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name.toString)
org.jfree.chart.plot.PlotOrientation.VERTICAL.name == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL.name)
org.jfree.chart.plot.PlotOrientation.VERTICAL.name.toString == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL.name.toString)
this.orientation.name == orig(this.orientation.name)
this.orientation.name.toString == orig(this.orientation.name.toString)
this.axisOffset == orig(this.axisOffset)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.top == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.top)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.left == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.left)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.bottom == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.bottom)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.right == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.right)
this.axisOffset.unitType == orig(this.axisOffset.unitType)
org.jfree.chart.util.UnitType.ABSOLUTE == orig(org.jfree.chart.util.UnitType.ABSOLUTE)
org.jfree.chart.util.UnitType.RELATIVE == orig(org.jfree.chart.util.UnitType.RELATIVE)
this.axisOffset.unitType.name == orig(this.axisOffset.unitType.name)
this.axisOffset.unitType.name.toString == orig(this.axisOffset.unitType.name.toString)
this.axisOffset.top == orig(this.axisOffset.top)
this.axisOffset.left == orig(this.axisOffset.left)
this.axisOffset.bottom == orig(this.axisOffset.bottom)
this.axisOffset.right == orig(this.axisOffset.right)
this.domainAxes == orig(this.domainAxes)
this.domainAxes.objects == orig(this.domainAxes.objects)
this.domainAxes.objects.getClass().getName() == orig(this.domainAxes.objects.getClass().getName())
this.domainAxes.objects.getClass().getName() == orig(this.domainAxisLocations.objects.getClass().getName())
this.domainAxes.objects.getClass().getName() == orig(this.rangeAxes.objects.getClass().getName())
this.domainAxes.objects.getClass().getName() == orig(this.rangeAxisLocations.objects.getClass().getName())
this.domainAxes.objects.getClass().getName() == orig(this.datasets.objects.getClass().getName())
this.domainAxes.objects.getClass().getName() == orig(this.renderers.objects.getClass().getName())
this.domainAxes.objects[] == orig(this.domainAxes.objects[])
this.domainAxes.size == orig(this.domainAxes.size)
this.domainAxes.increment == orig(this.domainAxes.increment)
this.domainAxisLocations == orig(this.domainAxisLocations)
this.domainAxisLocations.objects == orig(this.domainAxisLocations.objects)
this.domainAxisLocations.objects[] == orig(this.domainAxisLocations.objects[])
this.domainAxisLocations.size == orig(this.domainAxisLocations.size)
this.domainAxisLocations.increment == orig(this.domainAxisLocations.increment)
this.rangeAxes == orig(this.rangeAxes)
this.rangeAxes.objects == orig(this.rangeAxes.objects)
this.rangeAxes.objects[] == orig(this.rangeAxes.objects[])
this.rangeAxes.size == orig(this.rangeAxes.size)
this.rangeAxes.increment == orig(this.rangeAxes.increment)
this.rangeAxisLocations == orig(this.rangeAxisLocations)
this.rangeAxisLocations.objects == orig(this.rangeAxisLocations.objects)
this.rangeAxisLocations.objects[] == orig(this.rangeAxisLocations.objects[])
this.rangeAxisLocations.size == orig(this.rangeAxisLocations.size)
this.rangeAxisLocations.increment == orig(this.rangeAxisLocations.increment)
this.datasets == orig(this.datasets)
this.datasets.objects == orig(this.datasets.objects)
this.datasets.objects[] == orig(this.datasets.objects[])
this.datasets.size == orig(this.datasets.size)
this.datasets.increment == orig(this.datasets.increment)
this.renderers == orig(this.renderers)
this.renderers.objects == orig(this.renderers.objects)
this.renderers.objects[] == orig(this.renderers.objects[])
this.renderers.size == orig(this.renderers.size)
this.renderers.increment == orig(this.renderers.increment)
this.datasetToDomainAxisMap == orig(this.datasetToDomainAxisMap)
this.datasetToDomainAxisMap.getClass().getName() == orig(this.datasetToDomainAxisMap.getClass().getName())
this.datasetToDomainAxisMap.getClass().getName() == orig(this.datasetToRangeAxisMap.getClass().getName())
this.datasetToRangeAxisMap == orig(this.datasetToRangeAxisMap)
this.quadrantOrigin == orig(this.quadrantOrigin)
this.quadrantOrigin.getClass().getName() == orig(this.quadrantOrigin.getClass().getName())
this.quadrantPaint == orig(this.quadrantPaint)
this.quadrantPaint.getClass().getName() == orig(this.quadrantPaint.getClass().getName())
this.quadrantPaint[] == orig(this.quadrantPaint[])
this.domainGridlinesVisible == orig(this.domainGridlinesVisible)
this.domainGridlineStroke == orig(this.domainGridlineStroke)
this.domainGridlinePaint == orig(this.domainGridlinePaint)
this.rangeGridlinesVisible == orig(this.rangeGridlinesVisible)
this.rangeGridlineStroke == orig(this.rangeGridlineStroke)
this.rangeGridlinePaint == orig(this.rangeGridlinePaint)
this.domainZeroBaselineVisible == orig(this.domainZeroBaselineVisible)
this.domainZeroBaselineStroke == orig(this.domainZeroBaselineStroke)
this.domainZeroBaselinePaint == orig(this.domainZeroBaselinePaint)
this.rangeZeroBaselineVisible == orig(this.rangeZeroBaselineVisible)
this.rangeZeroBaselineStroke == orig(this.rangeZeroBaselineStroke)
this.rangeZeroBaselinePaint == orig(this.rangeZeroBaselinePaint)
this.domainCrosshairVisible == orig(this.domainCrosshairVisible)
this.domainCrosshairValue == orig(this.domainCrosshairValue)
this.domainCrosshairStroke == orig(this.domainCrosshairStroke)
this.domainCrosshairPaint == orig(this.domainCrosshairPaint)
this.domainCrosshairLockedOnData == orig(this.domainCrosshairLockedOnData)
this.rangeCrosshairVisible == orig(this.rangeCrosshairVisible)
this.rangeCrosshairValue == orig(this.rangeCrosshairValue)
this.rangeCrosshairStroke == orig(this.rangeCrosshairStroke)
this.rangeCrosshairPaint == orig(this.rangeCrosshairPaint)
this.rangeCrosshairLockedOnData == orig(this.rangeCrosshairLockedOnData)
this.foregroundDomainMarkers == orig(this.foregroundDomainMarkers)
this.foregroundDomainMarkers.getClass().getName() == orig(this.foregroundDomainMarkers.getClass().getName())
this.foregroundDomainMarkers.getClass().getName() == orig(this.backgroundDomainMarkers.getClass().getName())
this.foregroundDomainMarkers.getClass().getName() == orig(this.foregroundRangeMarkers.getClass().getName())
this.foregroundDomainMarkers.getClass().getName() == orig(this.backgroundRangeMarkers.getClass().getName())
this.backgroundDomainMarkers == orig(this.backgroundDomainMarkers)
this.foregroundRangeMarkers == orig(this.foregroundRangeMarkers)
this.backgroundRangeMarkers == orig(this.backgroundRangeMarkers)
this.annotations == orig(this.annotations)
this.domainTickBandPaint == orig(this.domainTickBandPaint)
this.rangeTickBandPaint == orig(this.rangeTickBandPaint)
this.fixedDomainAxisSpace == orig(this.fixedDomainAxisSpace)
this.fixedRangeAxisSpace == orig(this.fixedRangeAxisSpace)
this.datasetRenderingOrder == orig(this.datasetRenderingOrder)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name.toString == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name.toString)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name.toString == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name.toString)
this.datasetRenderingOrder.name == orig(this.datasetRenderingOrder.name)
this.datasetRenderingOrder.name.toString == orig(this.datasetRenderingOrder.name.toString)
this.seriesRenderingOrder == orig(this.seriesRenderingOrder)
org.jfree.chart.plot.SeriesRenderingOrder.FORWARD == orig(org.jfree.chart.plot.SeriesRenderingOrder.FORWARD)
org.jfree.chart.plot.SeriesRenderingOrder.REVERSE == orig(org.jfree.chart.plot.SeriesRenderingOrder.REVERSE)
org.jfree.chart.plot.SeriesRenderingOrder.FORWARD.name == orig(org.jfree.chart.plot.SeriesRenderingOrder.FORWARD.name)
org.jfree.chart.plot.SeriesRenderingOrder.FORWARD.name.toString == orig(org.jfree.chart.plot.SeriesRenderingOrder.FORWARD.name.toString)
org.jfree.chart.plot.SeriesRenderingOrder.REVERSE.name == orig(org.jfree.chart.plot.SeriesRenderingOrder.REVERSE.name)
org.jfree.chart.plot.SeriesRenderingOrder.REVERSE.name.toString == orig(org.jfree.chart.plot.SeriesRenderingOrder.REVERSE.name.toString)
this.seriesRenderingOrder.name == orig(this.seriesRenderingOrder.name)
this.seriesRenderingOrder.name.toString == orig(this.seriesRenderingOrder.name.toString)
this.weight == orig(this.weight)
this.fixedLegendItems == orig(this.fixedLegendItems)
org.jfree.chart.plot.Plot.ZERO == orig(org.jfree.chart.plot.Plot.ZERO)
org.jfree.chart.plot.Plot.ZERO.getClass().getName() == orig(org.jfree.chart.plot.Plot.ZERO.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_INSETS == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name.toString == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name.toString)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.top == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.top)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.left == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.left)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.right == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.right)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName())
this.parent == orig(this.parent)
org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener == orig(org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener)
this.datasetGroup == orig(this.datasetGroup)
this.noDataMessage == orig(this.noDataMessage)
this.noDataMessageFont == orig(this.noDataMessageFont)
this.noDataMessagePaint == orig(this.noDataMessagePaint)
this.insets == orig(this.insets)
this.insets.unitType == orig(this.insets.unitType)
this.insets.unitType.name == orig(this.insets.unitType.name)
this.insets.unitType.name.toString == orig(this.insets.unitType.name.toString)
this.insets.top == orig(this.insets.top)
this.insets.left == orig(this.insets.left)
this.insets.bottom == orig(this.insets.bottom)
this.insets.right == orig(this.insets.right)
this.outlineVisible == orig(this.outlineVisible)
this.outlineStroke == orig(this.outlineStroke)
this.outlinePaint == orig(this.outlinePaint)
this.backgroundPaint == orig(this.backgroundPaint)
this.backgroundImage == orig(this.backgroundImage)
this.backgroundImageAlignment == orig(this.backgroundImageAlignment)
this.backgroundImageAlpha == orig(this.backgroundImageAlpha)
this.foregroundAlpha == orig(this.foregroundAlpha)
this.backgroundAlpha == orig(this.backgroundAlpha)
this.drawingSupplier == orig(this.drawingSupplier)
this.drawingSupplier.getClass().getName() == orig(this.drawingSupplier.getClass().getName())
this.listenerList == orig(this.listenerList)
this.domainAxisLocations.objects[] contains only nulls and has only one value, of length 8
this.domainAxisLocations.objects[] elements == null
this.domainAxisLocations.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.domainAxisLocations.objects[].getClass().getName() elements == null
this.domainAxisLocations.size == 0
this.rangeAxes.size == 0
this.rangeAxisLocations.objects[] contains only nulls and has only one value, of length 8
this.rangeAxisLocations.objects[] elements == null
this.rangeAxisLocations.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.rangeAxisLocations.objects[].getClass().getName() elements == null
this.rangeAxisLocations.size == 0
this.domainGridlinesVisible == false
this.domainGridlineStroke == null
this.domainGridlinePaint == null
this.rangeGridlinesVisible == false
this.rangeGridlineStroke == null
this.rangeGridlinePaint == null
this.domainZeroBaselineStroke == null
this.domainZeroBaselinePaint == null
this.rangeZeroBaselineStroke == null
this.rangeZeroBaselinePaint == null
this.domainCrosshairStroke == null
this.domainCrosshairPaint == null
this.rangeCrosshairStroke == null
this.rangeCrosshairPaint == null
this.annotations == null
===========================================================================
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxis(int, int):::ENTER
this.domainAxisLocations.objects[] has only one value, of length 8
this.domainAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.domainAxisLocations.size == 1
this.rangeAxes.size == 1
this.rangeAxisLocations.objects[] contains only nulls and has only one value, of length 8
this.rangeAxisLocations.objects[] elements == null
this.rangeAxisLocations.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.rangeAxisLocations.objects[].getClass().getName() elements == null
this.rangeAxisLocations.size == 0
this.domainGridlinesVisible == false
this.domainGridlineStroke == null
this.domainGridlinePaint == null
this.rangeGridlinesVisible == false
this.rangeGridlineStroke == null
this.rangeGridlinePaint == null
this.domainZeroBaselineStroke == null
this.domainZeroBaselinePaint == null
this.rangeZeroBaselineStroke == null
this.rangeZeroBaselinePaint == null
this.domainCrosshairStroke == null
this.domainCrosshairPaint == null
this.rangeCrosshairStroke == null
this.rangeCrosshairPaint == null
this.annotations == null
index == 0
axisIndex == 0
===========================================================================
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxis(int, int):::EXIT
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE == orig(org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE)
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName())
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.XYPlot.DEFAULT_CROSSHAIR_STROKE.getClass().getName())
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName())
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName() == orig(this.outlineStroke.getClass().getName())
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_PAINT == orig(org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_PAINT)
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName())
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.XYPlot.DEFAULT_CROSSHAIR_PAINT.getClass().getName())
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName())
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName())
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == orig(this.noDataMessagePaint.getClass().getName())
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == orig(this.outlinePaint.getClass().getName())
org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == orig(this.backgroundPaint.getClass().getName())
org.jfree.chart.plot.XYPlot.DEFAULT_CROSSHAIR_STROKE == orig(org.jfree.chart.plot.XYPlot.DEFAULT_CROSSHAIR_STROKE)
org.jfree.chart.plot.XYPlot.DEFAULT_CROSSHAIR_PAINT == orig(org.jfree.chart.plot.XYPlot.DEFAULT_CROSSHAIR_PAINT)
org.jfree.chart.plot.XYPlot.localizationResources == orig(org.jfree.chart.plot.XYPlot.localizationResources)
org.jfree.chart.plot.XYPlot.localizationResources.getClass().getName() == orig(org.jfree.chart.plot.XYPlot.localizationResources.getClass().getName())
this.orientation == orig(this.orientation)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL)
org.jfree.chart.plot.PlotOrientation.VERTICAL == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name.toString == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name.toString)
org.jfree.chart.plot.PlotOrientation.VERTICAL.name == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL.name)
org.jfree.chart.plot.PlotOrientation.VERTICAL.name.toString == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL.name.toString)
this.orientation.name == orig(this.orientation.name)
this.orientation.name.toString == orig(this.orientation.name.toString)
this.axisOffset == orig(this.axisOffset)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.top == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.top)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.left == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.left)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.bottom == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.bottom)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.right == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.right)
this.axisOffset.unitType == orig(this.axisOffset.unitType)
org.jfree.chart.util.UnitType.ABSOLUTE == orig(org.jfree.chart.util.UnitType.ABSOLUTE)
org.jfree.chart.util.UnitType.RELATIVE == orig(org.jfree.chart.util.UnitType.RELATIVE)
this.axisOffset.unitType.name == orig(this.axisOffset.unitType.name)
this.axisOffset.unitType.name.toString == orig(this.axisOffset.unitType.name.toString)
this.axisOffset.top == orig(this.axisOffset.top)
this.axisOffset.left == orig(this.axisOffset.left)
this.axisOffset.bottom == orig(this.axisOffset.bottom)
this.axisOffset.right == orig(this.axisOffset.right)
this.domainAxes == orig(this.domainAxes)
this.domainAxes.objects == orig(this.domainAxes.objects)
this.domainAxes.objects.getClass().getName() == orig(this.domainAxes.objects.getClass().getName())
this.domainAxes.objects.getClass().getName() == orig(this.domainAxisLocations.objects.getClass().getName())
this.domainAxes.objects.getClass().getName() == orig(this.rangeAxes.objects.getClass().getName())
this.domainAxes.objects.getClass().getName() == orig(this.rangeAxisLocations.objects.getClass().getName())
this.domainAxes.objects.getClass().getName() == orig(this.datasets.objects.getClass().getName())
this.domainAxes.objects.getClass().getName() == orig(this.renderers.objects.getClass().getName())
this.domainAxes.objects[] == orig(this.domainAxes.objects[])
this.domainAxes.size == orig(this.domainAxes.size)
this.domainAxes.increment == orig(this.domainAxes.increment)
this.domainAxisLocations == orig(this.domainAxisLocations)
this.domainAxisLocations.objects == orig(this.domainAxisLocations.objects)
this.domainAxisLocations.objects[] == orig(this.domainAxisLocations.objects[])
this.domainAxisLocations.size == orig(this.domainAxisLocations.size)
this.domainAxisLocations.increment == orig(this.domainAxisLocations.increment)
this.rangeAxes == orig(this.rangeAxes)
this.rangeAxes.objects == orig(this.rangeAxes.objects)
this.rangeAxes.objects[] == orig(this.rangeAxes.objects[])
this.rangeAxes.size == orig(this.rangeAxes.size)
this.rangeAxes.increment == orig(this.rangeAxes.increment)
this.rangeAxisLocations == orig(this.rangeAxisLocations)
this.rangeAxisLocations.objects == orig(this.rangeAxisLocations.objects)
this.rangeAxisLocations.objects[] == orig(this.rangeAxisLocations.objects[])
this.rangeAxisLocations.size == orig(this.rangeAxisLocations.size)
this.rangeAxisLocations.increment == orig(this.rangeAxisLocations.increment)
this.datasets == orig(this.datasets)
this.datasets.objects == orig(this.datasets.objects)
this.datasets.objects[] == orig(this.datasets.objects[])
this.datasets.size == orig(this.datasets.size)
this.datasets.increment == orig(this.datasets.increment)
this.renderers == orig(this.renderers)
this.renderers.objects == orig(this.renderers.objects)
this.renderers.objects[] == orig(this.renderers.objects[])
this.renderers.size == orig(this.renderers.size)
this.renderers.increment == orig(this.renderers.increment)
this.datasetToDomainAxisMap == orig(this.datasetToDomainAxisMap)
this.datasetToDomainAxisMap.getClass().getName() == orig(this.datasetToDomainAxisMap.getClass().getName())
this.datasetToDomainAxisMap.getClass().getName() == orig(this.datasetToRangeAxisMap.getClass().getName())
this.datasetToRangeAxisMap == orig(this.datasetToRangeAxisMap)
this.quadrantOrigin == orig(this.quadrantOrigin)
this.quadrantOrigin.getClass().getName() == orig(this.quadrantOrigin.getClass().getName())
this.quadrantPaint == orig(this.quadrantPaint)
this.quadrantPaint.getClass().getName() == orig(this.quadrantPaint.getClass().getName())
this.quadrantPaint[] == orig(this.quadrantPaint[])
this.domainGridlinesVisible == orig(this.domainGridlinesVisible)
this.domainGridlineStroke == orig(this.domainGridlineStroke)
this.domainGridlinePaint == orig(this.domainGridlinePaint)
this.rangeGridlinesVisible == orig(this.rangeGridlinesVisible)
this.rangeGridlineStroke == orig(this.rangeGridlineStroke)
this.rangeGridlinePaint == orig(this.rangeGridlinePaint)
this.domainZeroBaselineVisible == orig(this.domainZeroBaselineVisible)
this.domainZeroBaselineStroke == orig(this.domainZeroBaselineStroke)
this.domainZeroBaselinePaint == orig(this.domainZeroBaselinePaint)
this.rangeZeroBaselineVisible == orig(this.rangeZeroBaselineVisible)
this.rangeZeroBaselineStroke == orig(this.rangeZeroBaselineStroke)
this.rangeZeroBaselinePaint == orig(this.rangeZeroBaselinePaint)
this.domainCrosshairVisible == orig(this.domainCrosshairVisible)
this.domainCrosshairValue == orig(this.domainCrosshairValue)
this.domainCrosshairStroke == orig(this.domainCrosshairStroke)
this.domainCrosshairPaint == orig(this.domainCrosshairPaint)
this.domainCrosshairLockedOnData == orig(this.domainCrosshairLockedOnData)
this.rangeCrosshairVisible == orig(this.rangeCrosshairVisible)
this.rangeCrosshairValue == orig(this.rangeCrosshairValue)
this.rangeCrosshairStroke == orig(this.rangeCrosshairStroke)
this.rangeCrosshairPaint == orig(this.rangeCrosshairPaint)
this.rangeCrosshairLockedOnData == orig(this.rangeCrosshairLockedOnData)
this.foregroundDomainMarkers == orig(this.foregroundDomainMarkers)
this.foregroundDomainMarkers.getClass().getName() == orig(this.foregroundDomainMarkers.getClass().getName())
this.foregroundDomainMarkers.getClass().getName() == orig(this.backgroundDomainMarkers.getClass().getName())
this.foregroundDomainMarkers.getClass().getName() == orig(this.foregroundRangeMarkers.getClass().getName())
this.foregroundDomainMarkers.getClass().getName() == orig(this.backgroundRangeMarkers.getClass().getName())
this.backgroundDomainMarkers == orig(this.backgroundDomainMarkers)
this.foregroundRangeMarkers == orig(this.foregroundRangeMarkers)
this.backgroundRangeMarkers == orig(this.backgroundRangeMarkers)
this.annotations == orig(this.annotations)
this.domainTickBandPaint == orig(this.domainTickBandPaint)
this.rangeTickBandPaint == orig(this.rangeTickBandPaint)
this.fixedDomainAxisSpace == orig(this.fixedDomainAxisSpace)
this.fixedRangeAxisSpace == orig(this.fixedRangeAxisSpace)
this.datasetRenderingOrder == orig(this.datasetRenderingOrder)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name.toString == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name.toString)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name.toString == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name.toString)
this.datasetRenderingOrder.name == orig(this.datasetRenderingOrder.name)
this.datasetRenderingOrder.name.toString == orig(this.datasetRenderingOrder.name.toString)
this.seriesRenderingOrder == orig(this.seriesRenderingOrder)
org.jfree.chart.plot.SeriesRenderingOrder.FORWARD == orig(org.jfree.chart.plot.SeriesRenderingOrder.FORWARD)
org.jfree.chart.plot.SeriesRenderingOrder.REVERSE == orig(org.jfree.chart.plot.SeriesRenderingOrder.REVERSE)
org.jfree.chart.plot.SeriesRenderingOrder.FORWARD.name == orig(org.jfree.chart.plot.SeriesRenderingOrder.FORWARD.name)
org.jfree.chart.plot.SeriesRenderingOrder.FORWARD.name.toString == orig(org.jfree.chart.plot.SeriesRenderingOrder.FORWARD.name.toString)
org.jfree.chart.plot.SeriesRenderingOrder.REVERSE.name == orig(org.jfree.chart.plot.SeriesRenderingOrder.REVERSE.name)
org.jfree.chart.plot.SeriesRenderingOrder.REVERSE.name.toString == orig(org.jfree.chart.plot.SeriesRenderingOrder.REVERSE.name.toString)
this.seriesRenderingOrder.name == orig(this.seriesRenderingOrder.name)
this.seriesRenderingOrder.name.toString == orig(this.seriesRenderingOrder.name.toString)
this.weight == orig(this.weight)
this.fixedLegendItems == orig(this.fixedLegendItems)
org.jfree.chart.plot.Plot.ZERO == orig(org.jfree.chart.plot.Plot.ZERO)
org.jfree.chart.plot.Plot.ZERO.getClass().getName() == orig(org.jfree.chart.plot.Plot.ZERO.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_INSETS == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name.toString == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name.toString)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.top == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.top)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.left == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.left)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.right == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.right)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName())
this.parent == orig(this.parent)
org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener == orig(org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener)
this.datasetGroup == orig(this.datasetGroup)
this.noDataMessage == orig(this.noDataMessage)
this.noDataMessageFont == orig(this.noDataMessageFont)
this.noDataMessagePaint == orig(this.noDataMessagePaint)
this.insets == orig(this.insets)
this.insets.unitType == orig(this.insets.unitType)
this.insets.unitType.name == orig(this.insets.unitType.name)
this.insets.unitType.name.toString == orig(this.insets.unitType.name.toString)
this.insets.top == orig(this.insets.top)
this.insets.left == orig(this.insets.left)
this.insets.bottom == orig(this.insets.bottom)
this.insets.right == orig(this.insets.right)
this.outlineVisible == orig(this.outlineVisible)
this.outlineStroke == orig(this.outlineStroke)
this.outlinePaint == orig(this.outlinePaint)
this.backgroundPaint == orig(this.backgroundPaint)
this.backgroundImage == orig(this.backgroundImage)
this.backgroundImageAlignment == orig(this.backgroundImageAlignment)
this.backgroundImageAlpha == orig(this.backgroundImageAlpha)
this.foregroundAlpha == orig(this.foregroundAlpha)
this.backgroundAlpha == orig(this.backgroundAlpha)
this.drawingSupplier == orig(this.drawingSupplier)
this.drawingSupplier.getClass().getName() == orig(this.drawingSupplier.getClass().getName())
this.listenerList == orig(this.listenerList)
this.domainAxisLocations.objects[] has only one value, of length 8
this.domainAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.domainAxisLocations.size == 1
this.rangeAxes.size == 1
this.rangeAxisLocations.objects[] contains only nulls and has only one value, of length 8
this.rangeAxisLocations.objects[] elements == null
this.rangeAxisLocations.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.rangeAxisLocations.objects[].getClass().getName() elements == null
this.rangeAxisLocations.size == 0
this.domainGridlinesVisible == false
this.domainGridlineStroke == null
this.domainGridlinePaint == null
this.rangeGridlinesVisible == false
this.rangeGridlineStroke == null
this.rangeGridlinePaint == null
this.domainZeroBaselineStroke == null
this.domainZeroBaselinePaint == null
this.rangeZeroBaselineStroke == null
this.rangeZeroBaselinePaint == null
this.domainCrosshairStroke == null
this.domainCrosshairPaint == null
this.rangeCrosshairStroke == null
this.rangeCrosshairPaint == null
this.annotations == null
===========================================================================
org.jfree.chart.plot.junit.CategoryPlotTests:::CLASS
org.jfree.chart.plot.junit.CategoryPlotTests.class$org$jfree$chart$event$MarkerChangeListener == null
===========================================================================
org.jfree.chart.plot.junit.CategoryPlotTests:::OBJECT
org.jfree.chart.plot.junit.CategoryPlotTests.class$org$jfree$chart$plot$junit$CategoryPlotTests has only one value
org.jfree.chart.plot.junit.CategoryPlotTests.class$org$jfree$chart$plot$junit$CategoryPlotTests != null
===========================================================================
org.jfree.chart.plot.junit.CategoryPlotTests.CategoryPlotTests(java.lang.String):::ENTER
name != null
===========================================================================
org.jfree.chart.plot.junit.CategoryPlotTests.CategoryPlotTests(java.lang.String):::EXIT
name.toString == orig(name.toString)
===========================================================================
org.jfree.chart.plot.junit.CategoryPlotTests.class$(java.lang.String):::ENTER
org.jfree.chart.plot.junit.CategoryPlotTests.class$org$jfree$chart$plot$junit$CategoryPlotTests == null
x0 has only one value
x0.toString == "org.jfree.chart.plot.junit.CategoryPlotTests"
===========================================================================
org.jfree.chart.plot.junit.CategoryPlotTests.class$(java.lang.String):::EXIT
org.jfree.chart.plot.junit.CategoryPlotTests.class$org$jfree$chart$plot$junit$CategoryPlotTests == orig(org.jfree.chart.plot.junit.CategoryPlotTests.class$org$jfree$chart$plot$junit$CategoryPlotTests)
org.jfree.chart.plot.junit.CategoryPlotTests.class$org$jfree$chart$event$MarkerChangeListener == orig(org.jfree.chart.plot.junit.CategoryPlotTests.class$org$jfree$chart$event$MarkerChangeListener)
x0.toString == orig(x0.toString)
org.jfree.chart.plot.junit.CategoryPlotTests.class$org$jfree$chart$plot$junit$CategoryPlotTests == null
x0.toString == "org.jfree.chart.plot.junit.CategoryPlotTests"
return has only one value
===========================================================================
org.jfree.chart.plot.junit.CategoryPlotTests.suite():::ENTER
===========================================================================
org.jfree.chart.plot.junit.CategoryPlotTests.suite():::EXIT
org.jfree.chart.plot.junit.CategoryPlotTests.class$org$jfree$chart$event$MarkerChangeListener == orig(org.jfree.chart.plot.junit.CategoryPlotTests.class$org$jfree$chart$event$MarkerChangeListener)
org.jfree.chart.plot.junit.CategoryPlotTests.class$org$jfree$chart$plot$junit$CategoryPlotTests has only one value
return.getClass().getName() == junit.framework.TestSuite.class
===========================================================================
org.jfree.chart.plot.junit.XYPlotTests:::CLASS
org.jfree.chart.plot.junit.XYPlotTests.class$org$jfree$data$time$Day == null
org.jfree.chart.plot.junit.XYPlotTests.class$org$jfree$chart$event$MarkerChangeListener == null
===========================================================================
org.jfree.chart.plot.junit.XYPlotTests:::OBJECT
org.jfree.chart.plot.junit.XYPlotTests.class$org$jfree$chart$plot$junit$XYPlotTests has only one value
org.jfree.chart.plot.junit.XYPlotTests.class$org$jfree$chart$plot$junit$XYPlotTests != null
===========================================================================
org.jfree.chart.plot.junit.XYPlotTests.XYPlotTests(java.lang.String):::ENTER
name != null
===========================================================================
org.jfree.chart.plot.junit.XYPlotTests.XYPlotTests(java.lang.String):::EXIT
name.toString == orig(name.toString)
===========================================================================
org.jfree.chart.plot.junit.XYPlotTests.class$(java.lang.String):::ENTER
org.jfree.chart.plot.junit.XYPlotTests.class$org$jfree$chart$plot$junit$XYPlotTests == null
x0 has only one value
x0.toString == "org.jfree.chart.plot.junit.XYPlotTests"
===========================================================================
org.jfree.chart.plot.junit.XYPlotTests.class$(java.lang.String):::EXIT
org.jfree.chart.plot.junit.XYPlotTests.class$org$jfree$chart$plot$junit$XYPlotTests == orig(org.jfree.chart.plot.junit.XYPlotTests.class$org$jfree$chart$plot$junit$XYPlotTests)
org.jfree.chart.plot.junit.XYPlotTests.class$org$jfree$data$time$Day == orig(org.jfree.chart.plot.junit.XYPlotTests.class$org$jfree$data$time$Day)
org.jfree.chart.plot.junit.XYPlotTests.class$org$jfree$chart$event$MarkerChangeListener == orig(org.jfree.chart.plot.junit.XYPlotTests.class$org$jfree$chart$event$MarkerChangeListener)
x0.toString == orig(x0.toString)
org.jfree.chart.plot.junit.XYPlotTests.class$org$jfree$chart$plot$junit$XYPlotTests == null
x0.toString == "org.jfree.chart.plot.junit.XYPlotTests"
return has only one value
===========================================================================
org.jfree.chart.plot.junit.XYPlotTests.suite():::ENTER
===========================================================================
org.jfree.chart.plot.junit.XYPlotTests.suite():::EXIT
org.jfree.chart.plot.junit.XYPlotTests.class$org$jfree$data$time$Day == orig(org.jfree.chart.plot.junit.XYPlotTests.class$org$jfree$data$time$Day)
org.jfree.chart.plot.junit.XYPlotTests.class$org$jfree$chart$event$MarkerChangeListener == orig(org.jfree.chart.plot.junit.XYPlotTests.class$org$jfree$chart$event$MarkerChangeListener)
org.jfree.chart.plot.junit.XYPlotTests.class$org$jfree$chart$plot$junit$XYPlotTests has only one value
return.getClass().getName() == junit.framework.TestSuite.class
===========================================================================
org.jfree.chart.text.TextAnchor:::CLASS
===========================================================================
org.jfree.chart.text.TextAnchor:::OBJECT
this.name != null
===========================================================================
org.jfree.chart.text.TextAnchor.TextAnchor(java.lang.String):::ENTER
name != null
===========================================================================
org.jfree.chart.text.TextAnchor.TextAnchor(java.lang.String):::EXIT
name.toString == orig(name.toString)
===========================================================================
org.jfree.chart.util.AbstractObjectList:::CLASS
===========================================================================
org.jfree.chart.util.AbstractObjectList:::OBJECT
this.objects != null
this.objects.getClass().getName() == java.lang.Object[].class
this.size one of { 0, 1 }
this.increment == 8
size(this.objects[]) == 8
===========================================================================
org.jfree.chart.util.AbstractObjectList.AbstractObjectList():::EXIT
this.objects[] contains only nulls and has only one value, of length 8
this.objects[] elements == null
this.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.objects[].getClass().getName() elements == null
this.size == 0
===========================================================================
org.jfree.chart.util.AbstractObjectList.AbstractObjectList(int):::ENTER
initialCapacity == 8
===========================================================================
org.jfree.chart.util.AbstractObjectList.AbstractObjectList(int):::EXIT
this.objects[] contains only nulls and has only one value, of length 8
this.objects[] elements == null
this.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.objects[].getClass().getName() elements == null
this.size == 0
===========================================================================
org.jfree.chart.util.AbstractObjectList.AbstractObjectList(int, int):::ENTER
initialCapacity == 8
increment == 8
===========================================================================
org.jfree.chart.util.AbstractObjectList.AbstractObjectList(int, int):::EXIT
this.objects[] contains only nulls and has only one value, of length 8
this.objects[] elements == null
this.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.objects[].getClass().getName() elements == null
this.size == 0
===========================================================================
org.jfree.chart.util.AbstractObjectList.get(int):::ENTER
this.objects[] contains only nulls and has only one value, of length 8
this.objects[] elements == null
this.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.objects[].getClass().getName() elements == null
this.size == 1
index == 0
===========================================================================
org.jfree.chart.util.AbstractObjectList.get(int):::EXIT
this.objects == orig(this.objects)
this.objects.getClass().getName() == orig(this.objects.getClass().getName())
this.objects[] == orig(this.objects[])
this.size == orig(this.size)
this.increment == orig(this.increment)
this.objects[] contains only nulls and has only one value, of length 8
this.objects[] elements == null
this.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.objects[].getClass().getName() elements == null
this.size == 1
return == null
===========================================================================
org.jfree.chart.util.AbstractObjectList.set(int, java.lang.Object):::ENTER
this.objects[] contains only nulls and has only one value, of length 8
this.objects[] elements == null
this.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.objects[].getClass().getName() elements == null
this.size == 0
index == 0
===========================================================================
org.jfree.chart.util.AbstractObjectList.set(int, java.lang.Object):::EXIT
this.objects == orig(this.objects)
this.objects.getClass().getName() == orig(this.objects.getClass().getName())
this.increment == orig(this.increment)
size(this.objects[]) == orig(size(this.objects[]))
this.size == 1
===========================================================================
org.jfree.chart.util.AbstractObjectList.size():::ENTER
this.objects[] contains only nulls and has only one value, of length 8
this.objects[] elements == null
this.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.objects[].getClass().getName() elements == null
===========================================================================
org.jfree.chart.util.AbstractObjectList.size():::EXIT
this.objects == orig(this.objects)
this.objects.getClass().getName() == orig(this.objects.getClass().getName())
this.objects[] == orig(this.objects[])
this.size == orig(this.size)
this.increment == orig(this.increment)
this.objects[] contains only nulls and has only one value, of length 8
this.objects[] elements == null
this.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.objects[].getClass().getName() elements == null
return one of { 0, 1 }
===========================================================================
org.jfree.chart.util.Layer:::CLASS
===========================================================================
org.jfree.chart.util.Layer:::OBJECT
this.name.toString one of { "Layer.BACKGROUND", "Layer.FOREGROUND" }
===========================================================================
org.jfree.chart.util.Layer.Layer(java.lang.String):::ENTER
name.toString one of { "Layer.BACKGROUND", "Layer.FOREGROUND" }
===========================================================================
org.jfree.chart.util.Layer.Layer(java.lang.String):::EXIT
name.toString == orig(name.toString)
name.toString one of { "Layer.BACKGROUND", "Layer.FOREGROUND" }
===========================================================================
org.jfree.chart.util.LengthAdjustmentType:::CLASS
===========================================================================
org.jfree.chart.util.LengthAdjustmentType:::OBJECT
this.name.toString one of { "CONTRACT", "EXPAND", "NO_CHANGE" }
===========================================================================
org.jfree.chart.util.LengthAdjustmentType.LengthAdjustmentType(java.lang.String):::ENTER
name.toString one of { "CONTRACT", "EXPAND", "NO_CHANGE" }
===========================================================================
org.jfree.chart.util.LengthAdjustmentType.LengthAdjustmentType(java.lang.String):::EXIT
name.toString == orig(name.toString)
name.toString one of { "CONTRACT", "EXPAND", "NO_CHANGE" }
===========================================================================
org.jfree.chart.util.ObjectList:::CLASS
===========================================================================
org.jfree.chart.util.ObjectList:::OBJECT
this.objects != null
this.objects.getClass().getName() == java.lang.Object[].class
this.size one of { 0, 1 }
this.increment == 8
size(this.objects[]) == 8
===========================================================================
org.jfree.chart.util.ObjectList.ObjectList():::EXIT
this.objects[] contains only nulls and has only one value, of length 8
this.objects[] elements == null
this.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.objects[].getClass().getName() elements == null
this.size == 0
===========================================================================
org.jfree.chart.util.ObjectList.get(int):::ENTER
this.objects[] contains only nulls and has only one value, of length 8
this.objects[] elements == null
this.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.objects[].getClass().getName() elements == null
this.size == 1
index == 0
===========================================================================
org.jfree.chart.util.ObjectList.get(int):::EXIT
this.objects == orig(this.objects)
this.objects.getClass().getName() == orig(this.objects.getClass().getName())
this.objects[] == orig(this.objects[])
this.size == orig(this.size)
this.increment == orig(this.increment)
this.objects[] contains only nulls and has only one value, of length 8
this.objects[] elements == null
this.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.objects[].getClass().getName() elements == null
this.size == 1
return == null
===========================================================================
org.jfree.chart.util.ObjectList.set(int, java.lang.Object):::ENTER
this.objects[] contains only nulls and has only one value, of length 8
this.objects[] elements == null
this.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.objects[].getClass().getName() elements == null
this.size == 0
index == 0
===========================================================================
org.jfree.chart.util.ObjectList.set(int, java.lang.Object):::EXIT
this.objects == orig(this.objects)
this.objects.getClass().getName() == orig(this.objects.getClass().getName())
this.increment == orig(this.increment)
size(this.objects[]) == orig(size(this.objects[]))
this.size == 1
===========================================================================
org.jfree.chart.util.RectangleAnchor:::CLASS
===========================================================================
org.jfree.chart.util.RectangleAnchor:::OBJECT
===========================================================================
org.jfree.chart.util.RectangleAnchor.RectangleAnchor(java.lang.String):::ENTER
===========================================================================
org.jfree.chart.util.RectangleAnchor.RectangleAnchor(java.lang.String):::EXIT
name.toString == orig(name.toString)
===========================================================================
org.jfree.chart.util.RectangleInsets:::CLASS
org.jfree.chart.util.RectangleInsets.ZERO_INSETS has only one value
org.jfree.chart.util.RectangleInsets.ZERO_INSETS != null
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType has only one value
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType != null
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.top == 0.0
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.left == 0.0
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.bottom == 0.0
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.right == 0.0
org.jfree.chart.util.UnitType.ABSOLUTE has only one value
org.jfree.chart.util.UnitType.ABSOLUTE != null
org.jfree.chart.util.UnitType.RELATIVE has only one value
org.jfree.chart.util.UnitType.RELATIVE != null
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType.name has only one value
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType.name != null
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType.name.toString == "UnitType.ABSOLUTE"
===========================================================================
org.jfree.chart.util.RectangleInsets:::OBJECT
this.unitType has only one value
this.unitType != null
org.jfree.chart.util.UnitType.ABSOLUTE.name has only one value
org.jfree.chart.util.UnitType.ABSOLUTE.name != null
org.jfree.chart.util.UnitType.ABSOLUTE.name.toString == "UnitType.ABSOLUTE"
org.jfree.chart.util.UnitType.RELATIVE.name has only one value
org.jfree.chart.util.UnitType.RELATIVE.name != null
org.jfree.chart.util.UnitType.RELATIVE.name.toString == "UnitType.RELATIVE"
this.unitType.name has only one value
this.unitType.name != null
this.unitType.name.toString == "UnitType.ABSOLUTE"
this.top one of { 0.0, 3.0, 4.0 }
this.bottom one of { 0.0, 3.0, 4.0 }
===========================================================================
org.jfree.chart.util.RectangleInsets.RectangleInsets(double, double, double, double):::ENTER
top one of { 3.0, 4.0 }
left one of { 3.0, 4.0, 8.0 }
bottom one of { 3.0, 4.0 }
right one of { 3.0, 4.0, 8.0 }
===========================================================================
org.jfree.chart.util.RectangleInsets.RectangleInsets(double, double, double, double):::EXIT
this.top one of { 3.0, 4.0 }
this.left one of { 3.0, 4.0, 8.0 }
this.bottom one of { 3.0, 4.0 }
this.right one of { 3.0, 4.0, 8.0 }
===========================================================================
org.jfree.chart.util.RectangleInsets.RectangleInsets(org.jfree.chart.util.UnitType, double, double, double, double):::ENTER
unitType has only one value
unitType != null
org.jfree.chart.util.UnitType.ABSOLUTE has only one value
org.jfree.chart.util.UnitType.ABSOLUTE != null
org.jfree.chart.util.UnitType.RELATIVE has only one value
org.jfree.chart.util.UnitType.RELATIVE != null
org.jfree.chart.util.UnitType.ABSOLUTE.name has only one value
org.jfree.chart.util.UnitType.ABSOLUTE.name != null
org.jfree.chart.util.UnitType.ABSOLUTE.name.toString == "UnitType.ABSOLUTE"
org.jfree.chart.util.UnitType.RELATIVE.name has only one value
org.jfree.chart.util.UnitType.RELATIVE.name != null
org.jfree.chart.util.UnitType.RELATIVE.name.toString == "UnitType.RELATIVE"
unitType.name has only one value
unitType.name != null
unitType.name.toString == "UnitType.ABSOLUTE"
top one of { 0.0, 3.0, 4.0 }
bottom one of { 0.0, 3.0, 4.0 }
===========================================================================
org.jfree.chart.util.RectangleInsets.RectangleInsets(org.jfree.chart.util.UnitType, double, double, double, double):::EXIT
org.jfree.chart.util.UnitType.ABSOLUTE == orig(org.jfree.chart.util.UnitType.ABSOLUTE)
org.jfree.chart.util.UnitType.RELATIVE == orig(org.jfree.chart.util.UnitType.RELATIVE)
org.jfree.chart.util.UnitType.ABSOLUTE.name == orig(org.jfree.chart.util.UnitType.ABSOLUTE.name)
org.jfree.chart.util.UnitType.ABSOLUTE.name.toString == orig(org.jfree.chart.util.UnitType.ABSOLUTE.name.toString)
org.jfree.chart.util.UnitType.RELATIVE.name == orig(org.jfree.chart.util.UnitType.RELATIVE.name)
org.jfree.chart.util.UnitType.RELATIVE.name.toString == orig(org.jfree.chart.util.UnitType.RELATIVE.name.toString)
unitType.name == orig(unitType.name)
unitType.name.toString == orig(unitType.name.toString)
unitType.name has only one value
unitType.name != null
unitType.name.toString == "UnitType.ABSOLUTE"
===========================================================================
org.jfree.chart.util.SortOrder:::CLASS
===========================================================================
org.jfree.chart.util.SortOrder:::OBJECT
this.name.toString one of { "SortOrder.ASCENDING", "SortOrder.DESCENDING" }
===========================================================================
org.jfree.chart.util.SortOrder.SortOrder(java.lang.String):::ENTER
name.toString one of { "SortOrder.ASCENDING", "SortOrder.DESCENDING" }
===========================================================================
org.jfree.chart.util.SortOrder.SortOrder(java.lang.String):::EXIT
name.toString == orig(name.toString)
name.toString one of { "SortOrder.ASCENDING", "SortOrder.DESCENDING" }
===========================================================================
org.jfree.chart.util.UnitType:::CLASS
===========================================================================
org.jfree.chart.util.UnitType:::OBJECT
this.name.toString one of { "UnitType.ABSOLUTE", "UnitType.RELATIVE" }
===========================================================================
org.jfree.chart.util.UnitType.UnitType(java.lang.String):::ENTER
name.toString one of { "UnitType.ABSOLUTE", "UnitType.RELATIVE" }
===========================================================================
org.jfree.chart.util.UnitType.UnitType(java.lang.String):::EXIT
name.toString == orig(name.toString)
name.toString one of { "UnitType.ABSOLUTE", "UnitType.RELATIVE" }
===========================================================================
org.jfree.data.general.DatasetChangeEvent:::OBJECT
this.dataset == null
===========================================================================
org.jfree.data.general.DatasetChangeEvent.DatasetChangeEvent(java.lang.Object, org.jfree.data.general.Dataset):::ENTER
dataset == null
===========================================================================
org.jfree.data.general.DatasetChangeEvent.DatasetChangeEvent(java.lang.Object, org.jfree.data.general.Dataset):::EXIT
