===========================================================================
org.jfree.chart.ChartColor:::CLASS
org.jfree.chart.ChartColor.VERY_DARK_RED has only one value
org.jfree.chart.ChartColor.DARK_RED has only one value
org.jfree.chart.ChartColor.LIGHT_RED has only one value
org.jfree.chart.ChartColor.VERY_LIGHT_RED has only one value
org.jfree.chart.ChartColor.VERY_DARK_YELLOW has only one value
org.jfree.chart.ChartColor.DARK_YELLOW has only one value
org.jfree.chart.ChartColor.LIGHT_YELLOW has only one value
org.jfree.chart.ChartColor.VERY_LIGHT_YELLOW has only one value
org.jfree.chart.ChartColor.VERY_DARK_GREEN has only one value
org.jfree.chart.ChartColor.DARK_GREEN has only one value
org.jfree.chart.ChartColor.LIGHT_GREEN has only one value
org.jfree.chart.ChartColor.VERY_LIGHT_GREEN has only one value
org.jfree.chart.ChartColor.VERY_DARK_CYAN has only one value
org.jfree.chart.ChartColor.DARK_CYAN has only one value
org.jfree.chart.ChartColor.LIGHT_CYAN has only one value
org.jfree.chart.ChartColor.VERY_LIGHT_CYAN has only one value
org.jfree.chart.ChartColor.VERY_DARK_BLUE has only one value
org.jfree.chart.ChartColor.DARK_BLUE has only one value
org.jfree.chart.ChartColor.LIGHT_BLUE has only one value
org.jfree.chart.ChartColor.VERY_LIGHT_BLUE has only one value
org.jfree.chart.ChartColor.VERY_DARK_MAGENTA has only one value
org.jfree.chart.ChartColor.DARK_MAGENTA has only one value
org.jfree.chart.ChartColor.LIGHT_MAGENTA has only one value
org.jfree.chart.ChartColor.VERY_LIGHT_MAGENTA has only one value
===========================================================================
org.jfree.chart.ChartColor.createDefaultPaintArray():::ENTER
===========================================================================
org.jfree.chart.ChartColor.createDefaultPaintArray():::EXIT
org.jfree.chart.ChartColor.VERY_DARK_RED == orig(org.jfree.chart.ChartColor.VERY_DARK_RED)
org.jfree.chart.ChartColor.DARK_RED == orig(org.jfree.chart.ChartColor.DARK_RED)
org.jfree.chart.ChartColor.LIGHT_RED == orig(org.jfree.chart.ChartColor.LIGHT_RED)
org.jfree.chart.ChartColor.VERY_LIGHT_RED == orig(org.jfree.chart.ChartColor.VERY_LIGHT_RED)
org.jfree.chart.ChartColor.VERY_DARK_YELLOW == orig(org.jfree.chart.ChartColor.VERY_DARK_YELLOW)
org.jfree.chart.ChartColor.DARK_YELLOW == orig(org.jfree.chart.ChartColor.DARK_YELLOW)
org.jfree.chart.ChartColor.LIGHT_YELLOW == orig(org.jfree.chart.ChartColor.LIGHT_YELLOW)
org.jfree.chart.ChartColor.VERY_LIGHT_YELLOW == orig(org.jfree.chart.ChartColor.VERY_LIGHT_YELLOW)
org.jfree.chart.ChartColor.VERY_DARK_GREEN == orig(org.jfree.chart.ChartColor.VERY_DARK_GREEN)
org.jfree.chart.ChartColor.DARK_GREEN == orig(org.jfree.chart.ChartColor.DARK_GREEN)
org.jfree.chart.ChartColor.LIGHT_GREEN == orig(org.jfree.chart.ChartColor.LIGHT_GREEN)
org.jfree.chart.ChartColor.VERY_LIGHT_GREEN == orig(org.jfree.chart.ChartColor.VERY_LIGHT_GREEN)
org.jfree.chart.ChartColor.VERY_DARK_CYAN == orig(org.jfree.chart.ChartColor.VERY_DARK_CYAN)
org.jfree.chart.ChartColor.DARK_CYAN == orig(org.jfree.chart.ChartColor.DARK_CYAN)
org.jfree.chart.ChartColor.LIGHT_CYAN == orig(org.jfree.chart.ChartColor.LIGHT_CYAN)
org.jfree.chart.ChartColor.VERY_LIGHT_CYAN == orig(org.jfree.chart.ChartColor.VERY_LIGHT_CYAN)
org.jfree.chart.ChartColor.VERY_DARK_BLUE == orig(org.jfree.chart.ChartColor.VERY_DARK_BLUE)
org.jfree.chart.ChartColor.DARK_BLUE == orig(org.jfree.chart.ChartColor.DARK_BLUE)
org.jfree.chart.ChartColor.LIGHT_BLUE == orig(org.jfree.chart.ChartColor.LIGHT_BLUE)
org.jfree.chart.ChartColor.VERY_LIGHT_BLUE == orig(org.jfree.chart.ChartColor.VERY_LIGHT_BLUE)
org.jfree.chart.ChartColor.VERY_DARK_MAGENTA == orig(org.jfree.chart.ChartColor.VERY_DARK_MAGENTA)
org.jfree.chart.ChartColor.DARK_MAGENTA == orig(org.jfree.chart.ChartColor.DARK_MAGENTA)
org.jfree.chart.ChartColor.LIGHT_MAGENTA == orig(org.jfree.chart.ChartColor.LIGHT_MAGENTA)
org.jfree.chart.ChartColor.VERY_LIGHT_MAGENTA == orig(org.jfree.chart.ChartColor.VERY_LIGHT_MAGENTA)
return has only one value
return.getClass().getName() == java.awt.Paint[].class
return[] contains no nulls and has only one value, of length 34
size(return[]) == 34
===========================================================================
org.jfree.chart.LegendItem:::CLASS
org.jfree.chart.LegendItem.UNUSED_SHAPE has only one value
org.jfree.chart.LegendItem.UNUSED_SHAPE != null
org.jfree.chart.LegendItem.UNUSED_SHAPE.getClass().getName() == java.awt.geom.Line2D$Float.class
org.jfree.chart.LegendItem.UNUSED_STROKE has only one value
org.jfree.chart.LegendItem.UNUSED_STROKE != null
org.jfree.chart.LegendItem.UNUSED_STROKE.getClass().getName() == java.awt.BasicStroke.class
===========================================================================
org.jfree.chart.LegendItem:::OBJECT
this has only one value
this.dataset.getClass().getName() == org.jfree.data.category.DefaultCategoryDataset.class
this.seriesKey.getClass().getName() == java.lang.String.class
this.datasetIndex == 0
this.series == 0
this.label has only one value
this.label != null
this.label.toString == "S1"
this.labelFont == null
this.labelPaint == null
this.attributedLabel == null
this.description has only one value
this.description != null
this.description.toString == "S1"
this.toolTipText == null
this.urlText == null
this.shapeVisible == true
this.shape has only one value
this.shape != null
this.shape.getClass().getName() == java.awt.geom.Rectangle2D$Double.class
this.shapeFilled == true
this.fillPaint has only one value
this.fillPaint != null
this.fillPaint.getClass().getName() == java.awt.Color.class
this.fillPaintTransformer has only one value
this.fillPaintTransformer != null
this.fillPaintTransformer.getClass().getName() == org.jfree.chart.util.StandardGradientPaintTransformer.class
this.shapeOutlineVisible == true
this.outlinePaint has only one value
this.outlinePaint != null
this.outlinePaint.getClass().getName() == java.awt.Color.class
this.outlineStroke has only one value
this.outlineStroke != null
this.outlineStroke.getClass().getName() == java.awt.BasicStroke.class
this.lineVisible == true
this.line has only one value
this.line != null
this.line.getClass().getName() == java.awt.geom.Line2D$Double.class
this.lineStroke has only one value
this.lineStroke != null
this.lineStroke.getClass().getName() == java.awt.BasicStroke.class
this.linePaint has only one value
this.linePaint != null
this.linePaint.getClass().getName() == java.awt.Color.class
===========================================================================
org.jfree.chart.LegendItem.LegendItem(java.lang.String, java.lang.String, java.lang.String, java.lang.String, boolean, java.awt.Shape, boolean, java.awt.Paint, boolean, java.awt.Paint, java.awt.Stroke, boolean, java.awt.Shape, java.awt.Stroke, java.awt.Paint):::ENTER
label has only one value
label.toString == "S1"
description has only one value
description.toString == "S1"
toolTipText == null
urlText == null
shapeVisible == true
shape has only one value
shape.getClass().getName() == java.awt.geom.Rectangle2D$Double.class
shapeFilled == true
fillPaint has only one value
fillPaint.getClass().getName() == java.awt.Color.class
shapeOutlineVisible == true
outlinePaint has only one value
outlinePaint.getClass().getName() == java.awt.Color.class
outlineStroke has only one value
outlineStroke.getClass().getName() == java.awt.BasicStroke.class
lineVisible == true
line has only one value
line.getClass().getName() == java.awt.geom.Line2D$Double.class
lineStroke has only one value
lineStroke.getClass().getName() == java.awt.BasicStroke.class
linePaint has only one value
linePaint.getClass().getName() == java.awt.Color.class
===========================================================================
org.jfree.chart.LegendItem.LegendItem(java.lang.String, java.lang.String, java.lang.String, java.lang.String, boolean, java.awt.Shape, boolean, java.awt.Paint, boolean, java.awt.Paint, java.awt.Stroke, boolean, java.awt.Shape, java.awt.Stroke, java.awt.Paint):::EXIT
label.toString == orig(label.toString)
description.toString == orig(description.toString)
this.dataset == null
this.seriesKey == null
label.toString == "S1"
description.toString == "S1"
===========================================================================
org.jfree.chart.LegendItem.getLabel():::ENTER
this.dataset has only one value
this.seriesKey has only one value
===========================================================================
org.jfree.chart.LegendItem.getLabel():::EXIT
this.dataset == orig(this.dataset)
this.dataset.getClass().getName() == orig(this.dataset.getClass().getName())
this.seriesKey == orig(this.seriesKey)
this.seriesKey.getClass().getName() == orig(this.seriesKey.getClass().getName())
this.datasetIndex == orig(this.datasetIndex)
this.series == orig(this.series)
this.label == orig(this.label)
this.label.toString == orig(this.label.toString)
this.labelFont == orig(this.labelFont)
this.labelPaint == orig(this.labelPaint)
this.attributedLabel == orig(this.attributedLabel)
this.description == orig(this.description)
this.description.toString == orig(this.description.toString)
this.toolTipText == orig(this.toolTipText)
this.urlText == orig(this.urlText)
this.shapeVisible == orig(this.shapeVisible)
this.shape == orig(this.shape)
this.shape.getClass().getName() == orig(this.shape.getClass().getName())
this.shapeFilled == orig(this.shapeFilled)
this.fillPaint == orig(this.fillPaint)
this.fillPaint.getClass().getName() == orig(this.fillPaint.getClass().getName())
this.fillPaintTransformer == orig(this.fillPaintTransformer)
this.fillPaintTransformer.getClass().getName() == orig(this.fillPaintTransformer.getClass().getName())
this.shapeOutlineVisible == orig(this.shapeOutlineVisible)
this.outlinePaint == orig(this.outlinePaint)
this.outlinePaint.getClass().getName() == orig(this.outlinePaint.getClass().getName())
this.outlineStroke == orig(this.outlineStroke)
this.outlineStroke.getClass().getName() == orig(this.outlineStroke.getClass().getName())
this.lineVisible == orig(this.lineVisible)
this.line == orig(this.line)
this.line.getClass().getName() == orig(this.line.getClass().getName())
this.lineStroke == orig(this.lineStroke)
this.lineStroke.getClass().getName() == orig(this.lineStroke.getClass().getName())
this.linePaint == orig(this.linePaint)
this.linePaint.getClass().getName() == orig(this.linePaint.getClass().getName())
org.jfree.chart.LegendItem.UNUSED_SHAPE == orig(org.jfree.chart.LegendItem.UNUSED_SHAPE)
org.jfree.chart.LegendItem.UNUSED_SHAPE.getClass().getName() == orig(org.jfree.chart.LegendItem.UNUSED_SHAPE.getClass().getName())
org.jfree.chart.LegendItem.UNUSED_STROKE == orig(org.jfree.chart.LegendItem.UNUSED_STROKE)
org.jfree.chart.LegendItem.UNUSED_STROKE.getClass().getName() == orig(org.jfree.chart.LegendItem.UNUSED_STROKE.getClass().getName())
this.dataset has only one value
this.seriesKey has only one value
return has only one value
return.toString == "S1"
===========================================================================
org.jfree.chart.LegendItem.setDataset(org.jfree.data.general.Dataset):::ENTER
this.dataset == null
this.seriesKey == null
dataset has only one value
dataset.getClass().getName() == org.jfree.data.category.DefaultCategoryDataset.class
===========================================================================
org.jfree.chart.LegendItem.setDataset(org.jfree.data.general.Dataset):::EXIT
this.seriesKey == orig(this.seriesKey)
this.datasetIndex == orig(this.datasetIndex)
this.series == orig(this.series)
this.label == orig(this.label)
this.label.toString == orig(this.label.toString)
this.labelFont == orig(this.labelFont)
this.labelPaint == orig(this.labelPaint)
this.attributedLabel == orig(this.attributedLabel)
this.description == orig(this.description)
this.description.toString == orig(this.description.toString)
this.toolTipText == orig(this.toolTipText)
this.urlText == orig(this.urlText)
this.shapeVisible == orig(this.shapeVisible)
this.shape == orig(this.shape)
this.shape.getClass().getName() == orig(this.shape.getClass().getName())
this.shapeFilled == orig(this.shapeFilled)
this.fillPaint == orig(this.fillPaint)
this.fillPaint.getClass().getName() == orig(this.fillPaint.getClass().getName())
this.fillPaintTransformer == orig(this.fillPaintTransformer)
this.fillPaintTransformer.getClass().getName() == orig(this.fillPaintTransformer.getClass().getName())
this.shapeOutlineVisible == orig(this.shapeOutlineVisible)
this.outlinePaint == orig(this.outlinePaint)
this.outlinePaint.getClass().getName() == orig(this.outlinePaint.getClass().getName())
this.outlineStroke == orig(this.outlineStroke)
this.outlineStroke.getClass().getName() == orig(this.outlineStroke.getClass().getName())
this.lineVisible == orig(this.lineVisible)
this.line == orig(this.line)
this.line.getClass().getName() == orig(this.line.getClass().getName())
this.lineStroke == orig(this.lineStroke)
this.lineStroke.getClass().getName() == orig(this.lineStroke.getClass().getName())
this.linePaint == orig(this.linePaint)
this.linePaint.getClass().getName() == orig(this.linePaint.getClass().getName())
org.jfree.chart.LegendItem.UNUSED_SHAPE == orig(org.jfree.chart.LegendItem.UNUSED_SHAPE)
org.jfree.chart.LegendItem.UNUSED_SHAPE.getClass().getName() == orig(org.jfree.chart.LegendItem.UNUSED_SHAPE.getClass().getName())
org.jfree.chart.LegendItem.UNUSED_STROKE == orig(org.jfree.chart.LegendItem.UNUSED_STROKE)
org.jfree.chart.LegendItem.UNUSED_STROKE.getClass().getName() == orig(org.jfree.chart.LegendItem.UNUSED_STROKE.getClass().getName())
this.dataset has only one value
this.seriesKey == null
===========================================================================
org.jfree.chart.LegendItem.setDatasetIndex(int):::ENTER
this.dataset has only one value
this.seriesKey == null
index == 0
===========================================================================
org.jfree.chart.LegendItem.setDatasetIndex(int):::EXIT
this.dataset == orig(this.dataset)
this.dataset.getClass().getName() == orig(this.dataset.getClass().getName())
this.seriesKey == orig(this.seriesKey)
this.datasetIndex == orig(this.datasetIndex)
this.series == orig(this.series)
this.label == orig(this.label)
this.label.toString == orig(this.label.toString)
this.labelFont == orig(this.labelFont)
this.labelPaint == orig(this.labelPaint)
this.attributedLabel == orig(this.attributedLabel)
this.description == orig(this.description)
this.description.toString == orig(this.description.toString)
this.toolTipText == orig(this.toolTipText)
this.urlText == orig(this.urlText)
this.shapeVisible == orig(this.shapeVisible)
this.shape == orig(this.shape)
this.shape.getClass().getName() == orig(this.shape.getClass().getName())
this.shapeFilled == orig(this.shapeFilled)
this.fillPaint == orig(this.fillPaint)
this.fillPaint.getClass().getName() == orig(this.fillPaint.getClass().getName())
this.fillPaintTransformer == orig(this.fillPaintTransformer)
this.fillPaintTransformer.getClass().getName() == orig(this.fillPaintTransformer.getClass().getName())
this.shapeOutlineVisible == orig(this.shapeOutlineVisible)
this.outlinePaint == orig(this.outlinePaint)
this.outlinePaint.getClass().getName() == orig(this.outlinePaint.getClass().getName())
this.outlineStroke == orig(this.outlineStroke)
this.outlineStroke.getClass().getName() == orig(this.outlineStroke.getClass().getName())
this.lineVisible == orig(this.lineVisible)
this.line == orig(this.line)
this.line.getClass().getName() == orig(this.line.getClass().getName())
this.lineStroke == orig(this.lineStroke)
this.lineStroke.getClass().getName() == orig(this.lineStroke.getClass().getName())
this.linePaint == orig(this.linePaint)
this.linePaint.getClass().getName() == orig(this.linePaint.getClass().getName())
org.jfree.chart.LegendItem.UNUSED_SHAPE == orig(org.jfree.chart.LegendItem.UNUSED_SHAPE)
org.jfree.chart.LegendItem.UNUSED_SHAPE.getClass().getName() == orig(org.jfree.chart.LegendItem.UNUSED_SHAPE.getClass().getName())
org.jfree.chart.LegendItem.UNUSED_STROKE == orig(org.jfree.chart.LegendItem.UNUSED_STROKE)
org.jfree.chart.LegendItem.UNUSED_STROKE.getClass().getName() == orig(org.jfree.chart.LegendItem.UNUSED_STROKE.getClass().getName())
this.dataset has only one value
this.seriesKey == null
===========================================================================
org.jfree.chart.LegendItem.setLabelFont(java.awt.Font):::ENTER
this.dataset == null
this.seriesKey == null
font == null
===========================================================================
org.jfree.chart.LegendItem.setLabelFont(java.awt.Font):::EXIT
this.dataset == orig(this.dataset)
this.seriesKey == orig(this.seriesKey)
this.datasetIndex == orig(this.datasetIndex)
this.series == orig(this.series)
this.label == orig(this.label)
this.label.toString == orig(this.label.toString)
this.labelFont == orig(this.labelFont)
this.labelPaint == orig(this.labelPaint)
this.attributedLabel == orig(this.attributedLabel)
this.description == orig(this.description)
this.description.toString == orig(this.description.toString)
this.toolTipText == orig(this.toolTipText)
this.urlText == orig(this.urlText)
this.shapeVisible == orig(this.shapeVisible)
this.shape == orig(this.shape)
this.shape.getClass().getName() == orig(this.shape.getClass().getName())
this.shapeFilled == orig(this.shapeFilled)
this.fillPaint == orig(this.fillPaint)
this.fillPaint.getClass().getName() == orig(this.fillPaint.getClass().getName())
this.fillPaintTransformer == orig(this.fillPaintTransformer)
this.fillPaintTransformer.getClass().getName() == orig(this.fillPaintTransformer.getClass().getName())
this.shapeOutlineVisible == orig(this.shapeOutlineVisible)
this.outlinePaint == orig(this.outlinePaint)
this.outlinePaint.getClass().getName() == orig(this.outlinePaint.getClass().getName())
this.outlineStroke == orig(this.outlineStroke)
this.outlineStroke.getClass().getName() == orig(this.outlineStroke.getClass().getName())
this.lineVisible == orig(this.lineVisible)
this.line == orig(this.line)
this.line.getClass().getName() == orig(this.line.getClass().getName())
this.lineStroke == orig(this.lineStroke)
this.lineStroke.getClass().getName() == orig(this.lineStroke.getClass().getName())
this.linePaint == orig(this.linePaint)
this.linePaint.getClass().getName() == orig(this.linePaint.getClass().getName())
org.jfree.chart.LegendItem.UNUSED_SHAPE == orig(org.jfree.chart.LegendItem.UNUSED_SHAPE)
org.jfree.chart.LegendItem.UNUSED_SHAPE.getClass().getName() == orig(org.jfree.chart.LegendItem.UNUSED_SHAPE.getClass().getName())
org.jfree.chart.LegendItem.UNUSED_STROKE == orig(org.jfree.chart.LegendItem.UNUSED_STROKE)
org.jfree.chart.LegendItem.UNUSED_STROKE.getClass().getName() == orig(org.jfree.chart.LegendItem.UNUSED_STROKE.getClass().getName())
this.dataset == null
this.seriesKey == null
===========================================================================
org.jfree.chart.LegendItem.setSeriesIndex(int):::ENTER
this.dataset has only one value
this.seriesKey has only one value
index == 0
===========================================================================
org.jfree.chart.LegendItem.setSeriesIndex(int):::EXIT
this.dataset == orig(this.dataset)
this.dataset.getClass().getName() == orig(this.dataset.getClass().getName())
this.seriesKey == orig(this.seriesKey)
this.seriesKey.getClass().getName() == orig(this.seriesKey.getClass().getName())
this.datasetIndex == orig(this.datasetIndex)
this.series == orig(this.series)
this.label == orig(this.label)
this.label.toString == orig(this.label.toString)
this.labelFont == orig(this.labelFont)
this.labelPaint == orig(this.labelPaint)
this.attributedLabel == orig(this.attributedLabel)
this.description == orig(this.description)
this.description.toString == orig(this.description.toString)
this.toolTipText == orig(this.toolTipText)
this.urlText == orig(this.urlText)
this.shapeVisible == orig(this.shapeVisible)
this.shape == orig(this.shape)
this.shape.getClass().getName() == orig(this.shape.getClass().getName())
this.shapeFilled == orig(this.shapeFilled)
this.fillPaint == orig(this.fillPaint)
this.fillPaint.getClass().getName() == orig(this.fillPaint.getClass().getName())
this.fillPaintTransformer == orig(this.fillPaintTransformer)
this.fillPaintTransformer.getClass().getName() == orig(this.fillPaintTransformer.getClass().getName())
this.shapeOutlineVisible == orig(this.shapeOutlineVisible)
this.outlinePaint == orig(this.outlinePaint)
this.outlinePaint.getClass().getName() == orig(this.outlinePaint.getClass().getName())
this.outlineStroke == orig(this.outlineStroke)
this.outlineStroke.getClass().getName() == orig(this.outlineStroke.getClass().getName())
this.lineVisible == orig(this.lineVisible)
this.line == orig(this.line)
this.line.getClass().getName() == orig(this.line.getClass().getName())
this.lineStroke == orig(this.lineStroke)
this.lineStroke.getClass().getName() == orig(this.lineStroke.getClass().getName())
this.linePaint == orig(this.linePaint)
this.linePaint.getClass().getName() == orig(this.linePaint.getClass().getName())
org.jfree.chart.LegendItem.UNUSED_SHAPE == orig(org.jfree.chart.LegendItem.UNUSED_SHAPE)
org.jfree.chart.LegendItem.UNUSED_SHAPE.getClass().getName() == orig(org.jfree.chart.LegendItem.UNUSED_SHAPE.getClass().getName())
org.jfree.chart.LegendItem.UNUSED_STROKE == orig(org.jfree.chart.LegendItem.UNUSED_STROKE)
org.jfree.chart.LegendItem.UNUSED_STROKE.getClass().getName() == orig(org.jfree.chart.LegendItem.UNUSED_STROKE.getClass().getName())
this.dataset has only one value
this.seriesKey has only one value
===========================================================================
org.jfree.chart.LegendItem.setSeriesKey(java.lang.Comparable):::ENTER
this.dataset has only one value
this.seriesKey == null
key has only one value
key.getClass().getName() == java.lang.String.class
===========================================================================
org.jfree.chart.LegendItem.setSeriesKey(java.lang.Comparable):::EXIT
this.dataset == orig(this.dataset)
this.dataset.getClass().getName() == orig(this.dataset.getClass().getName())
this.datasetIndex == orig(this.datasetIndex)
this.series == orig(this.series)
this.label == orig(this.label)
this.label.toString == orig(this.label.toString)
this.labelFont == orig(this.labelFont)
this.labelPaint == orig(this.labelPaint)
this.attributedLabel == orig(this.attributedLabel)
this.description == orig(this.description)
this.description.toString == orig(this.description.toString)
this.toolTipText == orig(this.toolTipText)
this.urlText == orig(this.urlText)
this.shapeVisible == orig(this.shapeVisible)
this.shape == orig(this.shape)
this.shape.getClass().getName() == orig(this.shape.getClass().getName())
this.shapeFilled == orig(this.shapeFilled)
this.fillPaint == orig(this.fillPaint)
this.fillPaint.getClass().getName() == orig(this.fillPaint.getClass().getName())
this.fillPaintTransformer == orig(this.fillPaintTransformer)
this.fillPaintTransformer.getClass().getName() == orig(this.fillPaintTransformer.getClass().getName())
this.shapeOutlineVisible == orig(this.shapeOutlineVisible)
this.outlinePaint == orig(this.outlinePaint)
this.outlinePaint.getClass().getName() == orig(this.outlinePaint.getClass().getName())
this.outlineStroke == orig(this.outlineStroke)
this.outlineStroke.getClass().getName() == orig(this.outlineStroke.getClass().getName())
this.lineVisible == orig(this.lineVisible)
this.line == orig(this.line)
this.line.getClass().getName() == orig(this.line.getClass().getName())
this.lineStroke == orig(this.lineStroke)
this.lineStroke.getClass().getName() == orig(this.lineStroke.getClass().getName())
this.linePaint == orig(this.linePaint)
this.linePaint.getClass().getName() == orig(this.linePaint.getClass().getName())
org.jfree.chart.LegendItem.UNUSED_SHAPE == orig(org.jfree.chart.LegendItem.UNUSED_SHAPE)
org.jfree.chart.LegendItem.UNUSED_SHAPE.getClass().getName() == orig(org.jfree.chart.LegendItem.UNUSED_SHAPE.getClass().getName())
org.jfree.chart.LegendItem.UNUSED_STROKE == orig(org.jfree.chart.LegendItem.UNUSED_STROKE)
org.jfree.chart.LegendItem.UNUSED_STROKE.getClass().getName() == orig(org.jfree.chart.LegendItem.UNUSED_STROKE.getClass().getName())
this.dataset has only one value
this.seriesKey has only one value
===========================================================================
org.jfree.chart.LegendItemCollection:::CLASS
===========================================================================
org.jfree.chart.LegendItemCollection:::OBJECT
this.items != null
this.items[] elements has only one value
this.items[] elements != null
this.items[].getClass().getName() elements == org.jfree.chart.LegendItem.class
this.items[].getClass().getName() one of { [], [org.jfree.chart.LegendItem] }
this.items.getClass().getName() == java.util.ArrayList.class
size(this.items[]) one of { 0, 1 }
===========================================================================
org.jfree.chart.LegendItemCollection.LegendItemCollection():::EXIT
this.items[] == []
this.items[].getClass().getName() == []
===========================================================================
org.jfree.chart.LegendItemCollection.add(org.jfree.chart.LegendItem):::ENTER
this has only one value
this.items has only one value
this.items[] == []
this.items[].getClass().getName() == []
item has only one value
item.dataset has only one value
item.dataset.getClass().getName() == org.jfree.data.category.DefaultCategoryDataset.class
item.seriesKey has only one value
item.seriesKey.getClass().getName() == java.lang.String.class
item.datasetIndex == 0
item.series == 0
item.label has only one value
item.label.toString == "S1"
item.labelFont == null
item.labelPaint == null
item.attributedLabel == null
item.description has only one value
item.description.toString == "S1"
item.toolTipText == null
item.urlText == null
item.shapeVisible == true
item.shape has only one value
item.shape.getClass().getName() == java.awt.geom.Rectangle2D$Double.class
item.shapeFilled == true
item.fillPaint has only one value
item.fillPaint.getClass().getName() == java.awt.Color.class
item.fillPaintTransformer has only one value
item.fillPaintTransformer.getClass().getName() == org.jfree.chart.util.StandardGradientPaintTransformer.class
item.shapeOutlineVisible == true
item.outlinePaint has only one value
item.outlinePaint.getClass().getName() == java.awt.Color.class
item.outlineStroke has only one value
item.outlineStroke.getClass().getName() == java.awt.BasicStroke.class
item.lineVisible == true
item.line has only one value
item.line.getClass().getName() == java.awt.geom.Line2D$Double.class
item.lineStroke has only one value
item.lineStroke.getClass().getName() == java.awt.BasicStroke.class
item.linePaint has only one value
item.linePaint.getClass().getName() == java.awt.Color.class
org.jfree.chart.LegendItem.UNUSED_SHAPE has only one value
org.jfree.chart.LegendItem.UNUSED_SHAPE.getClass().getName() == java.awt.geom.Line2D$Float.class
org.jfree.chart.LegendItem.UNUSED_STROKE has only one value
org.jfree.chart.LegendItem.UNUSED_STROKE.getClass().getName() == java.awt.BasicStroke.class
===========================================================================
org.jfree.chart.LegendItemCollection.add(org.jfree.chart.LegendItem):::EXIT
this.items == orig(this.items)
this.items.getClass().getName() == orig(this.items.getClass().getName())
item.dataset == orig(item.dataset)
item.dataset.getClass().getName() == orig(item.dataset.getClass().getName())
item.seriesKey == orig(item.seriesKey)
item.seriesKey.getClass().getName() == orig(item.seriesKey.getClass().getName())
item.datasetIndex == orig(item.datasetIndex)
item.series == orig(item.series)
item.label == orig(item.label)
item.label.toString == orig(item.label.toString)
item.labelFont == orig(item.labelFont)
item.labelPaint == orig(item.labelPaint)
item.attributedLabel == orig(item.attributedLabel)
item.description == orig(item.description)
item.description.toString == orig(item.description.toString)
item.toolTipText == orig(item.toolTipText)
item.urlText == orig(item.urlText)
item.shapeVisible == orig(item.shapeVisible)
item.shape == orig(item.shape)
item.shape.getClass().getName() == orig(item.shape.getClass().getName())
item.shapeFilled == orig(item.shapeFilled)
item.fillPaint == orig(item.fillPaint)
item.fillPaint.getClass().getName() == orig(item.fillPaint.getClass().getName())
item.fillPaintTransformer == orig(item.fillPaintTransformer)
item.fillPaintTransformer.getClass().getName() == orig(item.fillPaintTransformer.getClass().getName())
item.shapeOutlineVisible == orig(item.shapeOutlineVisible)
item.outlinePaint == orig(item.outlinePaint)
item.outlinePaint.getClass().getName() == orig(item.outlinePaint.getClass().getName())
item.outlineStroke == orig(item.outlineStroke)
item.outlineStroke.getClass().getName() == orig(item.outlineStroke.getClass().getName())
item.lineVisible == orig(item.lineVisible)
item.line == orig(item.line)
item.line.getClass().getName() == orig(item.line.getClass().getName())
item.lineStroke == orig(item.lineStroke)
item.lineStroke.getClass().getName() == orig(item.lineStroke.getClass().getName())
item.linePaint == orig(item.linePaint)
item.linePaint.getClass().getName() == orig(item.linePaint.getClass().getName())
org.jfree.chart.LegendItem.UNUSED_SHAPE == orig(org.jfree.chart.LegendItem.UNUSED_SHAPE)
org.jfree.chart.LegendItem.UNUSED_SHAPE.getClass().getName() == orig(org.jfree.chart.LegendItem.UNUSED_SHAPE.getClass().getName())
org.jfree.chart.LegendItem.UNUSED_STROKE == orig(org.jfree.chart.LegendItem.UNUSED_STROKE)
org.jfree.chart.LegendItem.UNUSED_STROKE.getClass().getName() == orig(org.jfree.chart.LegendItem.UNUSED_STROKE.getClass().getName())
size(this.items[])-1 == orig(size(this.items[]))
this.items has only one value
this.items[] contains no nulls and has only one value, of length 1
this.items[].getClass().getName() == [org.jfree.chart.LegendItem]
item.dataset has only one value
item.dataset.getClass().getName() == org.jfree.data.category.DefaultCategoryDataset.class
item.seriesKey has only one value
item.seriesKey.getClass().getName() == java.lang.String.class
item.datasetIndex == 0
item.series == 0
item.label has only one value
item.label.toString == "S1"
item.labelFont == null
item.labelPaint == null
item.attributedLabel == null
item.description has only one value
item.description.toString == "S1"
item.toolTipText == null
item.urlText == null
item.shapeVisible == true
item.shape has only one value
item.shape.getClass().getName() == java.awt.geom.Rectangle2D$Double.class
item.shapeFilled == true
item.fillPaint has only one value
item.fillPaint.getClass().getName() == java.awt.Color.class
item.fillPaintTransformer has only one value
item.fillPaintTransformer.getClass().getName() == org.jfree.chart.util.StandardGradientPaintTransformer.class
item.shapeOutlineVisible == true
item.outlinePaint has only one value
item.outlinePaint.getClass().getName() == java.awt.Color.class
item.outlineStroke has only one value
item.outlineStroke.getClass().getName() == java.awt.BasicStroke.class
item.lineVisible == true
item.line has only one value
item.line.getClass().getName() == java.awt.geom.Line2D$Double.class
item.lineStroke has only one value
item.lineStroke.getClass().getName() == java.awt.BasicStroke.class
item.linePaint has only one value
item.linePaint.getClass().getName() == java.awt.Color.class
org.jfree.chart.LegendItem.UNUSED_SHAPE has only one value
org.jfree.chart.LegendItem.UNUSED_SHAPE.getClass().getName() == java.awt.geom.Line2D$Float.class
org.jfree.chart.LegendItem.UNUSED_STROKE has only one value
org.jfree.chart.LegendItem.UNUSED_STROKE.getClass().getName() == java.awt.BasicStroke.class
size(this.items[]) == 1
===========================================================================
org.jfree.chart.LegendItemCollection.get(int):::ENTER
this has only one value
this.items has only one value
this.items[] contains no nulls and has only one value, of length 1
this.items[].getClass().getName() == [org.jfree.chart.LegendItem]
index == 0
size(this.items[]) == 1
===========================================================================
org.jfree.chart.LegendItemCollection.get(int):::EXIT
this.items == orig(this.items)
this.items[] == orig(this.items[])
this.items.getClass().getName() == orig(this.items.getClass().getName())
this.items has only one value
this.items[] contains no nulls and has only one value, of length 1
this.items[].getClass().getName() == [org.jfree.chart.LegendItem]
return has only one value
return.dataset has only one value
return.dataset.getClass().getName() == org.jfree.data.category.DefaultCategoryDataset.class
return.seriesKey has only one value
return.seriesKey.getClass().getName() == java.lang.String.class
return.datasetIndex == 0
return.series == 0
return.label has only one value
return.label.toString == "S1"
return.labelFont == null
return.labelPaint == null
return.attributedLabel == null
return.description has only one value
return.description.toString == "S1"
return.toolTipText == null
return.urlText == null
return.shapeVisible == true
return.shape has only one value
return.shape.getClass().getName() == java.awt.geom.Rectangle2D$Double.class
return.shapeFilled == true
return.fillPaint has only one value
return.fillPaint.getClass().getName() == java.awt.Color.class
return.fillPaintTransformer has only one value
return.fillPaintTransformer.getClass().getName() == org.jfree.chart.util.StandardGradientPaintTransformer.class
return.shapeOutlineVisible == true
return.outlinePaint has only one value
return.outlinePaint.getClass().getName() == java.awt.Color.class
return.outlineStroke has only one value
return.outlineStroke.getClass().getName() == java.awt.BasicStroke.class
return.lineVisible == true
return.line has only one value
return.line.getClass().getName() == java.awt.geom.Line2D$Double.class
return.lineStroke has only one value
return.lineStroke.getClass().getName() == java.awt.BasicStroke.class
return.linePaint has only one value
return.linePaint.getClass().getName() == java.awt.Color.class
org.jfree.chart.LegendItem.UNUSED_SHAPE has only one value
org.jfree.chart.LegendItem.UNUSED_SHAPE.getClass().getName() == java.awt.geom.Line2D$Float.class
org.jfree.chart.LegendItem.UNUSED_STROKE has only one value
org.jfree.chart.LegendItem.UNUSED_STROKE.getClass().getName() == java.awt.BasicStroke.class
size(this.items[]) == 1
===========================================================================
org.jfree.chart.LegendItemCollection.getItemCount():::ENTER
===========================================================================
org.jfree.chart.LegendItemCollection.getItemCount():::EXIT
this.items == orig(this.items)
this.items[] == orig(this.items[])
this.items.getClass().getName() == orig(this.items.getClass().getName())
return one of { 0, 1 }
===========================================================================
org.jfree.chart.axis.AxisLocation:::CLASS
===========================================================================
org.jfree.chart.axis.AxisLocation:::OBJECT
===========================================================================
org.jfree.chart.axis.AxisLocation.AxisLocation(java.lang.String):::ENTER
===========================================================================
org.jfree.chart.axis.AxisLocation.AxisLocation(java.lang.String):::EXIT
name.toString == orig(name.toString)
===========================================================================
org.jfree.chart.axis.CategoryAnchor:::CLASS
===========================================================================
org.jfree.chart.axis.CategoryAnchor:::OBJECT
this.name.toString one of { "CategoryAnchor.END", "CategoryAnchor.MIDDLE", "CategoryAnchor.START" }
===========================================================================
org.jfree.chart.axis.CategoryAnchor.CategoryAnchor(java.lang.String):::ENTER
name.toString one of { "CategoryAnchor.END", "CategoryAnchor.MIDDLE", "CategoryAnchor.START" }
===========================================================================
org.jfree.chart.axis.CategoryAnchor.CategoryAnchor(java.lang.String):::EXIT
name.toString == orig(name.toString)
name.toString one of { "CategoryAnchor.END", "CategoryAnchor.MIDDLE", "CategoryAnchor.START" }
===========================================================================
org.jfree.chart.event.ChartChangeEvent:::OBJECT
this.type != null
org.jfree.chart.event.ChartChangeEventType.GENERAL has only one value
org.jfree.chart.event.ChartChangeEventType.GENERAL != null
org.jfree.chart.event.ChartChangeEventType.NEW_DATASET has only one value
org.jfree.chart.event.ChartChangeEventType.NEW_DATASET != null
org.jfree.chart.event.ChartChangeEventType.DATASET_UPDATED has only one value
org.jfree.chart.event.ChartChangeEventType.DATASET_UPDATED != null
org.jfree.chart.event.ChartChangeEventType.GENERAL.name has only one value
org.jfree.chart.event.ChartChangeEventType.GENERAL.name != null
org.jfree.chart.event.ChartChangeEventType.GENERAL.name.toString == "ChartChangeEventType.GENERAL"
org.jfree.chart.event.ChartChangeEventType.NEW_DATASET.name has only one value
org.jfree.chart.event.ChartChangeEventType.NEW_DATASET.name != null
org.jfree.chart.event.ChartChangeEventType.NEW_DATASET.name.toString == "ChartChangeEventType.NEW_DATASET"
org.jfree.chart.event.ChartChangeEventType.DATASET_UPDATED.name has only one value
org.jfree.chart.event.ChartChangeEventType.DATASET_UPDATED.name != null
org.jfree.chart.event.ChartChangeEventType.DATASET_UPDATED.name.toString == "ChartChangeEventType.DATASET_UPDATED"
this.type.name != null
this.type.name.toString one of { "ChartChangeEventType.DATASET_UPDATED", "ChartChangeEventType.GENERAL" }
this.chart == null
org.jfree.chart.util.RectangleInsets.ZERO_INSETS has only one value
org.jfree.chart.util.RectangleInsets.ZERO_INSETS != null
org.jfree.chart.plot.Plot.ZERO has only one value
org.jfree.chart.plot.Plot.ZERO != null
org.jfree.chart.plot.Plot.ZERO.getClass().getName() == java.lang.Integer.class
org.jfree.chart.plot.Plot.DEFAULT_INSETS has only one value
org.jfree.chart.plot.Plot.DEFAULT_INSETS != null
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE has only one value
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE != null
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName() == java.awt.BasicStroke.class
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT has only one value
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT != null
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() == java.awt.Color.class
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT has only one value
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT != null
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName() == java.awt.Color.class
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX has only one value
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX != null
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName() == java.awt.geom.Rectangle2D$Double.class
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE has only one value
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE != null
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName() == java.awt.geom.Ellipse2D$Double.class
org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener == null
===========================================================================
org.jfree.chart.event.ChartChangeEvent.ChartChangeEvent(java.lang.Object):::ENTER
source has only one value
source.getClass().getName() == org.jfree.chart.plot.CategoryPlot.class
===========================================================================
org.jfree.chart.event.ChartChangeEvent.ChartChangeEvent(java.lang.Object):::EXIT
this.type has only one value
this.type.name has only one value
this.type.name.toString == "ChartChangeEventType.GENERAL"
===========================================================================
org.jfree.chart.event.ChartChangeEvent.ChartChangeEvent(java.lang.Object, org.jfree.chart.JFreeChart, org.jfree.chart.event.ChartChangeEventType):::ENTER
source has only one value
source.getClass().getName() == org.jfree.chart.plot.CategoryPlot.class
chart == null
org.jfree.chart.util.RectangleInsets.ZERO_INSETS has only one value
org.jfree.chart.plot.Plot.ZERO has only one value
org.jfree.chart.plot.Plot.ZERO.getClass().getName() == java.lang.Integer.class
org.jfree.chart.plot.Plot.DEFAULT_INSETS has only one value
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE has only one value
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName() == java.awt.BasicStroke.class
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT has only one value
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() == java.awt.Color.class
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT has only one value
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName() == java.awt.Color.class
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX has only one value
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName() == java.awt.geom.Rectangle2D$Double.class
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE has only one value
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName() == java.awt.geom.Ellipse2D$Double.class
org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener == null
type has only one value
org.jfree.chart.event.ChartChangeEventType.GENERAL has only one value
org.jfree.chart.event.ChartChangeEventType.NEW_DATASET has only one value
org.jfree.chart.event.ChartChangeEventType.DATASET_UPDATED has only one value
org.jfree.chart.event.ChartChangeEventType.GENERAL.name has only one value
org.jfree.chart.event.ChartChangeEventType.GENERAL.name.toString == "ChartChangeEventType.GENERAL"
org.jfree.chart.event.ChartChangeEventType.NEW_DATASET.name has only one value
org.jfree.chart.event.ChartChangeEventType.NEW_DATASET.name.toString == "ChartChangeEventType.NEW_DATASET"
org.jfree.chart.event.ChartChangeEventType.DATASET_UPDATED.name has only one value
org.jfree.chart.event.ChartChangeEventType.DATASET_UPDATED.name.toString == "ChartChangeEventType.DATASET_UPDATED"
type.name has only one value
type.name.toString == "ChartChangeEventType.GENERAL"
===========================================================================
org.jfree.chart.event.ChartChangeEvent.ChartChangeEvent(java.lang.Object, org.jfree.chart.JFreeChart, org.jfree.chart.event.ChartChangeEventType):::EXIT
org.jfree.chart.event.ChartChangeEventType.GENERAL == orig(org.jfree.chart.event.ChartChangeEventType.GENERAL)
org.jfree.chart.event.ChartChangeEventType.NEW_DATASET == orig(org.jfree.chart.event.ChartChangeEventType.NEW_DATASET)
org.jfree.chart.event.ChartChangeEventType.DATASET_UPDATED == orig(org.jfree.chart.event.ChartChangeEventType.DATASET_UPDATED)
org.jfree.chart.event.ChartChangeEventType.GENERAL.name == orig(org.jfree.chart.event.ChartChangeEventType.GENERAL.name)
org.jfree.chart.event.ChartChangeEventType.GENERAL.name.toString == orig(org.jfree.chart.event.ChartChangeEventType.GENERAL.name.toString)
org.jfree.chart.event.ChartChangeEventType.NEW_DATASET.name == orig(org.jfree.chart.event.ChartChangeEventType.NEW_DATASET.name)
org.jfree.chart.event.ChartChangeEventType.NEW_DATASET.name.toString == orig(org.jfree.chart.event.ChartChangeEventType.NEW_DATASET.name.toString)
org.jfree.chart.event.ChartChangeEventType.DATASET_UPDATED.name == orig(org.jfree.chart.event.ChartChangeEventType.DATASET_UPDATED.name)
org.jfree.chart.event.ChartChangeEventType.DATASET_UPDATED.name.toString == orig(org.jfree.chart.event.ChartChangeEventType.DATASET_UPDATED.name.toString)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS)
org.jfree.chart.plot.Plot.ZERO == orig(org.jfree.chart.plot.Plot.ZERO)
org.jfree.chart.plot.Plot.ZERO.getClass().getName() == orig(org.jfree.chart.plot.Plot.ZERO.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_INSETS == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName())
org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener == orig(org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener)
type.name == orig(type.name)
type.name.toString == orig(type.name.toString)
this.type has only one value
this.type.name has only one value
this.type.name.toString == "ChartChangeEventType.GENERAL"
type.name has only one value
type.name.toString == "ChartChangeEventType.GENERAL"
===========================================================================
org.jfree.chart.event.ChartChangeEvent.setType(org.jfree.chart.event.ChartChangeEventType):::ENTER
this.type has only one value
this.type.name has only one value
this.type.name.toString == "ChartChangeEventType.GENERAL"
type has only one value
type.name has only one value
type.name.toString == "ChartChangeEventType.DATASET_UPDATED"
===========================================================================
org.jfree.chart.event.ChartChangeEvent.setType(org.jfree.chart.event.ChartChangeEventType):::EXIT
org.jfree.chart.event.ChartChangeEventType.GENERAL == orig(org.jfree.chart.event.ChartChangeEventType.GENERAL)
org.jfree.chart.event.ChartChangeEventType.NEW_DATASET == orig(org.jfree.chart.event.ChartChangeEventType.NEW_DATASET)
org.jfree.chart.event.ChartChangeEventType.DATASET_UPDATED == orig(org.jfree.chart.event.ChartChangeEventType.DATASET_UPDATED)
org.jfree.chart.event.ChartChangeEventType.GENERAL.name == orig(org.jfree.chart.event.ChartChangeEventType.GENERAL.name)
org.jfree.chart.event.ChartChangeEventType.GENERAL.name.toString == orig(org.jfree.chart.event.ChartChangeEventType.GENERAL.name.toString)
org.jfree.chart.event.ChartChangeEventType.NEW_DATASET.name == orig(org.jfree.chart.event.ChartChangeEventType.NEW_DATASET.name)
org.jfree.chart.event.ChartChangeEventType.NEW_DATASET.name.toString == orig(org.jfree.chart.event.ChartChangeEventType.NEW_DATASET.name.toString)
org.jfree.chart.event.ChartChangeEventType.DATASET_UPDATED.name == orig(org.jfree.chart.event.ChartChangeEventType.DATASET_UPDATED.name)
org.jfree.chart.event.ChartChangeEventType.DATASET_UPDATED.name.toString == orig(org.jfree.chart.event.ChartChangeEventType.DATASET_UPDATED.name.toString)
this.chart == orig(this.chart)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS)
org.jfree.chart.plot.Plot.ZERO == orig(org.jfree.chart.plot.Plot.ZERO)
org.jfree.chart.plot.Plot.ZERO.getClass().getName() == orig(org.jfree.chart.plot.Plot.ZERO.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_INSETS == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName())
org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener == orig(org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener)
type.name == orig(type.name)
type.name.toString == orig(type.name.toString)
this.type has only one value
this.type.name has only one value
this.type.name.toString == "ChartChangeEventType.DATASET_UPDATED"
type.name has only one value
type.name.toString == "ChartChangeEventType.DATASET_UPDATED"
===========================================================================
org.jfree.chart.event.ChartChangeEventType:::CLASS
===========================================================================
org.jfree.chart.event.ChartChangeEventType:::OBJECT
this.name.toString one of { "ChartChangeEventType.DATASET_UPDATED", "ChartChangeEventType.GENERAL", "ChartChangeEventType.NEW_DATASET" }
===========================================================================
org.jfree.chart.event.ChartChangeEventType.ChartChangeEventType(java.lang.String):::ENTER
name.toString one of { "ChartChangeEventType.DATASET_UPDATED", "ChartChangeEventType.GENERAL", "ChartChangeEventType.NEW_DATASET" }
===========================================================================
org.jfree.chart.event.ChartChangeEventType.ChartChangeEventType(java.lang.String):::EXIT
name.toString == orig(name.toString)
name.toString one of { "ChartChangeEventType.DATASET_UPDATED", "ChartChangeEventType.GENERAL", "ChartChangeEventType.NEW_DATASET" }
===========================================================================
org.jfree.chart.event.DatasetChangeInfo:::OBJECT
===========================================================================
org.jfree.chart.event.DatasetChangeInfo.DatasetChangeInfo():::EXIT
===========================================================================
org.jfree.chart.event.PlotChangeEvent:::OBJECT
this.plot has only one value
this.plot.getClass().getName() == org.jfree.chart.plot.CategoryPlot.class
org.jfree.chart.plot.Plot.ZERO has only one value
org.jfree.chart.plot.Plot.ZERO.getClass().getName() == java.lang.Integer.class
org.jfree.chart.plot.Plot.DEFAULT_INSETS has only one value
org.jfree.chart.util.RectangleInsets.ZERO_INSETS has only one value
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType has only one value
org.jfree.chart.plot.Plot.DEFAULT_INSETS.top == 4.0
org.jfree.chart.plot.Plot.DEFAULT_INSETS.left == 8.0
org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom == 4.0
org.jfree.chart.plot.Plot.DEFAULT_INSETS.right == 8.0
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE has only one value
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName() == java.awt.BasicStroke.class
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT has only one value
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() == java.awt.Color.class
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT has only one value
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName() == java.awt.Color.class
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX has only one value
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName() == java.awt.geom.Rectangle2D$Double.class
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE has only one value
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName() == java.awt.geom.Ellipse2D$Double.class
this.plot.parent == null
org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener == null
this.plot.datasetGroup == null
this.plot.noDataMessage == null
this.plot.noDataMessageFont has only one value
this.plot.noDataMessagePaint has only one value
this.plot.noDataMessagePaint.getClass().getName() == java.awt.Color.class
this.plot.insets has only one value
this.plot.insets.unitType has only one value
this.plot.insets.top == 4.0
this.plot.insets.left == 8.0
this.plot.insets.bottom == 4.0
this.plot.insets.right == 8.0
this.plot.outlineVisible == true
this.plot.outlineStroke has only one value
this.plot.outlineStroke.getClass().getName() == java.awt.BasicStroke.class
this.plot.outlinePaint has only one value
this.plot.outlinePaint.getClass().getName() == java.awt.Color.class
this.plot.backgroundPaint has only one value
this.plot.backgroundPaint.getClass().getName() == java.awt.Color.class
this.plot.backgroundImage == null
this.plot.backgroundImageAlignment == 15
this.plot.backgroundImageAlpha == 0.5
this.plot.foregroundAlpha == 1.0
this.plot.backgroundAlpha == 1.0
this.plot.drawingSupplier has only one value
this.plot.drawingSupplier.getClass().getName() == org.jfree.chart.plot.DefaultDrawingSupplier.class
this.plot.listenerList has only one value
this.plot.notify == true
this.type has only one value
org.jfree.chart.event.ChartChangeEventType.GENERAL has only one value
org.jfree.chart.event.ChartChangeEventType.NEW_DATASET has only one value
org.jfree.chart.event.ChartChangeEventType.DATASET_UPDATED has only one value
org.jfree.chart.event.ChartChangeEventType.GENERAL.name has only one value
org.jfree.chart.event.ChartChangeEventType.GENERAL.name.toString == "ChartChangeEventType.GENERAL"
org.jfree.chart.event.ChartChangeEventType.NEW_DATASET.name has only one value
org.jfree.chart.event.ChartChangeEventType.NEW_DATASET.name.toString == "ChartChangeEventType.NEW_DATASET"
org.jfree.chart.event.ChartChangeEventType.DATASET_UPDATED.name has only one value
org.jfree.chart.event.ChartChangeEventType.DATASET_UPDATED.name.toString == "ChartChangeEventType.DATASET_UPDATED"
this.type.name has only one value
this.type.name.toString == "ChartChangeEventType.GENERAL"
this.chart == null
===========================================================================
org.jfree.chart.event.PlotChangeEvent.PlotChangeEvent(org.jfree.chart.plot.Plot):::ENTER
plot has only one value
plot.getClass().getName() == org.jfree.chart.plot.CategoryPlot.class
org.jfree.chart.plot.Plot.ZERO has only one value
org.jfree.chart.plot.Plot.ZERO.getClass().getName() == java.lang.Integer.class
org.jfree.chart.plot.Plot.DEFAULT_INSETS has only one value
org.jfree.chart.util.RectangleInsets.ZERO_INSETS has only one value
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType has only one value
org.jfree.chart.plot.Plot.DEFAULT_INSETS.top == 4.0
org.jfree.chart.plot.Plot.DEFAULT_INSETS.left == 8.0
org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom == 4.0
org.jfree.chart.plot.Plot.DEFAULT_INSETS.right == 8.0
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE has only one value
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName() == java.awt.BasicStroke.class
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT has only one value
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() == java.awt.Color.class
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT has only one value
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName() == java.awt.Color.class
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX has only one value
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName() == java.awt.geom.Rectangle2D$Double.class
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE has only one value
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName() == java.awt.geom.Ellipse2D$Double.class
plot.parent == null
org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener == null
plot.datasetGroup == null
plot.noDataMessage == null
plot.noDataMessageFont has only one value
plot.noDataMessagePaint has only one value
plot.noDataMessagePaint.getClass().getName() == java.awt.Color.class
plot.insets has only one value
plot.insets.unitType has only one value
plot.insets.top == 4.0
plot.insets.left == 8.0
plot.insets.bottom == 4.0
plot.insets.right == 8.0
plot.outlineVisible == true
plot.outlineStroke has only one value
plot.outlineStroke.getClass().getName() == java.awt.BasicStroke.class
plot.outlinePaint has only one value
plot.outlinePaint.getClass().getName() == java.awt.Color.class
plot.backgroundPaint has only one value
plot.backgroundPaint.getClass().getName() == java.awt.Color.class
plot.backgroundImage == null
plot.backgroundImageAlignment == 15
plot.backgroundImageAlpha == 0.5
plot.foregroundAlpha == 1.0
plot.backgroundAlpha == 1.0
plot.drawingSupplier has only one value
plot.drawingSupplier.getClass().getName() == org.jfree.chart.plot.DefaultDrawingSupplier.class
plot.listenerList has only one value
plot.notify == true
===========================================================================
org.jfree.chart.event.PlotChangeEvent.PlotChangeEvent(org.jfree.chart.plot.Plot):::EXIT
org.jfree.chart.plot.Plot.ZERO == orig(org.jfree.chart.plot.Plot.ZERO)
org.jfree.chart.plot.Plot.ZERO.getClass().getName() == orig(org.jfree.chart.plot.Plot.ZERO.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_INSETS == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.top == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.top)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.left == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.left)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.right == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.right)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName())
org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener == orig(org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener)
plot.parent == orig(plot.parent)
plot.datasetGroup == orig(plot.datasetGroup)
plot.noDataMessage == orig(plot.noDataMessage)
plot.noDataMessageFont == orig(plot.noDataMessageFont)
plot.noDataMessagePaint == orig(plot.noDataMessagePaint)
plot.noDataMessagePaint.getClass().getName() == orig(plot.noDataMessagePaint.getClass().getName())
plot.insets == orig(plot.insets)
plot.insets.unitType == orig(plot.insets.unitType)
plot.insets.top == orig(plot.insets.top)
plot.insets.left == orig(plot.insets.left)
plot.insets.bottom == orig(plot.insets.bottom)
plot.insets.right == orig(plot.insets.right)
plot.outlineVisible == orig(plot.outlineVisible)
plot.outlineStroke == orig(plot.outlineStroke)
plot.outlineStroke.getClass().getName() == orig(plot.outlineStroke.getClass().getName())
plot.outlinePaint == orig(plot.outlinePaint)
plot.outlinePaint.getClass().getName() == orig(plot.outlinePaint.getClass().getName())
plot.backgroundPaint == orig(plot.backgroundPaint)
plot.backgroundPaint.getClass().getName() == orig(plot.backgroundPaint.getClass().getName())
plot.backgroundImage == orig(plot.backgroundImage)
plot.backgroundImageAlignment == orig(plot.backgroundImageAlignment)
plot.backgroundImageAlpha == orig(plot.backgroundImageAlpha)
plot.foregroundAlpha == orig(plot.foregroundAlpha)
plot.backgroundAlpha == orig(plot.backgroundAlpha)
plot.drawingSupplier == orig(plot.drawingSupplier)
plot.drawingSupplier.getClass().getName() == orig(plot.drawingSupplier.getClass().getName())
plot.listenerList == orig(plot.listenerList)
plot.notify == orig(plot.notify)
plot.parent == null
plot.datasetGroup == null
plot.noDataMessage == null
plot.noDataMessageFont has only one value
plot.noDataMessagePaint has only one value
plot.noDataMessagePaint.getClass().getName() == java.awt.Color.class
plot.insets has only one value
plot.insets.unitType has only one value
plot.insets.top == 4.0
plot.insets.left == 8.0
plot.insets.bottom == 4.0
plot.insets.right == 8.0
plot.outlineVisible == true
plot.outlineStroke has only one value
plot.outlineStroke.getClass().getName() == java.awt.BasicStroke.class
plot.outlinePaint has only one value
plot.outlinePaint.getClass().getName() == java.awt.Color.class
plot.backgroundPaint has only one value
plot.backgroundPaint.getClass().getName() == java.awt.Color.class
plot.backgroundImage == null
plot.backgroundImageAlignment == 15
plot.backgroundImageAlpha == 0.5
plot.foregroundAlpha == 1.0
plot.backgroundAlpha == 1.0
plot.drawingSupplier has only one value
plot.drawingSupplier.getClass().getName() == org.jfree.chart.plot.DefaultDrawingSupplier.class
plot.listenerList has only one value
plot.notify == true
===========================================================================
org.jfree.chart.labels.ItemLabelAnchor:::CLASS
===========================================================================
org.jfree.chart.labels.ItemLabelAnchor:::OBJECT
this.name != null
===========================================================================
org.jfree.chart.labels.ItemLabelAnchor.ItemLabelAnchor(java.lang.String):::ENTER
name != null
===========================================================================
org.jfree.chart.labels.ItemLabelAnchor.ItemLabelAnchor(java.lang.String):::EXIT
name.toString == orig(name.toString)
===========================================================================
org.jfree.chart.labels.ItemLabelPosition:::CLASS
===========================================================================
org.jfree.chart.labels.ItemLabelPosition:::OBJECT
org.jfree.chart.labels.ItemLabelAnchor.CENTER has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE1 has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE2 has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE3 has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE4 has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE5 has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE6 has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE7 has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE8 has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE9 has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE10 has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE11 has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE12 has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1 has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2 has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3 has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4 has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5 has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6 has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7 has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8 has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9 has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10 has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11 has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12 has only one value
org.jfree.chart.labels.ItemLabelAnchor.CENTER.name has only one value
org.jfree.chart.labels.ItemLabelAnchor.CENTER.name.toString == "ItemLabelAnchor.CENTER"
org.jfree.chart.labels.ItemLabelAnchor.INSIDE1.name has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE1.name.toString == "ItemLabelAnchor.INSIDE1"
org.jfree.chart.labels.ItemLabelAnchor.INSIDE2.name has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE2.name.toString == "ItemLabelAnchor.INSIDE2"
org.jfree.chart.labels.ItemLabelAnchor.INSIDE3.name has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE3.name.toString == "ItemLabelAnchor.INSIDE3"
org.jfree.chart.labels.ItemLabelAnchor.INSIDE4.name has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE4.name.toString == "ItemLabelAnchor.INSIDE4"
org.jfree.chart.labels.ItemLabelAnchor.INSIDE5.name has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE5.name.toString == "ItemLabelAnchor.INSIDE5"
org.jfree.chart.labels.ItemLabelAnchor.INSIDE6.name has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE6.name.toString == "ItemLabelAnchor.INSIDE6"
org.jfree.chart.labels.ItemLabelAnchor.INSIDE7.name has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE7.name.toString == "ItemLabelAnchor.INSIDE7"
org.jfree.chart.labels.ItemLabelAnchor.INSIDE8.name has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE8.name.toString == "ItemLabelAnchor.INSIDE8"
org.jfree.chart.labels.ItemLabelAnchor.INSIDE9.name has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE9.name.toString == "ItemLabelAnchor.INSIDE9"
org.jfree.chart.labels.ItemLabelAnchor.INSIDE10.name has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE10.name.toString == "ItemLabelAnchor.INSIDE10"
org.jfree.chart.labels.ItemLabelAnchor.INSIDE11.name has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE11.name.toString == "ItemLabelAnchor.INSIDE11"
org.jfree.chart.labels.ItemLabelAnchor.INSIDE12.name has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE12.name.toString == "ItemLabelAnchor.INSIDE12"
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1.name has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1.name.toString == "ItemLabelAnchor.OUTSIDE1"
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2.name has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2.name.toString == "ItemLabelAnchor.OUTSIDE2"
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3.name has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3.name.toString == "ItemLabelAnchor.OUTSIDE3"
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4.name has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4.name.toString == "ItemLabelAnchor.OUTSIDE4"
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5.name has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5.name.toString == "ItemLabelAnchor.OUTSIDE5"
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6.name has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6.name.toString == "ItemLabelAnchor.OUTSIDE6"
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7.name has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7.name.toString == "ItemLabelAnchor.OUTSIDE7"
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8.name has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8.name.toString == "ItemLabelAnchor.OUTSIDE8"
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9.name has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9.name.toString == "ItemLabelAnchor.OUTSIDE9"
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10.name has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10.name.toString == "ItemLabelAnchor.OUTSIDE10"
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11.name has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11.name.toString == "ItemLabelAnchor.OUTSIDE11"
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12.name has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12.name.toString == "ItemLabelAnchor.OUTSIDE12"
this.itemLabelAnchor.name.toString one of { "ItemLabelAnchor.OUTSIDE12", "ItemLabelAnchor.OUTSIDE6" }
org.jfree.chart.text.TextAnchor.TOP_LEFT has only one value
org.jfree.chart.text.TextAnchor.TOP_CENTER has only one value
org.jfree.chart.text.TextAnchor.TOP_RIGHT has only one value
org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT has only one value
org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER has only one value
org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT has only one value
org.jfree.chart.text.TextAnchor.CENTER_LEFT has only one value
org.jfree.chart.text.TextAnchor.CENTER has only one value
org.jfree.chart.text.TextAnchor.CENTER_RIGHT has only one value
org.jfree.chart.text.TextAnchor.BASELINE_LEFT has only one value
org.jfree.chart.text.TextAnchor.BASELINE_CENTER has only one value
org.jfree.chart.text.TextAnchor.BASELINE_RIGHT has only one value
org.jfree.chart.text.TextAnchor.BOTTOM_LEFT has only one value
org.jfree.chart.text.TextAnchor.BOTTOM_CENTER has only one value
org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT has only one value
org.jfree.chart.text.TextAnchor.TOP_LEFT.name has only one value
org.jfree.chart.text.TextAnchor.TOP_LEFT.name.toString == "TextAnchor.TOP_LEFT"
org.jfree.chart.text.TextAnchor.TOP_CENTER.name has only one value
org.jfree.chart.text.TextAnchor.TOP_CENTER.name.toString == "TextAnchor.TOP_CENTER"
org.jfree.chart.text.TextAnchor.TOP_RIGHT.name has only one value
org.jfree.chart.text.TextAnchor.TOP_RIGHT.name.toString == "TextAnchor.TOP_RIGHT"
org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT.name has only one value
org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT.name.toString == "TextAnchor.HALF_ASCENT_LEFT"
org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER.name has only one value
org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER.name.toString == "TextAnchor.HALF_ASCENT_CENTER"
org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT.name has only one value
org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT.name.toString == "TextAnchor.HALF_ASCENT_RIGHT"
org.jfree.chart.text.TextAnchor.CENTER_LEFT.name has only one value
org.jfree.chart.text.TextAnchor.CENTER_LEFT.name.toString == "TextAnchor.CENTER_LEFT"
org.jfree.chart.text.TextAnchor.CENTER.name has only one value
org.jfree.chart.text.TextAnchor.CENTER.name.toString == "TextAnchor.CENTER"
org.jfree.chart.text.TextAnchor.CENTER_RIGHT.name has only one value
org.jfree.chart.text.TextAnchor.CENTER_RIGHT.name.toString == "TextAnchor.CENTER_RIGHT"
org.jfree.chart.text.TextAnchor.BASELINE_LEFT.name has only one value
org.jfree.chart.text.TextAnchor.BASELINE_LEFT.name.toString == "TextAnchor.BASELINE_LEFT"
org.jfree.chart.text.TextAnchor.BASELINE_CENTER.name has only one value
org.jfree.chart.text.TextAnchor.BASELINE_CENTER.name.toString == "TextAnchor.BASELINE_CENTER"
org.jfree.chart.text.TextAnchor.BASELINE_RIGHT.name has only one value
org.jfree.chart.text.TextAnchor.BASELINE_RIGHT.name.toString == "TextAnchor.BASELINE_RIGHT"
org.jfree.chart.text.TextAnchor.BOTTOM_LEFT.name has only one value
org.jfree.chart.text.TextAnchor.BOTTOM_LEFT.name.toString == "TextAnchor.BOTTOM_LEFT"
org.jfree.chart.text.TextAnchor.BOTTOM_CENTER.name has only one value
org.jfree.chart.text.TextAnchor.BOTTOM_CENTER.name.toString == "TextAnchor.BOTTOM_CENTER"
org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT.name has only one value
org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT.name.toString == "TextAnchor.BOTTOM_RIGHT"
this.textAnchor.name.toString one of { "TextAnchor.BOTTOM_CENTER", "TextAnchor.TOP_CENTER" }
this.rotationAnchor has only one value
this.rotationAnchor.name has only one value
this.rotationAnchor.name.toString == "TextAnchor.CENTER"
this.angle == 0.0
===========================================================================
org.jfree.chart.labels.ItemLabelPosition.ItemLabelPosition(org.jfree.chart.labels.ItemLabelAnchor, org.jfree.chart.text.TextAnchor):::ENTER
org.jfree.chart.labels.ItemLabelAnchor.CENTER has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE1 has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE2 has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE3 has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE4 has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE5 has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE6 has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE7 has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE8 has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE9 has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE10 has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE11 has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE12 has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1 has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2 has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3 has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4 has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5 has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6 has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7 has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8 has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9 has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10 has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11 has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12 has only one value
org.jfree.chart.labels.ItemLabelAnchor.CENTER.name has only one value
org.jfree.chart.labels.ItemLabelAnchor.CENTER.name.toString == "ItemLabelAnchor.CENTER"
org.jfree.chart.labels.ItemLabelAnchor.INSIDE1.name has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE1.name.toString == "ItemLabelAnchor.INSIDE1"
org.jfree.chart.labels.ItemLabelAnchor.INSIDE2.name has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE2.name.toString == "ItemLabelAnchor.INSIDE2"
org.jfree.chart.labels.ItemLabelAnchor.INSIDE3.name has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE3.name.toString == "ItemLabelAnchor.INSIDE3"
org.jfree.chart.labels.ItemLabelAnchor.INSIDE4.name has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE4.name.toString == "ItemLabelAnchor.INSIDE4"
org.jfree.chart.labels.ItemLabelAnchor.INSIDE5.name has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE5.name.toString == "ItemLabelAnchor.INSIDE5"
org.jfree.chart.labels.ItemLabelAnchor.INSIDE6.name has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE6.name.toString == "ItemLabelAnchor.INSIDE6"
org.jfree.chart.labels.ItemLabelAnchor.INSIDE7.name has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE7.name.toString == "ItemLabelAnchor.INSIDE7"
org.jfree.chart.labels.ItemLabelAnchor.INSIDE8.name has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE8.name.toString == "ItemLabelAnchor.INSIDE8"
org.jfree.chart.labels.ItemLabelAnchor.INSIDE9.name has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE9.name.toString == "ItemLabelAnchor.INSIDE9"
org.jfree.chart.labels.ItemLabelAnchor.INSIDE10.name has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE10.name.toString == "ItemLabelAnchor.INSIDE10"
org.jfree.chart.labels.ItemLabelAnchor.INSIDE11.name has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE11.name.toString == "ItemLabelAnchor.INSIDE11"
org.jfree.chart.labels.ItemLabelAnchor.INSIDE12.name has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE12.name.toString == "ItemLabelAnchor.INSIDE12"
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1.name has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1.name.toString == "ItemLabelAnchor.OUTSIDE1"
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2.name has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2.name.toString == "ItemLabelAnchor.OUTSIDE2"
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3.name has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3.name.toString == "ItemLabelAnchor.OUTSIDE3"
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4.name has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4.name.toString == "ItemLabelAnchor.OUTSIDE4"
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5.name has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5.name.toString == "ItemLabelAnchor.OUTSIDE5"
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6.name has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6.name.toString == "ItemLabelAnchor.OUTSIDE6"
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7.name has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7.name.toString == "ItemLabelAnchor.OUTSIDE7"
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8.name has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8.name.toString == "ItemLabelAnchor.OUTSIDE8"
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9.name has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9.name.toString == "ItemLabelAnchor.OUTSIDE9"
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10.name has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10.name.toString == "ItemLabelAnchor.OUTSIDE10"
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11.name has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11.name.toString == "ItemLabelAnchor.OUTSIDE11"
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12.name has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12.name.toString == "ItemLabelAnchor.OUTSIDE12"
itemLabelAnchor.name.toString one of { "ItemLabelAnchor.OUTSIDE12", "ItemLabelAnchor.OUTSIDE6" }
org.jfree.chart.text.TextAnchor.TOP_LEFT has only one value
org.jfree.chart.text.TextAnchor.TOP_CENTER has only one value
org.jfree.chart.text.TextAnchor.TOP_RIGHT has only one value
org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT has only one value
org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER has only one value
org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT has only one value
org.jfree.chart.text.TextAnchor.CENTER_LEFT has only one value
org.jfree.chart.text.TextAnchor.CENTER has only one value
org.jfree.chart.text.TextAnchor.CENTER_RIGHT has only one value
org.jfree.chart.text.TextAnchor.BASELINE_LEFT has only one value
org.jfree.chart.text.TextAnchor.BASELINE_CENTER has only one value
org.jfree.chart.text.TextAnchor.BASELINE_RIGHT has only one value
org.jfree.chart.text.TextAnchor.BOTTOM_LEFT has only one value
org.jfree.chart.text.TextAnchor.BOTTOM_CENTER has only one value
org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT has only one value
org.jfree.chart.text.TextAnchor.TOP_LEFT.name has only one value
org.jfree.chart.text.TextAnchor.TOP_LEFT.name.toString == "TextAnchor.TOP_LEFT"
org.jfree.chart.text.TextAnchor.TOP_CENTER.name has only one value
org.jfree.chart.text.TextAnchor.TOP_CENTER.name.toString == "TextAnchor.TOP_CENTER"
org.jfree.chart.text.TextAnchor.TOP_RIGHT.name has only one value
org.jfree.chart.text.TextAnchor.TOP_RIGHT.name.toString == "TextAnchor.TOP_RIGHT"
org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT.name has only one value
org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT.name.toString == "TextAnchor.HALF_ASCENT_LEFT"
org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER.name has only one value
org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER.name.toString == "TextAnchor.HALF_ASCENT_CENTER"
org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT.name has only one value
org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT.name.toString == "TextAnchor.HALF_ASCENT_RIGHT"
org.jfree.chart.text.TextAnchor.CENTER_LEFT.name has only one value
org.jfree.chart.text.TextAnchor.CENTER_LEFT.name.toString == "TextAnchor.CENTER_LEFT"
org.jfree.chart.text.TextAnchor.CENTER.name has only one value
org.jfree.chart.text.TextAnchor.CENTER.name.toString == "TextAnchor.CENTER"
org.jfree.chart.text.TextAnchor.CENTER_RIGHT.name has only one value
org.jfree.chart.text.TextAnchor.CENTER_RIGHT.name.toString == "TextAnchor.CENTER_RIGHT"
org.jfree.chart.text.TextAnchor.BASELINE_LEFT.name has only one value
org.jfree.chart.text.TextAnchor.BASELINE_LEFT.name.toString == "TextAnchor.BASELINE_LEFT"
org.jfree.chart.text.TextAnchor.BASELINE_CENTER.name has only one value
org.jfree.chart.text.TextAnchor.BASELINE_CENTER.name.toString == "TextAnchor.BASELINE_CENTER"
org.jfree.chart.text.TextAnchor.BASELINE_RIGHT.name has only one value
org.jfree.chart.text.TextAnchor.BASELINE_RIGHT.name.toString == "TextAnchor.BASELINE_RIGHT"
org.jfree.chart.text.TextAnchor.BOTTOM_LEFT.name has only one value
org.jfree.chart.text.TextAnchor.BOTTOM_LEFT.name.toString == "TextAnchor.BOTTOM_LEFT"
org.jfree.chart.text.TextAnchor.BOTTOM_CENTER.name has only one value
org.jfree.chart.text.TextAnchor.BOTTOM_CENTER.name.toString == "TextAnchor.BOTTOM_CENTER"
org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT.name has only one value
org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT.name.toString == "TextAnchor.BOTTOM_RIGHT"
textAnchor.name.toString one of { "TextAnchor.BOTTOM_CENTER", "TextAnchor.TOP_CENTER" }
===========================================================================
org.jfree.chart.labels.ItemLabelPosition.ItemLabelPosition(org.jfree.chart.labels.ItemLabelAnchor, org.jfree.chart.text.TextAnchor):::EXIT
org.jfree.chart.labels.ItemLabelAnchor.CENTER == orig(org.jfree.chart.labels.ItemLabelAnchor.CENTER)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE1 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE1)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE2 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE2)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE3 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE3)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE4 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE4)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE5 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE5)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE6 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE6)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE7 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE7)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE8 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE8)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE9 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE9)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE10 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE10)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE11 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE11)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE12 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE12)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12)
org.jfree.chart.labels.ItemLabelAnchor.CENTER.name == orig(org.jfree.chart.labels.ItemLabelAnchor.CENTER.name)
org.jfree.chart.labels.ItemLabelAnchor.CENTER.name.toString == orig(org.jfree.chart.labels.ItemLabelAnchor.CENTER.name.toString)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE1.name == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE1.name)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE1.name.toString == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE1.name.toString)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE2.name == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE2.name)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE2.name.toString == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE2.name.toString)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE3.name == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE3.name)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE3.name.toString == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE3.name.toString)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE4.name == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE4.name)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE4.name.toString == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE4.name.toString)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE5.name == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE5.name)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE5.name.toString == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE5.name.toString)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE6.name == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE6.name)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE6.name.toString == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE6.name.toString)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE7.name == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE7.name)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE7.name.toString == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE7.name.toString)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE8.name == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE8.name)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE8.name.toString == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE8.name.toString)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE9.name == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE9.name)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE9.name.toString == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE9.name.toString)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE10.name == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE10.name)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE10.name.toString == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE10.name.toString)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE11.name == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE11.name)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE11.name.toString == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE11.name.toString)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE12.name == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE12.name)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE12.name.toString == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE12.name.toString)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1.name == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1.name)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1.name.toString == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1.name.toString)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2.name == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2.name)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2.name.toString == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2.name.toString)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3.name == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3.name)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3.name.toString == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3.name.toString)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4.name == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4.name)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4.name.toString == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4.name.toString)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5.name == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5.name)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5.name.toString == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5.name.toString)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6.name == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6.name)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6.name.toString == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6.name.toString)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7.name == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7.name)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7.name.toString == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7.name.toString)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8.name == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8.name)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8.name.toString == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8.name.toString)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9.name == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9.name)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9.name.toString == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9.name.toString)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10.name == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10.name)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10.name.toString == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10.name.toString)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11.name == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11.name)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11.name.toString == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11.name.toString)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12.name == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12.name)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12.name.toString == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12.name.toString)
org.jfree.chart.text.TextAnchor.TOP_LEFT == orig(org.jfree.chart.text.TextAnchor.TOP_LEFT)
org.jfree.chart.text.TextAnchor.TOP_CENTER == orig(org.jfree.chart.text.TextAnchor.TOP_CENTER)
org.jfree.chart.text.TextAnchor.TOP_RIGHT == orig(org.jfree.chart.text.TextAnchor.TOP_RIGHT)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT)
org.jfree.chart.text.TextAnchor.CENTER_LEFT == orig(org.jfree.chart.text.TextAnchor.CENTER_LEFT)
org.jfree.chart.text.TextAnchor.CENTER == orig(org.jfree.chart.text.TextAnchor.CENTER)
org.jfree.chart.text.TextAnchor.CENTER_RIGHT == orig(org.jfree.chart.text.TextAnchor.CENTER_RIGHT)
org.jfree.chart.text.TextAnchor.BASELINE_LEFT == orig(org.jfree.chart.text.TextAnchor.BASELINE_LEFT)
org.jfree.chart.text.TextAnchor.BASELINE_CENTER == orig(org.jfree.chart.text.TextAnchor.BASELINE_CENTER)
org.jfree.chart.text.TextAnchor.BASELINE_RIGHT == orig(org.jfree.chart.text.TextAnchor.BASELINE_RIGHT)
org.jfree.chart.text.TextAnchor.BOTTOM_LEFT == orig(org.jfree.chart.text.TextAnchor.BOTTOM_LEFT)
org.jfree.chart.text.TextAnchor.BOTTOM_CENTER == orig(org.jfree.chart.text.TextAnchor.BOTTOM_CENTER)
org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT == orig(org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT)
org.jfree.chart.text.TextAnchor.TOP_LEFT.name == orig(org.jfree.chart.text.TextAnchor.TOP_LEFT.name)
org.jfree.chart.text.TextAnchor.TOP_LEFT.name.toString == orig(org.jfree.chart.text.TextAnchor.TOP_LEFT.name.toString)
org.jfree.chart.text.TextAnchor.TOP_CENTER.name == orig(org.jfree.chart.text.TextAnchor.TOP_CENTER.name)
org.jfree.chart.text.TextAnchor.TOP_CENTER.name.toString == orig(org.jfree.chart.text.TextAnchor.TOP_CENTER.name.toString)
org.jfree.chart.text.TextAnchor.TOP_RIGHT.name == orig(org.jfree.chart.text.TextAnchor.TOP_RIGHT.name)
org.jfree.chart.text.TextAnchor.TOP_RIGHT.name.toString == orig(org.jfree.chart.text.TextAnchor.TOP_RIGHT.name.toString)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT.name == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT.name)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT.name.toString == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT.name.toString)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER.name == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER.name)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER.name.toString == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER.name.toString)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT.name == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT.name)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT.name.toString == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT.name.toString)
org.jfree.chart.text.TextAnchor.CENTER_LEFT.name == orig(org.jfree.chart.text.TextAnchor.CENTER_LEFT.name)
org.jfree.chart.text.TextAnchor.CENTER_LEFT.name.toString == orig(org.jfree.chart.text.TextAnchor.CENTER_LEFT.name.toString)
org.jfree.chart.text.TextAnchor.CENTER.name == orig(org.jfree.chart.text.TextAnchor.CENTER.name)
org.jfree.chart.text.TextAnchor.CENTER.name.toString == orig(org.jfree.chart.text.TextAnchor.CENTER.name.toString)
org.jfree.chart.text.TextAnchor.CENTER_RIGHT.name == orig(org.jfree.chart.text.TextAnchor.CENTER_RIGHT.name)
org.jfree.chart.text.TextAnchor.CENTER_RIGHT.name.toString == orig(org.jfree.chart.text.TextAnchor.CENTER_RIGHT.name.toString)
org.jfree.chart.text.TextAnchor.BASELINE_LEFT.name == orig(org.jfree.chart.text.TextAnchor.BASELINE_LEFT.name)
org.jfree.chart.text.TextAnchor.BASELINE_LEFT.name.toString == orig(org.jfree.chart.text.TextAnchor.BASELINE_LEFT.name.toString)
org.jfree.chart.text.TextAnchor.BASELINE_CENTER.name == orig(org.jfree.chart.text.TextAnchor.BASELINE_CENTER.name)
org.jfree.chart.text.TextAnchor.BASELINE_CENTER.name.toString == orig(org.jfree.chart.text.TextAnchor.BASELINE_CENTER.name.toString)
org.jfree.chart.text.TextAnchor.BASELINE_RIGHT.name == orig(org.jfree.chart.text.TextAnchor.BASELINE_RIGHT.name)
org.jfree.chart.text.TextAnchor.BASELINE_RIGHT.name.toString == orig(org.jfree.chart.text.TextAnchor.BASELINE_RIGHT.name.toString)
org.jfree.chart.text.TextAnchor.BOTTOM_LEFT.name == orig(org.jfree.chart.text.TextAnchor.BOTTOM_LEFT.name)
org.jfree.chart.text.TextAnchor.BOTTOM_LEFT.name.toString == orig(org.jfree.chart.text.TextAnchor.BOTTOM_LEFT.name.toString)
org.jfree.chart.text.TextAnchor.BOTTOM_CENTER.name == orig(org.jfree.chart.text.TextAnchor.BOTTOM_CENTER.name)
org.jfree.chart.text.TextAnchor.BOTTOM_CENTER.name.toString == orig(org.jfree.chart.text.TextAnchor.BOTTOM_CENTER.name.toString)
org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT.name == orig(org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT.name)
org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT.name.toString == orig(org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT.name.toString)
itemLabelAnchor.name == orig(itemLabelAnchor.name)
itemLabelAnchor.name.toString == orig(itemLabelAnchor.name.toString)
textAnchor.name == orig(textAnchor.name)
textAnchor.name.toString == orig(textAnchor.name.toString)
itemLabelAnchor.name.toString one of { "ItemLabelAnchor.OUTSIDE12", "ItemLabelAnchor.OUTSIDE6" }
textAnchor.name.toString one of { "TextAnchor.BOTTOM_CENTER", "TextAnchor.TOP_CENTER" }
===========================================================================
org.jfree.chart.labels.ItemLabelPosition.ItemLabelPosition(org.jfree.chart.labels.ItemLabelAnchor, org.jfree.chart.text.TextAnchor, org.jfree.chart.text.TextAnchor, double):::ENTER
org.jfree.chart.labels.ItemLabelAnchor.CENTER has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE1 has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE2 has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE3 has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE4 has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE5 has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE6 has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE7 has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE8 has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE9 has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE10 has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE11 has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE12 has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1 has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2 has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3 has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4 has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5 has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6 has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7 has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8 has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9 has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10 has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11 has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12 has only one value
org.jfree.chart.labels.ItemLabelAnchor.CENTER.name has only one value
org.jfree.chart.labels.ItemLabelAnchor.CENTER.name.toString == "ItemLabelAnchor.CENTER"
org.jfree.chart.labels.ItemLabelAnchor.INSIDE1.name has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE1.name.toString == "ItemLabelAnchor.INSIDE1"
org.jfree.chart.labels.ItemLabelAnchor.INSIDE2.name has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE2.name.toString == "ItemLabelAnchor.INSIDE2"
org.jfree.chart.labels.ItemLabelAnchor.INSIDE3.name has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE3.name.toString == "ItemLabelAnchor.INSIDE3"
org.jfree.chart.labels.ItemLabelAnchor.INSIDE4.name has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE4.name.toString == "ItemLabelAnchor.INSIDE4"
org.jfree.chart.labels.ItemLabelAnchor.INSIDE5.name has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE5.name.toString == "ItemLabelAnchor.INSIDE5"
org.jfree.chart.labels.ItemLabelAnchor.INSIDE6.name has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE6.name.toString == "ItemLabelAnchor.INSIDE6"
org.jfree.chart.labels.ItemLabelAnchor.INSIDE7.name has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE7.name.toString == "ItemLabelAnchor.INSIDE7"
org.jfree.chart.labels.ItemLabelAnchor.INSIDE8.name has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE8.name.toString == "ItemLabelAnchor.INSIDE8"
org.jfree.chart.labels.ItemLabelAnchor.INSIDE9.name has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE9.name.toString == "ItemLabelAnchor.INSIDE9"
org.jfree.chart.labels.ItemLabelAnchor.INSIDE10.name has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE10.name.toString == "ItemLabelAnchor.INSIDE10"
org.jfree.chart.labels.ItemLabelAnchor.INSIDE11.name has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE11.name.toString == "ItemLabelAnchor.INSIDE11"
org.jfree.chart.labels.ItemLabelAnchor.INSIDE12.name has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE12.name.toString == "ItemLabelAnchor.INSIDE12"
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1.name has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1.name.toString == "ItemLabelAnchor.OUTSIDE1"
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2.name has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2.name.toString == "ItemLabelAnchor.OUTSIDE2"
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3.name has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3.name.toString == "ItemLabelAnchor.OUTSIDE3"
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4.name has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4.name.toString == "ItemLabelAnchor.OUTSIDE4"
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5.name has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5.name.toString == "ItemLabelAnchor.OUTSIDE5"
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6.name has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6.name.toString == "ItemLabelAnchor.OUTSIDE6"
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7.name has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7.name.toString == "ItemLabelAnchor.OUTSIDE7"
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8.name has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8.name.toString == "ItemLabelAnchor.OUTSIDE8"
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9.name has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9.name.toString == "ItemLabelAnchor.OUTSIDE9"
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10.name has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10.name.toString == "ItemLabelAnchor.OUTSIDE10"
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11.name has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11.name.toString == "ItemLabelAnchor.OUTSIDE11"
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12.name has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12.name.toString == "ItemLabelAnchor.OUTSIDE12"
itemLabelAnchor.name.toString one of { "ItemLabelAnchor.OUTSIDE12", "ItemLabelAnchor.OUTSIDE6" }
org.jfree.chart.text.TextAnchor.TOP_LEFT has only one value
org.jfree.chart.text.TextAnchor.TOP_CENTER has only one value
org.jfree.chart.text.TextAnchor.TOP_RIGHT has only one value
org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT has only one value
org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER has only one value
org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT has only one value
org.jfree.chart.text.TextAnchor.CENTER_LEFT has only one value
org.jfree.chart.text.TextAnchor.CENTER has only one value
org.jfree.chart.text.TextAnchor.CENTER_RIGHT has only one value
org.jfree.chart.text.TextAnchor.BASELINE_LEFT has only one value
org.jfree.chart.text.TextAnchor.BASELINE_CENTER has only one value
org.jfree.chart.text.TextAnchor.BASELINE_RIGHT has only one value
org.jfree.chart.text.TextAnchor.BOTTOM_LEFT has only one value
org.jfree.chart.text.TextAnchor.BOTTOM_CENTER has only one value
org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT has only one value
org.jfree.chart.text.TextAnchor.TOP_LEFT.name has only one value
org.jfree.chart.text.TextAnchor.TOP_LEFT.name.toString == "TextAnchor.TOP_LEFT"
org.jfree.chart.text.TextAnchor.TOP_CENTER.name has only one value
org.jfree.chart.text.TextAnchor.TOP_CENTER.name.toString == "TextAnchor.TOP_CENTER"
org.jfree.chart.text.TextAnchor.TOP_RIGHT.name has only one value
org.jfree.chart.text.TextAnchor.TOP_RIGHT.name.toString == "TextAnchor.TOP_RIGHT"
org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT.name has only one value
org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT.name.toString == "TextAnchor.HALF_ASCENT_LEFT"
org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER.name has only one value
org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER.name.toString == "TextAnchor.HALF_ASCENT_CENTER"
org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT.name has only one value
org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT.name.toString == "TextAnchor.HALF_ASCENT_RIGHT"
org.jfree.chart.text.TextAnchor.CENTER_LEFT.name has only one value
org.jfree.chart.text.TextAnchor.CENTER_LEFT.name.toString == "TextAnchor.CENTER_LEFT"
org.jfree.chart.text.TextAnchor.CENTER.name has only one value
org.jfree.chart.text.TextAnchor.CENTER.name.toString == "TextAnchor.CENTER"
org.jfree.chart.text.TextAnchor.CENTER_RIGHT.name has only one value
org.jfree.chart.text.TextAnchor.CENTER_RIGHT.name.toString == "TextAnchor.CENTER_RIGHT"
org.jfree.chart.text.TextAnchor.BASELINE_LEFT.name has only one value
org.jfree.chart.text.TextAnchor.BASELINE_LEFT.name.toString == "TextAnchor.BASELINE_LEFT"
org.jfree.chart.text.TextAnchor.BASELINE_CENTER.name has only one value
org.jfree.chart.text.TextAnchor.BASELINE_CENTER.name.toString == "TextAnchor.BASELINE_CENTER"
org.jfree.chart.text.TextAnchor.BASELINE_RIGHT.name has only one value
org.jfree.chart.text.TextAnchor.BASELINE_RIGHT.name.toString == "TextAnchor.BASELINE_RIGHT"
org.jfree.chart.text.TextAnchor.BOTTOM_LEFT.name has only one value
org.jfree.chart.text.TextAnchor.BOTTOM_LEFT.name.toString == "TextAnchor.BOTTOM_LEFT"
org.jfree.chart.text.TextAnchor.BOTTOM_CENTER.name has only one value
org.jfree.chart.text.TextAnchor.BOTTOM_CENTER.name.toString == "TextAnchor.BOTTOM_CENTER"
org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT.name has only one value
org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT.name.toString == "TextAnchor.BOTTOM_RIGHT"
textAnchor.name.toString one of { "TextAnchor.BOTTOM_CENTER", "TextAnchor.TOP_CENTER" }
rotationAnchor has only one value
rotationAnchor.name has only one value
rotationAnchor.name.toString == "TextAnchor.CENTER"
angle == 0.0
===========================================================================
org.jfree.chart.labels.ItemLabelPosition.ItemLabelPosition(org.jfree.chart.labels.ItemLabelAnchor, org.jfree.chart.text.TextAnchor, org.jfree.chart.text.TextAnchor, double):::EXIT
org.jfree.chart.labels.ItemLabelAnchor.CENTER == orig(org.jfree.chart.labels.ItemLabelAnchor.CENTER)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE1 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE1)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE2 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE2)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE3 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE3)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE4 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE4)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE5 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE5)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE6 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE6)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE7 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE7)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE8 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE8)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE9 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE9)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE10 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE10)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE11 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE11)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE12 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE12)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12)
org.jfree.chart.labels.ItemLabelAnchor.CENTER.name == orig(org.jfree.chart.labels.ItemLabelAnchor.CENTER.name)
org.jfree.chart.labels.ItemLabelAnchor.CENTER.name.toString == orig(org.jfree.chart.labels.ItemLabelAnchor.CENTER.name.toString)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE1.name == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE1.name)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE1.name.toString == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE1.name.toString)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE2.name == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE2.name)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE2.name.toString == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE2.name.toString)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE3.name == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE3.name)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE3.name.toString == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE3.name.toString)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE4.name == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE4.name)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE4.name.toString == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE4.name.toString)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE5.name == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE5.name)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE5.name.toString == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE5.name.toString)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE6.name == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE6.name)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE6.name.toString == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE6.name.toString)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE7.name == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE7.name)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE7.name.toString == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE7.name.toString)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE8.name == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE8.name)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE8.name.toString == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE8.name.toString)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE9.name == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE9.name)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE9.name.toString == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE9.name.toString)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE10.name == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE10.name)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE10.name.toString == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE10.name.toString)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE11.name == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE11.name)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE11.name.toString == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE11.name.toString)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE12.name == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE12.name)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE12.name.toString == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE12.name.toString)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1.name == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1.name)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1.name.toString == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1.name.toString)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2.name == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2.name)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2.name.toString == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2.name.toString)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3.name == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3.name)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3.name.toString == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3.name.toString)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4.name == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4.name)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4.name.toString == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4.name.toString)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5.name == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5.name)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5.name.toString == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5.name.toString)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6.name == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6.name)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6.name.toString == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6.name.toString)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7.name == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7.name)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7.name.toString == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7.name.toString)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8.name == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8.name)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8.name.toString == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8.name.toString)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9.name == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9.name)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9.name.toString == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9.name.toString)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10.name == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10.name)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10.name.toString == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10.name.toString)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11.name == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11.name)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11.name.toString == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11.name.toString)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12.name == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12.name)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12.name.toString == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12.name.toString)
org.jfree.chart.text.TextAnchor.TOP_LEFT == orig(org.jfree.chart.text.TextAnchor.TOP_LEFT)
org.jfree.chart.text.TextAnchor.TOP_CENTER == orig(org.jfree.chart.text.TextAnchor.TOP_CENTER)
org.jfree.chart.text.TextAnchor.TOP_RIGHT == orig(org.jfree.chart.text.TextAnchor.TOP_RIGHT)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT)
org.jfree.chart.text.TextAnchor.CENTER_LEFT == orig(org.jfree.chart.text.TextAnchor.CENTER_LEFT)
org.jfree.chart.text.TextAnchor.CENTER == orig(org.jfree.chart.text.TextAnchor.CENTER)
org.jfree.chart.text.TextAnchor.CENTER_RIGHT == orig(org.jfree.chart.text.TextAnchor.CENTER_RIGHT)
org.jfree.chart.text.TextAnchor.BASELINE_LEFT == orig(org.jfree.chart.text.TextAnchor.BASELINE_LEFT)
org.jfree.chart.text.TextAnchor.BASELINE_CENTER == orig(org.jfree.chart.text.TextAnchor.BASELINE_CENTER)
org.jfree.chart.text.TextAnchor.BASELINE_RIGHT == orig(org.jfree.chart.text.TextAnchor.BASELINE_RIGHT)
org.jfree.chart.text.TextAnchor.BOTTOM_LEFT == orig(org.jfree.chart.text.TextAnchor.BOTTOM_LEFT)
org.jfree.chart.text.TextAnchor.BOTTOM_CENTER == orig(org.jfree.chart.text.TextAnchor.BOTTOM_CENTER)
org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT == orig(org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT)
org.jfree.chart.text.TextAnchor.TOP_LEFT.name == orig(org.jfree.chart.text.TextAnchor.TOP_LEFT.name)
org.jfree.chart.text.TextAnchor.TOP_LEFT.name.toString == orig(org.jfree.chart.text.TextAnchor.TOP_LEFT.name.toString)
org.jfree.chart.text.TextAnchor.TOP_CENTER.name == orig(org.jfree.chart.text.TextAnchor.TOP_CENTER.name)
org.jfree.chart.text.TextAnchor.TOP_CENTER.name.toString == orig(org.jfree.chart.text.TextAnchor.TOP_CENTER.name.toString)
org.jfree.chart.text.TextAnchor.TOP_RIGHT.name == orig(org.jfree.chart.text.TextAnchor.TOP_RIGHT.name)
org.jfree.chart.text.TextAnchor.TOP_RIGHT.name.toString == orig(org.jfree.chart.text.TextAnchor.TOP_RIGHT.name.toString)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT.name == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT.name)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT.name.toString == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT.name.toString)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER.name == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER.name)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER.name.toString == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER.name.toString)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT.name == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT.name)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT.name.toString == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT.name.toString)
org.jfree.chart.text.TextAnchor.CENTER_LEFT.name == orig(org.jfree.chart.text.TextAnchor.CENTER_LEFT.name)
org.jfree.chart.text.TextAnchor.CENTER_LEFT.name.toString == orig(org.jfree.chart.text.TextAnchor.CENTER_LEFT.name.toString)
org.jfree.chart.text.TextAnchor.CENTER.name == orig(org.jfree.chart.text.TextAnchor.CENTER.name)
org.jfree.chart.text.TextAnchor.CENTER.name.toString == orig(org.jfree.chart.text.TextAnchor.CENTER.name.toString)
org.jfree.chart.text.TextAnchor.CENTER_RIGHT.name == orig(org.jfree.chart.text.TextAnchor.CENTER_RIGHT.name)
org.jfree.chart.text.TextAnchor.CENTER_RIGHT.name.toString == orig(org.jfree.chart.text.TextAnchor.CENTER_RIGHT.name.toString)
org.jfree.chart.text.TextAnchor.BASELINE_LEFT.name == orig(org.jfree.chart.text.TextAnchor.BASELINE_LEFT.name)
org.jfree.chart.text.TextAnchor.BASELINE_LEFT.name.toString == orig(org.jfree.chart.text.TextAnchor.BASELINE_LEFT.name.toString)
org.jfree.chart.text.TextAnchor.BASELINE_CENTER.name == orig(org.jfree.chart.text.TextAnchor.BASELINE_CENTER.name)
org.jfree.chart.text.TextAnchor.BASELINE_CENTER.name.toString == orig(org.jfree.chart.text.TextAnchor.BASELINE_CENTER.name.toString)
org.jfree.chart.text.TextAnchor.BASELINE_RIGHT.name == orig(org.jfree.chart.text.TextAnchor.BASELINE_RIGHT.name)
org.jfree.chart.text.TextAnchor.BASELINE_RIGHT.name.toString == orig(org.jfree.chart.text.TextAnchor.BASELINE_RIGHT.name.toString)
org.jfree.chart.text.TextAnchor.BOTTOM_LEFT.name == orig(org.jfree.chart.text.TextAnchor.BOTTOM_LEFT.name)
org.jfree.chart.text.TextAnchor.BOTTOM_LEFT.name.toString == orig(org.jfree.chart.text.TextAnchor.BOTTOM_LEFT.name.toString)
org.jfree.chart.text.TextAnchor.BOTTOM_CENTER.name == orig(org.jfree.chart.text.TextAnchor.BOTTOM_CENTER.name)
org.jfree.chart.text.TextAnchor.BOTTOM_CENTER.name.toString == orig(org.jfree.chart.text.TextAnchor.BOTTOM_CENTER.name.toString)
org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT.name == orig(org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT.name)
org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT.name.toString == orig(org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT.name.toString)
itemLabelAnchor.name == orig(itemLabelAnchor.name)
itemLabelAnchor.name.toString == orig(itemLabelAnchor.name.toString)
textAnchor.name == orig(textAnchor.name)
textAnchor.name.toString == orig(textAnchor.name.toString)
rotationAnchor.name == orig(rotationAnchor.name)
rotationAnchor.name.toString == orig(rotationAnchor.name.toString)
itemLabelAnchor.name.toString one of { "ItemLabelAnchor.OUTSIDE12", "ItemLabelAnchor.OUTSIDE6" }
textAnchor.name.toString one of { "TextAnchor.BOTTOM_CENTER", "TextAnchor.TOP_CENTER" }
rotationAnchor.name has only one value
rotationAnchor.name.toString == "TextAnchor.CENTER"
===========================================================================
org.jfree.chart.labels.StandardCategorySeriesLabelGenerator:::CLASS
org.jfree.chart.labels.StandardCategorySeriesLabelGenerator.DEFAULT_LABEL_FORMAT has only one value
org.jfree.chart.labels.StandardCategorySeriesLabelGenerator.DEFAULT_LABEL_FORMAT.toString == "{0}"
===========================================================================
org.jfree.chart.labels.StandardCategorySeriesLabelGenerator:::OBJECT
this has only one value
this.formatPattern has only one value
this.formatPattern.toString == "{0}"
===========================================================================
org.jfree.chart.labels.StandardCategorySeriesLabelGenerator.StandardCategorySeriesLabelGenerator():::EXIT
===========================================================================
org.jfree.chart.labels.StandardCategorySeriesLabelGenerator.StandardCategorySeriesLabelGenerator(java.lang.String):::ENTER
format has only one value
format.toString == "{0}"
===========================================================================
org.jfree.chart.labels.StandardCategorySeriesLabelGenerator.StandardCategorySeriesLabelGenerator(java.lang.String):::EXIT
format.toString == orig(format.toString)
format.toString == "{0}"
===========================================================================
org.jfree.chart.labels.StandardCategorySeriesLabelGenerator.createItemArray(org.jfree.data.category.CategoryDataset, int):::ENTER
dataset has only one value
dataset.getClass().getName() == org.jfree.data.category.DefaultCategoryDataset.class
series == 0
===========================================================================
org.jfree.chart.labels.StandardCategorySeriesLabelGenerator.createItemArray(org.jfree.data.category.CategoryDataset, int):::EXIT
org.jfree.chart.labels.StandardCategorySeriesLabelGenerator.DEFAULT_LABEL_FORMAT == orig(org.jfree.chart.labels.StandardCategorySeriesLabelGenerator.DEFAULT_LABEL_FORMAT)
org.jfree.chart.labels.StandardCategorySeriesLabelGenerator.DEFAULT_LABEL_FORMAT.toString == orig(org.jfree.chart.labels.StandardCategorySeriesLabelGenerator.DEFAULT_LABEL_FORMAT.toString)
this.formatPattern == orig(this.formatPattern)
this.formatPattern.toString == orig(this.formatPattern.toString)
return has only one value
return.getClass().getName() == java.lang.Object[].class
return[] contains no nulls and has only one value, of length 1
return[] elements has only one value
size(return[]) == 1
===========================================================================
org.jfree.chart.labels.StandardCategorySeriesLabelGenerator.generateLabel(org.jfree.data.category.CategoryDataset, int):::ENTER
dataset has only one value
dataset.getClass().getName() == org.jfree.data.category.DefaultCategoryDataset.class
series == 0
===========================================================================
org.jfree.chart.labels.StandardCategorySeriesLabelGenerator.generateLabel(org.jfree.data.category.CategoryDataset, int):::EXIT
org.jfree.chart.labels.StandardCategorySeriesLabelGenerator.DEFAULT_LABEL_FORMAT == orig(org.jfree.chart.labels.StandardCategorySeriesLabelGenerator.DEFAULT_LABEL_FORMAT)
org.jfree.chart.labels.StandardCategorySeriesLabelGenerator.DEFAULT_LABEL_FORMAT.toString == orig(org.jfree.chart.labels.StandardCategorySeriesLabelGenerator.DEFAULT_LABEL_FORMAT.toString)
this.formatPattern == orig(this.formatPattern)
this.formatPattern.toString == orig(this.formatPattern.toString)
return has only one value
return.toString == "S1"
===========================================================================
org.jfree.chart.plot.CategoryPlot:::CLASS
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE has only one value
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE != null
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName() == java.awt.BasicStroke.class
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT has only one value
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT != null
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == java.awt.Color.class
org.jfree.chart.plot.CategoryPlot.DEFAULT_VALUE_LABEL_FONT has only one value
org.jfree.chart.plot.CategoryPlot.DEFAULT_VALUE_LABEL_FONT != null
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE has only one value
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE != null
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE.getClass().getName() == java.awt.BasicStroke.class
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT has only one value
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT != null
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT.getClass().getName() == java.awt.Color.class
org.jfree.chart.plot.CategoryPlot.localizationResources has only one value
org.jfree.chart.plot.CategoryPlot.localizationResources != null
org.jfree.chart.plot.CategoryPlot.localizationResources.getClass().getName() == java.util.PropertyResourceBundle.class
org.jfree.chart.plot.Plot.ZERO has only one value
org.jfree.chart.plot.Plot.ZERO != null
org.jfree.chart.plot.Plot.ZERO.getClass().getName() == java.lang.Integer.class
org.jfree.chart.plot.Plot.DEFAULT_INSETS has only one value
org.jfree.chart.plot.Plot.DEFAULT_INSETS != null
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType has only one value
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType != null
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name has only one value
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name != null
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name.toString == "UnitType.ABSOLUTE"
org.jfree.chart.plot.Plot.DEFAULT_INSETS.top == 4.0
org.jfree.chart.plot.Plot.DEFAULT_INSETS.left == 8.0
org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom == 4.0
org.jfree.chart.plot.Plot.DEFAULT_INSETS.right == 8.0
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE has only one value
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE != null
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName() == java.awt.BasicStroke.class
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT has only one value
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT != null
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() == java.awt.Color.class
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT has only one value
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT != null
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName() == java.awt.Color.class
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX has only one value
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX != null
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName() == java.awt.geom.Rectangle2D$Double.class
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE has only one value
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE != null
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName() == java.awt.geom.Ellipse2D$Double.class
===========================================================================
org.jfree.chart.plot.CategoryPlot:::OBJECT
this has only one value
this.orientation has only one value
this.orientation != null
org.jfree.chart.plot.PlotOrientation.HORIZONTAL has only one value
org.jfree.chart.plot.PlotOrientation.HORIZONTAL != null
org.jfree.chart.plot.PlotOrientation.VERTICAL has only one value
org.jfree.chart.plot.PlotOrientation.VERTICAL != null
org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name has only one value
org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name != null
org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name.toString == "PlotOrientation.HORIZONTAL"
org.jfree.chart.plot.PlotOrientation.VERTICAL.name has only one value
org.jfree.chart.plot.PlotOrientation.VERTICAL.name != null
org.jfree.chart.plot.PlotOrientation.VERTICAL.name.toString == "PlotOrientation.VERTICAL"
this.orientation.name has only one value
this.orientation.name != null
this.orientation.name.toString == "PlotOrientation.VERTICAL"
this.axisOffset has only one value
this.axisOffset != null
org.jfree.chart.util.RectangleInsets.ZERO_INSETS has only one value
org.jfree.chart.util.RectangleInsets.ZERO_INSETS != null
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType has only one value
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType != null
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.top == 0.0
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.left == 0.0
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.bottom == 0.0
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.right == 0.0
this.axisOffset.unitType has only one value
this.axisOffset.unitType != null
org.jfree.chart.util.UnitType.ABSOLUTE has only one value
org.jfree.chart.util.UnitType.ABSOLUTE != null
org.jfree.chart.util.UnitType.RELATIVE has only one value
org.jfree.chart.util.UnitType.RELATIVE != null
this.axisOffset.unitType.name has only one value
this.axisOffset.unitType.name != null
this.axisOffset.unitType.name.toString == "UnitType.ABSOLUTE"
this.axisOffset.top == 4.0
this.axisOffset.left == 4.0
this.axisOffset.bottom == 4.0
this.axisOffset.right == 4.0
this.domainAxes has only one value
this.domainAxes != null
this.domainAxes.objects has only one value
this.domainAxes.objects != null
this.domainAxes.objects.getClass().getName() == java.lang.Object[].class
this.domainAxes.objects[] contains only nulls and has only one value, of length 8
this.domainAxes.objects[] elements == null
this.domainAxes.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.domainAxes.objects[].getClass().getName() elements == null
this.domainAxes.size one of { 0, 1 }
this.domainAxes.increment == 8
this.domainAxisLocations has only one value
this.domainAxisLocations != null
this.domainAxisLocations.objects has only one value
this.domainAxisLocations.objects != null
this.domainAxisLocations.objects.getClass().getName() == java.lang.Object[].class
this.domainAxisLocations.objects[].getClass().getName() one of { [null, null, null, null, null, null, null, null], [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null] }
this.domainAxisLocations.size one of { 0, 1 }
this.domainAxisLocations.increment == 8
this.drawSharedDomainAxis == false
this.rangeAxes has only one value
this.rangeAxes != null
this.rangeAxes.objects has only one value
this.rangeAxes.objects != null
this.rangeAxes.objects.getClass().getName() == java.lang.Object[].class
this.rangeAxes.objects[] contains only nulls and has only one value, of length 8
this.rangeAxes.objects[] elements == null
this.rangeAxes.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.rangeAxes.objects[].getClass().getName() elements == null
this.rangeAxes.size one of { 0, 1 }
this.rangeAxes.increment == 8
this.rangeAxisLocations has only one value
this.rangeAxisLocations != null
this.rangeAxisLocations.objects has only one value
this.rangeAxisLocations.objects != null
this.rangeAxisLocations.objects.getClass().getName() == java.lang.Object[].class
this.rangeAxisLocations.objects[].getClass().getName() one of { [null, null, null, null, null, null, null, null], [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null] }
this.rangeAxisLocations.size one of { 0, 1 }
this.rangeAxisLocations.increment == 8
this.datasets has only one value
this.datasets != null
this.datasets.objects has only one value
this.datasets.objects != null
this.datasets.objects.getClass().getName() == java.lang.Object[].class
this.datasets.objects[].getClass().getName() one of { [null, null, null, null, null, null, null, null], [org.jfree.data.category.DefaultCategoryDataset, null, null, null, null, null, null, null] }
this.datasets.size == 1
this.datasets.increment == 8
this.datasetToDomainAxesMap has only one value
this.datasetToDomainAxesMap != null
this.datasetToRangeAxesMap has only one value
this.datasetToRangeAxesMap != null
this.renderers has only one value
this.renderers != null
this.renderers.objects has only one value
this.renderers.objects != null
this.renderers.objects.getClass().getName() == java.lang.Object[].class
this.renderers.objects[].getClass().getName() one of { [null, null, null, null, null, null, null, null], [org.jfree.chart.renderer.category.LineAndShapeRenderer, null, null, null, null, null, null, null] }
this.renderers.size one of { 0, 1 }
this.renderers.increment == 8
this.renderingOrder has only one value
this.renderingOrder != null
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD has only one value
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD != null
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE has only one value
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE != null
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name has only one value
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name != null
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name.toString == "DatasetRenderingOrder.FORWARD"
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name has only one value
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name != null
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name.toString == "DatasetRenderingOrder.REVERSE"
this.renderingOrder.name has only one value
this.renderingOrder.name != null
this.renderingOrder.name.toString == "DatasetRenderingOrder.REVERSE"
this.columnRenderingOrder has only one value
this.columnRenderingOrder != null
org.jfree.chart.util.SortOrder.ASCENDING has only one value
org.jfree.chart.util.SortOrder.ASCENDING != null
org.jfree.chart.util.SortOrder.DESCENDING has only one value
org.jfree.chart.util.SortOrder.DESCENDING != null
org.jfree.chart.util.SortOrder.ASCENDING.name has only one value
org.jfree.chart.util.SortOrder.ASCENDING.name != null
org.jfree.chart.util.SortOrder.ASCENDING.name.toString == "SortOrder.ASCENDING"
org.jfree.chart.util.SortOrder.DESCENDING.name has only one value
org.jfree.chart.util.SortOrder.DESCENDING.name != null
org.jfree.chart.util.SortOrder.DESCENDING.name.toString == "SortOrder.DESCENDING"
this.columnRenderingOrder.name has only one value
this.columnRenderingOrder.name != null
this.columnRenderingOrder.name.toString == "SortOrder.ASCENDING"
this.rowRenderingOrder has only one value
this.rowRenderingOrder != null
this.rowRenderingOrder.name has only one value
this.rowRenderingOrder.name != null
this.rowRenderingOrder.name.toString == "SortOrder.ASCENDING"
this.domainGridlinesVisible == false
org.jfree.chart.axis.CategoryAnchor.START has only one value
org.jfree.chart.axis.CategoryAnchor.START != null
org.jfree.chart.axis.CategoryAnchor.MIDDLE has only one value
org.jfree.chart.axis.CategoryAnchor.MIDDLE != null
org.jfree.chart.axis.CategoryAnchor.END has only one value
org.jfree.chart.axis.CategoryAnchor.END != null
org.jfree.chart.axis.CategoryAnchor.START.name has only one value
org.jfree.chart.axis.CategoryAnchor.START.name != null
org.jfree.chart.axis.CategoryAnchor.START.name.toString == "CategoryAnchor.START"
org.jfree.chart.axis.CategoryAnchor.MIDDLE.name has only one value
org.jfree.chart.axis.CategoryAnchor.MIDDLE.name != null
org.jfree.chart.axis.CategoryAnchor.MIDDLE.name.toString == "CategoryAnchor.MIDDLE"
org.jfree.chart.axis.CategoryAnchor.END.name has only one value
org.jfree.chart.axis.CategoryAnchor.END.name != null
org.jfree.chart.axis.CategoryAnchor.END.name.toString == "CategoryAnchor.END"
this.domainGridlinePosition.name has only one value
this.domainGridlinePosition.name != null
this.domainGridlinePosition.name.toString == "CategoryAnchor.MIDDLE"
this.domainGridlineStroke.getClass().getName() == java.awt.BasicStroke.class
this.domainGridlinePaint.getClass().getName() == java.awt.Color.class
this.rangeZeroBaselineVisible == false
this.rangeZeroBaselineStroke.getClass().getName() == java.awt.BasicStroke.class
this.rangeZeroBaselinePaint.getClass().getName() == java.awt.Color.class
this.rangeGridlineStroke.getClass().getName() == java.awt.BasicStroke.class
this.rangeGridlinePaint.getClass().getName() == java.awt.Color.class
this.rangeMinorGridlinesVisible == false
this.rangeMinorGridlineStroke.getClass().getName() == java.awt.BasicStroke.class
this.rangeMinorGridlinePaint.getClass().getName() == java.awt.Color.class
this.anchorValue == 0.0
this.crosshairDatasetIndex == 0
this.domainCrosshairVisible == false
this.domainCrosshairRowKey == null
this.domainCrosshairColumnKey == null
this.domainCrosshairStroke.getClass().getName() == java.awt.BasicStroke.class
this.domainCrosshairPaint.getClass().getName() == java.awt.Color.class
this.rangeCrosshairVisible == false
this.rangeCrosshairValue == 0.0
this.rangeCrosshairStroke.getClass().getName() == java.awt.BasicStroke.class
this.rangeCrosshairPaint.getClass().getName() == java.awt.Color.class
this.rangeCrosshairLockedOnData == true
this.foregroundDomainMarkers.getClass().getName() == java.util.HashMap.class
this.backgroundDomainMarkers.getClass().getName() == java.util.HashMap.class
this.foregroundRangeMarkers.getClass().getName() == java.util.HashMap.class
this.backgroundRangeMarkers.getClass().getName() == java.util.HashMap.class
this.annotations[] == []
this.annotations[].getClass().getName() == []
this.annotations.getClass().getName() == java.util.ArrayList.class
this.weight == 0
this.fixedDomainAxisSpace == null
this.fixedRangeAxisSpace == null
this.fixedLegendItems == null
this.rangePannable == false
this.shadowGenerator.getClass().getName() == org.jfree.chart.util.DefaultShadowGenerator.class
this.parent == null
org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener == null
this.datasetGroup == null
this.noDataMessage == null
this.noDataMessageFont has only one value
this.noDataMessageFont != null
this.noDataMessagePaint has only one value
this.noDataMessagePaint != null
this.noDataMessagePaint.getClass().getName() == java.awt.Color.class
this.insets has only one value
this.insets != null
this.insets.unitType has only one value
this.insets.unitType != null
this.insets.unitType.name has only one value
this.insets.unitType.name != null
this.insets.unitType.name.toString == "UnitType.ABSOLUTE"
this.insets.top == 4.0
this.insets.left == 8.0
this.insets.bottom == 4.0
this.insets.right == 8.0
this.outlineVisible == true
this.outlineStroke has only one value
this.outlineStroke != null
this.outlineStroke.getClass().getName() == java.awt.BasicStroke.class
this.outlinePaint has only one value
this.outlinePaint != null
this.outlinePaint.getClass().getName() == java.awt.Color.class
this.backgroundPaint has only one value
this.backgroundPaint != null
this.backgroundPaint.getClass().getName() == java.awt.Color.class
this.backgroundImage == null
this.backgroundImageAlignment == 15
this.backgroundImageAlpha == 0.5
this.foregroundAlpha == 1.0
this.backgroundAlpha == 1.0
this.drawingSupplier has only one value
this.drawingSupplier != null
this.drawingSupplier.getClass().getName() == org.jfree.chart.plot.DefaultDrawingSupplier.class
this.listenerList has only one value
this.listenerList != null
this.notify == true
size(this.domainAxes.objects[]) == 8
size(this.domainAxisLocations.objects[]) == 8
size(this.rangeAxes.objects[]) == 8
size(this.rangeAxisLocations.objects[]) == 8
size(this.datasets.objects[]) == 8
size(this.renderers.objects[]) == 8
===========================================================================
org.jfree.chart.plot.CategoryPlot.CategoryPlot():::EXIT
this.domainAxes.size == 1
this.domainAxisLocations.objects[] has only one value, of length 8
this.domainAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.domainAxisLocations.size == 1
this.rangeAxes.size == 1
this.rangeAxisLocations.objects[] has only one value, of length 8
this.rangeAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.rangeAxisLocations.size == 1
this.datasets.objects[] contains only nulls and has only one value, of length 8
this.datasets.objects[] elements == null
this.datasets.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.datasets.objects[].getClass().getName() elements == null
this.renderers.objects[] contains only nulls and has only one value, of length 8
this.renderers.objects[] elements == null
this.renderers.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.renderers.objects[].getClass().getName() elements == null
this.renderers.size == 1
this.domainGridlinePosition has only one value
this.domainGridlineStroke has only one value
this.domainGridlinePaint has only one value
this.rangeZeroBaselineStroke has only one value
this.rangeZeroBaselinePaint has only one value
this.rangeGridlinesVisible == true
this.rangeGridlineStroke has only one value
this.rangeGridlinePaint has only one value
this.rangeMinorGridlineStroke has only one value
this.rangeMinorGridlinePaint has only one value
this.domainCrosshairStroke has only one value
this.domainCrosshairPaint has only one value
this.rangeCrosshairStroke has only one value
this.rangeCrosshairPaint has only one value
this.foregroundDomainMarkers has only one value
this.backgroundDomainMarkers has only one value
this.foregroundRangeMarkers has only one value
this.backgroundRangeMarkers has only one value
this.annotations has only one value
this.shadowGenerator has only one value
===========================================================================
org.jfree.chart.plot.CategoryPlot.CategoryPlot(org.jfree.data.category.CategoryDataset, org.jfree.chart.axis.CategoryAxis, org.jfree.chart.axis.ValueAxis, org.jfree.chart.renderer.category.CategoryItemRenderer):::ENTER
dataset == null
domainAxis == null
org.jfree.chart.util.RectangleInsets.ZERO_INSETS has only one value
org.jfree.chart.plot.Plot.ZERO has only one value
org.jfree.chart.plot.Plot.ZERO.getClass().getName() == java.lang.Integer.class
org.jfree.chart.plot.Plot.DEFAULT_INSETS has only one value
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE has only one value
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName() == java.awt.BasicStroke.class
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT has only one value
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() == java.awt.Color.class
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT has only one value
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName() == java.awt.Color.class
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX has only one value
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName() == java.awt.geom.Rectangle2D$Double.class
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE has only one value
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName() == java.awt.geom.Ellipse2D$Double.class
org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener == null
rangeAxis == null
renderer == null
===========================================================================
org.jfree.chart.plot.CategoryPlot.CategoryPlot(org.jfree.data.category.CategoryDataset, org.jfree.chart.axis.CategoryAxis, org.jfree.chart.axis.ValueAxis, org.jfree.chart.renderer.category.CategoryItemRenderer):::EXIT
org.jfree.chart.util.RectangleInsets.ZERO_INSETS == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS)
org.jfree.chart.plot.Plot.ZERO == orig(org.jfree.chart.plot.Plot.ZERO)
org.jfree.chart.plot.Plot.ZERO.getClass().getName() == orig(org.jfree.chart.plot.Plot.ZERO.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_INSETS == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName())
org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener == orig(org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener)
this.domainAxes.size == 1
this.domainAxisLocations.objects[] has only one value, of length 8
this.domainAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.domainAxisLocations.size == 1
this.rangeAxes.size == 1
this.rangeAxisLocations.objects[] has only one value, of length 8
this.rangeAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.rangeAxisLocations.size == 1
this.datasets.objects[] contains only nulls and has only one value, of length 8
this.datasets.objects[] elements == null
this.datasets.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.datasets.objects[].getClass().getName() elements == null
this.renderers.objects[] contains only nulls and has only one value, of length 8
this.renderers.objects[] elements == null
this.renderers.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.renderers.objects[].getClass().getName() elements == null
this.renderers.size == 1
this.domainGridlinePosition has only one value
this.domainGridlineStroke has only one value
this.domainGridlinePaint has only one value
this.rangeZeroBaselineStroke has only one value
this.rangeZeroBaselinePaint has only one value
this.rangeGridlinesVisible == true
this.rangeGridlineStroke has only one value
this.rangeGridlinePaint has only one value
this.rangeMinorGridlineStroke has only one value
this.rangeMinorGridlinePaint has only one value
this.domainCrosshairStroke has only one value
this.domainCrosshairPaint has only one value
this.rangeCrosshairStroke has only one value
this.rangeCrosshairPaint has only one value
this.foregroundDomainMarkers has only one value
this.backgroundDomainMarkers has only one value
this.foregroundRangeMarkers has only one value
this.backgroundRangeMarkers has only one value
this.annotations has only one value
this.shadowGenerator has only one value
===========================================================================
org.jfree.chart.plot.CategoryPlot.checkAxisIndices(java.util.List):::ENTER
this.domainAxes.size == 1
this.domainAxisLocations.objects[] has only one value, of length 8
this.domainAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.domainAxisLocations.size == 1
this.rangeAxisLocations.objects[] has only one value, of length 8
this.rangeAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.rangeAxisLocations.size == 1
this.datasets.objects[] contains only nulls and has only one value, of length 8
this.datasets.objects[] elements == null
this.datasets.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.datasets.objects[].getClass().getName() elements == null
this.renderers.objects[] contains only nulls and has only one value, of length 8
this.renderers.objects[] elements == null
this.renderers.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.renderers.objects[].getClass().getName() elements == null
this.renderers.size == 1
this.domainGridlinePosition == null
this.domainGridlineStroke == null
this.domainGridlinePaint == null
this.rangeZeroBaselineStroke == null
this.rangeZeroBaselinePaint == null
this.rangeGridlinesVisible == false
this.rangeGridlineStroke == null
this.rangeGridlinePaint == null
this.rangeMinorGridlineStroke == null
this.rangeMinorGridlinePaint == null
this.domainCrosshairStroke == null
this.domainCrosshairPaint == null
this.rangeCrosshairStroke == null
this.rangeCrosshairPaint == null
this.foregroundDomainMarkers == null
this.backgroundDomainMarkers == null
this.foregroundRangeMarkers == null
this.backgroundRangeMarkers == null
this.annotations == null
this.shadowGenerator == null
indices[].getClass().getName() == [java.lang.Integer]
indices[].getClass().getName() elements == java.lang.Integer.class
indices.getClass().getName() == java.util.ArrayList.class
size(indices[]) == 1
===========================================================================
org.jfree.chart.plot.CategoryPlot.checkAxisIndices(java.util.List):::EXIT1468
===========================================================================
org.jfree.chart.plot.CategoryPlot.checkAxisIndices(java.util.List):::EXIT
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE)
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_VALUE_LABEL_FONT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_VALUE_LABEL_FONT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT.getClass().getName())
org.jfree.chart.plot.CategoryPlot.localizationResources == orig(org.jfree.chart.plot.CategoryPlot.localizationResources)
org.jfree.chart.plot.CategoryPlot.localizationResources.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.localizationResources.getClass().getName())
this.orientation == orig(this.orientation)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL)
org.jfree.chart.plot.PlotOrientation.VERTICAL == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name.toString == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name.toString)
org.jfree.chart.plot.PlotOrientation.VERTICAL.name == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL.name)
org.jfree.chart.plot.PlotOrientation.VERTICAL.name.toString == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL.name.toString)
this.orientation.name == orig(this.orientation.name)
this.orientation.name.toString == orig(this.orientation.name.toString)
this.axisOffset == orig(this.axisOffset)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.top == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.top)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.left == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.left)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.bottom == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.bottom)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.right == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.right)
this.axisOffset.unitType == orig(this.axisOffset.unitType)
org.jfree.chart.util.UnitType.ABSOLUTE == orig(org.jfree.chart.util.UnitType.ABSOLUTE)
org.jfree.chart.util.UnitType.RELATIVE == orig(org.jfree.chart.util.UnitType.RELATIVE)
this.axisOffset.unitType.name == orig(this.axisOffset.unitType.name)
this.axisOffset.unitType.name.toString == orig(this.axisOffset.unitType.name.toString)
this.axisOffset.top == orig(this.axisOffset.top)
this.axisOffset.left == orig(this.axisOffset.left)
this.axisOffset.bottom == orig(this.axisOffset.bottom)
this.axisOffset.right == orig(this.axisOffset.right)
this.domainAxes == orig(this.domainAxes)
this.domainAxes.objects == orig(this.domainAxes.objects)
this.domainAxes.objects.getClass().getName() == orig(this.domainAxes.objects.getClass().getName())
this.domainAxes.objects[] == orig(this.domainAxes.objects[])
this.domainAxes.size == orig(this.domainAxes.size)
this.domainAxes.increment == orig(this.domainAxes.increment)
this.domainAxisLocations == orig(this.domainAxisLocations)
this.domainAxisLocations.objects == orig(this.domainAxisLocations.objects)
this.domainAxisLocations.objects.getClass().getName() == orig(this.domainAxisLocations.objects.getClass().getName())
this.domainAxisLocations.objects[] == orig(this.domainAxisLocations.objects[])
this.domainAxisLocations.size == orig(this.domainAxisLocations.size)
this.domainAxisLocations.increment == orig(this.domainAxisLocations.increment)
this.drawSharedDomainAxis == orig(this.drawSharedDomainAxis)
this.rangeAxes == orig(this.rangeAxes)
this.rangeAxes.objects == orig(this.rangeAxes.objects)
this.rangeAxes.objects.getClass().getName() == orig(this.rangeAxes.objects.getClass().getName())
this.rangeAxes.objects[] == orig(this.rangeAxes.objects[])
this.rangeAxes.size == orig(this.rangeAxes.size)
this.rangeAxes.increment == orig(this.rangeAxes.increment)
this.rangeAxisLocations == orig(this.rangeAxisLocations)
this.rangeAxisLocations.objects == orig(this.rangeAxisLocations.objects)
this.rangeAxisLocations.objects.getClass().getName() == orig(this.rangeAxisLocations.objects.getClass().getName())
this.rangeAxisLocations.objects[] == orig(this.rangeAxisLocations.objects[])
this.rangeAxisLocations.size == orig(this.rangeAxisLocations.size)
this.rangeAxisLocations.increment == orig(this.rangeAxisLocations.increment)
this.datasets == orig(this.datasets)
this.datasets.objects == orig(this.datasets.objects)
this.datasets.objects.getClass().getName() == orig(this.datasets.objects.getClass().getName())
this.datasets.objects[] == orig(this.datasets.objects[])
this.datasets.size == orig(this.datasets.size)
this.datasets.increment == orig(this.datasets.increment)
this.datasetToDomainAxesMap == orig(this.datasetToDomainAxesMap)
this.datasetToRangeAxesMap == orig(this.datasetToRangeAxesMap)
this.renderers == orig(this.renderers)
this.renderers.objects == orig(this.renderers.objects)
this.renderers.objects.getClass().getName() == orig(this.renderers.objects.getClass().getName())
this.renderers.objects[] == orig(this.renderers.objects[])
this.renderers.size == orig(this.renderers.size)
this.renderers.increment == orig(this.renderers.increment)
this.renderingOrder == orig(this.renderingOrder)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name.toString == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name.toString)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name.toString == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name.toString)
this.renderingOrder.name == orig(this.renderingOrder.name)
this.renderingOrder.name.toString == orig(this.renderingOrder.name.toString)
this.columnRenderingOrder == orig(this.columnRenderingOrder)
org.jfree.chart.util.SortOrder.ASCENDING == orig(org.jfree.chart.util.SortOrder.ASCENDING)
org.jfree.chart.util.SortOrder.DESCENDING == orig(org.jfree.chart.util.SortOrder.DESCENDING)
org.jfree.chart.util.SortOrder.ASCENDING.name == orig(org.jfree.chart.util.SortOrder.ASCENDING.name)
org.jfree.chart.util.SortOrder.ASCENDING.name.toString == orig(org.jfree.chart.util.SortOrder.ASCENDING.name.toString)
org.jfree.chart.util.SortOrder.DESCENDING.name == orig(org.jfree.chart.util.SortOrder.DESCENDING.name)
org.jfree.chart.util.SortOrder.DESCENDING.name.toString == orig(org.jfree.chart.util.SortOrder.DESCENDING.name.toString)
this.columnRenderingOrder.name == orig(this.columnRenderingOrder.name)
this.columnRenderingOrder.name.toString == orig(this.columnRenderingOrder.name.toString)
this.rowRenderingOrder == orig(this.rowRenderingOrder)
this.rowRenderingOrder.name == orig(this.rowRenderingOrder.name)
this.rowRenderingOrder.name.toString == orig(this.rowRenderingOrder.name.toString)
this.domainGridlinesVisible == orig(this.domainGridlinesVisible)
this.domainGridlinePosition == orig(this.domainGridlinePosition)
this.domainGridlineStroke == orig(this.domainGridlineStroke)
this.domainGridlinePaint == orig(this.domainGridlinePaint)
this.rangeZeroBaselineVisible == orig(this.rangeZeroBaselineVisible)
this.rangeZeroBaselineStroke == orig(this.rangeZeroBaselineStroke)
this.rangeZeroBaselinePaint == orig(this.rangeZeroBaselinePaint)
this.rangeGridlinesVisible == orig(this.rangeGridlinesVisible)
this.rangeGridlineStroke == orig(this.rangeGridlineStroke)
this.rangeGridlinePaint == orig(this.rangeGridlinePaint)
this.rangeMinorGridlinesVisible == orig(this.rangeMinorGridlinesVisible)
this.rangeMinorGridlineStroke == orig(this.rangeMinorGridlineStroke)
this.rangeMinorGridlinePaint == orig(this.rangeMinorGridlinePaint)
this.anchorValue == orig(this.anchorValue)
this.crosshairDatasetIndex == orig(this.crosshairDatasetIndex)
this.domainCrosshairVisible == orig(this.domainCrosshairVisible)
this.domainCrosshairRowKey == orig(this.domainCrosshairRowKey)
this.domainCrosshairColumnKey == orig(this.domainCrosshairColumnKey)
this.domainCrosshairStroke == orig(this.domainCrosshairStroke)
this.domainCrosshairPaint == orig(this.domainCrosshairPaint)
this.rangeCrosshairVisible == orig(this.rangeCrosshairVisible)
this.rangeCrosshairValue == orig(this.rangeCrosshairValue)
this.rangeCrosshairStroke == orig(this.rangeCrosshairStroke)
this.rangeCrosshairPaint == orig(this.rangeCrosshairPaint)
this.rangeCrosshairLockedOnData == orig(this.rangeCrosshairLockedOnData)
this.foregroundDomainMarkers == orig(this.foregroundDomainMarkers)
this.backgroundDomainMarkers == orig(this.backgroundDomainMarkers)
this.foregroundRangeMarkers == orig(this.foregroundRangeMarkers)
this.backgroundRangeMarkers == orig(this.backgroundRangeMarkers)
this.annotations == orig(this.annotations)
this.weight == orig(this.weight)
this.fixedDomainAxisSpace == orig(this.fixedDomainAxisSpace)
this.fixedRangeAxisSpace == orig(this.fixedRangeAxisSpace)
this.fixedLegendItems == orig(this.fixedLegendItems)
this.rangePannable == orig(this.rangePannable)
this.shadowGenerator == orig(this.shadowGenerator)
org.jfree.chart.plot.Plot.ZERO == orig(org.jfree.chart.plot.Plot.ZERO)
org.jfree.chart.plot.Plot.ZERO.getClass().getName() == orig(org.jfree.chart.plot.Plot.ZERO.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_INSETS == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name.toString == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name.toString)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.top == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.top)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.left == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.left)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.right == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.right)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName())
this.parent == orig(this.parent)
org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener == orig(org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener)
this.datasetGroup == orig(this.datasetGroup)
this.noDataMessage == orig(this.noDataMessage)
this.noDataMessageFont == orig(this.noDataMessageFont)
this.noDataMessagePaint == orig(this.noDataMessagePaint)
this.noDataMessagePaint.getClass().getName() == orig(this.noDataMessagePaint.getClass().getName())
this.insets == orig(this.insets)
this.insets.unitType == orig(this.insets.unitType)
this.insets.unitType.name == orig(this.insets.unitType.name)
this.insets.unitType.name.toString == orig(this.insets.unitType.name.toString)
this.insets.top == orig(this.insets.top)
this.insets.left == orig(this.insets.left)
this.insets.bottom == orig(this.insets.bottom)
this.insets.right == orig(this.insets.right)
this.outlineVisible == orig(this.outlineVisible)
this.outlineStroke == orig(this.outlineStroke)
this.outlineStroke.getClass().getName() == orig(this.outlineStroke.getClass().getName())
this.outlinePaint == orig(this.outlinePaint)
this.outlinePaint.getClass().getName() == orig(this.outlinePaint.getClass().getName())
this.backgroundPaint == orig(this.backgroundPaint)
this.backgroundPaint.getClass().getName() == orig(this.backgroundPaint.getClass().getName())
this.backgroundImage == orig(this.backgroundImage)
this.backgroundImageAlignment == orig(this.backgroundImageAlignment)
this.backgroundImageAlpha == orig(this.backgroundImageAlpha)
this.foregroundAlpha == orig(this.foregroundAlpha)
this.backgroundAlpha == orig(this.backgroundAlpha)
this.drawingSupplier == orig(this.drawingSupplier)
this.drawingSupplier.getClass().getName() == orig(this.drawingSupplier.getClass().getName())
this.listenerList == orig(this.listenerList)
this.notify == orig(this.notify)
indices[] == orig(indices[])
this.domainAxes.size == 1
this.domainAxisLocations.objects[] has only one value, of length 8
this.domainAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.domainAxisLocations.size == 1
this.rangeAxisLocations.objects[] has only one value, of length 8
this.rangeAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.rangeAxisLocations.size == 1
this.datasets.objects[] contains only nulls and has only one value, of length 8
this.datasets.objects[] elements == null
this.datasets.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.datasets.objects[].getClass().getName() elements == null
this.renderers.objects[] contains only nulls and has only one value, of length 8
this.renderers.objects[] elements == null
this.renderers.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.renderers.objects[].getClass().getName() elements == null
this.renderers.size == 1
this.domainGridlinePosition == null
this.domainGridlineStroke == null
this.domainGridlinePaint == null
this.rangeZeroBaselineStroke == null
this.rangeZeroBaselinePaint == null
this.rangeGridlinesVisible == false
this.rangeGridlineStroke == null
this.rangeGridlinePaint == null
this.rangeMinorGridlineStroke == null
this.rangeMinorGridlinePaint == null
this.domainCrosshairStroke == null
this.domainCrosshairPaint == null
this.rangeCrosshairStroke == null
this.rangeCrosshairPaint == null
this.foregroundDomainMarkers == null
this.backgroundDomainMarkers == null
this.foregroundRangeMarkers == null
this.backgroundRangeMarkers == null
this.annotations == null
this.shadowGenerator == null
indices[].getClass().getName() == [java.lang.Integer]
indices[].getClass().getName() elements == java.lang.Integer.class
===========================================================================
org.jfree.chart.plot.CategoryPlot.configureDomainAxes():::ENTER
this.domainAxes.size == 1
this.domainAxisLocations.objects[] has only one value, of length 8
this.domainAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.domainAxisLocations.size == 1
this.rangeAxes.size == 1
this.rangeAxisLocations.objects[] has only one value, of length 8
this.rangeAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.rangeAxisLocations.size == 1
this.renderers.size == 1
===========================================================================
org.jfree.chart.plot.CategoryPlot.configureDomainAxes():::EXIT
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE)
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_VALUE_LABEL_FONT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_VALUE_LABEL_FONT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT.getClass().getName())
org.jfree.chart.plot.CategoryPlot.localizationResources == orig(org.jfree.chart.plot.CategoryPlot.localizationResources)
org.jfree.chart.plot.CategoryPlot.localizationResources.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.localizationResources.getClass().getName())
this.orientation == orig(this.orientation)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL)
org.jfree.chart.plot.PlotOrientation.VERTICAL == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name.toString == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name.toString)
org.jfree.chart.plot.PlotOrientation.VERTICAL.name == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL.name)
org.jfree.chart.plot.PlotOrientation.VERTICAL.name.toString == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL.name.toString)
this.orientation.name == orig(this.orientation.name)
this.orientation.name.toString == orig(this.orientation.name.toString)
this.axisOffset == orig(this.axisOffset)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.top == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.top)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.left == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.left)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.bottom == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.bottom)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.right == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.right)
this.axisOffset.unitType == orig(this.axisOffset.unitType)
org.jfree.chart.util.UnitType.ABSOLUTE == orig(org.jfree.chart.util.UnitType.ABSOLUTE)
org.jfree.chart.util.UnitType.RELATIVE == orig(org.jfree.chart.util.UnitType.RELATIVE)
this.axisOffset.unitType.name == orig(this.axisOffset.unitType.name)
this.axisOffset.unitType.name.toString == orig(this.axisOffset.unitType.name.toString)
this.axisOffset.top == orig(this.axisOffset.top)
this.axisOffset.left == orig(this.axisOffset.left)
this.axisOffset.bottom == orig(this.axisOffset.bottom)
this.axisOffset.right == orig(this.axisOffset.right)
this.domainAxes == orig(this.domainAxes)
this.domainAxes.objects == orig(this.domainAxes.objects)
this.domainAxes.objects.getClass().getName() == orig(this.domainAxes.objects.getClass().getName())
this.domainAxes.objects[] == orig(this.domainAxes.objects[])
this.domainAxes.size == orig(this.domainAxes.size)
this.domainAxes.increment == orig(this.domainAxes.increment)
this.domainAxisLocations == orig(this.domainAxisLocations)
this.domainAxisLocations.objects == orig(this.domainAxisLocations.objects)
this.domainAxisLocations.objects.getClass().getName() == orig(this.domainAxisLocations.objects.getClass().getName())
this.domainAxisLocations.objects[] == orig(this.domainAxisLocations.objects[])
this.domainAxisLocations.size == orig(this.domainAxisLocations.size)
this.domainAxisLocations.increment == orig(this.domainAxisLocations.increment)
this.drawSharedDomainAxis == orig(this.drawSharedDomainAxis)
this.rangeAxes == orig(this.rangeAxes)
this.rangeAxes.objects == orig(this.rangeAxes.objects)
this.rangeAxes.objects.getClass().getName() == orig(this.rangeAxes.objects.getClass().getName())
this.rangeAxes.objects[] == orig(this.rangeAxes.objects[])
this.rangeAxes.size == orig(this.rangeAxes.size)
this.rangeAxes.increment == orig(this.rangeAxes.increment)
this.rangeAxisLocations == orig(this.rangeAxisLocations)
this.rangeAxisLocations.objects == orig(this.rangeAxisLocations.objects)
this.rangeAxisLocations.objects.getClass().getName() == orig(this.rangeAxisLocations.objects.getClass().getName())
this.rangeAxisLocations.objects[] == orig(this.rangeAxisLocations.objects[])
this.rangeAxisLocations.size == orig(this.rangeAxisLocations.size)
this.rangeAxisLocations.increment == orig(this.rangeAxisLocations.increment)
this.datasets == orig(this.datasets)
this.datasets.objects == orig(this.datasets.objects)
this.datasets.objects.getClass().getName() == orig(this.datasets.objects.getClass().getName())
this.datasets.objects[] == orig(this.datasets.objects[])
this.datasets.size == orig(this.datasets.size)
this.datasets.increment == orig(this.datasets.increment)
this.datasetToDomainAxesMap == orig(this.datasetToDomainAxesMap)
this.datasetToRangeAxesMap == orig(this.datasetToRangeAxesMap)
this.renderers == orig(this.renderers)
this.renderers.objects == orig(this.renderers.objects)
this.renderers.objects.getClass().getName() == orig(this.renderers.objects.getClass().getName())
this.renderers.objects[] == orig(this.renderers.objects[])
this.renderers.size == orig(this.renderers.size)
this.renderers.increment == orig(this.renderers.increment)
this.renderingOrder == orig(this.renderingOrder)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name.toString == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name.toString)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name.toString == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name.toString)
this.renderingOrder.name == orig(this.renderingOrder.name)
this.renderingOrder.name.toString == orig(this.renderingOrder.name.toString)
this.columnRenderingOrder == orig(this.columnRenderingOrder)
org.jfree.chart.util.SortOrder.ASCENDING == orig(org.jfree.chart.util.SortOrder.ASCENDING)
org.jfree.chart.util.SortOrder.DESCENDING == orig(org.jfree.chart.util.SortOrder.DESCENDING)
org.jfree.chart.util.SortOrder.ASCENDING.name == orig(org.jfree.chart.util.SortOrder.ASCENDING.name)
org.jfree.chart.util.SortOrder.ASCENDING.name.toString == orig(org.jfree.chart.util.SortOrder.ASCENDING.name.toString)
org.jfree.chart.util.SortOrder.DESCENDING.name == orig(org.jfree.chart.util.SortOrder.DESCENDING.name)
org.jfree.chart.util.SortOrder.DESCENDING.name.toString == orig(org.jfree.chart.util.SortOrder.DESCENDING.name.toString)
this.columnRenderingOrder.name == orig(this.columnRenderingOrder.name)
this.columnRenderingOrder.name.toString == orig(this.columnRenderingOrder.name.toString)
this.rowRenderingOrder == orig(this.rowRenderingOrder)
this.rowRenderingOrder.name == orig(this.rowRenderingOrder.name)
this.rowRenderingOrder.name.toString == orig(this.rowRenderingOrder.name.toString)
this.domainGridlinesVisible == orig(this.domainGridlinesVisible)
this.domainGridlinePosition == orig(this.domainGridlinePosition)
org.jfree.chart.axis.CategoryAnchor.START == orig(org.jfree.chart.axis.CategoryAnchor.START)
org.jfree.chart.axis.CategoryAnchor.MIDDLE == orig(org.jfree.chart.axis.CategoryAnchor.MIDDLE)
org.jfree.chart.axis.CategoryAnchor.END == orig(org.jfree.chart.axis.CategoryAnchor.END)
org.jfree.chart.axis.CategoryAnchor.START.name == orig(org.jfree.chart.axis.CategoryAnchor.START.name)
org.jfree.chart.axis.CategoryAnchor.START.name.toString == orig(org.jfree.chart.axis.CategoryAnchor.START.name.toString)
org.jfree.chart.axis.CategoryAnchor.MIDDLE.name == orig(org.jfree.chart.axis.CategoryAnchor.MIDDLE.name)
org.jfree.chart.axis.CategoryAnchor.MIDDLE.name.toString == orig(org.jfree.chart.axis.CategoryAnchor.MIDDLE.name.toString)
org.jfree.chart.axis.CategoryAnchor.END.name == orig(org.jfree.chart.axis.CategoryAnchor.END.name)
org.jfree.chart.axis.CategoryAnchor.END.name.toString == orig(org.jfree.chart.axis.CategoryAnchor.END.name.toString)
this.domainGridlinePosition.name == orig(this.domainGridlinePosition.name)
this.domainGridlinePosition.name.toString == orig(this.domainGridlinePosition.name.toString)
this.domainGridlineStroke == orig(this.domainGridlineStroke)
this.domainGridlineStroke.getClass().getName() == orig(this.domainGridlineStroke.getClass().getName())
this.domainGridlinePaint == orig(this.domainGridlinePaint)
this.domainGridlinePaint.getClass().getName() == orig(this.domainGridlinePaint.getClass().getName())
this.rangeZeroBaselineVisible == orig(this.rangeZeroBaselineVisible)
this.rangeZeroBaselineStroke == orig(this.rangeZeroBaselineStroke)
this.rangeZeroBaselineStroke.getClass().getName() == orig(this.rangeZeroBaselineStroke.getClass().getName())
this.rangeZeroBaselinePaint == orig(this.rangeZeroBaselinePaint)
this.rangeZeroBaselinePaint.getClass().getName() == orig(this.rangeZeroBaselinePaint.getClass().getName())
this.rangeGridlinesVisible == orig(this.rangeGridlinesVisible)
this.rangeGridlineStroke == orig(this.rangeGridlineStroke)
this.rangeGridlineStroke.getClass().getName() == orig(this.rangeGridlineStroke.getClass().getName())
this.rangeGridlinePaint == orig(this.rangeGridlinePaint)
this.rangeGridlinePaint.getClass().getName() == orig(this.rangeGridlinePaint.getClass().getName())
this.rangeMinorGridlinesVisible == orig(this.rangeMinorGridlinesVisible)
this.rangeMinorGridlineStroke == orig(this.rangeMinorGridlineStroke)
this.rangeMinorGridlineStroke.getClass().getName() == orig(this.rangeMinorGridlineStroke.getClass().getName())
this.rangeMinorGridlinePaint == orig(this.rangeMinorGridlinePaint)
this.rangeMinorGridlinePaint.getClass().getName() == orig(this.rangeMinorGridlinePaint.getClass().getName())
this.anchorValue == orig(this.anchorValue)
this.crosshairDatasetIndex == orig(this.crosshairDatasetIndex)
this.domainCrosshairVisible == orig(this.domainCrosshairVisible)
this.domainCrosshairRowKey == orig(this.domainCrosshairRowKey)
this.domainCrosshairColumnKey == orig(this.domainCrosshairColumnKey)
this.domainCrosshairStroke == orig(this.domainCrosshairStroke)
this.domainCrosshairStroke.getClass().getName() == orig(this.domainCrosshairStroke.getClass().getName())
this.domainCrosshairPaint == orig(this.domainCrosshairPaint)
this.domainCrosshairPaint.getClass().getName() == orig(this.domainCrosshairPaint.getClass().getName())
this.rangeCrosshairVisible == orig(this.rangeCrosshairVisible)
this.rangeCrosshairValue == orig(this.rangeCrosshairValue)
this.rangeCrosshairStroke == orig(this.rangeCrosshairStroke)
this.rangeCrosshairStroke.getClass().getName() == orig(this.rangeCrosshairStroke.getClass().getName())
this.rangeCrosshairPaint == orig(this.rangeCrosshairPaint)
this.rangeCrosshairPaint.getClass().getName() == orig(this.rangeCrosshairPaint.getClass().getName())
this.rangeCrosshairLockedOnData == orig(this.rangeCrosshairLockedOnData)
this.foregroundDomainMarkers == orig(this.foregroundDomainMarkers)
this.foregroundDomainMarkers.getClass().getName() == orig(this.foregroundDomainMarkers.getClass().getName())
this.backgroundDomainMarkers == orig(this.backgroundDomainMarkers)
this.backgroundDomainMarkers.getClass().getName() == orig(this.backgroundDomainMarkers.getClass().getName())
this.foregroundRangeMarkers == orig(this.foregroundRangeMarkers)
this.foregroundRangeMarkers.getClass().getName() == orig(this.foregroundRangeMarkers.getClass().getName())
this.backgroundRangeMarkers == orig(this.backgroundRangeMarkers)
this.backgroundRangeMarkers.getClass().getName() == orig(this.backgroundRangeMarkers.getClass().getName())
this.annotations == orig(this.annotations)
this.annotations[] == orig(this.annotations[])
this.annotations.getClass().getName() == orig(this.annotations.getClass().getName())
this.weight == orig(this.weight)
this.fixedDomainAxisSpace == orig(this.fixedDomainAxisSpace)
this.fixedRangeAxisSpace == orig(this.fixedRangeAxisSpace)
this.fixedLegendItems == orig(this.fixedLegendItems)
this.rangePannable == orig(this.rangePannable)
this.shadowGenerator == orig(this.shadowGenerator)
this.shadowGenerator.getClass().getName() == orig(this.shadowGenerator.getClass().getName())
org.jfree.chart.plot.Plot.ZERO == orig(org.jfree.chart.plot.Plot.ZERO)
org.jfree.chart.plot.Plot.ZERO.getClass().getName() == orig(org.jfree.chart.plot.Plot.ZERO.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_INSETS == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name.toString == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name.toString)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.top == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.top)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.left == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.left)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.right == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.right)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName())
this.parent == orig(this.parent)
org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener == orig(org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener)
this.datasetGroup == orig(this.datasetGroup)
this.noDataMessage == orig(this.noDataMessage)
this.noDataMessageFont == orig(this.noDataMessageFont)
this.noDataMessagePaint == orig(this.noDataMessagePaint)
this.noDataMessagePaint.getClass().getName() == orig(this.noDataMessagePaint.getClass().getName())
this.insets == orig(this.insets)
this.insets.unitType == orig(this.insets.unitType)
this.insets.unitType.name == orig(this.insets.unitType.name)
this.insets.unitType.name.toString == orig(this.insets.unitType.name.toString)
this.insets.top == orig(this.insets.top)
this.insets.left == orig(this.insets.left)
this.insets.bottom == orig(this.insets.bottom)
this.insets.right == orig(this.insets.right)
this.outlineVisible == orig(this.outlineVisible)
this.outlineStroke == orig(this.outlineStroke)
this.outlineStroke.getClass().getName() == orig(this.outlineStroke.getClass().getName())
this.outlinePaint == orig(this.outlinePaint)
this.outlinePaint.getClass().getName() == orig(this.outlinePaint.getClass().getName())
this.backgroundPaint == orig(this.backgroundPaint)
this.backgroundPaint.getClass().getName() == orig(this.backgroundPaint.getClass().getName())
this.backgroundImage == orig(this.backgroundImage)
this.backgroundImageAlignment == orig(this.backgroundImageAlignment)
this.backgroundImageAlpha == orig(this.backgroundImageAlpha)
this.foregroundAlpha == orig(this.foregroundAlpha)
this.backgroundAlpha == orig(this.backgroundAlpha)
this.drawingSupplier == orig(this.drawingSupplier)
this.drawingSupplier.getClass().getName() == orig(this.drawingSupplier.getClass().getName())
this.listenerList == orig(this.listenerList)
this.notify == orig(this.notify)
this.domainAxes.size == 1
this.domainAxisLocations.objects[] has only one value, of length 8
this.domainAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.domainAxisLocations.size == 1
this.rangeAxes.size == 1
this.rangeAxisLocations.objects[] has only one value, of length 8
this.rangeAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.rangeAxisLocations.size == 1
this.renderers.size == 1
===========================================================================
org.jfree.chart.plot.CategoryPlot.configureRangeAxes():::ENTER
this.domainAxes.size == 1
this.domainAxisLocations.objects[] has only one value, of length 8
this.domainAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.domainAxisLocations.size == 1
this.rangeAxes.size == 1
this.rangeAxisLocations.objects[] has only one value, of length 8
this.rangeAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.rangeAxisLocations.size == 1
this.renderers.size == 1
===========================================================================
org.jfree.chart.plot.CategoryPlot.configureRangeAxes():::EXIT
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE)
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_VALUE_LABEL_FONT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_VALUE_LABEL_FONT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT.getClass().getName())
org.jfree.chart.plot.CategoryPlot.localizationResources == orig(org.jfree.chart.plot.CategoryPlot.localizationResources)
org.jfree.chart.plot.CategoryPlot.localizationResources.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.localizationResources.getClass().getName())
this.orientation == orig(this.orientation)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL)
org.jfree.chart.plot.PlotOrientation.VERTICAL == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name.toString == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name.toString)
org.jfree.chart.plot.PlotOrientation.VERTICAL.name == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL.name)
org.jfree.chart.plot.PlotOrientation.VERTICAL.name.toString == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL.name.toString)
this.orientation.name == orig(this.orientation.name)
this.orientation.name.toString == orig(this.orientation.name.toString)
this.axisOffset == orig(this.axisOffset)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.top == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.top)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.left == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.left)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.bottom == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.bottom)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.right == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.right)
this.axisOffset.unitType == orig(this.axisOffset.unitType)
org.jfree.chart.util.UnitType.ABSOLUTE == orig(org.jfree.chart.util.UnitType.ABSOLUTE)
org.jfree.chart.util.UnitType.RELATIVE == orig(org.jfree.chart.util.UnitType.RELATIVE)
this.axisOffset.unitType.name == orig(this.axisOffset.unitType.name)
this.axisOffset.unitType.name.toString == orig(this.axisOffset.unitType.name.toString)
this.axisOffset.top == orig(this.axisOffset.top)
this.axisOffset.left == orig(this.axisOffset.left)
this.axisOffset.bottom == orig(this.axisOffset.bottom)
this.axisOffset.right == orig(this.axisOffset.right)
this.domainAxes == orig(this.domainAxes)
this.domainAxes.objects == orig(this.domainAxes.objects)
this.domainAxes.objects.getClass().getName() == orig(this.domainAxes.objects.getClass().getName())
this.domainAxes.objects[] == orig(this.domainAxes.objects[])
this.domainAxes.size == orig(this.domainAxes.size)
this.domainAxes.increment == orig(this.domainAxes.increment)
this.domainAxisLocations == orig(this.domainAxisLocations)
this.domainAxisLocations.objects == orig(this.domainAxisLocations.objects)
this.domainAxisLocations.objects.getClass().getName() == orig(this.domainAxisLocations.objects.getClass().getName())
this.domainAxisLocations.objects[] == orig(this.domainAxisLocations.objects[])
this.domainAxisLocations.size == orig(this.domainAxisLocations.size)
this.domainAxisLocations.increment == orig(this.domainAxisLocations.increment)
this.drawSharedDomainAxis == orig(this.drawSharedDomainAxis)
this.rangeAxes == orig(this.rangeAxes)
this.rangeAxes.objects == orig(this.rangeAxes.objects)
this.rangeAxes.objects.getClass().getName() == orig(this.rangeAxes.objects.getClass().getName())
this.rangeAxes.objects[] == orig(this.rangeAxes.objects[])
this.rangeAxes.size == orig(this.rangeAxes.size)
this.rangeAxes.increment == orig(this.rangeAxes.increment)
this.rangeAxisLocations == orig(this.rangeAxisLocations)
this.rangeAxisLocations.objects == orig(this.rangeAxisLocations.objects)
this.rangeAxisLocations.objects.getClass().getName() == orig(this.rangeAxisLocations.objects.getClass().getName())
this.rangeAxisLocations.objects[] == orig(this.rangeAxisLocations.objects[])
this.rangeAxisLocations.size == orig(this.rangeAxisLocations.size)
this.rangeAxisLocations.increment == orig(this.rangeAxisLocations.increment)
this.datasets == orig(this.datasets)
this.datasets.objects == orig(this.datasets.objects)
this.datasets.objects.getClass().getName() == orig(this.datasets.objects.getClass().getName())
this.datasets.objects[] == orig(this.datasets.objects[])
this.datasets.size == orig(this.datasets.size)
this.datasets.increment == orig(this.datasets.increment)
this.datasetToDomainAxesMap == orig(this.datasetToDomainAxesMap)
this.datasetToRangeAxesMap == orig(this.datasetToRangeAxesMap)
this.renderers == orig(this.renderers)
this.renderers.objects == orig(this.renderers.objects)
this.renderers.objects.getClass().getName() == orig(this.renderers.objects.getClass().getName())
this.renderers.objects[] == orig(this.renderers.objects[])
this.renderers.size == orig(this.renderers.size)
this.renderers.increment == orig(this.renderers.increment)
this.renderingOrder == orig(this.renderingOrder)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name.toString == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name.toString)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name.toString == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name.toString)
this.renderingOrder.name == orig(this.renderingOrder.name)
this.renderingOrder.name.toString == orig(this.renderingOrder.name.toString)
this.columnRenderingOrder == orig(this.columnRenderingOrder)
org.jfree.chart.util.SortOrder.ASCENDING == orig(org.jfree.chart.util.SortOrder.ASCENDING)
org.jfree.chart.util.SortOrder.DESCENDING == orig(org.jfree.chart.util.SortOrder.DESCENDING)
org.jfree.chart.util.SortOrder.ASCENDING.name == orig(org.jfree.chart.util.SortOrder.ASCENDING.name)
org.jfree.chart.util.SortOrder.ASCENDING.name.toString == orig(org.jfree.chart.util.SortOrder.ASCENDING.name.toString)
org.jfree.chart.util.SortOrder.DESCENDING.name == orig(org.jfree.chart.util.SortOrder.DESCENDING.name)
org.jfree.chart.util.SortOrder.DESCENDING.name.toString == orig(org.jfree.chart.util.SortOrder.DESCENDING.name.toString)
this.columnRenderingOrder.name == orig(this.columnRenderingOrder.name)
this.columnRenderingOrder.name.toString == orig(this.columnRenderingOrder.name.toString)
this.rowRenderingOrder == orig(this.rowRenderingOrder)
this.rowRenderingOrder.name == orig(this.rowRenderingOrder.name)
this.rowRenderingOrder.name.toString == orig(this.rowRenderingOrder.name.toString)
this.domainGridlinesVisible == orig(this.domainGridlinesVisible)
this.domainGridlinePosition == orig(this.domainGridlinePosition)
org.jfree.chart.axis.CategoryAnchor.START == orig(org.jfree.chart.axis.CategoryAnchor.START)
org.jfree.chart.axis.CategoryAnchor.MIDDLE == orig(org.jfree.chart.axis.CategoryAnchor.MIDDLE)
org.jfree.chart.axis.CategoryAnchor.END == orig(org.jfree.chart.axis.CategoryAnchor.END)
org.jfree.chart.axis.CategoryAnchor.START.name == orig(org.jfree.chart.axis.CategoryAnchor.START.name)
org.jfree.chart.axis.CategoryAnchor.START.name.toString == orig(org.jfree.chart.axis.CategoryAnchor.START.name.toString)
org.jfree.chart.axis.CategoryAnchor.MIDDLE.name == orig(org.jfree.chart.axis.CategoryAnchor.MIDDLE.name)
org.jfree.chart.axis.CategoryAnchor.MIDDLE.name.toString == orig(org.jfree.chart.axis.CategoryAnchor.MIDDLE.name.toString)
org.jfree.chart.axis.CategoryAnchor.END.name == orig(org.jfree.chart.axis.CategoryAnchor.END.name)
org.jfree.chart.axis.CategoryAnchor.END.name.toString == orig(org.jfree.chart.axis.CategoryAnchor.END.name.toString)
this.domainGridlinePosition.name == orig(this.domainGridlinePosition.name)
this.domainGridlinePosition.name.toString == orig(this.domainGridlinePosition.name.toString)
this.domainGridlineStroke == orig(this.domainGridlineStroke)
this.domainGridlineStroke.getClass().getName() == orig(this.domainGridlineStroke.getClass().getName())
this.domainGridlinePaint == orig(this.domainGridlinePaint)
this.domainGridlinePaint.getClass().getName() == orig(this.domainGridlinePaint.getClass().getName())
this.rangeZeroBaselineVisible == orig(this.rangeZeroBaselineVisible)
this.rangeZeroBaselineStroke == orig(this.rangeZeroBaselineStroke)
this.rangeZeroBaselineStroke.getClass().getName() == orig(this.rangeZeroBaselineStroke.getClass().getName())
this.rangeZeroBaselinePaint == orig(this.rangeZeroBaselinePaint)
this.rangeZeroBaselinePaint.getClass().getName() == orig(this.rangeZeroBaselinePaint.getClass().getName())
this.rangeGridlinesVisible == orig(this.rangeGridlinesVisible)
this.rangeGridlineStroke == orig(this.rangeGridlineStroke)
this.rangeGridlineStroke.getClass().getName() == orig(this.rangeGridlineStroke.getClass().getName())
this.rangeGridlinePaint == orig(this.rangeGridlinePaint)
this.rangeGridlinePaint.getClass().getName() == orig(this.rangeGridlinePaint.getClass().getName())
this.rangeMinorGridlinesVisible == orig(this.rangeMinorGridlinesVisible)
this.rangeMinorGridlineStroke == orig(this.rangeMinorGridlineStroke)
this.rangeMinorGridlineStroke.getClass().getName() == orig(this.rangeMinorGridlineStroke.getClass().getName())
this.rangeMinorGridlinePaint == orig(this.rangeMinorGridlinePaint)
this.rangeMinorGridlinePaint.getClass().getName() == orig(this.rangeMinorGridlinePaint.getClass().getName())
this.anchorValue == orig(this.anchorValue)
this.crosshairDatasetIndex == orig(this.crosshairDatasetIndex)
this.domainCrosshairVisible == orig(this.domainCrosshairVisible)
this.domainCrosshairRowKey == orig(this.domainCrosshairRowKey)
this.domainCrosshairColumnKey == orig(this.domainCrosshairColumnKey)
this.domainCrosshairStroke == orig(this.domainCrosshairStroke)
this.domainCrosshairStroke.getClass().getName() == orig(this.domainCrosshairStroke.getClass().getName())
this.domainCrosshairPaint == orig(this.domainCrosshairPaint)
this.domainCrosshairPaint.getClass().getName() == orig(this.domainCrosshairPaint.getClass().getName())
this.rangeCrosshairVisible == orig(this.rangeCrosshairVisible)
this.rangeCrosshairValue == orig(this.rangeCrosshairValue)
this.rangeCrosshairStroke == orig(this.rangeCrosshairStroke)
this.rangeCrosshairStroke.getClass().getName() == orig(this.rangeCrosshairStroke.getClass().getName())
this.rangeCrosshairPaint == orig(this.rangeCrosshairPaint)
this.rangeCrosshairPaint.getClass().getName() == orig(this.rangeCrosshairPaint.getClass().getName())
this.rangeCrosshairLockedOnData == orig(this.rangeCrosshairLockedOnData)
this.foregroundDomainMarkers == orig(this.foregroundDomainMarkers)
this.foregroundDomainMarkers.getClass().getName() == orig(this.foregroundDomainMarkers.getClass().getName())
this.backgroundDomainMarkers == orig(this.backgroundDomainMarkers)
this.backgroundDomainMarkers.getClass().getName() == orig(this.backgroundDomainMarkers.getClass().getName())
this.foregroundRangeMarkers == orig(this.foregroundRangeMarkers)
this.foregroundRangeMarkers.getClass().getName() == orig(this.foregroundRangeMarkers.getClass().getName())
this.backgroundRangeMarkers == orig(this.backgroundRangeMarkers)
this.backgroundRangeMarkers.getClass().getName() == orig(this.backgroundRangeMarkers.getClass().getName())
this.annotations == orig(this.annotations)
this.annotations[] == orig(this.annotations[])
this.annotations.getClass().getName() == orig(this.annotations.getClass().getName())
this.weight == orig(this.weight)
this.fixedDomainAxisSpace == orig(this.fixedDomainAxisSpace)
this.fixedRangeAxisSpace == orig(this.fixedRangeAxisSpace)
this.fixedLegendItems == orig(this.fixedLegendItems)
this.rangePannable == orig(this.rangePannable)
this.shadowGenerator == orig(this.shadowGenerator)
this.shadowGenerator.getClass().getName() == orig(this.shadowGenerator.getClass().getName())
org.jfree.chart.plot.Plot.ZERO == orig(org.jfree.chart.plot.Plot.ZERO)
org.jfree.chart.plot.Plot.ZERO.getClass().getName() == orig(org.jfree.chart.plot.Plot.ZERO.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_INSETS == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name.toString == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name.toString)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.top == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.top)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.left == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.left)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.right == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.right)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName())
this.parent == orig(this.parent)
org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener == orig(org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener)
this.datasetGroup == orig(this.datasetGroup)
this.noDataMessage == orig(this.noDataMessage)
this.noDataMessageFont == orig(this.noDataMessageFont)
this.noDataMessagePaint == orig(this.noDataMessagePaint)
this.noDataMessagePaint.getClass().getName() == orig(this.noDataMessagePaint.getClass().getName())
this.insets == orig(this.insets)
this.insets.unitType == orig(this.insets.unitType)
this.insets.unitType.name == orig(this.insets.unitType.name)
this.insets.unitType.name.toString == orig(this.insets.unitType.name.toString)
this.insets.top == orig(this.insets.top)
this.insets.left == orig(this.insets.left)
this.insets.bottom == orig(this.insets.bottom)
this.insets.right == orig(this.insets.right)
this.outlineVisible == orig(this.outlineVisible)
this.outlineStroke == orig(this.outlineStroke)
this.outlineStroke.getClass().getName() == orig(this.outlineStroke.getClass().getName())
this.outlinePaint == orig(this.outlinePaint)
this.outlinePaint.getClass().getName() == orig(this.outlinePaint.getClass().getName())
this.backgroundPaint == orig(this.backgroundPaint)
this.backgroundPaint.getClass().getName() == orig(this.backgroundPaint.getClass().getName())
this.backgroundImage == orig(this.backgroundImage)
this.backgroundImageAlignment == orig(this.backgroundImageAlignment)
this.backgroundImageAlpha == orig(this.backgroundImageAlpha)
this.foregroundAlpha == orig(this.foregroundAlpha)
this.backgroundAlpha == orig(this.backgroundAlpha)
this.drawingSupplier == orig(this.drawingSupplier)
this.drawingSupplier.getClass().getName() == orig(this.drawingSupplier.getClass().getName())
this.listenerList == orig(this.listenerList)
this.notify == orig(this.notify)
this.domainAxes.size == 1
this.domainAxisLocations.objects[] has only one value, of length 8
this.domainAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.domainAxisLocations.size == 1
this.rangeAxes.size == 1
this.rangeAxisLocations.objects[] has only one value, of length 8
this.rangeAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.rangeAxisLocations.size == 1
this.renderers.size == 1
===========================================================================
org.jfree.chart.plot.CategoryPlot.datasetChanged(org.jfree.data.event.DatasetChangeEvent):::ENTER
this.domainAxes.size == 1
this.domainAxisLocations.objects[] has only one value, of length 8
this.domainAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.domainAxisLocations.size == 1
this.rangeAxisLocations.objects[] has only one value, of length 8
this.rangeAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.rangeAxisLocations.size == 1
this.renderers.size == 1
event.dataset.getClass().getName() == org.jfree.data.category.DefaultCategoryDataset.class
===========================================================================
org.jfree.chart.plot.CategoryPlot.datasetChanged(org.jfree.data.event.DatasetChangeEvent):::EXIT
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE)
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_VALUE_LABEL_FONT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_VALUE_LABEL_FONT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT.getClass().getName())
org.jfree.chart.plot.CategoryPlot.localizationResources == orig(org.jfree.chart.plot.CategoryPlot.localizationResources)
org.jfree.chart.plot.CategoryPlot.localizationResources.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.localizationResources.getClass().getName())
this.orientation == orig(this.orientation)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL)
org.jfree.chart.plot.PlotOrientation.VERTICAL == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name.toString == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name.toString)
org.jfree.chart.plot.PlotOrientation.VERTICAL.name == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL.name)
org.jfree.chart.plot.PlotOrientation.VERTICAL.name.toString == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL.name.toString)
this.orientation.name == orig(this.orientation.name)
this.orientation.name.toString == orig(this.orientation.name.toString)
this.axisOffset == orig(this.axisOffset)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.top == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.top)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.left == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.left)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.bottom == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.bottom)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.right == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.right)
this.axisOffset.unitType == orig(this.axisOffset.unitType)
org.jfree.chart.util.UnitType.ABSOLUTE == orig(org.jfree.chart.util.UnitType.ABSOLUTE)
org.jfree.chart.util.UnitType.RELATIVE == orig(org.jfree.chart.util.UnitType.RELATIVE)
this.axisOffset.unitType.name == orig(this.axisOffset.unitType.name)
this.axisOffset.unitType.name.toString == orig(this.axisOffset.unitType.name.toString)
this.axisOffset.top == orig(this.axisOffset.top)
this.axisOffset.left == orig(this.axisOffset.left)
this.axisOffset.bottom == orig(this.axisOffset.bottom)
this.axisOffset.right == orig(this.axisOffset.right)
this.domainAxes == orig(this.domainAxes)
this.domainAxes.objects == orig(this.domainAxes.objects)
this.domainAxes.objects.getClass().getName() == orig(this.domainAxes.objects.getClass().getName())
this.domainAxes.objects[] == orig(this.domainAxes.objects[])
this.domainAxes.size == orig(this.domainAxes.size)
this.domainAxes.increment == orig(this.domainAxes.increment)
this.domainAxisLocations == orig(this.domainAxisLocations)
this.domainAxisLocations.objects == orig(this.domainAxisLocations.objects)
this.domainAxisLocations.objects.getClass().getName() == orig(this.domainAxisLocations.objects.getClass().getName())
this.domainAxisLocations.objects[] == orig(this.domainAxisLocations.objects[])
this.domainAxisLocations.size == orig(this.domainAxisLocations.size)
this.domainAxisLocations.increment == orig(this.domainAxisLocations.increment)
this.drawSharedDomainAxis == orig(this.drawSharedDomainAxis)
this.rangeAxes == orig(this.rangeAxes)
this.rangeAxes.objects == orig(this.rangeAxes.objects)
this.rangeAxes.objects.getClass().getName() == orig(this.rangeAxes.objects.getClass().getName())
this.rangeAxes.objects[] == orig(this.rangeAxes.objects[])
this.rangeAxes.size == orig(this.rangeAxes.size)
this.rangeAxes.increment == orig(this.rangeAxes.increment)
this.rangeAxisLocations == orig(this.rangeAxisLocations)
this.rangeAxisLocations.objects == orig(this.rangeAxisLocations.objects)
this.rangeAxisLocations.objects.getClass().getName() == orig(this.rangeAxisLocations.objects.getClass().getName())
this.rangeAxisLocations.objects[] == orig(this.rangeAxisLocations.objects[])
this.rangeAxisLocations.size == orig(this.rangeAxisLocations.size)
this.rangeAxisLocations.increment == orig(this.rangeAxisLocations.increment)
this.datasets == orig(this.datasets)
this.datasets.objects == orig(this.datasets.objects)
this.datasets.objects.getClass().getName() == orig(this.datasets.objects.getClass().getName())
this.datasets.objects[] == orig(this.datasets.objects[])
this.datasets.size == orig(this.datasets.size)
this.datasets.increment == orig(this.datasets.increment)
this.datasetToDomainAxesMap == orig(this.datasetToDomainAxesMap)
this.datasetToRangeAxesMap == orig(this.datasetToRangeAxesMap)
this.renderers == orig(this.renderers)
this.renderers.objects == orig(this.renderers.objects)
this.renderers.objects.getClass().getName() == orig(this.renderers.objects.getClass().getName())
this.renderers.objects[] == orig(this.renderers.objects[])
this.renderers.size == orig(this.renderers.size)
this.renderers.increment == orig(this.renderers.increment)
this.renderingOrder == orig(this.renderingOrder)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name.toString == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name.toString)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name.toString == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name.toString)
this.renderingOrder.name == orig(this.renderingOrder.name)
this.renderingOrder.name.toString == orig(this.renderingOrder.name.toString)
this.columnRenderingOrder == orig(this.columnRenderingOrder)
org.jfree.chart.util.SortOrder.ASCENDING == orig(org.jfree.chart.util.SortOrder.ASCENDING)
org.jfree.chart.util.SortOrder.DESCENDING == orig(org.jfree.chart.util.SortOrder.DESCENDING)
org.jfree.chart.util.SortOrder.ASCENDING.name == orig(org.jfree.chart.util.SortOrder.ASCENDING.name)
org.jfree.chart.util.SortOrder.ASCENDING.name.toString == orig(org.jfree.chart.util.SortOrder.ASCENDING.name.toString)
org.jfree.chart.util.SortOrder.DESCENDING.name == orig(org.jfree.chart.util.SortOrder.DESCENDING.name)
org.jfree.chart.util.SortOrder.DESCENDING.name.toString == orig(org.jfree.chart.util.SortOrder.DESCENDING.name.toString)
this.columnRenderingOrder.name == orig(this.columnRenderingOrder.name)
this.columnRenderingOrder.name.toString == orig(this.columnRenderingOrder.name.toString)
this.rowRenderingOrder == orig(this.rowRenderingOrder)
this.rowRenderingOrder.name == orig(this.rowRenderingOrder.name)
this.rowRenderingOrder.name.toString == orig(this.rowRenderingOrder.name.toString)
this.domainGridlinesVisible == orig(this.domainGridlinesVisible)
this.domainGridlinePosition == orig(this.domainGridlinePosition)
org.jfree.chart.axis.CategoryAnchor.START == orig(org.jfree.chart.axis.CategoryAnchor.START)
org.jfree.chart.axis.CategoryAnchor.MIDDLE == orig(org.jfree.chart.axis.CategoryAnchor.MIDDLE)
org.jfree.chart.axis.CategoryAnchor.END == orig(org.jfree.chart.axis.CategoryAnchor.END)
org.jfree.chart.axis.CategoryAnchor.START.name == orig(org.jfree.chart.axis.CategoryAnchor.START.name)
org.jfree.chart.axis.CategoryAnchor.START.name.toString == orig(org.jfree.chart.axis.CategoryAnchor.START.name.toString)
org.jfree.chart.axis.CategoryAnchor.MIDDLE.name == orig(org.jfree.chart.axis.CategoryAnchor.MIDDLE.name)
org.jfree.chart.axis.CategoryAnchor.MIDDLE.name.toString == orig(org.jfree.chart.axis.CategoryAnchor.MIDDLE.name.toString)
org.jfree.chart.axis.CategoryAnchor.END.name == orig(org.jfree.chart.axis.CategoryAnchor.END.name)
org.jfree.chart.axis.CategoryAnchor.END.name.toString == orig(org.jfree.chart.axis.CategoryAnchor.END.name.toString)
this.domainGridlinePosition.name == orig(this.domainGridlinePosition.name)
this.domainGridlinePosition.name.toString == orig(this.domainGridlinePosition.name.toString)
this.domainGridlineStroke == orig(this.domainGridlineStroke)
this.domainGridlineStroke.getClass().getName() == orig(this.domainGridlineStroke.getClass().getName())
this.domainGridlinePaint == orig(this.domainGridlinePaint)
this.domainGridlinePaint.getClass().getName() == orig(this.domainGridlinePaint.getClass().getName())
this.rangeZeroBaselineVisible == orig(this.rangeZeroBaselineVisible)
this.rangeZeroBaselineStroke == orig(this.rangeZeroBaselineStroke)
this.rangeZeroBaselineStroke.getClass().getName() == orig(this.rangeZeroBaselineStroke.getClass().getName())
this.rangeZeroBaselinePaint == orig(this.rangeZeroBaselinePaint)
this.rangeZeroBaselinePaint.getClass().getName() == orig(this.rangeZeroBaselinePaint.getClass().getName())
this.rangeGridlinesVisible == orig(this.rangeGridlinesVisible)
this.rangeGridlineStroke == orig(this.rangeGridlineStroke)
this.rangeGridlineStroke.getClass().getName() == orig(this.rangeGridlineStroke.getClass().getName())
this.rangeGridlinePaint == orig(this.rangeGridlinePaint)
this.rangeGridlinePaint.getClass().getName() == orig(this.rangeGridlinePaint.getClass().getName())
this.rangeMinorGridlinesVisible == orig(this.rangeMinorGridlinesVisible)
this.rangeMinorGridlineStroke == orig(this.rangeMinorGridlineStroke)
this.rangeMinorGridlineStroke.getClass().getName() == orig(this.rangeMinorGridlineStroke.getClass().getName())
this.rangeMinorGridlinePaint == orig(this.rangeMinorGridlinePaint)
this.rangeMinorGridlinePaint.getClass().getName() == orig(this.rangeMinorGridlinePaint.getClass().getName())
this.anchorValue == orig(this.anchorValue)
this.crosshairDatasetIndex == orig(this.crosshairDatasetIndex)
this.domainCrosshairVisible == orig(this.domainCrosshairVisible)
this.domainCrosshairRowKey == orig(this.domainCrosshairRowKey)
this.domainCrosshairColumnKey == orig(this.domainCrosshairColumnKey)
this.domainCrosshairStroke == orig(this.domainCrosshairStroke)
this.domainCrosshairStroke.getClass().getName() == orig(this.domainCrosshairStroke.getClass().getName())
this.domainCrosshairPaint == orig(this.domainCrosshairPaint)
this.domainCrosshairPaint.getClass().getName() == orig(this.domainCrosshairPaint.getClass().getName())
this.rangeCrosshairVisible == orig(this.rangeCrosshairVisible)
this.rangeCrosshairValue == orig(this.rangeCrosshairValue)
this.rangeCrosshairStroke == orig(this.rangeCrosshairStroke)
this.rangeCrosshairStroke.getClass().getName() == orig(this.rangeCrosshairStroke.getClass().getName())
this.rangeCrosshairPaint == orig(this.rangeCrosshairPaint)
this.rangeCrosshairPaint.getClass().getName() == orig(this.rangeCrosshairPaint.getClass().getName())
this.rangeCrosshairLockedOnData == orig(this.rangeCrosshairLockedOnData)
this.foregroundDomainMarkers == orig(this.foregroundDomainMarkers)
this.foregroundDomainMarkers.getClass().getName() == orig(this.foregroundDomainMarkers.getClass().getName())
this.backgroundDomainMarkers == orig(this.backgroundDomainMarkers)
this.backgroundDomainMarkers.getClass().getName() == orig(this.backgroundDomainMarkers.getClass().getName())
this.foregroundRangeMarkers == orig(this.foregroundRangeMarkers)
this.foregroundRangeMarkers.getClass().getName() == orig(this.foregroundRangeMarkers.getClass().getName())
this.backgroundRangeMarkers == orig(this.backgroundRangeMarkers)
this.backgroundRangeMarkers.getClass().getName() == orig(this.backgroundRangeMarkers.getClass().getName())
this.annotations == orig(this.annotations)
this.annotations[] == orig(this.annotations[])
this.annotations.getClass().getName() == orig(this.annotations.getClass().getName())
this.weight == orig(this.weight)
this.fixedDomainAxisSpace == orig(this.fixedDomainAxisSpace)
this.fixedRangeAxisSpace == orig(this.fixedRangeAxisSpace)
this.fixedLegendItems == orig(this.fixedLegendItems)
this.rangePannable == orig(this.rangePannable)
this.shadowGenerator == orig(this.shadowGenerator)
this.shadowGenerator.getClass().getName() == orig(this.shadowGenerator.getClass().getName())
org.jfree.chart.plot.Plot.ZERO == orig(org.jfree.chart.plot.Plot.ZERO)
org.jfree.chart.plot.Plot.ZERO.getClass().getName() == orig(org.jfree.chart.plot.Plot.ZERO.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_INSETS == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name.toString == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name.toString)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.top == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.top)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.left == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.left)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.right == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.right)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName())
this.parent == orig(this.parent)
org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener == orig(org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener)
this.datasetGroup == orig(this.datasetGroup)
this.noDataMessage == orig(this.noDataMessage)
this.noDataMessageFont == orig(this.noDataMessageFont)
this.noDataMessagePaint == orig(this.noDataMessagePaint)
this.noDataMessagePaint.getClass().getName() == orig(this.noDataMessagePaint.getClass().getName())
this.insets == orig(this.insets)
this.insets.unitType == orig(this.insets.unitType)
this.insets.unitType.name == orig(this.insets.unitType.name)
this.insets.unitType.name.toString == orig(this.insets.unitType.name.toString)
this.insets.top == orig(this.insets.top)
this.insets.left == orig(this.insets.left)
this.insets.bottom == orig(this.insets.bottom)
this.insets.right == orig(this.insets.right)
this.outlineVisible == orig(this.outlineVisible)
this.outlineStroke == orig(this.outlineStroke)
this.outlineStroke.getClass().getName() == orig(this.outlineStroke.getClass().getName())
this.outlinePaint == orig(this.outlinePaint)
this.outlinePaint.getClass().getName() == orig(this.outlinePaint.getClass().getName())
this.backgroundPaint == orig(this.backgroundPaint)
this.backgroundPaint.getClass().getName() == orig(this.backgroundPaint.getClass().getName())
this.backgroundImage == orig(this.backgroundImage)
this.backgroundImageAlignment == orig(this.backgroundImageAlignment)
this.backgroundImageAlpha == orig(this.backgroundImageAlpha)
this.foregroundAlpha == orig(this.foregroundAlpha)
this.backgroundAlpha == orig(this.backgroundAlpha)
this.drawingSupplier == orig(this.drawingSupplier)
this.drawingSupplier.getClass().getName() == orig(this.drawingSupplier.getClass().getName())
this.listenerList == orig(this.listenerList)
this.notify == orig(this.notify)
event.dataset == orig(event.dataset)
event.dataset.getClass().getName() == orig(event.dataset.getClass().getName())
event.info == orig(event.info)
this.domainAxes.size == 1
this.domainAxisLocations.objects[] has only one value, of length 8
this.domainAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.domainAxisLocations.size == 1
this.rangeAxisLocations.objects[] has only one value, of length 8
this.rangeAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.rangeAxisLocations.size == 1
this.renderers.size == 1
event.dataset.getClass().getName() == org.jfree.data.category.DefaultCategoryDataset.class
===========================================================================
org.jfree.chart.plot.CategoryPlot.getDataset(int):::ENTER
this.domainAxes.size == 1
this.domainAxisLocations.objects[] has only one value, of length 8
this.domainAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.domainAxisLocations.size == 1
this.rangeAxisLocations.objects[] has only one value, of length 8
this.rangeAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.rangeAxisLocations.size == 1
this.renderers.size == 1
index == 0
===========================================================================
org.jfree.chart.plot.CategoryPlot.getDataset(int):::EXIT
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE)
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_VALUE_LABEL_FONT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_VALUE_LABEL_FONT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT.getClass().getName())
org.jfree.chart.plot.CategoryPlot.localizationResources == orig(org.jfree.chart.plot.CategoryPlot.localizationResources)
org.jfree.chart.plot.CategoryPlot.localizationResources.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.localizationResources.getClass().getName())
this.orientation == orig(this.orientation)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL)
org.jfree.chart.plot.PlotOrientation.VERTICAL == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name.toString == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name.toString)
org.jfree.chart.plot.PlotOrientation.VERTICAL.name == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL.name)
org.jfree.chart.plot.PlotOrientation.VERTICAL.name.toString == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL.name.toString)
this.orientation.name == orig(this.orientation.name)
this.orientation.name.toString == orig(this.orientation.name.toString)
this.axisOffset == orig(this.axisOffset)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.top == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.top)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.left == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.left)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.bottom == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.bottom)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.right == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.right)
this.axisOffset.unitType == orig(this.axisOffset.unitType)
org.jfree.chart.util.UnitType.ABSOLUTE == orig(org.jfree.chart.util.UnitType.ABSOLUTE)
org.jfree.chart.util.UnitType.RELATIVE == orig(org.jfree.chart.util.UnitType.RELATIVE)
this.axisOffset.unitType.name == orig(this.axisOffset.unitType.name)
this.axisOffset.unitType.name.toString == orig(this.axisOffset.unitType.name.toString)
this.axisOffset.top == orig(this.axisOffset.top)
this.axisOffset.left == orig(this.axisOffset.left)
this.axisOffset.bottom == orig(this.axisOffset.bottom)
this.axisOffset.right == orig(this.axisOffset.right)
this.domainAxes == orig(this.domainAxes)
this.domainAxes.objects == orig(this.domainAxes.objects)
this.domainAxes.objects.getClass().getName() == orig(this.domainAxes.objects.getClass().getName())
this.domainAxes.objects[] == orig(this.domainAxes.objects[])
this.domainAxes.size == orig(this.domainAxes.size)
this.domainAxes.increment == orig(this.domainAxes.increment)
this.domainAxisLocations == orig(this.domainAxisLocations)
this.domainAxisLocations.objects == orig(this.domainAxisLocations.objects)
this.domainAxisLocations.objects.getClass().getName() == orig(this.domainAxisLocations.objects.getClass().getName())
this.domainAxisLocations.objects[] == orig(this.domainAxisLocations.objects[])
this.domainAxisLocations.size == orig(this.domainAxisLocations.size)
this.domainAxisLocations.increment == orig(this.domainAxisLocations.increment)
this.drawSharedDomainAxis == orig(this.drawSharedDomainAxis)
this.rangeAxes == orig(this.rangeAxes)
this.rangeAxes.objects == orig(this.rangeAxes.objects)
this.rangeAxes.objects.getClass().getName() == orig(this.rangeAxes.objects.getClass().getName())
this.rangeAxes.objects[] == orig(this.rangeAxes.objects[])
this.rangeAxes.size == orig(this.rangeAxes.size)
this.rangeAxes.increment == orig(this.rangeAxes.increment)
this.rangeAxisLocations == orig(this.rangeAxisLocations)
this.rangeAxisLocations.objects == orig(this.rangeAxisLocations.objects)
this.rangeAxisLocations.objects.getClass().getName() == orig(this.rangeAxisLocations.objects.getClass().getName())
this.rangeAxisLocations.objects[] == orig(this.rangeAxisLocations.objects[])
this.rangeAxisLocations.size == orig(this.rangeAxisLocations.size)
this.rangeAxisLocations.increment == orig(this.rangeAxisLocations.increment)
this.datasets == orig(this.datasets)
this.datasets.objects == orig(this.datasets.objects)
this.datasets.objects.getClass().getName() == orig(this.datasets.objects.getClass().getName())
this.datasets.objects[] == orig(this.datasets.objects[])
this.datasets.size == orig(this.datasets.size)
this.datasets.increment == orig(this.datasets.increment)
this.datasetToDomainAxesMap == orig(this.datasetToDomainAxesMap)
this.datasetToRangeAxesMap == orig(this.datasetToRangeAxesMap)
this.renderers == orig(this.renderers)
this.renderers.objects == orig(this.renderers.objects)
this.renderers.objects.getClass().getName() == orig(this.renderers.objects.getClass().getName())
this.renderers.objects[] == orig(this.renderers.objects[])
this.renderers.size == orig(this.renderers.size)
this.renderers.increment == orig(this.renderers.increment)
this.renderingOrder == orig(this.renderingOrder)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name.toString == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name.toString)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name.toString == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name.toString)
this.renderingOrder.name == orig(this.renderingOrder.name)
this.renderingOrder.name.toString == orig(this.renderingOrder.name.toString)
this.columnRenderingOrder == orig(this.columnRenderingOrder)
org.jfree.chart.util.SortOrder.ASCENDING == orig(org.jfree.chart.util.SortOrder.ASCENDING)
org.jfree.chart.util.SortOrder.DESCENDING == orig(org.jfree.chart.util.SortOrder.DESCENDING)
org.jfree.chart.util.SortOrder.ASCENDING.name == orig(org.jfree.chart.util.SortOrder.ASCENDING.name)
org.jfree.chart.util.SortOrder.ASCENDING.name.toString == orig(org.jfree.chart.util.SortOrder.ASCENDING.name.toString)
org.jfree.chart.util.SortOrder.DESCENDING.name == orig(org.jfree.chart.util.SortOrder.DESCENDING.name)
org.jfree.chart.util.SortOrder.DESCENDING.name.toString == orig(org.jfree.chart.util.SortOrder.DESCENDING.name.toString)
this.columnRenderingOrder.name == orig(this.columnRenderingOrder.name)
this.columnRenderingOrder.name.toString == orig(this.columnRenderingOrder.name.toString)
this.rowRenderingOrder == orig(this.rowRenderingOrder)
this.rowRenderingOrder.name == orig(this.rowRenderingOrder.name)
this.rowRenderingOrder.name.toString == orig(this.rowRenderingOrder.name.toString)
this.domainGridlinesVisible == orig(this.domainGridlinesVisible)
this.domainGridlinePosition == orig(this.domainGridlinePosition)
org.jfree.chart.axis.CategoryAnchor.START == orig(org.jfree.chart.axis.CategoryAnchor.START)
org.jfree.chart.axis.CategoryAnchor.MIDDLE == orig(org.jfree.chart.axis.CategoryAnchor.MIDDLE)
org.jfree.chart.axis.CategoryAnchor.END == orig(org.jfree.chart.axis.CategoryAnchor.END)
org.jfree.chart.axis.CategoryAnchor.START.name == orig(org.jfree.chart.axis.CategoryAnchor.START.name)
org.jfree.chart.axis.CategoryAnchor.START.name.toString == orig(org.jfree.chart.axis.CategoryAnchor.START.name.toString)
org.jfree.chart.axis.CategoryAnchor.MIDDLE.name == orig(org.jfree.chart.axis.CategoryAnchor.MIDDLE.name)
org.jfree.chart.axis.CategoryAnchor.MIDDLE.name.toString == orig(org.jfree.chart.axis.CategoryAnchor.MIDDLE.name.toString)
org.jfree.chart.axis.CategoryAnchor.END.name == orig(org.jfree.chart.axis.CategoryAnchor.END.name)
org.jfree.chart.axis.CategoryAnchor.END.name.toString == orig(org.jfree.chart.axis.CategoryAnchor.END.name.toString)
this.domainGridlinePosition.name == orig(this.domainGridlinePosition.name)
this.domainGridlinePosition.name.toString == orig(this.domainGridlinePosition.name.toString)
this.domainGridlineStroke == orig(this.domainGridlineStroke)
this.domainGridlineStroke.getClass().getName() == orig(this.domainGridlineStroke.getClass().getName())
this.domainGridlinePaint == orig(this.domainGridlinePaint)
this.domainGridlinePaint.getClass().getName() == orig(this.domainGridlinePaint.getClass().getName())
this.rangeZeroBaselineVisible == orig(this.rangeZeroBaselineVisible)
this.rangeZeroBaselineStroke == orig(this.rangeZeroBaselineStroke)
this.rangeZeroBaselineStroke.getClass().getName() == orig(this.rangeZeroBaselineStroke.getClass().getName())
this.rangeZeroBaselinePaint == orig(this.rangeZeroBaselinePaint)
this.rangeZeroBaselinePaint.getClass().getName() == orig(this.rangeZeroBaselinePaint.getClass().getName())
this.rangeGridlinesVisible == orig(this.rangeGridlinesVisible)
this.rangeGridlineStroke == orig(this.rangeGridlineStroke)
this.rangeGridlineStroke.getClass().getName() == orig(this.rangeGridlineStroke.getClass().getName())
this.rangeGridlinePaint == orig(this.rangeGridlinePaint)
this.rangeGridlinePaint.getClass().getName() == orig(this.rangeGridlinePaint.getClass().getName())
this.rangeMinorGridlinesVisible == orig(this.rangeMinorGridlinesVisible)
this.rangeMinorGridlineStroke == orig(this.rangeMinorGridlineStroke)
this.rangeMinorGridlineStroke.getClass().getName() == orig(this.rangeMinorGridlineStroke.getClass().getName())
this.rangeMinorGridlinePaint == orig(this.rangeMinorGridlinePaint)
this.rangeMinorGridlinePaint.getClass().getName() == orig(this.rangeMinorGridlinePaint.getClass().getName())
this.anchorValue == orig(this.anchorValue)
this.crosshairDatasetIndex == orig(this.crosshairDatasetIndex)
this.domainCrosshairVisible == orig(this.domainCrosshairVisible)
this.domainCrosshairRowKey == orig(this.domainCrosshairRowKey)
this.domainCrosshairColumnKey == orig(this.domainCrosshairColumnKey)
this.domainCrosshairStroke == orig(this.domainCrosshairStroke)
this.domainCrosshairStroke.getClass().getName() == orig(this.domainCrosshairStroke.getClass().getName())
this.domainCrosshairPaint == orig(this.domainCrosshairPaint)
this.domainCrosshairPaint.getClass().getName() == orig(this.domainCrosshairPaint.getClass().getName())
this.rangeCrosshairVisible == orig(this.rangeCrosshairVisible)
this.rangeCrosshairValue == orig(this.rangeCrosshairValue)
this.rangeCrosshairStroke == orig(this.rangeCrosshairStroke)
this.rangeCrosshairStroke.getClass().getName() == orig(this.rangeCrosshairStroke.getClass().getName())
this.rangeCrosshairPaint == orig(this.rangeCrosshairPaint)
this.rangeCrosshairPaint.getClass().getName() == orig(this.rangeCrosshairPaint.getClass().getName())
this.rangeCrosshairLockedOnData == orig(this.rangeCrosshairLockedOnData)
this.foregroundDomainMarkers == orig(this.foregroundDomainMarkers)
this.foregroundDomainMarkers.getClass().getName() == orig(this.foregroundDomainMarkers.getClass().getName())
this.backgroundDomainMarkers == orig(this.backgroundDomainMarkers)
this.backgroundDomainMarkers.getClass().getName() == orig(this.backgroundDomainMarkers.getClass().getName())
this.foregroundRangeMarkers == orig(this.foregroundRangeMarkers)
this.foregroundRangeMarkers.getClass().getName() == orig(this.foregroundRangeMarkers.getClass().getName())
this.backgroundRangeMarkers == orig(this.backgroundRangeMarkers)
this.backgroundRangeMarkers.getClass().getName() == orig(this.backgroundRangeMarkers.getClass().getName())
this.annotations == orig(this.annotations)
this.annotations[] == orig(this.annotations[])
this.annotations.getClass().getName() == orig(this.annotations.getClass().getName())
this.weight == orig(this.weight)
this.fixedDomainAxisSpace == orig(this.fixedDomainAxisSpace)
this.fixedRangeAxisSpace == orig(this.fixedRangeAxisSpace)
this.fixedLegendItems == orig(this.fixedLegendItems)
this.rangePannable == orig(this.rangePannable)
this.shadowGenerator == orig(this.shadowGenerator)
this.shadowGenerator.getClass().getName() == orig(this.shadowGenerator.getClass().getName())
org.jfree.chart.plot.Plot.ZERO == orig(org.jfree.chart.plot.Plot.ZERO)
org.jfree.chart.plot.Plot.ZERO.getClass().getName() == orig(org.jfree.chart.plot.Plot.ZERO.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_INSETS == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name.toString == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name.toString)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.top == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.top)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.left == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.left)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.right == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.right)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName())
this.parent == orig(this.parent)
org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener == orig(org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener)
this.datasetGroup == orig(this.datasetGroup)
this.noDataMessage == orig(this.noDataMessage)
this.noDataMessageFont == orig(this.noDataMessageFont)
this.noDataMessagePaint == orig(this.noDataMessagePaint)
this.noDataMessagePaint.getClass().getName() == orig(this.noDataMessagePaint.getClass().getName())
this.insets == orig(this.insets)
this.insets.unitType == orig(this.insets.unitType)
this.insets.unitType.name == orig(this.insets.unitType.name)
this.insets.unitType.name.toString == orig(this.insets.unitType.name.toString)
this.insets.top == orig(this.insets.top)
this.insets.left == orig(this.insets.left)
this.insets.bottom == orig(this.insets.bottom)
this.insets.right == orig(this.insets.right)
this.outlineVisible == orig(this.outlineVisible)
this.outlineStroke == orig(this.outlineStroke)
this.outlineStroke.getClass().getName() == orig(this.outlineStroke.getClass().getName())
this.outlinePaint == orig(this.outlinePaint)
this.outlinePaint.getClass().getName() == orig(this.outlinePaint.getClass().getName())
this.backgroundPaint == orig(this.backgroundPaint)
this.backgroundPaint.getClass().getName() == orig(this.backgroundPaint.getClass().getName())
this.backgroundImage == orig(this.backgroundImage)
this.backgroundImageAlignment == orig(this.backgroundImageAlignment)
this.backgroundImageAlpha == orig(this.backgroundImageAlpha)
this.foregroundAlpha == orig(this.foregroundAlpha)
this.backgroundAlpha == orig(this.backgroundAlpha)
this.drawingSupplier == orig(this.drawingSupplier)
this.drawingSupplier.getClass().getName() == orig(this.drawingSupplier.getClass().getName())
this.listenerList == orig(this.listenerList)
this.notify == orig(this.notify)
this.domainAxes.size == 1
this.domainAxisLocations.objects[] has only one value, of length 8
this.domainAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.domainAxisLocations.size == 1
this.rangeAxisLocations.objects[] has only one value, of length 8
this.rangeAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.rangeAxisLocations.size == 1
this.renderers.size == 1
return.getClass().getName() == org.jfree.data.category.DefaultCategoryDataset.class
===========================================================================
org.jfree.chart.plot.CategoryPlot.getIndexOf(org.jfree.chart.renderer.category.CategoryItemRenderer):::ENTER
this.domainAxes.size == 1
this.domainAxisLocations.objects[] has only one value, of length 8
this.domainAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.domainAxisLocations.size == 1
this.rangeAxes.size == 1
this.rangeAxisLocations.objects[] has only one value, of length 8
this.rangeAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.rangeAxisLocations.size == 1
this.datasets.objects[] has only one value, of length 8
this.datasets.objects[].getClass().getName() == [org.jfree.data.category.DefaultCategoryDataset, null, null, null, null, null, null, null]
this.renderers.objects[] has only one value, of length 8
this.renderers.objects[].getClass().getName() == [org.jfree.chart.renderer.category.LineAndShapeRenderer, null, null, null, null, null, null, null]
this.renderers.size == 1
this.domainGridlinePosition has only one value
this.domainGridlineStroke has only one value
this.domainGridlinePaint has only one value
this.rangeZeroBaselineStroke has only one value
this.rangeZeroBaselinePaint has only one value
this.rangeGridlinesVisible == true
this.rangeGridlineStroke has only one value
this.rangeGridlinePaint has only one value
this.rangeMinorGridlineStroke has only one value
this.rangeMinorGridlinePaint has only one value
this.domainCrosshairStroke has only one value
this.domainCrosshairPaint has only one value
this.rangeCrosshairStroke has only one value
this.rangeCrosshairPaint has only one value
this.foregroundDomainMarkers has only one value
this.backgroundDomainMarkers has only one value
this.foregroundRangeMarkers has only one value
this.backgroundRangeMarkers has only one value
this.annotations has only one value
this.shadowGenerator has only one value
renderer has only one value
renderer.getClass().getName() == org.jfree.chart.renderer.category.LineAndShapeRenderer.class
===========================================================================
org.jfree.chart.plot.CategoryPlot.getIndexOf(org.jfree.chart.renderer.category.CategoryItemRenderer):::EXIT
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE)
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_VALUE_LABEL_FONT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_VALUE_LABEL_FONT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT.getClass().getName())
org.jfree.chart.plot.CategoryPlot.localizationResources == orig(org.jfree.chart.plot.CategoryPlot.localizationResources)
org.jfree.chart.plot.CategoryPlot.localizationResources.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.localizationResources.getClass().getName())
this.orientation == orig(this.orientation)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL)
org.jfree.chart.plot.PlotOrientation.VERTICAL == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name.toString == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name.toString)
org.jfree.chart.plot.PlotOrientation.VERTICAL.name == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL.name)
org.jfree.chart.plot.PlotOrientation.VERTICAL.name.toString == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL.name.toString)
this.orientation.name == orig(this.orientation.name)
this.orientation.name.toString == orig(this.orientation.name.toString)
this.axisOffset == orig(this.axisOffset)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.top == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.top)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.left == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.left)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.bottom == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.bottom)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.right == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.right)
this.axisOffset.unitType == orig(this.axisOffset.unitType)
org.jfree.chart.util.UnitType.ABSOLUTE == orig(org.jfree.chart.util.UnitType.ABSOLUTE)
org.jfree.chart.util.UnitType.RELATIVE == orig(org.jfree.chart.util.UnitType.RELATIVE)
this.axisOffset.unitType.name == orig(this.axisOffset.unitType.name)
this.axisOffset.unitType.name.toString == orig(this.axisOffset.unitType.name.toString)
this.axisOffset.top == orig(this.axisOffset.top)
this.axisOffset.left == orig(this.axisOffset.left)
this.axisOffset.bottom == orig(this.axisOffset.bottom)
this.axisOffset.right == orig(this.axisOffset.right)
this.domainAxes == orig(this.domainAxes)
this.domainAxes.objects == orig(this.domainAxes.objects)
this.domainAxes.objects.getClass().getName() == orig(this.domainAxes.objects.getClass().getName())
this.domainAxes.objects[] == orig(this.domainAxes.objects[])
this.domainAxes.size == orig(this.domainAxes.size)
this.domainAxes.increment == orig(this.domainAxes.increment)
this.domainAxisLocations == orig(this.domainAxisLocations)
this.domainAxisLocations.objects == orig(this.domainAxisLocations.objects)
this.domainAxisLocations.objects.getClass().getName() == orig(this.domainAxisLocations.objects.getClass().getName())
this.domainAxisLocations.objects[] == orig(this.domainAxisLocations.objects[])
this.domainAxisLocations.size == orig(this.domainAxisLocations.size)
this.domainAxisLocations.increment == orig(this.domainAxisLocations.increment)
this.drawSharedDomainAxis == orig(this.drawSharedDomainAxis)
this.rangeAxes == orig(this.rangeAxes)
this.rangeAxes.objects == orig(this.rangeAxes.objects)
this.rangeAxes.objects.getClass().getName() == orig(this.rangeAxes.objects.getClass().getName())
this.rangeAxes.objects[] == orig(this.rangeAxes.objects[])
this.rangeAxes.size == orig(this.rangeAxes.size)
this.rangeAxes.increment == orig(this.rangeAxes.increment)
this.rangeAxisLocations == orig(this.rangeAxisLocations)
this.rangeAxisLocations.objects == orig(this.rangeAxisLocations.objects)
this.rangeAxisLocations.objects.getClass().getName() == orig(this.rangeAxisLocations.objects.getClass().getName())
this.rangeAxisLocations.objects[] == orig(this.rangeAxisLocations.objects[])
this.rangeAxisLocations.size == orig(this.rangeAxisLocations.size)
this.rangeAxisLocations.increment == orig(this.rangeAxisLocations.increment)
this.datasets == orig(this.datasets)
this.datasets.objects == orig(this.datasets.objects)
this.datasets.objects.getClass().getName() == orig(this.datasets.objects.getClass().getName())
this.datasets.objects[] == orig(this.datasets.objects[])
this.datasets.size == orig(this.datasets.size)
this.datasets.increment == orig(this.datasets.increment)
this.datasetToDomainAxesMap == orig(this.datasetToDomainAxesMap)
this.datasetToRangeAxesMap == orig(this.datasetToRangeAxesMap)
this.renderers == orig(this.renderers)
this.renderers.objects == orig(this.renderers.objects)
this.renderers.objects.getClass().getName() == orig(this.renderers.objects.getClass().getName())
this.renderers.objects[] == orig(this.renderers.objects[])
this.renderers.size == orig(this.renderers.size)
this.renderers.increment == orig(this.renderers.increment)
this.renderingOrder == orig(this.renderingOrder)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name.toString == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name.toString)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name.toString == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name.toString)
this.renderingOrder.name == orig(this.renderingOrder.name)
this.renderingOrder.name.toString == orig(this.renderingOrder.name.toString)
this.columnRenderingOrder == orig(this.columnRenderingOrder)
org.jfree.chart.util.SortOrder.ASCENDING == orig(org.jfree.chart.util.SortOrder.ASCENDING)
org.jfree.chart.util.SortOrder.DESCENDING == orig(org.jfree.chart.util.SortOrder.DESCENDING)
org.jfree.chart.util.SortOrder.ASCENDING.name == orig(org.jfree.chart.util.SortOrder.ASCENDING.name)
org.jfree.chart.util.SortOrder.ASCENDING.name.toString == orig(org.jfree.chart.util.SortOrder.ASCENDING.name.toString)
org.jfree.chart.util.SortOrder.DESCENDING.name == orig(org.jfree.chart.util.SortOrder.DESCENDING.name)
org.jfree.chart.util.SortOrder.DESCENDING.name.toString == orig(org.jfree.chart.util.SortOrder.DESCENDING.name.toString)
this.columnRenderingOrder.name == orig(this.columnRenderingOrder.name)
this.columnRenderingOrder.name.toString == orig(this.columnRenderingOrder.name.toString)
this.rowRenderingOrder == orig(this.rowRenderingOrder)
this.rowRenderingOrder.name == orig(this.rowRenderingOrder.name)
this.rowRenderingOrder.name.toString == orig(this.rowRenderingOrder.name.toString)
this.domainGridlinesVisible == orig(this.domainGridlinesVisible)
this.domainGridlinePosition == orig(this.domainGridlinePosition)
org.jfree.chart.axis.CategoryAnchor.START == orig(org.jfree.chart.axis.CategoryAnchor.START)
org.jfree.chart.axis.CategoryAnchor.MIDDLE == orig(org.jfree.chart.axis.CategoryAnchor.MIDDLE)
org.jfree.chart.axis.CategoryAnchor.END == orig(org.jfree.chart.axis.CategoryAnchor.END)
org.jfree.chart.axis.CategoryAnchor.START.name == orig(org.jfree.chart.axis.CategoryAnchor.START.name)
org.jfree.chart.axis.CategoryAnchor.START.name.toString == orig(org.jfree.chart.axis.CategoryAnchor.START.name.toString)
org.jfree.chart.axis.CategoryAnchor.MIDDLE.name == orig(org.jfree.chart.axis.CategoryAnchor.MIDDLE.name)
org.jfree.chart.axis.CategoryAnchor.MIDDLE.name.toString == orig(org.jfree.chart.axis.CategoryAnchor.MIDDLE.name.toString)
org.jfree.chart.axis.CategoryAnchor.END.name == orig(org.jfree.chart.axis.CategoryAnchor.END.name)
org.jfree.chart.axis.CategoryAnchor.END.name.toString == orig(org.jfree.chart.axis.CategoryAnchor.END.name.toString)
this.domainGridlinePosition.name == orig(this.domainGridlinePosition.name)
this.domainGridlinePosition.name.toString == orig(this.domainGridlinePosition.name.toString)
this.domainGridlineStroke == orig(this.domainGridlineStroke)
this.domainGridlineStroke.getClass().getName() == orig(this.domainGridlineStroke.getClass().getName())
this.domainGridlinePaint == orig(this.domainGridlinePaint)
this.domainGridlinePaint.getClass().getName() == orig(this.domainGridlinePaint.getClass().getName())
this.rangeZeroBaselineVisible == orig(this.rangeZeroBaselineVisible)
this.rangeZeroBaselineStroke == orig(this.rangeZeroBaselineStroke)
this.rangeZeroBaselineStroke.getClass().getName() == orig(this.rangeZeroBaselineStroke.getClass().getName())
this.rangeZeroBaselinePaint == orig(this.rangeZeroBaselinePaint)
this.rangeZeroBaselinePaint.getClass().getName() == orig(this.rangeZeroBaselinePaint.getClass().getName())
this.rangeGridlinesVisible == orig(this.rangeGridlinesVisible)
this.rangeGridlineStroke == orig(this.rangeGridlineStroke)
this.rangeGridlineStroke.getClass().getName() == orig(this.rangeGridlineStroke.getClass().getName())
this.rangeGridlinePaint == orig(this.rangeGridlinePaint)
this.rangeGridlinePaint.getClass().getName() == orig(this.rangeGridlinePaint.getClass().getName())
this.rangeMinorGridlinesVisible == orig(this.rangeMinorGridlinesVisible)
this.rangeMinorGridlineStroke == orig(this.rangeMinorGridlineStroke)
this.rangeMinorGridlineStroke.getClass().getName() == orig(this.rangeMinorGridlineStroke.getClass().getName())
this.rangeMinorGridlinePaint == orig(this.rangeMinorGridlinePaint)
this.rangeMinorGridlinePaint.getClass().getName() == orig(this.rangeMinorGridlinePaint.getClass().getName())
this.anchorValue == orig(this.anchorValue)
this.crosshairDatasetIndex == orig(this.crosshairDatasetIndex)
this.domainCrosshairVisible == orig(this.domainCrosshairVisible)
this.domainCrosshairRowKey == orig(this.domainCrosshairRowKey)
this.domainCrosshairColumnKey == orig(this.domainCrosshairColumnKey)
this.domainCrosshairStroke == orig(this.domainCrosshairStroke)
this.domainCrosshairStroke.getClass().getName() == orig(this.domainCrosshairStroke.getClass().getName())
this.domainCrosshairPaint == orig(this.domainCrosshairPaint)
this.domainCrosshairPaint.getClass().getName() == orig(this.domainCrosshairPaint.getClass().getName())
this.rangeCrosshairVisible == orig(this.rangeCrosshairVisible)
this.rangeCrosshairValue == orig(this.rangeCrosshairValue)
this.rangeCrosshairStroke == orig(this.rangeCrosshairStroke)
this.rangeCrosshairStroke.getClass().getName() == orig(this.rangeCrosshairStroke.getClass().getName())
this.rangeCrosshairPaint == orig(this.rangeCrosshairPaint)
this.rangeCrosshairPaint.getClass().getName() == orig(this.rangeCrosshairPaint.getClass().getName())
this.rangeCrosshairLockedOnData == orig(this.rangeCrosshairLockedOnData)
this.foregroundDomainMarkers == orig(this.foregroundDomainMarkers)
this.foregroundDomainMarkers.getClass().getName() == orig(this.foregroundDomainMarkers.getClass().getName())
this.backgroundDomainMarkers == orig(this.backgroundDomainMarkers)
this.backgroundDomainMarkers.getClass().getName() == orig(this.backgroundDomainMarkers.getClass().getName())
this.foregroundRangeMarkers == orig(this.foregroundRangeMarkers)
this.foregroundRangeMarkers.getClass().getName() == orig(this.foregroundRangeMarkers.getClass().getName())
this.backgroundRangeMarkers == orig(this.backgroundRangeMarkers)
this.backgroundRangeMarkers.getClass().getName() == orig(this.backgroundRangeMarkers.getClass().getName())
this.annotations == orig(this.annotations)
this.annotations[] == orig(this.annotations[])
this.annotations.getClass().getName() == orig(this.annotations.getClass().getName())
this.weight == orig(this.weight)
this.fixedDomainAxisSpace == orig(this.fixedDomainAxisSpace)
this.fixedRangeAxisSpace == orig(this.fixedRangeAxisSpace)
this.fixedLegendItems == orig(this.fixedLegendItems)
this.rangePannable == orig(this.rangePannable)
this.shadowGenerator == orig(this.shadowGenerator)
this.shadowGenerator.getClass().getName() == orig(this.shadowGenerator.getClass().getName())
org.jfree.chart.plot.Plot.ZERO == orig(org.jfree.chart.plot.Plot.ZERO)
org.jfree.chart.plot.Plot.ZERO.getClass().getName() == orig(org.jfree.chart.plot.Plot.ZERO.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_INSETS == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name.toString == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name.toString)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.top == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.top)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.left == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.left)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.right == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.right)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName())
this.parent == orig(this.parent)
org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener == orig(org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener)
this.datasetGroup == orig(this.datasetGroup)
this.noDataMessage == orig(this.noDataMessage)
this.noDataMessageFont == orig(this.noDataMessageFont)
this.noDataMessagePaint == orig(this.noDataMessagePaint)
this.noDataMessagePaint.getClass().getName() == orig(this.noDataMessagePaint.getClass().getName())
this.insets == orig(this.insets)
this.insets.unitType == orig(this.insets.unitType)
this.insets.unitType.name == orig(this.insets.unitType.name)
this.insets.unitType.name.toString == orig(this.insets.unitType.name.toString)
this.insets.top == orig(this.insets.top)
this.insets.left == orig(this.insets.left)
this.insets.bottom == orig(this.insets.bottom)
this.insets.right == orig(this.insets.right)
this.outlineVisible == orig(this.outlineVisible)
this.outlineStroke == orig(this.outlineStroke)
this.outlineStroke.getClass().getName() == orig(this.outlineStroke.getClass().getName())
this.outlinePaint == orig(this.outlinePaint)
this.outlinePaint.getClass().getName() == orig(this.outlinePaint.getClass().getName())
this.backgroundPaint == orig(this.backgroundPaint)
this.backgroundPaint.getClass().getName() == orig(this.backgroundPaint.getClass().getName())
this.backgroundImage == orig(this.backgroundImage)
this.backgroundImageAlignment == orig(this.backgroundImageAlignment)
this.backgroundImageAlpha == orig(this.backgroundImageAlpha)
this.foregroundAlpha == orig(this.foregroundAlpha)
this.backgroundAlpha == orig(this.backgroundAlpha)
this.drawingSupplier == orig(this.drawingSupplier)
this.drawingSupplier.getClass().getName() == orig(this.drawingSupplier.getClass().getName())
this.listenerList == orig(this.listenerList)
this.notify == orig(this.notify)
this.domainAxes.size == 1
this.domainAxisLocations.objects[] has only one value, of length 8
this.domainAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.domainAxisLocations.size == 1
this.rangeAxes.size == 1
this.rangeAxisLocations.objects[] has only one value, of length 8
this.rangeAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.rangeAxisLocations.size == 1
this.datasets.objects[] has only one value, of length 8
this.datasets.objects[].getClass().getName() == [org.jfree.data.category.DefaultCategoryDataset, null, null, null, null, null, null, null]
this.renderers.objects[] has only one value, of length 8
this.renderers.objects[].getClass().getName() == [org.jfree.chart.renderer.category.LineAndShapeRenderer, null, null, null, null, null, null, null]
this.renderers.size == 1
this.domainGridlinePosition has only one value
this.domainGridlineStroke has only one value
this.domainGridlinePaint has only one value
this.rangeZeroBaselineStroke has only one value
this.rangeZeroBaselinePaint has only one value
this.rangeGridlinesVisible == true
this.rangeGridlineStroke has only one value
this.rangeGridlinePaint has only one value
this.rangeMinorGridlineStroke has only one value
this.rangeMinorGridlinePaint has only one value
this.domainCrosshairStroke has only one value
this.domainCrosshairPaint has only one value
this.rangeCrosshairStroke has only one value
this.rangeCrosshairPaint has only one value
this.foregroundDomainMarkers has only one value
this.backgroundDomainMarkers has only one value
this.foregroundRangeMarkers has only one value
this.backgroundRangeMarkers has only one value
this.annotations has only one value
this.shadowGenerator has only one value
return == 0
===========================================================================
org.jfree.chart.plot.CategoryPlot.getRangeAxis(int):::ENTER
this.domainAxes.size == 1
this.domainAxisLocations.objects[] has only one value, of length 8
this.domainAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.domainAxisLocations.size == 1
this.rangeAxes.size == 1
this.rangeAxisLocations.objects[] has only one value, of length 8
this.rangeAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.rangeAxisLocations.size == 1
this.renderers.size == 1
index == 0
===========================================================================
org.jfree.chart.plot.CategoryPlot.getRangeAxis(int):::EXIT
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE)
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_VALUE_LABEL_FONT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_VALUE_LABEL_FONT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT.getClass().getName())
org.jfree.chart.plot.CategoryPlot.localizationResources == orig(org.jfree.chart.plot.CategoryPlot.localizationResources)
org.jfree.chart.plot.CategoryPlot.localizationResources.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.localizationResources.getClass().getName())
this.orientation == orig(this.orientation)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL)
org.jfree.chart.plot.PlotOrientation.VERTICAL == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name.toString == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name.toString)
org.jfree.chart.plot.PlotOrientation.VERTICAL.name == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL.name)
org.jfree.chart.plot.PlotOrientation.VERTICAL.name.toString == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL.name.toString)
this.orientation.name == orig(this.orientation.name)
this.orientation.name.toString == orig(this.orientation.name.toString)
this.axisOffset == orig(this.axisOffset)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.top == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.top)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.left == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.left)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.bottom == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.bottom)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.right == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.right)
this.axisOffset.unitType == orig(this.axisOffset.unitType)
org.jfree.chart.util.UnitType.ABSOLUTE == orig(org.jfree.chart.util.UnitType.ABSOLUTE)
org.jfree.chart.util.UnitType.RELATIVE == orig(org.jfree.chart.util.UnitType.RELATIVE)
this.axisOffset.unitType.name == orig(this.axisOffset.unitType.name)
this.axisOffset.unitType.name.toString == orig(this.axisOffset.unitType.name.toString)
this.axisOffset.top == orig(this.axisOffset.top)
this.axisOffset.left == orig(this.axisOffset.left)
this.axisOffset.bottom == orig(this.axisOffset.bottom)
this.axisOffset.right == orig(this.axisOffset.right)
this.domainAxes == orig(this.domainAxes)
this.domainAxes.objects == orig(this.domainAxes.objects)
this.domainAxes.objects.getClass().getName() == orig(this.domainAxes.objects.getClass().getName())
this.domainAxes.objects[] == orig(this.domainAxes.objects[])
this.domainAxes.size == orig(this.domainAxes.size)
this.domainAxes.increment == orig(this.domainAxes.increment)
this.domainAxisLocations == orig(this.domainAxisLocations)
this.domainAxisLocations.objects == orig(this.domainAxisLocations.objects)
this.domainAxisLocations.objects.getClass().getName() == orig(this.domainAxisLocations.objects.getClass().getName())
this.domainAxisLocations.objects[] == orig(this.domainAxisLocations.objects[])
this.domainAxisLocations.size == orig(this.domainAxisLocations.size)
this.domainAxisLocations.increment == orig(this.domainAxisLocations.increment)
this.drawSharedDomainAxis == orig(this.drawSharedDomainAxis)
this.rangeAxes == orig(this.rangeAxes)
this.rangeAxes.objects == orig(this.rangeAxes.objects)
this.rangeAxes.objects.getClass().getName() == orig(this.rangeAxes.objects.getClass().getName())
this.rangeAxes.objects[] == orig(this.rangeAxes.objects[])
this.rangeAxes.size == orig(this.rangeAxes.size)
this.rangeAxes.increment == orig(this.rangeAxes.increment)
this.rangeAxisLocations == orig(this.rangeAxisLocations)
this.rangeAxisLocations.objects == orig(this.rangeAxisLocations.objects)
this.rangeAxisLocations.objects.getClass().getName() == orig(this.rangeAxisLocations.objects.getClass().getName())
this.rangeAxisLocations.objects[] == orig(this.rangeAxisLocations.objects[])
this.rangeAxisLocations.size == orig(this.rangeAxisLocations.size)
this.rangeAxisLocations.increment == orig(this.rangeAxisLocations.increment)
this.datasets == orig(this.datasets)
this.datasets.objects == orig(this.datasets.objects)
this.datasets.objects.getClass().getName() == orig(this.datasets.objects.getClass().getName())
this.datasets.objects[] == orig(this.datasets.objects[])
this.datasets.size == orig(this.datasets.size)
this.datasets.increment == orig(this.datasets.increment)
this.datasetToDomainAxesMap == orig(this.datasetToDomainAxesMap)
this.datasetToRangeAxesMap == orig(this.datasetToRangeAxesMap)
this.renderers == orig(this.renderers)
this.renderers.objects == orig(this.renderers.objects)
this.renderers.objects.getClass().getName() == orig(this.renderers.objects.getClass().getName())
this.renderers.objects[] == orig(this.renderers.objects[])
this.renderers.size == orig(this.renderers.size)
this.renderers.increment == orig(this.renderers.increment)
this.renderingOrder == orig(this.renderingOrder)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name.toString == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name.toString)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name.toString == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name.toString)
this.renderingOrder.name == orig(this.renderingOrder.name)
this.renderingOrder.name.toString == orig(this.renderingOrder.name.toString)
this.columnRenderingOrder == orig(this.columnRenderingOrder)
org.jfree.chart.util.SortOrder.ASCENDING == orig(org.jfree.chart.util.SortOrder.ASCENDING)
org.jfree.chart.util.SortOrder.DESCENDING == orig(org.jfree.chart.util.SortOrder.DESCENDING)
org.jfree.chart.util.SortOrder.ASCENDING.name == orig(org.jfree.chart.util.SortOrder.ASCENDING.name)
org.jfree.chart.util.SortOrder.ASCENDING.name.toString == orig(org.jfree.chart.util.SortOrder.ASCENDING.name.toString)
org.jfree.chart.util.SortOrder.DESCENDING.name == orig(org.jfree.chart.util.SortOrder.DESCENDING.name)
org.jfree.chart.util.SortOrder.DESCENDING.name.toString == orig(org.jfree.chart.util.SortOrder.DESCENDING.name.toString)
this.columnRenderingOrder.name == orig(this.columnRenderingOrder.name)
this.columnRenderingOrder.name.toString == orig(this.columnRenderingOrder.name.toString)
this.rowRenderingOrder == orig(this.rowRenderingOrder)
this.rowRenderingOrder.name == orig(this.rowRenderingOrder.name)
this.rowRenderingOrder.name.toString == orig(this.rowRenderingOrder.name.toString)
this.domainGridlinesVisible == orig(this.domainGridlinesVisible)
this.domainGridlinePosition == orig(this.domainGridlinePosition)
org.jfree.chart.axis.CategoryAnchor.START == orig(org.jfree.chart.axis.CategoryAnchor.START)
org.jfree.chart.axis.CategoryAnchor.MIDDLE == orig(org.jfree.chart.axis.CategoryAnchor.MIDDLE)
org.jfree.chart.axis.CategoryAnchor.END == orig(org.jfree.chart.axis.CategoryAnchor.END)
org.jfree.chart.axis.CategoryAnchor.START.name == orig(org.jfree.chart.axis.CategoryAnchor.START.name)
org.jfree.chart.axis.CategoryAnchor.START.name.toString == orig(org.jfree.chart.axis.CategoryAnchor.START.name.toString)
org.jfree.chart.axis.CategoryAnchor.MIDDLE.name == orig(org.jfree.chart.axis.CategoryAnchor.MIDDLE.name)
org.jfree.chart.axis.CategoryAnchor.MIDDLE.name.toString == orig(org.jfree.chart.axis.CategoryAnchor.MIDDLE.name.toString)
org.jfree.chart.axis.CategoryAnchor.END.name == orig(org.jfree.chart.axis.CategoryAnchor.END.name)
org.jfree.chart.axis.CategoryAnchor.END.name.toString == orig(org.jfree.chart.axis.CategoryAnchor.END.name.toString)
this.domainGridlinePosition.name == orig(this.domainGridlinePosition.name)
this.domainGridlinePosition.name.toString == orig(this.domainGridlinePosition.name.toString)
this.domainGridlineStroke == orig(this.domainGridlineStroke)
this.domainGridlineStroke.getClass().getName() == orig(this.domainGridlineStroke.getClass().getName())
this.domainGridlinePaint == orig(this.domainGridlinePaint)
this.domainGridlinePaint.getClass().getName() == orig(this.domainGridlinePaint.getClass().getName())
this.rangeZeroBaselineVisible == orig(this.rangeZeroBaselineVisible)
this.rangeZeroBaselineStroke == orig(this.rangeZeroBaselineStroke)
this.rangeZeroBaselineStroke.getClass().getName() == orig(this.rangeZeroBaselineStroke.getClass().getName())
this.rangeZeroBaselinePaint == orig(this.rangeZeroBaselinePaint)
this.rangeZeroBaselinePaint.getClass().getName() == orig(this.rangeZeroBaselinePaint.getClass().getName())
this.rangeGridlinesVisible == orig(this.rangeGridlinesVisible)
this.rangeGridlineStroke == orig(this.rangeGridlineStroke)
this.rangeGridlineStroke.getClass().getName() == orig(this.rangeGridlineStroke.getClass().getName())
this.rangeGridlinePaint == orig(this.rangeGridlinePaint)
this.rangeGridlinePaint.getClass().getName() == orig(this.rangeGridlinePaint.getClass().getName())
this.rangeMinorGridlinesVisible == orig(this.rangeMinorGridlinesVisible)
this.rangeMinorGridlineStroke == orig(this.rangeMinorGridlineStroke)
this.rangeMinorGridlineStroke.getClass().getName() == orig(this.rangeMinorGridlineStroke.getClass().getName())
this.rangeMinorGridlinePaint == orig(this.rangeMinorGridlinePaint)
this.rangeMinorGridlinePaint.getClass().getName() == orig(this.rangeMinorGridlinePaint.getClass().getName())
this.anchorValue == orig(this.anchorValue)
this.crosshairDatasetIndex == orig(this.crosshairDatasetIndex)
this.domainCrosshairVisible == orig(this.domainCrosshairVisible)
this.domainCrosshairRowKey == orig(this.domainCrosshairRowKey)
this.domainCrosshairColumnKey == orig(this.domainCrosshairColumnKey)
this.domainCrosshairStroke == orig(this.domainCrosshairStroke)
this.domainCrosshairStroke.getClass().getName() == orig(this.domainCrosshairStroke.getClass().getName())
this.domainCrosshairPaint == orig(this.domainCrosshairPaint)
this.domainCrosshairPaint.getClass().getName() == orig(this.domainCrosshairPaint.getClass().getName())
this.rangeCrosshairVisible == orig(this.rangeCrosshairVisible)
this.rangeCrosshairValue == orig(this.rangeCrosshairValue)
this.rangeCrosshairStroke == orig(this.rangeCrosshairStroke)
this.rangeCrosshairStroke.getClass().getName() == orig(this.rangeCrosshairStroke.getClass().getName())
this.rangeCrosshairPaint == orig(this.rangeCrosshairPaint)
this.rangeCrosshairPaint.getClass().getName() == orig(this.rangeCrosshairPaint.getClass().getName())
this.rangeCrosshairLockedOnData == orig(this.rangeCrosshairLockedOnData)
this.foregroundDomainMarkers == orig(this.foregroundDomainMarkers)
this.foregroundDomainMarkers.getClass().getName() == orig(this.foregroundDomainMarkers.getClass().getName())
this.backgroundDomainMarkers == orig(this.backgroundDomainMarkers)
this.backgroundDomainMarkers.getClass().getName() == orig(this.backgroundDomainMarkers.getClass().getName())
this.foregroundRangeMarkers == orig(this.foregroundRangeMarkers)
this.foregroundRangeMarkers.getClass().getName() == orig(this.foregroundRangeMarkers.getClass().getName())
this.backgroundRangeMarkers == orig(this.backgroundRangeMarkers)
this.backgroundRangeMarkers.getClass().getName() == orig(this.backgroundRangeMarkers.getClass().getName())
this.annotations == orig(this.annotations)
this.annotations[] == orig(this.annotations[])
this.annotations.getClass().getName() == orig(this.annotations.getClass().getName())
this.weight == orig(this.weight)
this.fixedDomainAxisSpace == orig(this.fixedDomainAxisSpace)
this.fixedRangeAxisSpace == orig(this.fixedRangeAxisSpace)
this.fixedLegendItems == orig(this.fixedLegendItems)
this.rangePannable == orig(this.rangePannable)
this.shadowGenerator == orig(this.shadowGenerator)
this.shadowGenerator.getClass().getName() == orig(this.shadowGenerator.getClass().getName())
org.jfree.chart.plot.Plot.ZERO == orig(org.jfree.chart.plot.Plot.ZERO)
org.jfree.chart.plot.Plot.ZERO.getClass().getName() == orig(org.jfree.chart.plot.Plot.ZERO.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_INSETS == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name.toString == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name.toString)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.top == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.top)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.left == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.left)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.right == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.right)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName())
this.parent == orig(this.parent)
org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener == orig(org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener)
this.datasetGroup == orig(this.datasetGroup)
this.noDataMessage == orig(this.noDataMessage)
this.noDataMessageFont == orig(this.noDataMessageFont)
this.noDataMessagePaint == orig(this.noDataMessagePaint)
this.noDataMessagePaint.getClass().getName() == orig(this.noDataMessagePaint.getClass().getName())
this.insets == orig(this.insets)
this.insets.unitType == orig(this.insets.unitType)
this.insets.unitType.name == orig(this.insets.unitType.name)
this.insets.unitType.name.toString == orig(this.insets.unitType.name.toString)
this.insets.top == orig(this.insets.top)
this.insets.left == orig(this.insets.left)
this.insets.bottom == orig(this.insets.bottom)
this.insets.right == orig(this.insets.right)
this.outlineVisible == orig(this.outlineVisible)
this.outlineStroke == orig(this.outlineStroke)
this.outlineStroke.getClass().getName() == orig(this.outlineStroke.getClass().getName())
this.outlinePaint == orig(this.outlinePaint)
this.outlinePaint.getClass().getName() == orig(this.outlinePaint.getClass().getName())
this.backgroundPaint == orig(this.backgroundPaint)
this.backgroundPaint.getClass().getName() == orig(this.backgroundPaint.getClass().getName())
this.backgroundImage == orig(this.backgroundImage)
this.backgroundImageAlignment == orig(this.backgroundImageAlignment)
this.backgroundImageAlpha == orig(this.backgroundImageAlpha)
this.foregroundAlpha == orig(this.foregroundAlpha)
this.backgroundAlpha == orig(this.backgroundAlpha)
this.drawingSupplier == orig(this.drawingSupplier)
this.drawingSupplier.getClass().getName() == orig(this.drawingSupplier.getClass().getName())
this.listenerList == orig(this.listenerList)
this.notify == orig(this.notify)
this.domainAxes.size == 1
this.domainAxisLocations.objects[] has only one value, of length 8
this.domainAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.domainAxisLocations.size == 1
this.rangeAxes.size == 1
this.rangeAxisLocations.objects[] has only one value, of length 8
this.rangeAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.rangeAxisLocations.size == 1
this.renderers.size == 1
return == null
===========================================================================
org.jfree.chart.plot.CategoryPlot.getRowRenderingOrder():::ENTER
this.domainAxes.size == 1
this.domainAxisLocations.objects[] has only one value, of length 8
this.domainAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.domainAxisLocations.size == 1
this.rangeAxes.size == 1
this.rangeAxisLocations.objects[] has only one value, of length 8
this.rangeAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.rangeAxisLocations.size == 1
this.datasets.objects[] has only one value, of length 8
this.datasets.objects[].getClass().getName() == [org.jfree.data.category.DefaultCategoryDataset, null, null, null, null, null, null, null]
this.renderers.objects[] has only one value, of length 8
this.renderers.objects[].getClass().getName() == [org.jfree.chart.renderer.category.LineAndShapeRenderer, null, null, null, null, null, null, null]
this.renderers.size == 1
this.domainGridlinePosition has only one value
this.domainGridlineStroke has only one value
this.domainGridlinePaint has only one value
this.rangeZeroBaselineStroke has only one value
this.rangeZeroBaselinePaint has only one value
this.rangeGridlinesVisible == true
this.rangeGridlineStroke has only one value
this.rangeGridlinePaint has only one value
this.rangeMinorGridlineStroke has only one value
this.rangeMinorGridlinePaint has only one value
this.domainCrosshairStroke has only one value
this.domainCrosshairPaint has only one value
this.rangeCrosshairStroke has only one value
this.rangeCrosshairPaint has only one value
this.foregroundDomainMarkers has only one value
this.backgroundDomainMarkers has only one value
this.foregroundRangeMarkers has only one value
this.backgroundRangeMarkers has only one value
this.annotations has only one value
this.shadowGenerator has only one value
===========================================================================
org.jfree.chart.plot.CategoryPlot.getRowRenderingOrder():::EXIT
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE)
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_VALUE_LABEL_FONT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_VALUE_LABEL_FONT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT.getClass().getName())
org.jfree.chart.plot.CategoryPlot.localizationResources == orig(org.jfree.chart.plot.CategoryPlot.localizationResources)
org.jfree.chart.plot.CategoryPlot.localizationResources.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.localizationResources.getClass().getName())
this.orientation == orig(this.orientation)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL)
org.jfree.chart.plot.PlotOrientation.VERTICAL == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name.toString == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name.toString)
org.jfree.chart.plot.PlotOrientation.VERTICAL.name == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL.name)
org.jfree.chart.plot.PlotOrientation.VERTICAL.name.toString == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL.name.toString)
this.orientation.name == orig(this.orientation.name)
this.orientation.name.toString == orig(this.orientation.name.toString)
this.axisOffset == orig(this.axisOffset)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.top == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.top)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.left == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.left)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.bottom == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.bottom)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.right == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.right)
this.axisOffset.unitType == orig(this.axisOffset.unitType)
org.jfree.chart.util.UnitType.ABSOLUTE == orig(org.jfree.chart.util.UnitType.ABSOLUTE)
org.jfree.chart.util.UnitType.RELATIVE == orig(org.jfree.chart.util.UnitType.RELATIVE)
this.axisOffset.unitType.name == orig(this.axisOffset.unitType.name)
this.axisOffset.unitType.name.toString == orig(this.axisOffset.unitType.name.toString)
this.axisOffset.top == orig(this.axisOffset.top)
this.axisOffset.left == orig(this.axisOffset.left)
this.axisOffset.bottom == orig(this.axisOffset.bottom)
this.axisOffset.right == orig(this.axisOffset.right)
this.domainAxes == orig(this.domainAxes)
this.domainAxes.objects == orig(this.domainAxes.objects)
this.domainAxes.objects.getClass().getName() == orig(this.domainAxes.objects.getClass().getName())
this.domainAxes.objects[] == orig(this.domainAxes.objects[])
this.domainAxes.size == orig(this.domainAxes.size)
this.domainAxes.increment == orig(this.domainAxes.increment)
this.domainAxisLocations == orig(this.domainAxisLocations)
this.domainAxisLocations.objects == orig(this.domainAxisLocations.objects)
this.domainAxisLocations.objects.getClass().getName() == orig(this.domainAxisLocations.objects.getClass().getName())
this.domainAxisLocations.objects[] == orig(this.domainAxisLocations.objects[])
this.domainAxisLocations.size == orig(this.domainAxisLocations.size)
this.domainAxisLocations.increment == orig(this.domainAxisLocations.increment)
this.drawSharedDomainAxis == orig(this.drawSharedDomainAxis)
this.rangeAxes == orig(this.rangeAxes)
this.rangeAxes.objects == orig(this.rangeAxes.objects)
this.rangeAxes.objects.getClass().getName() == orig(this.rangeAxes.objects.getClass().getName())
this.rangeAxes.objects[] == orig(this.rangeAxes.objects[])
this.rangeAxes.size == orig(this.rangeAxes.size)
this.rangeAxes.increment == orig(this.rangeAxes.increment)
this.rangeAxisLocations == orig(this.rangeAxisLocations)
this.rangeAxisLocations.objects == orig(this.rangeAxisLocations.objects)
this.rangeAxisLocations.objects.getClass().getName() == orig(this.rangeAxisLocations.objects.getClass().getName())
this.rangeAxisLocations.objects[] == orig(this.rangeAxisLocations.objects[])
this.rangeAxisLocations.size == orig(this.rangeAxisLocations.size)
this.rangeAxisLocations.increment == orig(this.rangeAxisLocations.increment)
this.datasets == orig(this.datasets)
this.datasets.objects == orig(this.datasets.objects)
this.datasets.objects.getClass().getName() == orig(this.datasets.objects.getClass().getName())
this.datasets.objects[] == orig(this.datasets.objects[])
this.datasets.size == orig(this.datasets.size)
this.datasets.increment == orig(this.datasets.increment)
this.datasetToDomainAxesMap == orig(this.datasetToDomainAxesMap)
this.datasetToRangeAxesMap == orig(this.datasetToRangeAxesMap)
this.renderers == orig(this.renderers)
this.renderers.objects == orig(this.renderers.objects)
this.renderers.objects.getClass().getName() == orig(this.renderers.objects.getClass().getName())
this.renderers.objects[] == orig(this.renderers.objects[])
this.renderers.size == orig(this.renderers.size)
this.renderers.increment == orig(this.renderers.increment)
this.renderingOrder == orig(this.renderingOrder)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name.toString == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name.toString)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name.toString == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name.toString)
this.renderingOrder.name == orig(this.renderingOrder.name)
this.renderingOrder.name.toString == orig(this.renderingOrder.name.toString)
this.columnRenderingOrder == orig(this.columnRenderingOrder)
org.jfree.chart.util.SortOrder.ASCENDING == orig(org.jfree.chart.util.SortOrder.ASCENDING)
org.jfree.chart.util.SortOrder.DESCENDING == orig(org.jfree.chart.util.SortOrder.DESCENDING)
org.jfree.chart.util.SortOrder.ASCENDING.name == orig(org.jfree.chart.util.SortOrder.ASCENDING.name)
org.jfree.chart.util.SortOrder.ASCENDING.name.toString == orig(org.jfree.chart.util.SortOrder.ASCENDING.name.toString)
org.jfree.chart.util.SortOrder.DESCENDING.name == orig(org.jfree.chart.util.SortOrder.DESCENDING.name)
org.jfree.chart.util.SortOrder.DESCENDING.name.toString == orig(org.jfree.chart.util.SortOrder.DESCENDING.name.toString)
this.columnRenderingOrder.name == orig(this.columnRenderingOrder.name)
this.columnRenderingOrder.name.toString == orig(this.columnRenderingOrder.name.toString)
this.rowRenderingOrder == orig(this.rowRenderingOrder)
this.rowRenderingOrder.name == orig(this.rowRenderingOrder.name)
this.rowRenderingOrder.name.toString == orig(this.rowRenderingOrder.name.toString)
this.domainGridlinesVisible == orig(this.domainGridlinesVisible)
this.domainGridlinePosition == orig(this.domainGridlinePosition)
org.jfree.chart.axis.CategoryAnchor.START == orig(org.jfree.chart.axis.CategoryAnchor.START)
org.jfree.chart.axis.CategoryAnchor.MIDDLE == orig(org.jfree.chart.axis.CategoryAnchor.MIDDLE)
org.jfree.chart.axis.CategoryAnchor.END == orig(org.jfree.chart.axis.CategoryAnchor.END)
org.jfree.chart.axis.CategoryAnchor.START.name == orig(org.jfree.chart.axis.CategoryAnchor.START.name)
org.jfree.chart.axis.CategoryAnchor.START.name.toString == orig(org.jfree.chart.axis.CategoryAnchor.START.name.toString)
org.jfree.chart.axis.CategoryAnchor.MIDDLE.name == orig(org.jfree.chart.axis.CategoryAnchor.MIDDLE.name)
org.jfree.chart.axis.CategoryAnchor.MIDDLE.name.toString == orig(org.jfree.chart.axis.CategoryAnchor.MIDDLE.name.toString)
org.jfree.chart.axis.CategoryAnchor.END.name == orig(org.jfree.chart.axis.CategoryAnchor.END.name)
org.jfree.chart.axis.CategoryAnchor.END.name.toString == orig(org.jfree.chart.axis.CategoryAnchor.END.name.toString)
this.domainGridlinePosition.name == orig(this.domainGridlinePosition.name)
this.domainGridlinePosition.name.toString == orig(this.domainGridlinePosition.name.toString)
this.domainGridlineStroke == orig(this.domainGridlineStroke)
this.domainGridlineStroke.getClass().getName() == orig(this.domainGridlineStroke.getClass().getName())
this.domainGridlinePaint == orig(this.domainGridlinePaint)
this.domainGridlinePaint.getClass().getName() == orig(this.domainGridlinePaint.getClass().getName())
this.rangeZeroBaselineVisible == orig(this.rangeZeroBaselineVisible)
this.rangeZeroBaselineStroke == orig(this.rangeZeroBaselineStroke)
this.rangeZeroBaselineStroke.getClass().getName() == orig(this.rangeZeroBaselineStroke.getClass().getName())
this.rangeZeroBaselinePaint == orig(this.rangeZeroBaselinePaint)
this.rangeZeroBaselinePaint.getClass().getName() == orig(this.rangeZeroBaselinePaint.getClass().getName())
this.rangeGridlinesVisible == orig(this.rangeGridlinesVisible)
this.rangeGridlineStroke == orig(this.rangeGridlineStroke)
this.rangeGridlineStroke.getClass().getName() == orig(this.rangeGridlineStroke.getClass().getName())
this.rangeGridlinePaint == orig(this.rangeGridlinePaint)
this.rangeGridlinePaint.getClass().getName() == orig(this.rangeGridlinePaint.getClass().getName())
this.rangeMinorGridlinesVisible == orig(this.rangeMinorGridlinesVisible)
this.rangeMinorGridlineStroke == orig(this.rangeMinorGridlineStroke)
this.rangeMinorGridlineStroke.getClass().getName() == orig(this.rangeMinorGridlineStroke.getClass().getName())
this.rangeMinorGridlinePaint == orig(this.rangeMinorGridlinePaint)
this.rangeMinorGridlinePaint.getClass().getName() == orig(this.rangeMinorGridlinePaint.getClass().getName())
this.anchorValue == orig(this.anchorValue)
this.crosshairDatasetIndex == orig(this.crosshairDatasetIndex)
this.domainCrosshairVisible == orig(this.domainCrosshairVisible)
this.domainCrosshairRowKey == orig(this.domainCrosshairRowKey)
this.domainCrosshairColumnKey == orig(this.domainCrosshairColumnKey)
this.domainCrosshairStroke == orig(this.domainCrosshairStroke)
this.domainCrosshairStroke.getClass().getName() == orig(this.domainCrosshairStroke.getClass().getName())
this.domainCrosshairPaint == orig(this.domainCrosshairPaint)
this.domainCrosshairPaint.getClass().getName() == orig(this.domainCrosshairPaint.getClass().getName())
this.rangeCrosshairVisible == orig(this.rangeCrosshairVisible)
this.rangeCrosshairValue == orig(this.rangeCrosshairValue)
this.rangeCrosshairStroke == orig(this.rangeCrosshairStroke)
this.rangeCrosshairStroke.getClass().getName() == orig(this.rangeCrosshairStroke.getClass().getName())
this.rangeCrosshairPaint == orig(this.rangeCrosshairPaint)
this.rangeCrosshairPaint.getClass().getName() == orig(this.rangeCrosshairPaint.getClass().getName())
this.rangeCrosshairLockedOnData == orig(this.rangeCrosshairLockedOnData)
this.foregroundDomainMarkers == orig(this.foregroundDomainMarkers)
this.foregroundDomainMarkers.getClass().getName() == orig(this.foregroundDomainMarkers.getClass().getName())
this.backgroundDomainMarkers == orig(this.backgroundDomainMarkers)
this.backgroundDomainMarkers.getClass().getName() == orig(this.backgroundDomainMarkers.getClass().getName())
this.foregroundRangeMarkers == orig(this.foregroundRangeMarkers)
this.foregroundRangeMarkers.getClass().getName() == orig(this.foregroundRangeMarkers.getClass().getName())
this.backgroundRangeMarkers == orig(this.backgroundRangeMarkers)
this.backgroundRangeMarkers.getClass().getName() == orig(this.backgroundRangeMarkers.getClass().getName())
this.annotations == orig(this.annotations)
this.annotations[] == orig(this.annotations[])
this.annotations.getClass().getName() == orig(this.annotations.getClass().getName())
this.weight == orig(this.weight)
this.fixedDomainAxisSpace == orig(this.fixedDomainAxisSpace)
this.fixedRangeAxisSpace == orig(this.fixedRangeAxisSpace)
this.fixedLegendItems == orig(this.fixedLegendItems)
this.rangePannable == orig(this.rangePannable)
this.shadowGenerator == orig(this.shadowGenerator)
this.shadowGenerator.getClass().getName() == orig(this.shadowGenerator.getClass().getName())
org.jfree.chart.plot.Plot.ZERO == orig(org.jfree.chart.plot.Plot.ZERO)
org.jfree.chart.plot.Plot.ZERO.getClass().getName() == orig(org.jfree.chart.plot.Plot.ZERO.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_INSETS == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name.toString == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name.toString)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.top == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.top)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.left == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.left)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.right == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.right)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName())
this.parent == orig(this.parent)
org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener == orig(org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener)
this.datasetGroup == orig(this.datasetGroup)
this.noDataMessage == orig(this.noDataMessage)
this.noDataMessageFont == orig(this.noDataMessageFont)
this.noDataMessagePaint == orig(this.noDataMessagePaint)
this.noDataMessagePaint.getClass().getName() == orig(this.noDataMessagePaint.getClass().getName())
this.insets == orig(this.insets)
this.insets.unitType == orig(this.insets.unitType)
this.insets.unitType.name == orig(this.insets.unitType.name)
this.insets.unitType.name.toString == orig(this.insets.unitType.name.toString)
this.insets.top == orig(this.insets.top)
this.insets.left == orig(this.insets.left)
this.insets.bottom == orig(this.insets.bottom)
this.insets.right == orig(this.insets.right)
this.outlineVisible == orig(this.outlineVisible)
this.outlineStroke == orig(this.outlineStroke)
this.outlineStroke.getClass().getName() == orig(this.outlineStroke.getClass().getName())
this.outlinePaint == orig(this.outlinePaint)
this.outlinePaint.getClass().getName() == orig(this.outlinePaint.getClass().getName())
this.backgroundPaint == orig(this.backgroundPaint)
this.backgroundPaint.getClass().getName() == orig(this.backgroundPaint.getClass().getName())
this.backgroundImage == orig(this.backgroundImage)
this.backgroundImageAlignment == orig(this.backgroundImageAlignment)
this.backgroundImageAlpha == orig(this.backgroundImageAlpha)
this.foregroundAlpha == orig(this.foregroundAlpha)
this.backgroundAlpha == orig(this.backgroundAlpha)
this.drawingSupplier == orig(this.drawingSupplier)
this.drawingSupplier.getClass().getName() == orig(this.drawingSupplier.getClass().getName())
this.listenerList == orig(this.listenerList)
this.notify == orig(this.notify)
this.domainAxes.size == 1
this.domainAxisLocations.objects[] has only one value, of length 8
this.domainAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.domainAxisLocations.size == 1
this.rangeAxes.size == 1
this.rangeAxisLocations.objects[] has only one value, of length 8
this.rangeAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.rangeAxisLocations.size == 1
this.datasets.objects[] has only one value, of length 8
this.datasets.objects[].getClass().getName() == [org.jfree.data.category.DefaultCategoryDataset, null, null, null, null, null, null, null]
this.renderers.objects[] has only one value, of length 8
this.renderers.objects[].getClass().getName() == [org.jfree.chart.renderer.category.LineAndShapeRenderer, null, null, null, null, null, null, null]
this.renderers.size == 1
this.domainGridlinePosition has only one value
this.domainGridlineStroke has only one value
this.domainGridlinePaint has only one value
this.rangeZeroBaselineStroke has only one value
this.rangeZeroBaselinePaint has only one value
this.rangeGridlinesVisible == true
this.rangeGridlineStroke has only one value
this.rangeGridlinePaint has only one value
this.rangeMinorGridlineStroke has only one value
this.rangeMinorGridlinePaint has only one value
this.domainCrosshairStroke has only one value
this.domainCrosshairPaint has only one value
this.rangeCrosshairStroke has only one value
this.rangeCrosshairPaint has only one value
this.foregroundDomainMarkers has only one value
this.backgroundDomainMarkers has only one value
this.foregroundRangeMarkers has only one value
this.backgroundRangeMarkers has only one value
this.annotations has only one value
this.shadowGenerator has only one value
return has only one value
return.name has only one value
return.name.toString == "SortOrder.ASCENDING"
===========================================================================
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes(int, java.util.List):::ENTER
this.domainAxes.size == 1
this.domainAxisLocations.objects[] has only one value, of length 8
this.domainAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.domainAxisLocations.size == 1
this.rangeAxes.size == 0
this.rangeAxisLocations.objects[] has only one value, of length 8
this.rangeAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.rangeAxisLocations.size == 1
this.datasets.objects[] contains only nulls and has only one value, of length 8
this.datasets.objects[] elements == null
this.datasets.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.datasets.objects[].getClass().getName() elements == null
this.renderers.objects[] contains only nulls and has only one value, of length 8
this.renderers.objects[] elements == null
this.renderers.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.renderers.objects[].getClass().getName() elements == null
this.renderers.size == 1
this.domainGridlinePosition == null
this.domainGridlineStroke == null
this.domainGridlinePaint == null
this.rangeZeroBaselineStroke == null
this.rangeZeroBaselinePaint == null
this.rangeGridlinesVisible == false
this.rangeGridlineStroke == null
this.rangeGridlinePaint == null
this.rangeMinorGridlineStroke == null
this.rangeMinorGridlinePaint == null
this.domainCrosshairStroke == null
this.domainCrosshairPaint == null
this.rangeCrosshairStroke == null
this.rangeCrosshairPaint == null
this.foregroundDomainMarkers == null
this.backgroundDomainMarkers == null
this.foregroundRangeMarkers == null
this.backgroundRangeMarkers == null
this.annotations == null
this.shadowGenerator == null
index == 0
axisIndices has only one value
axisIndices[] contains no nulls and has only one value, of length 1
axisIndices[] elements has only one value
axisIndices[].getClass().getName() == [java.lang.Integer]
axisIndices[].getClass().getName() elements == java.lang.Integer.class
axisIndices.getClass().getName() == java.util.ArrayList.class
size(axisIndices[]) == 1
===========================================================================
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes(int, java.util.List):::EXIT
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE)
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_VALUE_LABEL_FONT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_VALUE_LABEL_FONT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT.getClass().getName())
org.jfree.chart.plot.CategoryPlot.localizationResources == orig(org.jfree.chart.plot.CategoryPlot.localizationResources)
org.jfree.chart.plot.CategoryPlot.localizationResources.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.localizationResources.getClass().getName())
this.orientation == orig(this.orientation)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL)
org.jfree.chart.plot.PlotOrientation.VERTICAL == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name.toString == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name.toString)
org.jfree.chart.plot.PlotOrientation.VERTICAL.name == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL.name)
org.jfree.chart.plot.PlotOrientation.VERTICAL.name.toString == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL.name.toString)
this.orientation.name == orig(this.orientation.name)
this.orientation.name.toString == orig(this.orientation.name.toString)
this.axisOffset == orig(this.axisOffset)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.top == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.top)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.left == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.left)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.bottom == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.bottom)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.right == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.right)
this.axisOffset.unitType == orig(this.axisOffset.unitType)
org.jfree.chart.util.UnitType.ABSOLUTE == orig(org.jfree.chart.util.UnitType.ABSOLUTE)
org.jfree.chart.util.UnitType.RELATIVE == orig(org.jfree.chart.util.UnitType.RELATIVE)
this.axisOffset.unitType.name == orig(this.axisOffset.unitType.name)
this.axisOffset.unitType.name.toString == orig(this.axisOffset.unitType.name.toString)
this.axisOffset.top == orig(this.axisOffset.top)
this.axisOffset.left == orig(this.axisOffset.left)
this.axisOffset.bottom == orig(this.axisOffset.bottom)
this.axisOffset.right == orig(this.axisOffset.right)
this.domainAxes == orig(this.domainAxes)
this.domainAxes.objects == orig(this.domainAxes.objects)
this.domainAxes.objects.getClass().getName() == orig(this.domainAxes.objects.getClass().getName())
this.domainAxes.objects[] == orig(this.domainAxes.objects[])
this.domainAxes.size == orig(this.domainAxes.size)
this.domainAxes.increment == orig(this.domainAxes.increment)
this.domainAxisLocations == orig(this.domainAxisLocations)
this.domainAxisLocations.objects == orig(this.domainAxisLocations.objects)
this.domainAxisLocations.objects.getClass().getName() == orig(this.domainAxisLocations.objects.getClass().getName())
this.domainAxisLocations.objects[] == orig(this.domainAxisLocations.objects[])
this.domainAxisLocations.size == orig(this.domainAxisLocations.size)
this.domainAxisLocations.increment == orig(this.domainAxisLocations.increment)
this.drawSharedDomainAxis == orig(this.drawSharedDomainAxis)
this.rangeAxes == orig(this.rangeAxes)
this.rangeAxes.objects == orig(this.rangeAxes.objects)
this.rangeAxes.objects.getClass().getName() == orig(this.rangeAxes.objects.getClass().getName())
this.rangeAxes.objects[] == orig(this.rangeAxes.objects[])
this.rangeAxes.size == orig(this.rangeAxes.size)
this.rangeAxes.increment == orig(this.rangeAxes.increment)
this.rangeAxisLocations == orig(this.rangeAxisLocations)
this.rangeAxisLocations.objects == orig(this.rangeAxisLocations.objects)
this.rangeAxisLocations.objects.getClass().getName() == orig(this.rangeAxisLocations.objects.getClass().getName())
this.rangeAxisLocations.objects[] == orig(this.rangeAxisLocations.objects[])
this.rangeAxisLocations.size == orig(this.rangeAxisLocations.size)
this.rangeAxisLocations.increment == orig(this.rangeAxisLocations.increment)
this.datasets == orig(this.datasets)
this.datasets.objects == orig(this.datasets.objects)
this.datasets.objects.getClass().getName() == orig(this.datasets.objects.getClass().getName())
this.datasets.objects[] == orig(this.datasets.objects[])
this.datasets.size == orig(this.datasets.size)
this.datasets.increment == orig(this.datasets.increment)
this.datasetToDomainAxesMap == orig(this.datasetToDomainAxesMap)
this.datasetToRangeAxesMap == orig(this.datasetToRangeAxesMap)
this.renderers == orig(this.renderers)
this.renderers.objects == orig(this.renderers.objects)
this.renderers.objects.getClass().getName() == orig(this.renderers.objects.getClass().getName())
this.renderers.objects[] == orig(this.renderers.objects[])
this.renderers.size == orig(this.renderers.size)
this.renderers.increment == orig(this.renderers.increment)
this.renderingOrder == orig(this.renderingOrder)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name.toString == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name.toString)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name.toString == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name.toString)
this.renderingOrder.name == orig(this.renderingOrder.name)
this.renderingOrder.name.toString == orig(this.renderingOrder.name.toString)
this.columnRenderingOrder == orig(this.columnRenderingOrder)
org.jfree.chart.util.SortOrder.ASCENDING == orig(org.jfree.chart.util.SortOrder.ASCENDING)
org.jfree.chart.util.SortOrder.DESCENDING == orig(org.jfree.chart.util.SortOrder.DESCENDING)
org.jfree.chart.util.SortOrder.ASCENDING.name == orig(org.jfree.chart.util.SortOrder.ASCENDING.name)
org.jfree.chart.util.SortOrder.ASCENDING.name.toString == orig(org.jfree.chart.util.SortOrder.ASCENDING.name.toString)
org.jfree.chart.util.SortOrder.DESCENDING.name == orig(org.jfree.chart.util.SortOrder.DESCENDING.name)
org.jfree.chart.util.SortOrder.DESCENDING.name.toString == orig(org.jfree.chart.util.SortOrder.DESCENDING.name.toString)
this.columnRenderingOrder.name == orig(this.columnRenderingOrder.name)
this.columnRenderingOrder.name.toString == orig(this.columnRenderingOrder.name.toString)
this.rowRenderingOrder == orig(this.rowRenderingOrder)
this.rowRenderingOrder.name == orig(this.rowRenderingOrder.name)
this.rowRenderingOrder.name.toString == orig(this.rowRenderingOrder.name.toString)
this.domainGridlinesVisible == orig(this.domainGridlinesVisible)
this.domainGridlinePosition == orig(this.domainGridlinePosition)
this.domainGridlineStroke == orig(this.domainGridlineStroke)
this.domainGridlinePaint == orig(this.domainGridlinePaint)
this.rangeZeroBaselineVisible == orig(this.rangeZeroBaselineVisible)
this.rangeZeroBaselineStroke == orig(this.rangeZeroBaselineStroke)
this.rangeZeroBaselinePaint == orig(this.rangeZeroBaselinePaint)
this.rangeGridlinesVisible == orig(this.rangeGridlinesVisible)
this.rangeGridlineStroke == orig(this.rangeGridlineStroke)
this.rangeGridlinePaint == orig(this.rangeGridlinePaint)
this.rangeMinorGridlinesVisible == orig(this.rangeMinorGridlinesVisible)
this.rangeMinorGridlineStroke == orig(this.rangeMinorGridlineStroke)
this.rangeMinorGridlinePaint == orig(this.rangeMinorGridlinePaint)
this.anchorValue == orig(this.anchorValue)
this.crosshairDatasetIndex == orig(this.crosshairDatasetIndex)
this.domainCrosshairVisible == orig(this.domainCrosshairVisible)
this.domainCrosshairRowKey == orig(this.domainCrosshairRowKey)
this.domainCrosshairColumnKey == orig(this.domainCrosshairColumnKey)
this.domainCrosshairStroke == orig(this.domainCrosshairStroke)
this.domainCrosshairPaint == orig(this.domainCrosshairPaint)
this.rangeCrosshairVisible == orig(this.rangeCrosshairVisible)
this.rangeCrosshairValue == orig(this.rangeCrosshairValue)
this.rangeCrosshairStroke == orig(this.rangeCrosshairStroke)
this.rangeCrosshairPaint == orig(this.rangeCrosshairPaint)
this.rangeCrosshairLockedOnData == orig(this.rangeCrosshairLockedOnData)
this.foregroundDomainMarkers == orig(this.foregroundDomainMarkers)
this.backgroundDomainMarkers == orig(this.backgroundDomainMarkers)
this.foregroundRangeMarkers == orig(this.foregroundRangeMarkers)
this.backgroundRangeMarkers == orig(this.backgroundRangeMarkers)
this.annotations == orig(this.annotations)
this.weight == orig(this.weight)
this.fixedDomainAxisSpace == orig(this.fixedDomainAxisSpace)
this.fixedRangeAxisSpace == orig(this.fixedRangeAxisSpace)
this.fixedLegendItems == orig(this.fixedLegendItems)
this.rangePannable == orig(this.rangePannable)
this.shadowGenerator == orig(this.shadowGenerator)
org.jfree.chart.plot.Plot.ZERO == orig(org.jfree.chart.plot.Plot.ZERO)
org.jfree.chart.plot.Plot.ZERO.getClass().getName() == orig(org.jfree.chart.plot.Plot.ZERO.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_INSETS == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name.toString == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name.toString)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.top == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.top)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.left == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.left)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.right == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.right)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName())
this.parent == orig(this.parent)
org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener == orig(org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener)
this.datasetGroup == orig(this.datasetGroup)
this.noDataMessage == orig(this.noDataMessage)
this.noDataMessageFont == orig(this.noDataMessageFont)
this.noDataMessagePaint == orig(this.noDataMessagePaint)
this.noDataMessagePaint.getClass().getName() == orig(this.noDataMessagePaint.getClass().getName())
this.insets == orig(this.insets)
this.insets.unitType == orig(this.insets.unitType)
this.insets.unitType.name == orig(this.insets.unitType.name)
this.insets.unitType.name.toString == orig(this.insets.unitType.name.toString)
this.insets.top == orig(this.insets.top)
this.insets.left == orig(this.insets.left)
this.insets.bottom == orig(this.insets.bottom)
this.insets.right == orig(this.insets.right)
this.outlineVisible == orig(this.outlineVisible)
this.outlineStroke == orig(this.outlineStroke)
this.outlineStroke.getClass().getName() == orig(this.outlineStroke.getClass().getName())
this.outlinePaint == orig(this.outlinePaint)
this.outlinePaint.getClass().getName() == orig(this.outlinePaint.getClass().getName())
this.backgroundPaint == orig(this.backgroundPaint)
this.backgroundPaint.getClass().getName() == orig(this.backgroundPaint.getClass().getName())
this.backgroundImage == orig(this.backgroundImage)
this.backgroundImageAlignment == orig(this.backgroundImageAlignment)
this.backgroundImageAlpha == orig(this.backgroundImageAlpha)
this.foregroundAlpha == orig(this.foregroundAlpha)
this.backgroundAlpha == orig(this.backgroundAlpha)
this.drawingSupplier == orig(this.drawingSupplier)
this.drawingSupplier.getClass().getName() == orig(this.drawingSupplier.getClass().getName())
this.listenerList == orig(this.listenerList)
this.notify == orig(this.notify)
axisIndices[] == orig(axisIndices[])
this.domainAxes.size == 1
this.domainAxisLocations.objects[] has only one value, of length 8
this.domainAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.domainAxisLocations.size == 1
this.rangeAxes.size == 0
this.rangeAxisLocations.objects[] has only one value, of length 8
this.rangeAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.rangeAxisLocations.size == 1
this.datasets.objects[] contains only nulls and has only one value, of length 8
this.datasets.objects[] elements == null
this.datasets.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.datasets.objects[].getClass().getName() elements == null
this.renderers.objects[] contains only nulls and has only one value, of length 8
this.renderers.objects[] elements == null
this.renderers.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.renderers.objects[].getClass().getName() elements == null
this.renderers.size == 1
this.domainGridlinePosition == null
this.domainGridlineStroke == null
this.domainGridlinePaint == null
this.rangeZeroBaselineStroke == null
this.rangeZeroBaselinePaint == null
this.rangeGridlinesVisible == false
this.rangeGridlineStroke == null
this.rangeGridlinePaint == null
this.rangeMinorGridlineStroke == null
this.rangeMinorGridlinePaint == null
this.domainCrosshairStroke == null
this.domainCrosshairPaint == null
this.rangeCrosshairStroke == null
this.rangeCrosshairPaint == null
this.foregroundDomainMarkers == null
this.backgroundDomainMarkers == null
this.foregroundRangeMarkers == null
this.backgroundRangeMarkers == null
this.annotations == null
this.shadowGenerator == null
axisIndices[] contains no nulls and has only one value, of length 1
axisIndices[] elements has only one value
axisIndices[].getClass().getName() == [java.lang.Integer]
axisIndices[].getClass().getName() elements == java.lang.Integer.class
===========================================================================
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxis(int, int):::ENTER
this.domainAxes.size == 1
this.domainAxisLocations.objects[] has only one value, of length 8
this.domainAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.domainAxisLocations.size == 1
this.rangeAxes.size == 0
this.rangeAxisLocations.objects[] has only one value, of length 8
this.rangeAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.rangeAxisLocations.size == 1
this.datasets.objects[] contains only nulls and has only one value, of length 8
this.datasets.objects[] elements == null
this.datasets.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.datasets.objects[].getClass().getName() elements == null
this.renderers.objects[] contains only nulls and has only one value, of length 8
this.renderers.objects[] elements == null
this.renderers.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.renderers.objects[].getClass().getName() elements == null
this.renderers.size == 1
this.domainGridlinePosition == null
this.domainGridlineStroke == null
this.domainGridlinePaint == null
this.rangeZeroBaselineStroke == null
this.rangeZeroBaselinePaint == null
this.rangeGridlinesVisible == false
this.rangeGridlineStroke == null
this.rangeGridlinePaint == null
this.rangeMinorGridlineStroke == null
this.rangeMinorGridlinePaint == null
this.domainCrosshairStroke == null
this.domainCrosshairPaint == null
this.rangeCrosshairStroke == null
this.rangeCrosshairPaint == null
this.foregroundDomainMarkers == null
this.backgroundDomainMarkers == null
this.foregroundRangeMarkers == null
this.backgroundRangeMarkers == null
this.annotations == null
this.shadowGenerator == null
index == 0
axisIndex == 0
===========================================================================
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxis(int, int):::EXIT
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE)
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_VALUE_LABEL_FONT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_VALUE_LABEL_FONT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT.getClass().getName())
org.jfree.chart.plot.CategoryPlot.localizationResources == orig(org.jfree.chart.plot.CategoryPlot.localizationResources)
org.jfree.chart.plot.CategoryPlot.localizationResources.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.localizationResources.getClass().getName())
this.orientation == orig(this.orientation)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL)
org.jfree.chart.plot.PlotOrientation.VERTICAL == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name.toString == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name.toString)
org.jfree.chart.plot.PlotOrientation.VERTICAL.name == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL.name)
org.jfree.chart.plot.PlotOrientation.VERTICAL.name.toString == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL.name.toString)
this.orientation.name == orig(this.orientation.name)
this.orientation.name.toString == orig(this.orientation.name.toString)
this.axisOffset == orig(this.axisOffset)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.top == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.top)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.left == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.left)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.bottom == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.bottom)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.right == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.right)
this.axisOffset.unitType == orig(this.axisOffset.unitType)
org.jfree.chart.util.UnitType.ABSOLUTE == orig(org.jfree.chart.util.UnitType.ABSOLUTE)
org.jfree.chart.util.UnitType.RELATIVE == orig(org.jfree.chart.util.UnitType.RELATIVE)
this.axisOffset.unitType.name == orig(this.axisOffset.unitType.name)
this.axisOffset.unitType.name.toString == orig(this.axisOffset.unitType.name.toString)
this.axisOffset.top == orig(this.axisOffset.top)
this.axisOffset.left == orig(this.axisOffset.left)
this.axisOffset.bottom == orig(this.axisOffset.bottom)
this.axisOffset.right == orig(this.axisOffset.right)
this.domainAxes == orig(this.domainAxes)
this.domainAxes.objects == orig(this.domainAxes.objects)
this.domainAxes.objects.getClass().getName() == orig(this.domainAxes.objects.getClass().getName())
this.domainAxes.objects[] == orig(this.domainAxes.objects[])
this.domainAxes.size == orig(this.domainAxes.size)
this.domainAxes.increment == orig(this.domainAxes.increment)
this.domainAxisLocations == orig(this.domainAxisLocations)
this.domainAxisLocations.objects == orig(this.domainAxisLocations.objects)
this.domainAxisLocations.objects.getClass().getName() == orig(this.domainAxisLocations.objects.getClass().getName())
this.domainAxisLocations.objects[] == orig(this.domainAxisLocations.objects[])
this.domainAxisLocations.size == orig(this.domainAxisLocations.size)
this.domainAxisLocations.increment == orig(this.domainAxisLocations.increment)
this.drawSharedDomainAxis == orig(this.drawSharedDomainAxis)
this.rangeAxes == orig(this.rangeAxes)
this.rangeAxes.objects == orig(this.rangeAxes.objects)
this.rangeAxes.objects.getClass().getName() == orig(this.rangeAxes.objects.getClass().getName())
this.rangeAxes.objects[] == orig(this.rangeAxes.objects[])
this.rangeAxes.size == orig(this.rangeAxes.size)
this.rangeAxes.increment == orig(this.rangeAxes.increment)
this.rangeAxisLocations == orig(this.rangeAxisLocations)
this.rangeAxisLocations.objects == orig(this.rangeAxisLocations.objects)
this.rangeAxisLocations.objects.getClass().getName() == orig(this.rangeAxisLocations.objects.getClass().getName())
this.rangeAxisLocations.objects[] == orig(this.rangeAxisLocations.objects[])
this.rangeAxisLocations.size == orig(this.rangeAxisLocations.size)
this.rangeAxisLocations.increment == orig(this.rangeAxisLocations.increment)
this.datasets == orig(this.datasets)
this.datasets.objects == orig(this.datasets.objects)
this.datasets.objects.getClass().getName() == orig(this.datasets.objects.getClass().getName())
this.datasets.objects[] == orig(this.datasets.objects[])
this.datasets.size == orig(this.datasets.size)
this.datasets.increment == orig(this.datasets.increment)
this.datasetToDomainAxesMap == orig(this.datasetToDomainAxesMap)
this.datasetToRangeAxesMap == orig(this.datasetToRangeAxesMap)
this.renderers == orig(this.renderers)
this.renderers.objects == orig(this.renderers.objects)
this.renderers.objects.getClass().getName() == orig(this.renderers.objects.getClass().getName())
this.renderers.objects[] == orig(this.renderers.objects[])
this.renderers.size == orig(this.renderers.size)
this.renderers.increment == orig(this.renderers.increment)
this.renderingOrder == orig(this.renderingOrder)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name.toString == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name.toString)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name.toString == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name.toString)
this.renderingOrder.name == orig(this.renderingOrder.name)
this.renderingOrder.name.toString == orig(this.renderingOrder.name.toString)
this.columnRenderingOrder == orig(this.columnRenderingOrder)
org.jfree.chart.util.SortOrder.ASCENDING == orig(org.jfree.chart.util.SortOrder.ASCENDING)
org.jfree.chart.util.SortOrder.DESCENDING == orig(org.jfree.chart.util.SortOrder.DESCENDING)
org.jfree.chart.util.SortOrder.ASCENDING.name == orig(org.jfree.chart.util.SortOrder.ASCENDING.name)
org.jfree.chart.util.SortOrder.ASCENDING.name.toString == orig(org.jfree.chart.util.SortOrder.ASCENDING.name.toString)
org.jfree.chart.util.SortOrder.DESCENDING.name == orig(org.jfree.chart.util.SortOrder.DESCENDING.name)
org.jfree.chart.util.SortOrder.DESCENDING.name.toString == orig(org.jfree.chart.util.SortOrder.DESCENDING.name.toString)
this.columnRenderingOrder.name == orig(this.columnRenderingOrder.name)
this.columnRenderingOrder.name.toString == orig(this.columnRenderingOrder.name.toString)
this.rowRenderingOrder == orig(this.rowRenderingOrder)
this.rowRenderingOrder.name == orig(this.rowRenderingOrder.name)
this.rowRenderingOrder.name.toString == orig(this.rowRenderingOrder.name.toString)
this.domainGridlinesVisible == orig(this.domainGridlinesVisible)
this.domainGridlinePosition == orig(this.domainGridlinePosition)
this.domainGridlineStroke == orig(this.domainGridlineStroke)
this.domainGridlinePaint == orig(this.domainGridlinePaint)
this.rangeZeroBaselineVisible == orig(this.rangeZeroBaselineVisible)
this.rangeZeroBaselineStroke == orig(this.rangeZeroBaselineStroke)
this.rangeZeroBaselinePaint == orig(this.rangeZeroBaselinePaint)
this.rangeGridlinesVisible == orig(this.rangeGridlinesVisible)
this.rangeGridlineStroke == orig(this.rangeGridlineStroke)
this.rangeGridlinePaint == orig(this.rangeGridlinePaint)
this.rangeMinorGridlinesVisible == orig(this.rangeMinorGridlinesVisible)
this.rangeMinorGridlineStroke == orig(this.rangeMinorGridlineStroke)
this.rangeMinorGridlinePaint == orig(this.rangeMinorGridlinePaint)
this.anchorValue == orig(this.anchorValue)
this.crosshairDatasetIndex == orig(this.crosshairDatasetIndex)
this.domainCrosshairVisible == orig(this.domainCrosshairVisible)
this.domainCrosshairRowKey == orig(this.domainCrosshairRowKey)
this.domainCrosshairColumnKey == orig(this.domainCrosshairColumnKey)
this.domainCrosshairStroke == orig(this.domainCrosshairStroke)
this.domainCrosshairPaint == orig(this.domainCrosshairPaint)
this.rangeCrosshairVisible == orig(this.rangeCrosshairVisible)
this.rangeCrosshairValue == orig(this.rangeCrosshairValue)
this.rangeCrosshairStroke == orig(this.rangeCrosshairStroke)
this.rangeCrosshairPaint == orig(this.rangeCrosshairPaint)
this.rangeCrosshairLockedOnData == orig(this.rangeCrosshairLockedOnData)
this.foregroundDomainMarkers == orig(this.foregroundDomainMarkers)
this.backgroundDomainMarkers == orig(this.backgroundDomainMarkers)
this.foregroundRangeMarkers == orig(this.foregroundRangeMarkers)
this.backgroundRangeMarkers == orig(this.backgroundRangeMarkers)
this.annotations == orig(this.annotations)
this.weight == orig(this.weight)
this.fixedDomainAxisSpace == orig(this.fixedDomainAxisSpace)
this.fixedRangeAxisSpace == orig(this.fixedRangeAxisSpace)
this.fixedLegendItems == orig(this.fixedLegendItems)
this.rangePannable == orig(this.rangePannable)
this.shadowGenerator == orig(this.shadowGenerator)
org.jfree.chart.plot.Plot.ZERO == orig(org.jfree.chart.plot.Plot.ZERO)
org.jfree.chart.plot.Plot.ZERO.getClass().getName() == orig(org.jfree.chart.plot.Plot.ZERO.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_INSETS == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name.toString == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name.toString)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.top == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.top)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.left == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.left)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.right == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.right)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName())
this.parent == orig(this.parent)
org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener == orig(org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener)
this.datasetGroup == orig(this.datasetGroup)
this.noDataMessage == orig(this.noDataMessage)
this.noDataMessageFont == orig(this.noDataMessageFont)
this.noDataMessagePaint == orig(this.noDataMessagePaint)
this.noDataMessagePaint.getClass().getName() == orig(this.noDataMessagePaint.getClass().getName())
this.insets == orig(this.insets)
this.insets.unitType == orig(this.insets.unitType)
this.insets.unitType.name == orig(this.insets.unitType.name)
this.insets.unitType.name.toString == orig(this.insets.unitType.name.toString)
this.insets.top == orig(this.insets.top)
this.insets.left == orig(this.insets.left)
this.insets.bottom == orig(this.insets.bottom)
this.insets.right == orig(this.insets.right)
this.outlineVisible == orig(this.outlineVisible)
this.outlineStroke == orig(this.outlineStroke)
this.outlineStroke.getClass().getName() == orig(this.outlineStroke.getClass().getName())
this.outlinePaint == orig(this.outlinePaint)
this.outlinePaint.getClass().getName() == orig(this.outlinePaint.getClass().getName())
this.backgroundPaint == orig(this.backgroundPaint)
this.backgroundPaint.getClass().getName() == orig(this.backgroundPaint.getClass().getName())
this.backgroundImage == orig(this.backgroundImage)
this.backgroundImageAlignment == orig(this.backgroundImageAlignment)
this.backgroundImageAlpha == orig(this.backgroundImageAlpha)
this.foregroundAlpha == orig(this.foregroundAlpha)
this.backgroundAlpha == orig(this.backgroundAlpha)
this.drawingSupplier == orig(this.drawingSupplier)
this.drawingSupplier.getClass().getName() == orig(this.drawingSupplier.getClass().getName())
this.listenerList == orig(this.listenerList)
this.notify == orig(this.notify)
this.domainAxes.size == 1
this.domainAxisLocations.objects[] has only one value, of length 8
this.domainAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.domainAxisLocations.size == 1
this.rangeAxes.size == 0
this.rangeAxisLocations.objects[] has only one value, of length 8
this.rangeAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.rangeAxisLocations.size == 1
this.datasets.objects[] contains only nulls and has only one value, of length 8
this.datasets.objects[] elements == null
this.datasets.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.datasets.objects[].getClass().getName() elements == null
this.renderers.objects[] contains only nulls and has only one value, of length 8
this.renderers.objects[] elements == null
this.renderers.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.renderers.objects[].getClass().getName() elements == null
this.renderers.size == 1
this.domainGridlinePosition == null
this.domainGridlineStroke == null
this.domainGridlinePaint == null
this.rangeZeroBaselineStroke == null
this.rangeZeroBaselinePaint == null
this.rangeGridlinesVisible == false
this.rangeGridlineStroke == null
this.rangeGridlinePaint == null
this.rangeMinorGridlineStroke == null
this.rangeMinorGridlinePaint == null
this.domainCrosshairStroke == null
this.domainCrosshairPaint == null
this.rangeCrosshairStroke == null
this.rangeCrosshairPaint == null
this.foregroundDomainMarkers == null
this.backgroundDomainMarkers == null
this.foregroundRangeMarkers == null
this.backgroundRangeMarkers == null
this.annotations == null
this.shadowGenerator == null
===========================================================================
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes(int, java.util.List):::ENTER
this.domainAxes.size == 1
this.domainAxisLocations.objects[] has only one value, of length 8
this.domainAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.domainAxisLocations.size == 1
this.rangeAxes.size == 1
this.rangeAxisLocations.objects[] has only one value, of length 8
this.rangeAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.rangeAxisLocations.size == 1
this.datasets.objects[] contains only nulls and has only one value, of length 8
this.datasets.objects[] elements == null
this.datasets.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.datasets.objects[].getClass().getName() elements == null
this.renderers.objects[] contains only nulls and has only one value, of length 8
this.renderers.objects[] elements == null
this.renderers.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.renderers.objects[].getClass().getName() elements == null
this.renderers.size == 1
this.domainGridlinePosition == null
this.domainGridlineStroke == null
this.domainGridlinePaint == null
this.rangeZeroBaselineStroke == null
this.rangeZeroBaselinePaint == null
this.rangeGridlinesVisible == false
this.rangeGridlineStroke == null
this.rangeGridlinePaint == null
this.rangeMinorGridlineStroke == null
this.rangeMinorGridlinePaint == null
this.domainCrosshairStroke == null
this.domainCrosshairPaint == null
this.rangeCrosshairStroke == null
this.rangeCrosshairPaint == null
this.foregroundDomainMarkers == null
this.backgroundDomainMarkers == null
this.foregroundRangeMarkers == null
this.backgroundRangeMarkers == null
this.annotations == null
this.shadowGenerator == null
index == 0
axisIndices has only one value
axisIndices[] contains no nulls and has only one value, of length 1
axisIndices[] elements has only one value
axisIndices[].getClass().getName() == [java.lang.Integer]
axisIndices[].getClass().getName() elements == java.lang.Integer.class
axisIndices.getClass().getName() == java.util.ArrayList.class
size(axisIndices[]) == 1
===========================================================================
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes(int, java.util.List):::EXIT
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE)
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_VALUE_LABEL_FONT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_VALUE_LABEL_FONT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT.getClass().getName())
org.jfree.chart.plot.CategoryPlot.localizationResources == orig(org.jfree.chart.plot.CategoryPlot.localizationResources)
org.jfree.chart.plot.CategoryPlot.localizationResources.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.localizationResources.getClass().getName())
this.orientation == orig(this.orientation)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL)
org.jfree.chart.plot.PlotOrientation.VERTICAL == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name.toString == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name.toString)
org.jfree.chart.plot.PlotOrientation.VERTICAL.name == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL.name)
org.jfree.chart.plot.PlotOrientation.VERTICAL.name.toString == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL.name.toString)
this.orientation.name == orig(this.orientation.name)
this.orientation.name.toString == orig(this.orientation.name.toString)
this.axisOffset == orig(this.axisOffset)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.top == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.top)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.left == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.left)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.bottom == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.bottom)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.right == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.right)
this.axisOffset.unitType == orig(this.axisOffset.unitType)
org.jfree.chart.util.UnitType.ABSOLUTE == orig(org.jfree.chart.util.UnitType.ABSOLUTE)
org.jfree.chart.util.UnitType.RELATIVE == orig(org.jfree.chart.util.UnitType.RELATIVE)
this.axisOffset.unitType.name == orig(this.axisOffset.unitType.name)
this.axisOffset.unitType.name.toString == orig(this.axisOffset.unitType.name.toString)
this.axisOffset.top == orig(this.axisOffset.top)
this.axisOffset.left == orig(this.axisOffset.left)
this.axisOffset.bottom == orig(this.axisOffset.bottom)
this.axisOffset.right == orig(this.axisOffset.right)
this.domainAxes == orig(this.domainAxes)
this.domainAxes.objects == orig(this.domainAxes.objects)
this.domainAxes.objects.getClass().getName() == orig(this.domainAxes.objects.getClass().getName())
this.domainAxes.objects[] == orig(this.domainAxes.objects[])
this.domainAxes.size == orig(this.domainAxes.size)
this.domainAxes.increment == orig(this.domainAxes.increment)
this.domainAxisLocations == orig(this.domainAxisLocations)
this.domainAxisLocations.objects == orig(this.domainAxisLocations.objects)
this.domainAxisLocations.objects.getClass().getName() == orig(this.domainAxisLocations.objects.getClass().getName())
this.domainAxisLocations.objects[] == orig(this.domainAxisLocations.objects[])
this.domainAxisLocations.size == orig(this.domainAxisLocations.size)
this.domainAxisLocations.increment == orig(this.domainAxisLocations.increment)
this.drawSharedDomainAxis == orig(this.drawSharedDomainAxis)
this.rangeAxes == orig(this.rangeAxes)
this.rangeAxes.objects == orig(this.rangeAxes.objects)
this.rangeAxes.objects.getClass().getName() == orig(this.rangeAxes.objects.getClass().getName())
this.rangeAxes.objects[] == orig(this.rangeAxes.objects[])
this.rangeAxes.size == orig(this.rangeAxes.size)
this.rangeAxes.increment == orig(this.rangeAxes.increment)
this.rangeAxisLocations == orig(this.rangeAxisLocations)
this.rangeAxisLocations.objects == orig(this.rangeAxisLocations.objects)
this.rangeAxisLocations.objects.getClass().getName() == orig(this.rangeAxisLocations.objects.getClass().getName())
this.rangeAxisLocations.objects[] == orig(this.rangeAxisLocations.objects[])
this.rangeAxisLocations.size == orig(this.rangeAxisLocations.size)
this.rangeAxisLocations.increment == orig(this.rangeAxisLocations.increment)
this.datasets == orig(this.datasets)
this.datasets.objects == orig(this.datasets.objects)
this.datasets.objects.getClass().getName() == orig(this.datasets.objects.getClass().getName())
this.datasets.objects[] == orig(this.datasets.objects[])
this.datasets.size == orig(this.datasets.size)
this.datasets.increment == orig(this.datasets.increment)
this.datasetToDomainAxesMap == orig(this.datasetToDomainAxesMap)
this.datasetToRangeAxesMap == orig(this.datasetToRangeAxesMap)
this.renderers == orig(this.renderers)
this.renderers.objects == orig(this.renderers.objects)
this.renderers.objects.getClass().getName() == orig(this.renderers.objects.getClass().getName())
this.renderers.objects[] == orig(this.renderers.objects[])
this.renderers.size == orig(this.renderers.size)
this.renderers.increment == orig(this.renderers.increment)
this.renderingOrder == orig(this.renderingOrder)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name.toString == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name.toString)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name.toString == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name.toString)
this.renderingOrder.name == orig(this.renderingOrder.name)
this.renderingOrder.name.toString == orig(this.renderingOrder.name.toString)
this.columnRenderingOrder == orig(this.columnRenderingOrder)
org.jfree.chart.util.SortOrder.ASCENDING == orig(org.jfree.chart.util.SortOrder.ASCENDING)
org.jfree.chart.util.SortOrder.DESCENDING == orig(org.jfree.chart.util.SortOrder.DESCENDING)
org.jfree.chart.util.SortOrder.ASCENDING.name == orig(org.jfree.chart.util.SortOrder.ASCENDING.name)
org.jfree.chart.util.SortOrder.ASCENDING.name.toString == orig(org.jfree.chart.util.SortOrder.ASCENDING.name.toString)
org.jfree.chart.util.SortOrder.DESCENDING.name == orig(org.jfree.chart.util.SortOrder.DESCENDING.name)
org.jfree.chart.util.SortOrder.DESCENDING.name.toString == orig(org.jfree.chart.util.SortOrder.DESCENDING.name.toString)
this.columnRenderingOrder.name == orig(this.columnRenderingOrder.name)
this.columnRenderingOrder.name.toString == orig(this.columnRenderingOrder.name.toString)
this.rowRenderingOrder == orig(this.rowRenderingOrder)
this.rowRenderingOrder.name == orig(this.rowRenderingOrder.name)
this.rowRenderingOrder.name.toString == orig(this.rowRenderingOrder.name.toString)
this.domainGridlinesVisible == orig(this.domainGridlinesVisible)
this.domainGridlinePosition == orig(this.domainGridlinePosition)
this.domainGridlineStroke == orig(this.domainGridlineStroke)
this.domainGridlinePaint == orig(this.domainGridlinePaint)
this.rangeZeroBaselineVisible == orig(this.rangeZeroBaselineVisible)
this.rangeZeroBaselineStroke == orig(this.rangeZeroBaselineStroke)
this.rangeZeroBaselinePaint == orig(this.rangeZeroBaselinePaint)
this.rangeGridlinesVisible == orig(this.rangeGridlinesVisible)
this.rangeGridlineStroke == orig(this.rangeGridlineStroke)
this.rangeGridlinePaint == orig(this.rangeGridlinePaint)
this.rangeMinorGridlinesVisible == orig(this.rangeMinorGridlinesVisible)
this.rangeMinorGridlineStroke == orig(this.rangeMinorGridlineStroke)
this.rangeMinorGridlinePaint == orig(this.rangeMinorGridlinePaint)
this.anchorValue == orig(this.anchorValue)
this.crosshairDatasetIndex == orig(this.crosshairDatasetIndex)
this.domainCrosshairVisible == orig(this.domainCrosshairVisible)
this.domainCrosshairRowKey == orig(this.domainCrosshairRowKey)
this.domainCrosshairColumnKey == orig(this.domainCrosshairColumnKey)
this.domainCrosshairStroke == orig(this.domainCrosshairStroke)
this.domainCrosshairPaint == orig(this.domainCrosshairPaint)
this.rangeCrosshairVisible == orig(this.rangeCrosshairVisible)
this.rangeCrosshairValue == orig(this.rangeCrosshairValue)
this.rangeCrosshairStroke == orig(this.rangeCrosshairStroke)
this.rangeCrosshairPaint == orig(this.rangeCrosshairPaint)
this.rangeCrosshairLockedOnData == orig(this.rangeCrosshairLockedOnData)
this.foregroundDomainMarkers == orig(this.foregroundDomainMarkers)
this.backgroundDomainMarkers == orig(this.backgroundDomainMarkers)
this.foregroundRangeMarkers == orig(this.foregroundRangeMarkers)
this.backgroundRangeMarkers == orig(this.backgroundRangeMarkers)
this.annotations == orig(this.annotations)
this.weight == orig(this.weight)
this.fixedDomainAxisSpace == orig(this.fixedDomainAxisSpace)
this.fixedRangeAxisSpace == orig(this.fixedRangeAxisSpace)
this.fixedLegendItems == orig(this.fixedLegendItems)
this.rangePannable == orig(this.rangePannable)
this.shadowGenerator == orig(this.shadowGenerator)
org.jfree.chart.plot.Plot.ZERO == orig(org.jfree.chart.plot.Plot.ZERO)
org.jfree.chart.plot.Plot.ZERO.getClass().getName() == orig(org.jfree.chart.plot.Plot.ZERO.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_INSETS == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name.toString == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name.toString)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.top == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.top)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.left == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.left)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.right == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.right)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName())
this.parent == orig(this.parent)
org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener == orig(org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener)
this.datasetGroup == orig(this.datasetGroup)
this.noDataMessage == orig(this.noDataMessage)
this.noDataMessageFont == orig(this.noDataMessageFont)
this.noDataMessagePaint == orig(this.noDataMessagePaint)
this.noDataMessagePaint.getClass().getName() == orig(this.noDataMessagePaint.getClass().getName())
this.insets == orig(this.insets)
this.insets.unitType == orig(this.insets.unitType)
this.insets.unitType.name == orig(this.insets.unitType.name)
this.insets.unitType.name.toString == orig(this.insets.unitType.name.toString)
this.insets.top == orig(this.insets.top)
this.insets.left == orig(this.insets.left)
this.insets.bottom == orig(this.insets.bottom)
this.insets.right == orig(this.insets.right)
this.outlineVisible == orig(this.outlineVisible)
this.outlineStroke == orig(this.outlineStroke)
this.outlineStroke.getClass().getName() == orig(this.outlineStroke.getClass().getName())
this.outlinePaint == orig(this.outlinePaint)
this.outlinePaint.getClass().getName() == orig(this.outlinePaint.getClass().getName())
this.backgroundPaint == orig(this.backgroundPaint)
this.backgroundPaint.getClass().getName() == orig(this.backgroundPaint.getClass().getName())
this.backgroundImage == orig(this.backgroundImage)
this.backgroundImageAlignment == orig(this.backgroundImageAlignment)
this.backgroundImageAlpha == orig(this.backgroundImageAlpha)
this.foregroundAlpha == orig(this.foregroundAlpha)
this.backgroundAlpha == orig(this.backgroundAlpha)
this.drawingSupplier == orig(this.drawingSupplier)
this.drawingSupplier.getClass().getName() == orig(this.drawingSupplier.getClass().getName())
this.listenerList == orig(this.listenerList)
this.notify == orig(this.notify)
axisIndices[] == orig(axisIndices[])
this.domainAxes.size == 1
this.domainAxisLocations.objects[] has only one value, of length 8
this.domainAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.domainAxisLocations.size == 1
this.rangeAxes.size == 1
this.rangeAxisLocations.objects[] has only one value, of length 8
this.rangeAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.rangeAxisLocations.size == 1
this.datasets.objects[] contains only nulls and has only one value, of length 8
this.datasets.objects[] elements == null
this.datasets.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.datasets.objects[].getClass().getName() elements == null
this.renderers.objects[] contains only nulls and has only one value, of length 8
this.renderers.objects[] elements == null
this.renderers.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.renderers.objects[].getClass().getName() elements == null
this.renderers.size == 1
this.domainGridlinePosition == null
this.domainGridlineStroke == null
this.domainGridlinePaint == null
this.rangeZeroBaselineStroke == null
this.rangeZeroBaselinePaint == null
this.rangeGridlinesVisible == false
this.rangeGridlineStroke == null
this.rangeGridlinePaint == null
this.rangeMinorGridlineStroke == null
this.rangeMinorGridlinePaint == null
this.domainCrosshairStroke == null
this.domainCrosshairPaint == null
this.rangeCrosshairStroke == null
this.rangeCrosshairPaint == null
this.foregroundDomainMarkers == null
this.backgroundDomainMarkers == null
this.foregroundRangeMarkers == null
this.backgroundRangeMarkers == null
this.annotations == null
this.shadowGenerator == null
axisIndices[] contains no nulls and has only one value, of length 1
axisIndices[] elements has only one value
axisIndices[].getClass().getName() == [java.lang.Integer]
axisIndices[].getClass().getName() elements == java.lang.Integer.class
===========================================================================
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxis(int, int):::ENTER
this.domainAxes.size == 1
this.domainAxisLocations.objects[] has only one value, of length 8
this.domainAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.domainAxisLocations.size == 1
this.rangeAxes.size == 1
this.rangeAxisLocations.objects[] has only one value, of length 8
this.rangeAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.rangeAxisLocations.size == 1
this.datasets.objects[] contains only nulls and has only one value, of length 8
this.datasets.objects[] elements == null
this.datasets.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.datasets.objects[].getClass().getName() elements == null
this.renderers.objects[] contains only nulls and has only one value, of length 8
this.renderers.objects[] elements == null
this.renderers.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.renderers.objects[].getClass().getName() elements == null
this.renderers.size == 1
this.domainGridlinePosition == null
this.domainGridlineStroke == null
this.domainGridlinePaint == null
this.rangeZeroBaselineStroke == null
this.rangeZeroBaselinePaint == null
this.rangeGridlinesVisible == false
this.rangeGridlineStroke == null
this.rangeGridlinePaint == null
this.rangeMinorGridlineStroke == null
this.rangeMinorGridlinePaint == null
this.domainCrosshairStroke == null
this.domainCrosshairPaint == null
this.rangeCrosshairStroke == null
this.rangeCrosshairPaint == null
this.foregroundDomainMarkers == null
this.backgroundDomainMarkers == null
this.foregroundRangeMarkers == null
this.backgroundRangeMarkers == null
this.annotations == null
this.shadowGenerator == null
index == 0
axisIndex == 0
===========================================================================
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxis(int, int):::EXIT
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE)
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_VALUE_LABEL_FONT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_VALUE_LABEL_FONT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT.getClass().getName())
org.jfree.chart.plot.CategoryPlot.localizationResources == orig(org.jfree.chart.plot.CategoryPlot.localizationResources)
org.jfree.chart.plot.CategoryPlot.localizationResources.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.localizationResources.getClass().getName())
this.orientation == orig(this.orientation)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL)
org.jfree.chart.plot.PlotOrientation.VERTICAL == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name.toString == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name.toString)
org.jfree.chart.plot.PlotOrientation.VERTICAL.name == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL.name)
org.jfree.chart.plot.PlotOrientation.VERTICAL.name.toString == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL.name.toString)
this.orientation.name == orig(this.orientation.name)
this.orientation.name.toString == orig(this.orientation.name.toString)
this.axisOffset == orig(this.axisOffset)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.top == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.top)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.left == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.left)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.bottom == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.bottom)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.right == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.right)
this.axisOffset.unitType == orig(this.axisOffset.unitType)
org.jfree.chart.util.UnitType.ABSOLUTE == orig(org.jfree.chart.util.UnitType.ABSOLUTE)
org.jfree.chart.util.UnitType.RELATIVE == orig(org.jfree.chart.util.UnitType.RELATIVE)
this.axisOffset.unitType.name == orig(this.axisOffset.unitType.name)
this.axisOffset.unitType.name.toString == orig(this.axisOffset.unitType.name.toString)
this.axisOffset.top == orig(this.axisOffset.top)
this.axisOffset.left == orig(this.axisOffset.left)
this.axisOffset.bottom == orig(this.axisOffset.bottom)
this.axisOffset.right == orig(this.axisOffset.right)
this.domainAxes == orig(this.domainAxes)
this.domainAxes.objects == orig(this.domainAxes.objects)
this.domainAxes.objects.getClass().getName() == orig(this.domainAxes.objects.getClass().getName())
this.domainAxes.objects[] == orig(this.domainAxes.objects[])
this.domainAxes.size == orig(this.domainAxes.size)
this.domainAxes.increment == orig(this.domainAxes.increment)
this.domainAxisLocations == orig(this.domainAxisLocations)
this.domainAxisLocations.objects == orig(this.domainAxisLocations.objects)
this.domainAxisLocations.objects.getClass().getName() == orig(this.domainAxisLocations.objects.getClass().getName())
this.domainAxisLocations.objects[] == orig(this.domainAxisLocations.objects[])
this.domainAxisLocations.size == orig(this.domainAxisLocations.size)
this.domainAxisLocations.increment == orig(this.domainAxisLocations.increment)
this.drawSharedDomainAxis == orig(this.drawSharedDomainAxis)
this.rangeAxes == orig(this.rangeAxes)
this.rangeAxes.objects == orig(this.rangeAxes.objects)
this.rangeAxes.objects.getClass().getName() == orig(this.rangeAxes.objects.getClass().getName())
this.rangeAxes.objects[] == orig(this.rangeAxes.objects[])
this.rangeAxes.size == orig(this.rangeAxes.size)
this.rangeAxes.increment == orig(this.rangeAxes.increment)
this.rangeAxisLocations == orig(this.rangeAxisLocations)
this.rangeAxisLocations.objects == orig(this.rangeAxisLocations.objects)
this.rangeAxisLocations.objects.getClass().getName() == orig(this.rangeAxisLocations.objects.getClass().getName())
this.rangeAxisLocations.objects[] == orig(this.rangeAxisLocations.objects[])
this.rangeAxisLocations.size == orig(this.rangeAxisLocations.size)
this.rangeAxisLocations.increment == orig(this.rangeAxisLocations.increment)
this.datasets == orig(this.datasets)
this.datasets.objects == orig(this.datasets.objects)
this.datasets.objects.getClass().getName() == orig(this.datasets.objects.getClass().getName())
this.datasets.objects[] == orig(this.datasets.objects[])
this.datasets.size == orig(this.datasets.size)
this.datasets.increment == orig(this.datasets.increment)
this.datasetToDomainAxesMap == orig(this.datasetToDomainAxesMap)
this.datasetToRangeAxesMap == orig(this.datasetToRangeAxesMap)
this.renderers == orig(this.renderers)
this.renderers.objects == orig(this.renderers.objects)
this.renderers.objects.getClass().getName() == orig(this.renderers.objects.getClass().getName())
this.renderers.objects[] == orig(this.renderers.objects[])
this.renderers.size == orig(this.renderers.size)
this.renderers.increment == orig(this.renderers.increment)
this.renderingOrder == orig(this.renderingOrder)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name.toString == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name.toString)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name.toString == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name.toString)
this.renderingOrder.name == orig(this.renderingOrder.name)
this.renderingOrder.name.toString == orig(this.renderingOrder.name.toString)
this.columnRenderingOrder == orig(this.columnRenderingOrder)
org.jfree.chart.util.SortOrder.ASCENDING == orig(org.jfree.chart.util.SortOrder.ASCENDING)
org.jfree.chart.util.SortOrder.DESCENDING == orig(org.jfree.chart.util.SortOrder.DESCENDING)
org.jfree.chart.util.SortOrder.ASCENDING.name == orig(org.jfree.chart.util.SortOrder.ASCENDING.name)
org.jfree.chart.util.SortOrder.ASCENDING.name.toString == orig(org.jfree.chart.util.SortOrder.ASCENDING.name.toString)
org.jfree.chart.util.SortOrder.DESCENDING.name == orig(org.jfree.chart.util.SortOrder.DESCENDING.name)
org.jfree.chart.util.SortOrder.DESCENDING.name.toString == orig(org.jfree.chart.util.SortOrder.DESCENDING.name.toString)
this.columnRenderingOrder.name == orig(this.columnRenderingOrder.name)
this.columnRenderingOrder.name.toString == orig(this.columnRenderingOrder.name.toString)
this.rowRenderingOrder == orig(this.rowRenderingOrder)
this.rowRenderingOrder.name == orig(this.rowRenderingOrder.name)
this.rowRenderingOrder.name.toString == orig(this.rowRenderingOrder.name.toString)
this.domainGridlinesVisible == orig(this.domainGridlinesVisible)
this.domainGridlinePosition == orig(this.domainGridlinePosition)
this.domainGridlineStroke == orig(this.domainGridlineStroke)
this.domainGridlinePaint == orig(this.domainGridlinePaint)
this.rangeZeroBaselineVisible == orig(this.rangeZeroBaselineVisible)
this.rangeZeroBaselineStroke == orig(this.rangeZeroBaselineStroke)
this.rangeZeroBaselinePaint == orig(this.rangeZeroBaselinePaint)
this.rangeGridlinesVisible == orig(this.rangeGridlinesVisible)
this.rangeGridlineStroke == orig(this.rangeGridlineStroke)
this.rangeGridlinePaint == orig(this.rangeGridlinePaint)
this.rangeMinorGridlinesVisible == orig(this.rangeMinorGridlinesVisible)
this.rangeMinorGridlineStroke == orig(this.rangeMinorGridlineStroke)
this.rangeMinorGridlinePaint == orig(this.rangeMinorGridlinePaint)
this.anchorValue == orig(this.anchorValue)
this.crosshairDatasetIndex == orig(this.crosshairDatasetIndex)
this.domainCrosshairVisible == orig(this.domainCrosshairVisible)
this.domainCrosshairRowKey == orig(this.domainCrosshairRowKey)
this.domainCrosshairColumnKey == orig(this.domainCrosshairColumnKey)
this.domainCrosshairStroke == orig(this.domainCrosshairStroke)
this.domainCrosshairPaint == orig(this.domainCrosshairPaint)
this.rangeCrosshairVisible == orig(this.rangeCrosshairVisible)
this.rangeCrosshairValue == orig(this.rangeCrosshairValue)
this.rangeCrosshairStroke == orig(this.rangeCrosshairStroke)
this.rangeCrosshairPaint == orig(this.rangeCrosshairPaint)
this.rangeCrosshairLockedOnData == orig(this.rangeCrosshairLockedOnData)
this.foregroundDomainMarkers == orig(this.foregroundDomainMarkers)
this.backgroundDomainMarkers == orig(this.backgroundDomainMarkers)
this.foregroundRangeMarkers == orig(this.foregroundRangeMarkers)
this.backgroundRangeMarkers == orig(this.backgroundRangeMarkers)
this.annotations == orig(this.annotations)
this.weight == orig(this.weight)
this.fixedDomainAxisSpace == orig(this.fixedDomainAxisSpace)
this.fixedRangeAxisSpace == orig(this.fixedRangeAxisSpace)
this.fixedLegendItems == orig(this.fixedLegendItems)
this.rangePannable == orig(this.rangePannable)
this.shadowGenerator == orig(this.shadowGenerator)
org.jfree.chart.plot.Plot.ZERO == orig(org.jfree.chart.plot.Plot.ZERO)
org.jfree.chart.plot.Plot.ZERO.getClass().getName() == orig(org.jfree.chart.plot.Plot.ZERO.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_INSETS == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name.toString == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name.toString)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.top == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.top)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.left == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.left)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.right == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.right)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName())
this.parent == orig(this.parent)
org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener == orig(org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener)
this.datasetGroup == orig(this.datasetGroup)
this.noDataMessage == orig(this.noDataMessage)
this.noDataMessageFont == orig(this.noDataMessageFont)
this.noDataMessagePaint == orig(this.noDataMessagePaint)
this.noDataMessagePaint.getClass().getName() == orig(this.noDataMessagePaint.getClass().getName())
this.insets == orig(this.insets)
this.insets.unitType == orig(this.insets.unitType)
this.insets.unitType.name == orig(this.insets.unitType.name)
this.insets.unitType.name.toString == orig(this.insets.unitType.name.toString)
this.insets.top == orig(this.insets.top)
this.insets.left == orig(this.insets.left)
this.insets.bottom == orig(this.insets.bottom)
this.insets.right == orig(this.insets.right)
this.outlineVisible == orig(this.outlineVisible)
this.outlineStroke == orig(this.outlineStroke)
this.outlineStroke.getClass().getName() == orig(this.outlineStroke.getClass().getName())
this.outlinePaint == orig(this.outlinePaint)
this.outlinePaint.getClass().getName() == orig(this.outlinePaint.getClass().getName())
this.backgroundPaint == orig(this.backgroundPaint)
this.backgroundPaint.getClass().getName() == orig(this.backgroundPaint.getClass().getName())
this.backgroundImage == orig(this.backgroundImage)
this.backgroundImageAlignment == orig(this.backgroundImageAlignment)
this.backgroundImageAlpha == orig(this.backgroundImageAlpha)
this.foregroundAlpha == orig(this.foregroundAlpha)
this.backgroundAlpha == orig(this.backgroundAlpha)
this.drawingSupplier == orig(this.drawingSupplier)
this.drawingSupplier.getClass().getName() == orig(this.drawingSupplier.getClass().getName())
this.listenerList == orig(this.listenerList)
this.notify == orig(this.notify)
this.domainAxes.size == 1
this.domainAxisLocations.objects[] has only one value, of length 8
this.domainAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.domainAxisLocations.size == 1
this.rangeAxes.size == 1
this.rangeAxisLocations.objects[] has only one value, of length 8
this.rangeAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.rangeAxisLocations.size == 1
this.datasets.objects[] contains only nulls and has only one value, of length 8
this.datasets.objects[] elements == null
this.datasets.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.datasets.objects[].getClass().getName() elements == null
this.renderers.objects[] contains only nulls and has only one value, of length 8
this.renderers.objects[] elements == null
this.renderers.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.renderers.objects[].getClass().getName() elements == null
this.renderers.size == 1
this.domainGridlinePosition == null
this.domainGridlineStroke == null
this.domainGridlinePaint == null
this.rangeZeroBaselineStroke == null
this.rangeZeroBaselinePaint == null
this.rangeGridlinesVisible == false
this.rangeGridlineStroke == null
this.rangeGridlinePaint == null
this.rangeMinorGridlineStroke == null
this.rangeMinorGridlinePaint == null
this.domainCrosshairStroke == null
this.domainCrosshairPaint == null
this.rangeCrosshairStroke == null
this.rangeCrosshairPaint == null
this.foregroundDomainMarkers == null
this.backgroundDomainMarkers == null
this.foregroundRangeMarkers == null
this.backgroundRangeMarkers == null
this.annotations == null
this.shadowGenerator == null
===========================================================================
org.jfree.chart.plot.CategoryPlot.setDataset(int, org.jfree.data.category.CategoryDataset):::ENTER
this.domainAxes.size == 1
this.domainAxisLocations.objects[] has only one value, of length 8
this.domainAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.domainAxisLocations.size == 1
this.rangeAxes.size == 1
this.rangeAxisLocations.objects[] has only one value, of length 8
this.rangeAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.rangeAxisLocations.size == 1
this.datasets.objects[] contains only nulls and has only one value, of length 8
this.datasets.objects[] elements == null
this.datasets.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.datasets.objects[].getClass().getName() elements == null
this.renderers.objects[] contains only nulls and has only one value, of length 8
this.renderers.objects[] elements == null
this.renderers.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.renderers.objects[].getClass().getName() elements == null
this.renderers.size == 1
this.domainGridlinePosition has only one value
this.domainGridlineStroke has only one value
this.domainGridlinePaint has only one value
this.rangeZeroBaselineStroke has only one value
this.rangeZeroBaselinePaint has only one value
this.rangeGridlinesVisible == true
this.rangeGridlineStroke has only one value
this.rangeGridlinePaint has only one value
this.rangeMinorGridlineStroke has only one value
this.rangeMinorGridlinePaint has only one value
this.domainCrosshairStroke has only one value
this.domainCrosshairPaint has only one value
this.rangeCrosshairStroke has only one value
this.rangeCrosshairPaint has only one value
this.foregroundDomainMarkers has only one value
this.backgroundDomainMarkers has only one value
this.foregroundRangeMarkers has only one value
this.backgroundRangeMarkers has only one value
this.annotations has only one value
this.shadowGenerator has only one value
index == 0
dataset has only one value
dataset.getClass().getName() == org.jfree.data.category.DefaultCategoryDataset.class
===========================================================================
org.jfree.chart.plot.CategoryPlot.setDataset(int, org.jfree.data.category.CategoryDataset):::EXIT
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE)
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_VALUE_LABEL_FONT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_VALUE_LABEL_FONT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT.getClass().getName())
org.jfree.chart.plot.CategoryPlot.localizationResources == orig(org.jfree.chart.plot.CategoryPlot.localizationResources)
org.jfree.chart.plot.CategoryPlot.localizationResources.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.localizationResources.getClass().getName())
this.orientation == orig(this.orientation)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL)
org.jfree.chart.plot.PlotOrientation.VERTICAL == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name.toString == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name.toString)
org.jfree.chart.plot.PlotOrientation.VERTICAL.name == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL.name)
org.jfree.chart.plot.PlotOrientation.VERTICAL.name.toString == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL.name.toString)
this.orientation.name == orig(this.orientation.name)
this.orientation.name.toString == orig(this.orientation.name.toString)
this.axisOffset == orig(this.axisOffset)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.top == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.top)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.left == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.left)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.bottom == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.bottom)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.right == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.right)
this.axisOffset.unitType == orig(this.axisOffset.unitType)
org.jfree.chart.util.UnitType.ABSOLUTE == orig(org.jfree.chart.util.UnitType.ABSOLUTE)
org.jfree.chart.util.UnitType.RELATIVE == orig(org.jfree.chart.util.UnitType.RELATIVE)
this.axisOffset.unitType.name == orig(this.axisOffset.unitType.name)
this.axisOffset.unitType.name.toString == orig(this.axisOffset.unitType.name.toString)
this.axisOffset.top == orig(this.axisOffset.top)
this.axisOffset.left == orig(this.axisOffset.left)
this.axisOffset.bottom == orig(this.axisOffset.bottom)
this.axisOffset.right == orig(this.axisOffset.right)
this.domainAxes == orig(this.domainAxes)
this.domainAxes.objects == orig(this.domainAxes.objects)
this.domainAxes.objects.getClass().getName() == orig(this.domainAxes.objects.getClass().getName())
this.domainAxes.objects[] == orig(this.domainAxes.objects[])
this.domainAxes.size == orig(this.domainAxes.size)
this.domainAxes.increment == orig(this.domainAxes.increment)
this.domainAxisLocations == orig(this.domainAxisLocations)
this.domainAxisLocations.objects == orig(this.domainAxisLocations.objects)
this.domainAxisLocations.objects.getClass().getName() == orig(this.domainAxisLocations.objects.getClass().getName())
this.domainAxisLocations.objects[] == orig(this.domainAxisLocations.objects[])
this.domainAxisLocations.size == orig(this.domainAxisLocations.size)
this.domainAxisLocations.increment == orig(this.domainAxisLocations.increment)
this.drawSharedDomainAxis == orig(this.drawSharedDomainAxis)
this.rangeAxes == orig(this.rangeAxes)
this.rangeAxes.objects == orig(this.rangeAxes.objects)
this.rangeAxes.objects.getClass().getName() == orig(this.rangeAxes.objects.getClass().getName())
this.rangeAxes.objects[] == orig(this.rangeAxes.objects[])
this.rangeAxes.size == orig(this.rangeAxes.size)
this.rangeAxes.increment == orig(this.rangeAxes.increment)
this.rangeAxisLocations == orig(this.rangeAxisLocations)
this.rangeAxisLocations.objects == orig(this.rangeAxisLocations.objects)
this.rangeAxisLocations.objects.getClass().getName() == orig(this.rangeAxisLocations.objects.getClass().getName())
this.rangeAxisLocations.objects[] == orig(this.rangeAxisLocations.objects[])
this.rangeAxisLocations.size == orig(this.rangeAxisLocations.size)
this.rangeAxisLocations.increment == orig(this.rangeAxisLocations.increment)
this.datasets == orig(this.datasets)
this.datasets.objects == orig(this.datasets.objects)
this.datasets.objects.getClass().getName() == orig(this.datasets.objects.getClass().getName())
this.datasets.size == orig(this.datasets.size)
this.datasets.increment == orig(this.datasets.increment)
this.datasetToDomainAxesMap == orig(this.datasetToDomainAxesMap)
this.datasetToRangeAxesMap == orig(this.datasetToRangeAxesMap)
this.renderers == orig(this.renderers)
this.renderers.objects == orig(this.renderers.objects)
this.renderers.objects.getClass().getName() == orig(this.renderers.objects.getClass().getName())
this.renderers.objects[] == orig(this.renderers.objects[])
this.renderers.size == orig(this.renderers.size)
this.renderers.increment == orig(this.renderers.increment)
this.renderingOrder == orig(this.renderingOrder)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name.toString == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name.toString)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name.toString == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name.toString)
this.renderingOrder.name == orig(this.renderingOrder.name)
this.renderingOrder.name.toString == orig(this.renderingOrder.name.toString)
this.columnRenderingOrder == orig(this.columnRenderingOrder)
org.jfree.chart.util.SortOrder.ASCENDING == orig(org.jfree.chart.util.SortOrder.ASCENDING)
org.jfree.chart.util.SortOrder.DESCENDING == orig(org.jfree.chart.util.SortOrder.DESCENDING)
org.jfree.chart.util.SortOrder.ASCENDING.name == orig(org.jfree.chart.util.SortOrder.ASCENDING.name)
org.jfree.chart.util.SortOrder.ASCENDING.name.toString == orig(org.jfree.chart.util.SortOrder.ASCENDING.name.toString)
org.jfree.chart.util.SortOrder.DESCENDING.name == orig(org.jfree.chart.util.SortOrder.DESCENDING.name)
org.jfree.chart.util.SortOrder.DESCENDING.name.toString == orig(org.jfree.chart.util.SortOrder.DESCENDING.name.toString)
this.columnRenderingOrder.name == orig(this.columnRenderingOrder.name)
this.columnRenderingOrder.name.toString == orig(this.columnRenderingOrder.name.toString)
this.rowRenderingOrder == orig(this.rowRenderingOrder)
this.rowRenderingOrder.name == orig(this.rowRenderingOrder.name)
this.rowRenderingOrder.name.toString == orig(this.rowRenderingOrder.name.toString)
this.domainGridlinesVisible == orig(this.domainGridlinesVisible)
this.domainGridlinePosition == orig(this.domainGridlinePosition)
org.jfree.chart.axis.CategoryAnchor.START == orig(org.jfree.chart.axis.CategoryAnchor.START)
org.jfree.chart.axis.CategoryAnchor.MIDDLE == orig(org.jfree.chart.axis.CategoryAnchor.MIDDLE)
org.jfree.chart.axis.CategoryAnchor.END == orig(org.jfree.chart.axis.CategoryAnchor.END)
org.jfree.chart.axis.CategoryAnchor.START.name == orig(org.jfree.chart.axis.CategoryAnchor.START.name)
org.jfree.chart.axis.CategoryAnchor.START.name.toString == orig(org.jfree.chart.axis.CategoryAnchor.START.name.toString)
org.jfree.chart.axis.CategoryAnchor.MIDDLE.name == orig(org.jfree.chart.axis.CategoryAnchor.MIDDLE.name)
org.jfree.chart.axis.CategoryAnchor.MIDDLE.name.toString == orig(org.jfree.chart.axis.CategoryAnchor.MIDDLE.name.toString)
org.jfree.chart.axis.CategoryAnchor.END.name == orig(org.jfree.chart.axis.CategoryAnchor.END.name)
org.jfree.chart.axis.CategoryAnchor.END.name.toString == orig(org.jfree.chart.axis.CategoryAnchor.END.name.toString)
this.domainGridlinePosition.name == orig(this.domainGridlinePosition.name)
this.domainGridlinePosition.name.toString == orig(this.domainGridlinePosition.name.toString)
this.domainGridlineStroke == orig(this.domainGridlineStroke)
this.domainGridlineStroke.getClass().getName() == orig(this.domainGridlineStroke.getClass().getName())
this.domainGridlinePaint == orig(this.domainGridlinePaint)
this.domainGridlinePaint.getClass().getName() == orig(this.domainGridlinePaint.getClass().getName())
this.rangeZeroBaselineVisible == orig(this.rangeZeroBaselineVisible)
this.rangeZeroBaselineStroke == orig(this.rangeZeroBaselineStroke)
this.rangeZeroBaselineStroke.getClass().getName() == orig(this.rangeZeroBaselineStroke.getClass().getName())
this.rangeZeroBaselinePaint == orig(this.rangeZeroBaselinePaint)
this.rangeZeroBaselinePaint.getClass().getName() == orig(this.rangeZeroBaselinePaint.getClass().getName())
this.rangeGridlinesVisible == orig(this.rangeGridlinesVisible)
this.rangeGridlineStroke == orig(this.rangeGridlineStroke)
this.rangeGridlineStroke.getClass().getName() == orig(this.rangeGridlineStroke.getClass().getName())
this.rangeGridlinePaint == orig(this.rangeGridlinePaint)
this.rangeGridlinePaint.getClass().getName() == orig(this.rangeGridlinePaint.getClass().getName())
this.rangeMinorGridlinesVisible == orig(this.rangeMinorGridlinesVisible)
this.rangeMinorGridlineStroke == orig(this.rangeMinorGridlineStroke)
this.rangeMinorGridlineStroke.getClass().getName() == orig(this.rangeMinorGridlineStroke.getClass().getName())
this.rangeMinorGridlinePaint == orig(this.rangeMinorGridlinePaint)
this.rangeMinorGridlinePaint.getClass().getName() == orig(this.rangeMinorGridlinePaint.getClass().getName())
this.anchorValue == orig(this.anchorValue)
this.crosshairDatasetIndex == orig(this.crosshairDatasetIndex)
this.domainCrosshairVisible == orig(this.domainCrosshairVisible)
this.domainCrosshairRowKey == orig(this.domainCrosshairRowKey)
this.domainCrosshairColumnKey == orig(this.domainCrosshairColumnKey)
this.domainCrosshairStroke == orig(this.domainCrosshairStroke)
this.domainCrosshairStroke.getClass().getName() == orig(this.domainCrosshairStroke.getClass().getName())
this.domainCrosshairPaint == orig(this.domainCrosshairPaint)
this.domainCrosshairPaint.getClass().getName() == orig(this.domainCrosshairPaint.getClass().getName())
this.rangeCrosshairVisible == orig(this.rangeCrosshairVisible)
this.rangeCrosshairValue == orig(this.rangeCrosshairValue)
this.rangeCrosshairStroke == orig(this.rangeCrosshairStroke)
this.rangeCrosshairStroke.getClass().getName() == orig(this.rangeCrosshairStroke.getClass().getName())
this.rangeCrosshairPaint == orig(this.rangeCrosshairPaint)
this.rangeCrosshairPaint.getClass().getName() == orig(this.rangeCrosshairPaint.getClass().getName())
this.rangeCrosshairLockedOnData == orig(this.rangeCrosshairLockedOnData)
this.foregroundDomainMarkers == orig(this.foregroundDomainMarkers)
this.foregroundDomainMarkers.getClass().getName() == orig(this.foregroundDomainMarkers.getClass().getName())
this.backgroundDomainMarkers == orig(this.backgroundDomainMarkers)
this.backgroundDomainMarkers.getClass().getName() == orig(this.backgroundDomainMarkers.getClass().getName())
this.foregroundRangeMarkers == orig(this.foregroundRangeMarkers)
this.foregroundRangeMarkers.getClass().getName() == orig(this.foregroundRangeMarkers.getClass().getName())
this.backgroundRangeMarkers == orig(this.backgroundRangeMarkers)
this.backgroundRangeMarkers.getClass().getName() == orig(this.backgroundRangeMarkers.getClass().getName())
this.annotations == orig(this.annotations)
this.annotations[] == orig(this.annotations[])
this.annotations.getClass().getName() == orig(this.annotations.getClass().getName())
this.weight == orig(this.weight)
this.fixedDomainAxisSpace == orig(this.fixedDomainAxisSpace)
this.fixedRangeAxisSpace == orig(this.fixedRangeAxisSpace)
this.fixedLegendItems == orig(this.fixedLegendItems)
this.rangePannable == orig(this.rangePannable)
this.shadowGenerator == orig(this.shadowGenerator)
this.shadowGenerator.getClass().getName() == orig(this.shadowGenerator.getClass().getName())
org.jfree.chart.plot.Plot.ZERO == orig(org.jfree.chart.plot.Plot.ZERO)
org.jfree.chart.plot.Plot.ZERO.getClass().getName() == orig(org.jfree.chart.plot.Plot.ZERO.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_INSETS == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name.toString == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name.toString)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.top == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.top)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.left == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.left)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.right == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.right)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName())
this.parent == orig(this.parent)
org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener == orig(org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener)
this.datasetGroup == orig(this.datasetGroup)
this.noDataMessage == orig(this.noDataMessage)
this.noDataMessageFont == orig(this.noDataMessageFont)
this.noDataMessagePaint == orig(this.noDataMessagePaint)
this.noDataMessagePaint.getClass().getName() == orig(this.noDataMessagePaint.getClass().getName())
this.insets == orig(this.insets)
this.insets.unitType == orig(this.insets.unitType)
this.insets.unitType.name == orig(this.insets.unitType.name)
this.insets.unitType.name.toString == orig(this.insets.unitType.name.toString)
this.insets.top == orig(this.insets.top)
this.insets.left == orig(this.insets.left)
this.insets.bottom == orig(this.insets.bottom)
this.insets.right == orig(this.insets.right)
this.outlineVisible == orig(this.outlineVisible)
this.outlineStroke == orig(this.outlineStroke)
this.outlineStroke.getClass().getName() == orig(this.outlineStroke.getClass().getName())
this.outlinePaint == orig(this.outlinePaint)
this.outlinePaint.getClass().getName() == orig(this.outlinePaint.getClass().getName())
this.backgroundPaint == orig(this.backgroundPaint)
this.backgroundPaint.getClass().getName() == orig(this.backgroundPaint.getClass().getName())
this.backgroundImage == orig(this.backgroundImage)
this.backgroundImageAlignment == orig(this.backgroundImageAlignment)
this.backgroundImageAlpha == orig(this.backgroundImageAlpha)
this.foregroundAlpha == orig(this.foregroundAlpha)
this.backgroundAlpha == orig(this.backgroundAlpha)
this.drawingSupplier == orig(this.drawingSupplier)
this.drawingSupplier.getClass().getName() == orig(this.drawingSupplier.getClass().getName())
this.listenerList == orig(this.listenerList)
this.notify == orig(this.notify)
size(this.datasets.objects[]) == orig(size(this.datasets.objects[]))
this.domainAxes.size == 1
this.domainAxisLocations.objects[] has only one value, of length 8
this.domainAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.domainAxisLocations.size == 1
this.rangeAxes.size == 1
this.rangeAxisLocations.objects[] has only one value, of length 8
this.rangeAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.rangeAxisLocations.size == 1
this.datasets.objects[] has only one value, of length 8
this.datasets.objects[].getClass().getName() == [org.jfree.data.category.DefaultCategoryDataset, null, null, null, null, null, null, null]
this.renderers.objects[] contains only nulls and has only one value, of length 8
this.renderers.objects[] elements == null
this.renderers.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.renderers.objects[].getClass().getName() elements == null
this.renderers.size == 1
this.domainGridlinePosition has only one value
this.domainGridlineStroke has only one value
this.domainGridlinePaint has only one value
this.rangeZeroBaselineStroke has only one value
this.rangeZeroBaselinePaint has only one value
this.rangeGridlinesVisible == true
this.rangeGridlineStroke has only one value
this.rangeGridlinePaint has only one value
this.rangeMinorGridlineStroke has only one value
this.rangeMinorGridlinePaint has only one value
this.domainCrosshairStroke has only one value
this.domainCrosshairPaint has only one value
this.rangeCrosshairStroke has only one value
this.rangeCrosshairPaint has only one value
this.foregroundDomainMarkers has only one value
this.backgroundDomainMarkers has only one value
this.foregroundRangeMarkers has only one value
this.backgroundRangeMarkers has only one value
this.annotations has only one value
this.shadowGenerator has only one value
===========================================================================
org.jfree.chart.plot.CategoryPlot.setDataset(org.jfree.data.category.CategoryDataset):::ENTER
this.domainAxes.size == 1
this.domainAxisLocations.objects[] has only one value, of length 8
this.domainAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.domainAxisLocations.size == 1
this.rangeAxes.size == 1
this.rangeAxisLocations.objects[] has only one value, of length 8
this.rangeAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.rangeAxisLocations.size == 1
this.datasets.objects[] contains only nulls and has only one value, of length 8
this.datasets.objects[] elements == null
this.datasets.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.datasets.objects[].getClass().getName() elements == null
this.renderers.objects[] contains only nulls and has only one value, of length 8
this.renderers.objects[] elements == null
this.renderers.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.renderers.objects[].getClass().getName() elements == null
this.renderers.size == 1
this.domainGridlinePosition has only one value
this.domainGridlineStroke has only one value
this.domainGridlinePaint has only one value
this.rangeZeroBaselineStroke has only one value
this.rangeZeroBaselinePaint has only one value
this.rangeGridlinesVisible == true
this.rangeGridlineStroke has only one value
this.rangeGridlinePaint has only one value
this.rangeMinorGridlineStroke has only one value
this.rangeMinorGridlinePaint has only one value
this.domainCrosshairStroke has only one value
this.domainCrosshairPaint has only one value
this.rangeCrosshairStroke has only one value
this.rangeCrosshairPaint has only one value
this.foregroundDomainMarkers has only one value
this.backgroundDomainMarkers has only one value
this.foregroundRangeMarkers has only one value
this.backgroundRangeMarkers has only one value
this.annotations has only one value
this.shadowGenerator has only one value
dataset has only one value
dataset.getClass().getName() == org.jfree.data.category.DefaultCategoryDataset.class
===========================================================================
org.jfree.chart.plot.CategoryPlot.setDataset(org.jfree.data.category.CategoryDataset):::EXIT
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE)
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_VALUE_LABEL_FONT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_VALUE_LABEL_FONT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT.getClass().getName())
org.jfree.chart.plot.CategoryPlot.localizationResources == orig(org.jfree.chart.plot.CategoryPlot.localizationResources)
org.jfree.chart.plot.CategoryPlot.localizationResources.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.localizationResources.getClass().getName())
this.orientation == orig(this.orientation)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL)
org.jfree.chart.plot.PlotOrientation.VERTICAL == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name.toString == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name.toString)
org.jfree.chart.plot.PlotOrientation.VERTICAL.name == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL.name)
org.jfree.chart.plot.PlotOrientation.VERTICAL.name.toString == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL.name.toString)
this.orientation.name == orig(this.orientation.name)
this.orientation.name.toString == orig(this.orientation.name.toString)
this.axisOffset == orig(this.axisOffset)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.top == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.top)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.left == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.left)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.bottom == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.bottom)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.right == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.right)
this.axisOffset.unitType == orig(this.axisOffset.unitType)
org.jfree.chart.util.UnitType.ABSOLUTE == orig(org.jfree.chart.util.UnitType.ABSOLUTE)
org.jfree.chart.util.UnitType.RELATIVE == orig(org.jfree.chart.util.UnitType.RELATIVE)
this.axisOffset.unitType.name == orig(this.axisOffset.unitType.name)
this.axisOffset.unitType.name.toString == orig(this.axisOffset.unitType.name.toString)
this.axisOffset.top == orig(this.axisOffset.top)
this.axisOffset.left == orig(this.axisOffset.left)
this.axisOffset.bottom == orig(this.axisOffset.bottom)
this.axisOffset.right == orig(this.axisOffset.right)
this.domainAxes == orig(this.domainAxes)
this.domainAxes.objects == orig(this.domainAxes.objects)
this.domainAxes.objects.getClass().getName() == orig(this.domainAxes.objects.getClass().getName())
this.domainAxes.objects[] == orig(this.domainAxes.objects[])
this.domainAxes.size == orig(this.domainAxes.size)
this.domainAxes.increment == orig(this.domainAxes.increment)
this.domainAxisLocations == orig(this.domainAxisLocations)
this.domainAxisLocations.objects == orig(this.domainAxisLocations.objects)
this.domainAxisLocations.objects.getClass().getName() == orig(this.domainAxisLocations.objects.getClass().getName())
this.domainAxisLocations.objects[] == orig(this.domainAxisLocations.objects[])
this.domainAxisLocations.size == orig(this.domainAxisLocations.size)
this.domainAxisLocations.increment == orig(this.domainAxisLocations.increment)
this.drawSharedDomainAxis == orig(this.drawSharedDomainAxis)
this.rangeAxes == orig(this.rangeAxes)
this.rangeAxes.objects == orig(this.rangeAxes.objects)
this.rangeAxes.objects.getClass().getName() == orig(this.rangeAxes.objects.getClass().getName())
this.rangeAxes.objects[] == orig(this.rangeAxes.objects[])
this.rangeAxes.size == orig(this.rangeAxes.size)
this.rangeAxes.increment == orig(this.rangeAxes.increment)
this.rangeAxisLocations == orig(this.rangeAxisLocations)
this.rangeAxisLocations.objects == orig(this.rangeAxisLocations.objects)
this.rangeAxisLocations.objects.getClass().getName() == orig(this.rangeAxisLocations.objects.getClass().getName())
this.rangeAxisLocations.objects[] == orig(this.rangeAxisLocations.objects[])
this.rangeAxisLocations.size == orig(this.rangeAxisLocations.size)
this.rangeAxisLocations.increment == orig(this.rangeAxisLocations.increment)
this.datasets == orig(this.datasets)
this.datasets.objects == orig(this.datasets.objects)
this.datasets.objects.getClass().getName() == orig(this.datasets.objects.getClass().getName())
this.datasets.size == orig(this.datasets.size)
this.datasets.increment == orig(this.datasets.increment)
this.datasetToDomainAxesMap == orig(this.datasetToDomainAxesMap)
this.datasetToRangeAxesMap == orig(this.datasetToRangeAxesMap)
this.renderers == orig(this.renderers)
this.renderers.objects == orig(this.renderers.objects)
this.renderers.objects.getClass().getName() == orig(this.renderers.objects.getClass().getName())
this.renderers.objects[] == orig(this.renderers.objects[])
this.renderers.size == orig(this.renderers.size)
this.renderers.increment == orig(this.renderers.increment)
this.renderingOrder == orig(this.renderingOrder)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name.toString == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name.toString)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name.toString == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name.toString)
this.renderingOrder.name == orig(this.renderingOrder.name)
this.renderingOrder.name.toString == orig(this.renderingOrder.name.toString)
this.columnRenderingOrder == orig(this.columnRenderingOrder)
org.jfree.chart.util.SortOrder.ASCENDING == orig(org.jfree.chart.util.SortOrder.ASCENDING)
org.jfree.chart.util.SortOrder.DESCENDING == orig(org.jfree.chart.util.SortOrder.DESCENDING)
org.jfree.chart.util.SortOrder.ASCENDING.name == orig(org.jfree.chart.util.SortOrder.ASCENDING.name)
org.jfree.chart.util.SortOrder.ASCENDING.name.toString == orig(org.jfree.chart.util.SortOrder.ASCENDING.name.toString)
org.jfree.chart.util.SortOrder.DESCENDING.name == orig(org.jfree.chart.util.SortOrder.DESCENDING.name)
org.jfree.chart.util.SortOrder.DESCENDING.name.toString == orig(org.jfree.chart.util.SortOrder.DESCENDING.name.toString)
this.columnRenderingOrder.name == orig(this.columnRenderingOrder.name)
this.columnRenderingOrder.name.toString == orig(this.columnRenderingOrder.name.toString)
this.rowRenderingOrder == orig(this.rowRenderingOrder)
this.rowRenderingOrder.name == orig(this.rowRenderingOrder.name)
this.rowRenderingOrder.name.toString == orig(this.rowRenderingOrder.name.toString)
this.domainGridlinesVisible == orig(this.domainGridlinesVisible)
this.domainGridlinePosition == orig(this.domainGridlinePosition)
org.jfree.chart.axis.CategoryAnchor.START == orig(org.jfree.chart.axis.CategoryAnchor.START)
org.jfree.chart.axis.CategoryAnchor.MIDDLE == orig(org.jfree.chart.axis.CategoryAnchor.MIDDLE)
org.jfree.chart.axis.CategoryAnchor.END == orig(org.jfree.chart.axis.CategoryAnchor.END)
org.jfree.chart.axis.CategoryAnchor.START.name == orig(org.jfree.chart.axis.CategoryAnchor.START.name)
org.jfree.chart.axis.CategoryAnchor.START.name.toString == orig(org.jfree.chart.axis.CategoryAnchor.START.name.toString)
org.jfree.chart.axis.CategoryAnchor.MIDDLE.name == orig(org.jfree.chart.axis.CategoryAnchor.MIDDLE.name)
org.jfree.chart.axis.CategoryAnchor.MIDDLE.name.toString == orig(org.jfree.chart.axis.CategoryAnchor.MIDDLE.name.toString)
org.jfree.chart.axis.CategoryAnchor.END.name == orig(org.jfree.chart.axis.CategoryAnchor.END.name)
org.jfree.chart.axis.CategoryAnchor.END.name.toString == orig(org.jfree.chart.axis.CategoryAnchor.END.name.toString)
this.domainGridlinePosition.name == orig(this.domainGridlinePosition.name)
this.domainGridlinePosition.name.toString == orig(this.domainGridlinePosition.name.toString)
this.domainGridlineStroke == orig(this.domainGridlineStroke)
this.domainGridlineStroke.getClass().getName() == orig(this.domainGridlineStroke.getClass().getName())
this.domainGridlinePaint == orig(this.domainGridlinePaint)
this.domainGridlinePaint.getClass().getName() == orig(this.domainGridlinePaint.getClass().getName())
this.rangeZeroBaselineVisible == orig(this.rangeZeroBaselineVisible)
this.rangeZeroBaselineStroke == orig(this.rangeZeroBaselineStroke)
this.rangeZeroBaselineStroke.getClass().getName() == orig(this.rangeZeroBaselineStroke.getClass().getName())
this.rangeZeroBaselinePaint == orig(this.rangeZeroBaselinePaint)
this.rangeZeroBaselinePaint.getClass().getName() == orig(this.rangeZeroBaselinePaint.getClass().getName())
this.rangeGridlinesVisible == orig(this.rangeGridlinesVisible)
this.rangeGridlineStroke == orig(this.rangeGridlineStroke)
this.rangeGridlineStroke.getClass().getName() == orig(this.rangeGridlineStroke.getClass().getName())
this.rangeGridlinePaint == orig(this.rangeGridlinePaint)
this.rangeGridlinePaint.getClass().getName() == orig(this.rangeGridlinePaint.getClass().getName())
this.rangeMinorGridlinesVisible == orig(this.rangeMinorGridlinesVisible)
this.rangeMinorGridlineStroke == orig(this.rangeMinorGridlineStroke)
this.rangeMinorGridlineStroke.getClass().getName() == orig(this.rangeMinorGridlineStroke.getClass().getName())
this.rangeMinorGridlinePaint == orig(this.rangeMinorGridlinePaint)
this.rangeMinorGridlinePaint.getClass().getName() == orig(this.rangeMinorGridlinePaint.getClass().getName())
this.anchorValue == orig(this.anchorValue)
this.crosshairDatasetIndex == orig(this.crosshairDatasetIndex)
this.domainCrosshairVisible == orig(this.domainCrosshairVisible)
this.domainCrosshairRowKey == orig(this.domainCrosshairRowKey)
this.domainCrosshairColumnKey == orig(this.domainCrosshairColumnKey)
this.domainCrosshairStroke == orig(this.domainCrosshairStroke)
this.domainCrosshairStroke.getClass().getName() == orig(this.domainCrosshairStroke.getClass().getName())
this.domainCrosshairPaint == orig(this.domainCrosshairPaint)
this.domainCrosshairPaint.getClass().getName() == orig(this.domainCrosshairPaint.getClass().getName())
this.rangeCrosshairVisible == orig(this.rangeCrosshairVisible)
this.rangeCrosshairValue == orig(this.rangeCrosshairValue)
this.rangeCrosshairStroke == orig(this.rangeCrosshairStroke)
this.rangeCrosshairStroke.getClass().getName() == orig(this.rangeCrosshairStroke.getClass().getName())
this.rangeCrosshairPaint == orig(this.rangeCrosshairPaint)
this.rangeCrosshairPaint.getClass().getName() == orig(this.rangeCrosshairPaint.getClass().getName())
this.rangeCrosshairLockedOnData == orig(this.rangeCrosshairLockedOnData)
this.foregroundDomainMarkers == orig(this.foregroundDomainMarkers)
this.foregroundDomainMarkers.getClass().getName() == orig(this.foregroundDomainMarkers.getClass().getName())
this.backgroundDomainMarkers == orig(this.backgroundDomainMarkers)
this.backgroundDomainMarkers.getClass().getName() == orig(this.backgroundDomainMarkers.getClass().getName())
this.foregroundRangeMarkers == orig(this.foregroundRangeMarkers)
this.foregroundRangeMarkers.getClass().getName() == orig(this.foregroundRangeMarkers.getClass().getName())
this.backgroundRangeMarkers == orig(this.backgroundRangeMarkers)
this.backgroundRangeMarkers.getClass().getName() == orig(this.backgroundRangeMarkers.getClass().getName())
this.annotations == orig(this.annotations)
this.annotations[] == orig(this.annotations[])
this.annotations.getClass().getName() == orig(this.annotations.getClass().getName())
this.weight == orig(this.weight)
this.fixedDomainAxisSpace == orig(this.fixedDomainAxisSpace)
this.fixedRangeAxisSpace == orig(this.fixedRangeAxisSpace)
this.fixedLegendItems == orig(this.fixedLegendItems)
this.rangePannable == orig(this.rangePannable)
this.shadowGenerator == orig(this.shadowGenerator)
this.shadowGenerator.getClass().getName() == orig(this.shadowGenerator.getClass().getName())
org.jfree.chart.plot.Plot.ZERO == orig(org.jfree.chart.plot.Plot.ZERO)
org.jfree.chart.plot.Plot.ZERO.getClass().getName() == orig(org.jfree.chart.plot.Plot.ZERO.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_INSETS == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name.toString == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name.toString)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.top == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.top)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.left == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.left)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.right == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.right)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName())
this.parent == orig(this.parent)
org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener == orig(org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener)
this.datasetGroup == orig(this.datasetGroup)
this.noDataMessage == orig(this.noDataMessage)
this.noDataMessageFont == orig(this.noDataMessageFont)
this.noDataMessagePaint == orig(this.noDataMessagePaint)
this.noDataMessagePaint.getClass().getName() == orig(this.noDataMessagePaint.getClass().getName())
this.insets == orig(this.insets)
this.insets.unitType == orig(this.insets.unitType)
this.insets.unitType.name == orig(this.insets.unitType.name)
this.insets.unitType.name.toString == orig(this.insets.unitType.name.toString)
this.insets.top == orig(this.insets.top)
this.insets.left == orig(this.insets.left)
this.insets.bottom == orig(this.insets.bottom)
this.insets.right == orig(this.insets.right)
this.outlineVisible == orig(this.outlineVisible)
this.outlineStroke == orig(this.outlineStroke)
this.outlineStroke.getClass().getName() == orig(this.outlineStroke.getClass().getName())
this.outlinePaint == orig(this.outlinePaint)
this.outlinePaint.getClass().getName() == orig(this.outlinePaint.getClass().getName())
this.backgroundPaint == orig(this.backgroundPaint)
this.backgroundPaint.getClass().getName() == orig(this.backgroundPaint.getClass().getName())
this.backgroundImage == orig(this.backgroundImage)
this.backgroundImageAlignment == orig(this.backgroundImageAlignment)
this.backgroundImageAlpha == orig(this.backgroundImageAlpha)
this.foregroundAlpha == orig(this.foregroundAlpha)
this.backgroundAlpha == orig(this.backgroundAlpha)
this.drawingSupplier == orig(this.drawingSupplier)
this.drawingSupplier.getClass().getName() == orig(this.drawingSupplier.getClass().getName())
this.listenerList == orig(this.listenerList)
this.notify == orig(this.notify)
size(this.datasets.objects[]) == orig(size(this.datasets.objects[]))
this.domainAxes.size == 1
this.domainAxisLocations.objects[] has only one value, of length 8
this.domainAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.domainAxisLocations.size == 1
this.rangeAxes.size == 1
this.rangeAxisLocations.objects[] has only one value, of length 8
this.rangeAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.rangeAxisLocations.size == 1
this.datasets.objects[] has only one value, of length 8
this.datasets.objects[].getClass().getName() == [org.jfree.data.category.DefaultCategoryDataset, null, null, null, null, null, null, null]
this.renderers.objects[] contains only nulls and has only one value, of length 8
this.renderers.objects[] elements == null
this.renderers.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.renderers.objects[].getClass().getName() elements == null
this.renderers.size == 1
this.domainGridlinePosition has only one value
this.domainGridlineStroke has only one value
this.domainGridlinePaint has only one value
this.rangeZeroBaselineStroke has only one value
this.rangeZeroBaselinePaint has only one value
this.rangeGridlinesVisible == true
this.rangeGridlineStroke has only one value
this.rangeGridlinePaint has only one value
this.rangeMinorGridlineStroke has only one value
this.rangeMinorGridlinePaint has only one value
this.domainCrosshairStroke has only one value
this.domainCrosshairPaint has only one value
this.rangeCrosshairStroke has only one value
this.rangeCrosshairPaint has only one value
this.foregroundDomainMarkers has only one value
this.backgroundDomainMarkers has only one value
this.foregroundRangeMarkers has only one value
this.backgroundRangeMarkers has only one value
this.annotations has only one value
this.shadowGenerator has only one value
===========================================================================
org.jfree.chart.plot.CategoryPlot.setDomainAxisLocation(int, org.jfree.chart.axis.AxisLocation, boolean):::ENTER
this.domainAxes.size == 0
this.domainAxisLocations.objects[] contains only nulls and has only one value, of length 8
this.domainAxisLocations.objects[] elements == null
this.domainAxisLocations.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.domainAxisLocations.objects[].getClass().getName() elements == null
this.domainAxisLocations.size == 0
this.rangeAxes.size == 0
this.rangeAxisLocations.objects[] contains only nulls and has only one value, of length 8
this.rangeAxisLocations.objects[] elements == null
this.rangeAxisLocations.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.rangeAxisLocations.objects[].getClass().getName() elements == null
this.rangeAxisLocations.size == 0
this.datasets.objects[] contains only nulls and has only one value, of length 8
this.datasets.objects[] elements == null
this.datasets.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.datasets.objects[].getClass().getName() elements == null
this.renderers.objects[] contains only nulls and has only one value, of length 8
this.renderers.objects[] elements == null
this.renderers.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.renderers.objects[].getClass().getName() elements == null
this.renderers.size == 0
this.domainGridlinePosition == null
this.domainGridlineStroke == null
this.domainGridlinePaint == null
this.rangeZeroBaselineStroke == null
this.rangeZeroBaselinePaint == null
this.rangeGridlinesVisible == false
this.rangeGridlineStroke == null
this.rangeGridlinePaint == null
this.rangeMinorGridlineStroke == null
this.rangeMinorGridlinePaint == null
this.domainCrosshairStroke == null
this.domainCrosshairPaint == null
this.rangeCrosshairStroke == null
this.rangeCrosshairPaint == null
this.foregroundDomainMarkers == null
this.backgroundDomainMarkers == null
this.foregroundRangeMarkers == null
this.backgroundRangeMarkers == null
this.annotations == null
this.shadowGenerator == null
index == 0
location has only one value
org.jfree.chart.axis.AxisLocation.TOP_OR_LEFT has only one value
org.jfree.chart.axis.AxisLocation.TOP_OR_RIGHT has only one value
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT has only one value
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_RIGHT has only one value
org.jfree.chart.axis.AxisLocation.TOP_OR_LEFT.name has only one value
org.jfree.chart.axis.AxisLocation.TOP_OR_LEFT.name.toString == "AxisLocation.TOP_OR_LEFT"
org.jfree.chart.axis.AxisLocation.TOP_OR_RIGHT.name has only one value
org.jfree.chart.axis.AxisLocation.TOP_OR_RIGHT.name.toString == "AxisLocation.TOP_OR_RIGHT"
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT.name has only one value
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT.name.toString == "AxisLocation.BOTTOM_OR_LEFT"
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_RIGHT.name has only one value
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_RIGHT.name.toString == "AxisLocation.BOTTOM_OR_RIGHT"
location.name has only one value
location.name.toString == "AxisLocation.BOTTOM_OR_LEFT"
notify == false
===========================================================================
org.jfree.chart.plot.CategoryPlot.setDomainAxisLocation(int, org.jfree.chart.axis.AxisLocation, boolean):::EXIT
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE)
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_VALUE_LABEL_FONT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_VALUE_LABEL_FONT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT.getClass().getName())
org.jfree.chart.plot.CategoryPlot.localizationResources == orig(org.jfree.chart.plot.CategoryPlot.localizationResources)
org.jfree.chart.plot.CategoryPlot.localizationResources.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.localizationResources.getClass().getName())
this.orientation == orig(this.orientation)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL)
org.jfree.chart.plot.PlotOrientation.VERTICAL == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name.toString == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name.toString)
org.jfree.chart.plot.PlotOrientation.VERTICAL.name == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL.name)
org.jfree.chart.plot.PlotOrientation.VERTICAL.name.toString == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL.name.toString)
this.orientation.name == orig(this.orientation.name)
this.orientation.name.toString == orig(this.orientation.name.toString)
this.axisOffset == orig(this.axisOffset)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.top == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.top)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.left == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.left)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.bottom == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.bottom)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.right == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.right)
this.axisOffset.unitType == orig(this.axisOffset.unitType)
org.jfree.chart.util.UnitType.ABSOLUTE == orig(org.jfree.chart.util.UnitType.ABSOLUTE)
org.jfree.chart.util.UnitType.RELATIVE == orig(org.jfree.chart.util.UnitType.RELATIVE)
this.axisOffset.unitType.name == orig(this.axisOffset.unitType.name)
this.axisOffset.unitType.name.toString == orig(this.axisOffset.unitType.name.toString)
this.axisOffset.top == orig(this.axisOffset.top)
this.axisOffset.left == orig(this.axisOffset.left)
this.axisOffset.bottom == orig(this.axisOffset.bottom)
this.axisOffset.right == orig(this.axisOffset.right)
this.domainAxes == orig(this.domainAxes)
this.domainAxes.objects == orig(this.domainAxes.objects)
this.domainAxes.objects.getClass().getName() == orig(this.domainAxes.objects.getClass().getName())
this.domainAxes.objects[] == orig(this.domainAxes.objects[])
this.domainAxes.size == orig(this.domainAxes.size)
this.domainAxes.increment == orig(this.domainAxes.increment)
this.domainAxisLocations == orig(this.domainAxisLocations)
this.domainAxisLocations.objects == orig(this.domainAxisLocations.objects)
this.domainAxisLocations.objects.getClass().getName() == orig(this.domainAxisLocations.objects.getClass().getName())
this.domainAxisLocations.increment == orig(this.domainAxisLocations.increment)
this.drawSharedDomainAxis == orig(this.drawSharedDomainAxis)
this.rangeAxes == orig(this.rangeAxes)
this.rangeAxes.objects == orig(this.rangeAxes.objects)
this.rangeAxes.objects.getClass().getName() == orig(this.rangeAxes.objects.getClass().getName())
this.rangeAxes.objects[] == orig(this.rangeAxes.objects[])
this.rangeAxes.size == orig(this.rangeAxes.size)
this.rangeAxes.increment == orig(this.rangeAxes.increment)
this.rangeAxisLocations == orig(this.rangeAxisLocations)
this.rangeAxisLocations.objects == orig(this.rangeAxisLocations.objects)
this.rangeAxisLocations.objects.getClass().getName() == orig(this.rangeAxisLocations.objects.getClass().getName())
this.rangeAxisLocations.objects[] == orig(this.rangeAxisLocations.objects[])
this.rangeAxisLocations.size == orig(this.rangeAxisLocations.size)
this.rangeAxisLocations.increment == orig(this.rangeAxisLocations.increment)
this.datasets == orig(this.datasets)
this.datasets.objects == orig(this.datasets.objects)
this.datasets.objects.getClass().getName() == orig(this.datasets.objects.getClass().getName())
this.datasets.objects[] == orig(this.datasets.objects[])
this.datasets.size == orig(this.datasets.size)
this.datasets.increment == orig(this.datasets.increment)
this.datasetToDomainAxesMap == orig(this.datasetToDomainAxesMap)
this.datasetToRangeAxesMap == orig(this.datasetToRangeAxesMap)
this.renderers == orig(this.renderers)
this.renderers.objects == orig(this.renderers.objects)
this.renderers.objects.getClass().getName() == orig(this.renderers.objects.getClass().getName())
this.renderers.objects[] == orig(this.renderers.objects[])
this.renderers.size == orig(this.renderers.size)
this.renderers.increment == orig(this.renderers.increment)
this.renderingOrder == orig(this.renderingOrder)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name.toString == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name.toString)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name.toString == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name.toString)
this.renderingOrder.name == orig(this.renderingOrder.name)
this.renderingOrder.name.toString == orig(this.renderingOrder.name.toString)
this.columnRenderingOrder == orig(this.columnRenderingOrder)
org.jfree.chart.util.SortOrder.ASCENDING == orig(org.jfree.chart.util.SortOrder.ASCENDING)
org.jfree.chart.util.SortOrder.DESCENDING == orig(org.jfree.chart.util.SortOrder.DESCENDING)
org.jfree.chart.util.SortOrder.ASCENDING.name == orig(org.jfree.chart.util.SortOrder.ASCENDING.name)
org.jfree.chart.util.SortOrder.ASCENDING.name.toString == orig(org.jfree.chart.util.SortOrder.ASCENDING.name.toString)
org.jfree.chart.util.SortOrder.DESCENDING.name == orig(org.jfree.chart.util.SortOrder.DESCENDING.name)
org.jfree.chart.util.SortOrder.DESCENDING.name.toString == orig(org.jfree.chart.util.SortOrder.DESCENDING.name.toString)
this.columnRenderingOrder.name == orig(this.columnRenderingOrder.name)
this.columnRenderingOrder.name.toString == orig(this.columnRenderingOrder.name.toString)
this.rowRenderingOrder == orig(this.rowRenderingOrder)
this.rowRenderingOrder.name == orig(this.rowRenderingOrder.name)
this.rowRenderingOrder.name.toString == orig(this.rowRenderingOrder.name.toString)
this.domainGridlinesVisible == orig(this.domainGridlinesVisible)
this.domainGridlinePosition == orig(this.domainGridlinePosition)
this.domainGridlineStroke == orig(this.domainGridlineStroke)
this.domainGridlinePaint == orig(this.domainGridlinePaint)
this.rangeZeroBaselineVisible == orig(this.rangeZeroBaselineVisible)
this.rangeZeroBaselineStroke == orig(this.rangeZeroBaselineStroke)
this.rangeZeroBaselinePaint == orig(this.rangeZeroBaselinePaint)
this.rangeGridlinesVisible == orig(this.rangeGridlinesVisible)
this.rangeGridlineStroke == orig(this.rangeGridlineStroke)
this.rangeGridlinePaint == orig(this.rangeGridlinePaint)
this.rangeMinorGridlinesVisible == orig(this.rangeMinorGridlinesVisible)
this.rangeMinorGridlineStroke == orig(this.rangeMinorGridlineStroke)
this.rangeMinorGridlinePaint == orig(this.rangeMinorGridlinePaint)
this.anchorValue == orig(this.anchorValue)
this.crosshairDatasetIndex == orig(this.crosshairDatasetIndex)
this.domainCrosshairVisible == orig(this.domainCrosshairVisible)
this.domainCrosshairRowKey == orig(this.domainCrosshairRowKey)
this.domainCrosshairColumnKey == orig(this.domainCrosshairColumnKey)
this.domainCrosshairStroke == orig(this.domainCrosshairStroke)
this.domainCrosshairPaint == orig(this.domainCrosshairPaint)
this.rangeCrosshairVisible == orig(this.rangeCrosshairVisible)
this.rangeCrosshairValue == orig(this.rangeCrosshairValue)
this.rangeCrosshairStroke == orig(this.rangeCrosshairStroke)
this.rangeCrosshairPaint == orig(this.rangeCrosshairPaint)
this.rangeCrosshairLockedOnData == orig(this.rangeCrosshairLockedOnData)
this.foregroundDomainMarkers == orig(this.foregroundDomainMarkers)
this.backgroundDomainMarkers == orig(this.backgroundDomainMarkers)
this.foregroundRangeMarkers == orig(this.foregroundRangeMarkers)
this.backgroundRangeMarkers == orig(this.backgroundRangeMarkers)
this.annotations == orig(this.annotations)
this.weight == orig(this.weight)
this.fixedDomainAxisSpace == orig(this.fixedDomainAxisSpace)
this.fixedRangeAxisSpace == orig(this.fixedRangeAxisSpace)
this.fixedLegendItems == orig(this.fixedLegendItems)
this.rangePannable == orig(this.rangePannable)
this.shadowGenerator == orig(this.shadowGenerator)
org.jfree.chart.plot.Plot.ZERO == orig(org.jfree.chart.plot.Plot.ZERO)
org.jfree.chart.plot.Plot.ZERO.getClass().getName() == orig(org.jfree.chart.plot.Plot.ZERO.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_INSETS == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name.toString == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name.toString)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.top == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.top)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.left == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.left)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.right == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.right)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName())
this.parent == orig(this.parent)
org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener == orig(org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener)
this.datasetGroup == orig(this.datasetGroup)
this.noDataMessage == orig(this.noDataMessage)
this.noDataMessageFont == orig(this.noDataMessageFont)
this.noDataMessagePaint == orig(this.noDataMessagePaint)
this.noDataMessagePaint.getClass().getName() == orig(this.noDataMessagePaint.getClass().getName())
this.insets == orig(this.insets)
this.insets.unitType == orig(this.insets.unitType)
this.insets.unitType.name == orig(this.insets.unitType.name)
this.insets.unitType.name.toString == orig(this.insets.unitType.name.toString)
this.insets.top == orig(this.insets.top)
this.insets.left == orig(this.insets.left)
this.insets.bottom == orig(this.insets.bottom)
this.insets.right == orig(this.insets.right)
this.outlineVisible == orig(this.outlineVisible)
this.outlineStroke == orig(this.outlineStroke)
this.outlineStroke.getClass().getName() == orig(this.outlineStroke.getClass().getName())
this.outlinePaint == orig(this.outlinePaint)
this.outlinePaint.getClass().getName() == orig(this.outlinePaint.getClass().getName())
this.backgroundPaint == orig(this.backgroundPaint)
this.backgroundPaint.getClass().getName() == orig(this.backgroundPaint.getClass().getName())
this.backgroundImage == orig(this.backgroundImage)
this.backgroundImageAlignment == orig(this.backgroundImageAlignment)
this.backgroundImageAlpha == orig(this.backgroundImageAlpha)
this.foregroundAlpha == orig(this.foregroundAlpha)
this.backgroundAlpha == orig(this.backgroundAlpha)
this.drawingSupplier == orig(this.drawingSupplier)
this.drawingSupplier.getClass().getName() == orig(this.drawingSupplier.getClass().getName())
this.listenerList == orig(this.listenerList)
this.notify == orig(this.notify)
org.jfree.chart.axis.AxisLocation.TOP_OR_LEFT == orig(org.jfree.chart.axis.AxisLocation.TOP_OR_LEFT)
org.jfree.chart.axis.AxisLocation.TOP_OR_RIGHT == orig(org.jfree.chart.axis.AxisLocation.TOP_OR_RIGHT)
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT == orig(org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT)
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_RIGHT == orig(org.jfree.chart.axis.AxisLocation.BOTTOM_OR_RIGHT)
org.jfree.chart.axis.AxisLocation.TOP_OR_LEFT.name == orig(org.jfree.chart.axis.AxisLocation.TOP_OR_LEFT.name)
org.jfree.chart.axis.AxisLocation.TOP_OR_LEFT.name.toString == orig(org.jfree.chart.axis.AxisLocation.TOP_OR_LEFT.name.toString)
org.jfree.chart.axis.AxisLocation.TOP_OR_RIGHT.name == orig(org.jfree.chart.axis.AxisLocation.TOP_OR_RIGHT.name)
org.jfree.chart.axis.AxisLocation.TOP_OR_RIGHT.name.toString == orig(org.jfree.chart.axis.AxisLocation.TOP_OR_RIGHT.name.toString)
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT.name == orig(org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT.name)
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT.name.toString == orig(org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT.name.toString)
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_RIGHT.name == orig(org.jfree.chart.axis.AxisLocation.BOTTOM_OR_RIGHT.name)
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_RIGHT.name.toString == orig(org.jfree.chart.axis.AxisLocation.BOTTOM_OR_RIGHT.name.toString)
location.name == orig(location.name)
location.name.toString == orig(location.name.toString)
size(this.domainAxisLocations.objects[]) == orig(size(this.domainAxisLocations.objects[]))
this.domainAxes.size == 0
this.domainAxisLocations.objects[] has only one value, of length 8
this.domainAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.domainAxisLocations.size == 1
this.rangeAxes.size == 0
this.rangeAxisLocations.objects[] contains only nulls and has only one value, of length 8
this.rangeAxisLocations.objects[] elements == null
this.rangeAxisLocations.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.rangeAxisLocations.objects[].getClass().getName() elements == null
this.rangeAxisLocations.size == 0
this.datasets.objects[] contains only nulls and has only one value, of length 8
this.datasets.objects[] elements == null
this.datasets.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.datasets.objects[].getClass().getName() elements == null
this.renderers.objects[] contains only nulls and has only one value, of length 8
this.renderers.objects[] elements == null
this.renderers.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.renderers.objects[].getClass().getName() elements == null
this.renderers.size == 0
this.domainGridlinePosition == null
this.domainGridlineStroke == null
this.domainGridlinePaint == null
this.rangeZeroBaselineStroke == null
this.rangeZeroBaselinePaint == null
this.rangeGridlinesVisible == false
this.rangeGridlineStroke == null
this.rangeGridlinePaint == null
this.rangeMinorGridlineStroke == null
this.rangeMinorGridlinePaint == null
this.domainCrosshairStroke == null
this.domainCrosshairPaint == null
this.rangeCrosshairStroke == null
this.rangeCrosshairPaint == null
this.foregroundDomainMarkers == null
this.backgroundDomainMarkers == null
this.foregroundRangeMarkers == null
this.backgroundRangeMarkers == null
this.annotations == null
this.shadowGenerator == null
org.jfree.chart.axis.AxisLocation.TOP_OR_LEFT has only one value
org.jfree.chart.axis.AxisLocation.TOP_OR_RIGHT has only one value
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT has only one value
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_RIGHT has only one value
org.jfree.chart.axis.AxisLocation.TOP_OR_LEFT.name has only one value
org.jfree.chart.axis.AxisLocation.TOP_OR_LEFT.name.toString == "AxisLocation.TOP_OR_LEFT"
org.jfree.chart.axis.AxisLocation.TOP_OR_RIGHT.name has only one value
org.jfree.chart.axis.AxisLocation.TOP_OR_RIGHT.name.toString == "AxisLocation.TOP_OR_RIGHT"
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT.name has only one value
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT.name.toString == "AxisLocation.BOTTOM_OR_LEFT"
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_RIGHT.name has only one value
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_RIGHT.name.toString == "AxisLocation.BOTTOM_OR_RIGHT"
location.name has only one value
location.name.toString == "AxisLocation.BOTTOM_OR_LEFT"
===========================================================================
org.jfree.chart.plot.CategoryPlot.setDomainAxisLocation(org.jfree.chart.axis.AxisLocation, boolean):::ENTER
this.domainAxes.size == 0
this.domainAxisLocations.objects[] contains only nulls and has only one value, of length 8
this.domainAxisLocations.objects[] elements == null
this.domainAxisLocations.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.domainAxisLocations.objects[].getClass().getName() elements == null
this.domainAxisLocations.size == 0
this.rangeAxes.size == 0
this.rangeAxisLocations.objects[] contains only nulls and has only one value, of length 8
this.rangeAxisLocations.objects[] elements == null
this.rangeAxisLocations.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.rangeAxisLocations.objects[].getClass().getName() elements == null
this.rangeAxisLocations.size == 0
this.datasets.objects[] contains only nulls and has only one value, of length 8
this.datasets.objects[] elements == null
this.datasets.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.datasets.objects[].getClass().getName() elements == null
this.renderers.objects[] contains only nulls and has only one value, of length 8
this.renderers.objects[] elements == null
this.renderers.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.renderers.objects[].getClass().getName() elements == null
this.renderers.size == 0
this.domainGridlinePosition == null
this.domainGridlineStroke == null
this.domainGridlinePaint == null
this.rangeZeroBaselineStroke == null
this.rangeZeroBaselinePaint == null
this.rangeGridlinesVisible == false
this.rangeGridlineStroke == null
this.rangeGridlinePaint == null
this.rangeMinorGridlineStroke == null
this.rangeMinorGridlinePaint == null
this.domainCrosshairStroke == null
this.domainCrosshairPaint == null
this.rangeCrosshairStroke == null
this.rangeCrosshairPaint == null
this.foregroundDomainMarkers == null
this.backgroundDomainMarkers == null
this.foregroundRangeMarkers == null
this.backgroundRangeMarkers == null
this.annotations == null
this.shadowGenerator == null
location has only one value
org.jfree.chart.axis.AxisLocation.TOP_OR_LEFT has only one value
org.jfree.chart.axis.AxisLocation.TOP_OR_RIGHT has only one value
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT has only one value
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_RIGHT has only one value
org.jfree.chart.axis.AxisLocation.TOP_OR_LEFT.name has only one value
org.jfree.chart.axis.AxisLocation.TOP_OR_LEFT.name.toString == "AxisLocation.TOP_OR_LEFT"
org.jfree.chart.axis.AxisLocation.TOP_OR_RIGHT.name has only one value
org.jfree.chart.axis.AxisLocation.TOP_OR_RIGHT.name.toString == "AxisLocation.TOP_OR_RIGHT"
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT.name has only one value
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT.name.toString == "AxisLocation.BOTTOM_OR_LEFT"
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_RIGHT.name has only one value
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_RIGHT.name.toString == "AxisLocation.BOTTOM_OR_RIGHT"
location.name has only one value
location.name.toString == "AxisLocation.BOTTOM_OR_LEFT"
notify == false
===========================================================================
org.jfree.chart.plot.CategoryPlot.setDomainAxisLocation(org.jfree.chart.axis.AxisLocation, boolean):::EXIT
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE)
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_VALUE_LABEL_FONT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_VALUE_LABEL_FONT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT.getClass().getName())
org.jfree.chart.plot.CategoryPlot.localizationResources == orig(org.jfree.chart.plot.CategoryPlot.localizationResources)
org.jfree.chart.plot.CategoryPlot.localizationResources.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.localizationResources.getClass().getName())
this.orientation == orig(this.orientation)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL)
org.jfree.chart.plot.PlotOrientation.VERTICAL == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name.toString == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name.toString)
org.jfree.chart.plot.PlotOrientation.VERTICAL.name == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL.name)
org.jfree.chart.plot.PlotOrientation.VERTICAL.name.toString == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL.name.toString)
this.orientation.name == orig(this.orientation.name)
this.orientation.name.toString == orig(this.orientation.name.toString)
this.axisOffset == orig(this.axisOffset)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.top == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.top)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.left == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.left)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.bottom == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.bottom)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.right == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.right)
this.axisOffset.unitType == orig(this.axisOffset.unitType)
org.jfree.chart.util.UnitType.ABSOLUTE == orig(org.jfree.chart.util.UnitType.ABSOLUTE)
org.jfree.chart.util.UnitType.RELATIVE == orig(org.jfree.chart.util.UnitType.RELATIVE)
this.axisOffset.unitType.name == orig(this.axisOffset.unitType.name)
this.axisOffset.unitType.name.toString == orig(this.axisOffset.unitType.name.toString)
this.axisOffset.top == orig(this.axisOffset.top)
this.axisOffset.left == orig(this.axisOffset.left)
this.axisOffset.bottom == orig(this.axisOffset.bottom)
this.axisOffset.right == orig(this.axisOffset.right)
this.domainAxes == orig(this.domainAxes)
this.domainAxes.objects == orig(this.domainAxes.objects)
this.domainAxes.objects.getClass().getName() == orig(this.domainAxes.objects.getClass().getName())
this.domainAxes.objects[] == orig(this.domainAxes.objects[])
this.domainAxes.size == orig(this.domainAxes.size)
this.domainAxes.increment == orig(this.domainAxes.increment)
this.domainAxisLocations == orig(this.domainAxisLocations)
this.domainAxisLocations.objects == orig(this.domainAxisLocations.objects)
this.domainAxisLocations.objects.getClass().getName() == orig(this.domainAxisLocations.objects.getClass().getName())
this.domainAxisLocations.increment == orig(this.domainAxisLocations.increment)
this.drawSharedDomainAxis == orig(this.drawSharedDomainAxis)
this.rangeAxes == orig(this.rangeAxes)
this.rangeAxes.objects == orig(this.rangeAxes.objects)
this.rangeAxes.objects.getClass().getName() == orig(this.rangeAxes.objects.getClass().getName())
this.rangeAxes.objects[] == orig(this.rangeAxes.objects[])
this.rangeAxes.size == orig(this.rangeAxes.size)
this.rangeAxes.increment == orig(this.rangeAxes.increment)
this.rangeAxisLocations == orig(this.rangeAxisLocations)
this.rangeAxisLocations.objects == orig(this.rangeAxisLocations.objects)
this.rangeAxisLocations.objects.getClass().getName() == orig(this.rangeAxisLocations.objects.getClass().getName())
this.rangeAxisLocations.objects[] == orig(this.rangeAxisLocations.objects[])
this.rangeAxisLocations.size == orig(this.rangeAxisLocations.size)
this.rangeAxisLocations.increment == orig(this.rangeAxisLocations.increment)
this.datasets == orig(this.datasets)
this.datasets.objects == orig(this.datasets.objects)
this.datasets.objects.getClass().getName() == orig(this.datasets.objects.getClass().getName())
this.datasets.objects[] == orig(this.datasets.objects[])
this.datasets.size == orig(this.datasets.size)
this.datasets.increment == orig(this.datasets.increment)
this.datasetToDomainAxesMap == orig(this.datasetToDomainAxesMap)
this.datasetToRangeAxesMap == orig(this.datasetToRangeAxesMap)
this.renderers == orig(this.renderers)
this.renderers.objects == orig(this.renderers.objects)
this.renderers.objects.getClass().getName() == orig(this.renderers.objects.getClass().getName())
this.renderers.objects[] == orig(this.renderers.objects[])
this.renderers.size == orig(this.renderers.size)
this.renderers.increment == orig(this.renderers.increment)
this.renderingOrder == orig(this.renderingOrder)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name.toString == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name.toString)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name.toString == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name.toString)
this.renderingOrder.name == orig(this.renderingOrder.name)
this.renderingOrder.name.toString == orig(this.renderingOrder.name.toString)
this.columnRenderingOrder == orig(this.columnRenderingOrder)
org.jfree.chart.util.SortOrder.ASCENDING == orig(org.jfree.chart.util.SortOrder.ASCENDING)
org.jfree.chart.util.SortOrder.DESCENDING == orig(org.jfree.chart.util.SortOrder.DESCENDING)
org.jfree.chart.util.SortOrder.ASCENDING.name == orig(org.jfree.chart.util.SortOrder.ASCENDING.name)
org.jfree.chart.util.SortOrder.ASCENDING.name.toString == orig(org.jfree.chart.util.SortOrder.ASCENDING.name.toString)
org.jfree.chart.util.SortOrder.DESCENDING.name == orig(org.jfree.chart.util.SortOrder.DESCENDING.name)
org.jfree.chart.util.SortOrder.DESCENDING.name.toString == orig(org.jfree.chart.util.SortOrder.DESCENDING.name.toString)
this.columnRenderingOrder.name == orig(this.columnRenderingOrder.name)
this.columnRenderingOrder.name.toString == orig(this.columnRenderingOrder.name.toString)
this.rowRenderingOrder == orig(this.rowRenderingOrder)
this.rowRenderingOrder.name == orig(this.rowRenderingOrder.name)
this.rowRenderingOrder.name.toString == orig(this.rowRenderingOrder.name.toString)
this.domainGridlinesVisible == orig(this.domainGridlinesVisible)
this.domainGridlinePosition == orig(this.domainGridlinePosition)
this.domainGridlineStroke == orig(this.domainGridlineStroke)
this.domainGridlinePaint == orig(this.domainGridlinePaint)
this.rangeZeroBaselineVisible == orig(this.rangeZeroBaselineVisible)
this.rangeZeroBaselineStroke == orig(this.rangeZeroBaselineStroke)
this.rangeZeroBaselinePaint == orig(this.rangeZeroBaselinePaint)
this.rangeGridlinesVisible == orig(this.rangeGridlinesVisible)
this.rangeGridlineStroke == orig(this.rangeGridlineStroke)
this.rangeGridlinePaint == orig(this.rangeGridlinePaint)
this.rangeMinorGridlinesVisible == orig(this.rangeMinorGridlinesVisible)
this.rangeMinorGridlineStroke == orig(this.rangeMinorGridlineStroke)
this.rangeMinorGridlinePaint == orig(this.rangeMinorGridlinePaint)
this.anchorValue == orig(this.anchorValue)
this.crosshairDatasetIndex == orig(this.crosshairDatasetIndex)
this.domainCrosshairVisible == orig(this.domainCrosshairVisible)
this.domainCrosshairRowKey == orig(this.domainCrosshairRowKey)
this.domainCrosshairColumnKey == orig(this.domainCrosshairColumnKey)
this.domainCrosshairStroke == orig(this.domainCrosshairStroke)
this.domainCrosshairPaint == orig(this.domainCrosshairPaint)
this.rangeCrosshairVisible == orig(this.rangeCrosshairVisible)
this.rangeCrosshairValue == orig(this.rangeCrosshairValue)
this.rangeCrosshairStroke == orig(this.rangeCrosshairStroke)
this.rangeCrosshairPaint == orig(this.rangeCrosshairPaint)
this.rangeCrosshairLockedOnData == orig(this.rangeCrosshairLockedOnData)
this.foregroundDomainMarkers == orig(this.foregroundDomainMarkers)
this.backgroundDomainMarkers == orig(this.backgroundDomainMarkers)
this.foregroundRangeMarkers == orig(this.foregroundRangeMarkers)
this.backgroundRangeMarkers == orig(this.backgroundRangeMarkers)
this.annotations == orig(this.annotations)
this.weight == orig(this.weight)
this.fixedDomainAxisSpace == orig(this.fixedDomainAxisSpace)
this.fixedRangeAxisSpace == orig(this.fixedRangeAxisSpace)
this.fixedLegendItems == orig(this.fixedLegendItems)
this.rangePannable == orig(this.rangePannable)
this.shadowGenerator == orig(this.shadowGenerator)
org.jfree.chart.plot.Plot.ZERO == orig(org.jfree.chart.plot.Plot.ZERO)
org.jfree.chart.plot.Plot.ZERO.getClass().getName() == orig(org.jfree.chart.plot.Plot.ZERO.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_INSETS == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name.toString == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name.toString)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.top == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.top)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.left == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.left)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.right == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.right)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName())
this.parent == orig(this.parent)
org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener == orig(org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener)
this.datasetGroup == orig(this.datasetGroup)
this.noDataMessage == orig(this.noDataMessage)
this.noDataMessageFont == orig(this.noDataMessageFont)
this.noDataMessagePaint == orig(this.noDataMessagePaint)
this.noDataMessagePaint.getClass().getName() == orig(this.noDataMessagePaint.getClass().getName())
this.insets == orig(this.insets)
this.insets.unitType == orig(this.insets.unitType)
this.insets.unitType.name == orig(this.insets.unitType.name)
this.insets.unitType.name.toString == orig(this.insets.unitType.name.toString)
this.insets.top == orig(this.insets.top)
this.insets.left == orig(this.insets.left)
this.insets.bottom == orig(this.insets.bottom)
this.insets.right == orig(this.insets.right)
this.outlineVisible == orig(this.outlineVisible)
this.outlineStroke == orig(this.outlineStroke)
this.outlineStroke.getClass().getName() == orig(this.outlineStroke.getClass().getName())
this.outlinePaint == orig(this.outlinePaint)
this.outlinePaint.getClass().getName() == orig(this.outlinePaint.getClass().getName())
this.backgroundPaint == orig(this.backgroundPaint)
this.backgroundPaint.getClass().getName() == orig(this.backgroundPaint.getClass().getName())
this.backgroundImage == orig(this.backgroundImage)
this.backgroundImageAlignment == orig(this.backgroundImageAlignment)
this.backgroundImageAlpha == orig(this.backgroundImageAlpha)
this.foregroundAlpha == orig(this.foregroundAlpha)
this.backgroundAlpha == orig(this.backgroundAlpha)
this.drawingSupplier == orig(this.drawingSupplier)
this.drawingSupplier.getClass().getName() == orig(this.drawingSupplier.getClass().getName())
this.listenerList == orig(this.listenerList)
this.notify == orig(this.notify)
org.jfree.chart.axis.AxisLocation.TOP_OR_LEFT == orig(org.jfree.chart.axis.AxisLocation.TOP_OR_LEFT)
org.jfree.chart.axis.AxisLocation.TOP_OR_RIGHT == orig(org.jfree.chart.axis.AxisLocation.TOP_OR_RIGHT)
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT == orig(org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT)
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_RIGHT == orig(org.jfree.chart.axis.AxisLocation.BOTTOM_OR_RIGHT)
org.jfree.chart.axis.AxisLocation.TOP_OR_LEFT.name == orig(org.jfree.chart.axis.AxisLocation.TOP_OR_LEFT.name)
org.jfree.chart.axis.AxisLocation.TOP_OR_LEFT.name.toString == orig(org.jfree.chart.axis.AxisLocation.TOP_OR_LEFT.name.toString)
org.jfree.chart.axis.AxisLocation.TOP_OR_RIGHT.name == orig(org.jfree.chart.axis.AxisLocation.TOP_OR_RIGHT.name)
org.jfree.chart.axis.AxisLocation.TOP_OR_RIGHT.name.toString == orig(org.jfree.chart.axis.AxisLocation.TOP_OR_RIGHT.name.toString)
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT.name == orig(org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT.name)
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT.name.toString == orig(org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT.name.toString)
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_RIGHT.name == orig(org.jfree.chart.axis.AxisLocation.BOTTOM_OR_RIGHT.name)
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_RIGHT.name.toString == orig(org.jfree.chart.axis.AxisLocation.BOTTOM_OR_RIGHT.name.toString)
location.name == orig(location.name)
location.name.toString == orig(location.name.toString)
size(this.domainAxisLocations.objects[]) == orig(size(this.domainAxisLocations.objects[]))
this.domainAxes.size == 0
this.domainAxisLocations.objects[] has only one value, of length 8
this.domainAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.domainAxisLocations.size == 1
this.rangeAxes.size == 0
this.rangeAxisLocations.objects[] contains only nulls and has only one value, of length 8
this.rangeAxisLocations.objects[] elements == null
this.rangeAxisLocations.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.rangeAxisLocations.objects[].getClass().getName() elements == null
this.rangeAxisLocations.size == 0
this.datasets.objects[] contains only nulls and has only one value, of length 8
this.datasets.objects[] elements == null
this.datasets.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.datasets.objects[].getClass().getName() elements == null
this.renderers.objects[] contains only nulls and has only one value, of length 8
this.renderers.objects[] elements == null
this.renderers.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.renderers.objects[].getClass().getName() elements == null
this.renderers.size == 0
this.domainGridlinePosition == null
this.domainGridlineStroke == null
this.domainGridlinePaint == null
this.rangeZeroBaselineStroke == null
this.rangeZeroBaselinePaint == null
this.rangeGridlinesVisible == false
this.rangeGridlineStroke == null
this.rangeGridlinePaint == null
this.rangeMinorGridlineStroke == null
this.rangeMinorGridlinePaint == null
this.domainCrosshairStroke == null
this.domainCrosshairPaint == null
this.rangeCrosshairStroke == null
this.rangeCrosshairPaint == null
this.foregroundDomainMarkers == null
this.backgroundDomainMarkers == null
this.foregroundRangeMarkers == null
this.backgroundRangeMarkers == null
this.annotations == null
this.shadowGenerator == null
org.jfree.chart.axis.AxisLocation.TOP_OR_LEFT has only one value
org.jfree.chart.axis.AxisLocation.TOP_OR_RIGHT has only one value
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT has only one value
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_RIGHT has only one value
org.jfree.chart.axis.AxisLocation.TOP_OR_LEFT.name has only one value
org.jfree.chart.axis.AxisLocation.TOP_OR_LEFT.name.toString == "AxisLocation.TOP_OR_LEFT"
org.jfree.chart.axis.AxisLocation.TOP_OR_RIGHT.name has only one value
org.jfree.chart.axis.AxisLocation.TOP_OR_RIGHT.name.toString == "AxisLocation.TOP_OR_RIGHT"
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT.name has only one value
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT.name.toString == "AxisLocation.BOTTOM_OR_LEFT"
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_RIGHT.name has only one value
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_RIGHT.name.toString == "AxisLocation.BOTTOM_OR_RIGHT"
location.name has only one value
location.name.toString == "AxisLocation.BOTTOM_OR_LEFT"
===========================================================================
org.jfree.chart.plot.CategoryPlot.setRangeAxisLocation(int, org.jfree.chart.axis.AxisLocation, boolean):::ENTER
this.domainAxes.size == 0
this.domainAxisLocations.objects[] has only one value, of length 8
this.domainAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.domainAxisLocations.size == 1
this.rangeAxes.size == 0
this.rangeAxisLocations.objects[] contains only nulls and has only one value, of length 8
this.rangeAxisLocations.objects[] elements == null
this.rangeAxisLocations.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.rangeAxisLocations.objects[].getClass().getName() elements == null
this.rangeAxisLocations.size == 0
this.datasets.objects[] contains only nulls and has only one value, of length 8
this.datasets.objects[] elements == null
this.datasets.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.datasets.objects[].getClass().getName() elements == null
this.renderers.objects[] contains only nulls and has only one value, of length 8
this.renderers.objects[] elements == null
this.renderers.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.renderers.objects[].getClass().getName() elements == null
this.renderers.size == 0
this.domainGridlinePosition == null
this.domainGridlineStroke == null
this.domainGridlinePaint == null
this.rangeZeroBaselineStroke == null
this.rangeZeroBaselinePaint == null
this.rangeGridlinesVisible == false
this.rangeGridlineStroke == null
this.rangeGridlinePaint == null
this.rangeMinorGridlineStroke == null
this.rangeMinorGridlinePaint == null
this.domainCrosshairStroke == null
this.domainCrosshairPaint == null
this.rangeCrosshairStroke == null
this.rangeCrosshairPaint == null
this.foregroundDomainMarkers == null
this.backgroundDomainMarkers == null
this.foregroundRangeMarkers == null
this.backgroundRangeMarkers == null
this.annotations == null
this.shadowGenerator == null
index == 0
location has only one value
org.jfree.chart.axis.AxisLocation.TOP_OR_LEFT has only one value
org.jfree.chart.axis.AxisLocation.TOP_OR_RIGHT has only one value
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT has only one value
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_RIGHT has only one value
org.jfree.chart.axis.AxisLocation.TOP_OR_LEFT.name has only one value
org.jfree.chart.axis.AxisLocation.TOP_OR_LEFT.name.toString == "AxisLocation.TOP_OR_LEFT"
org.jfree.chart.axis.AxisLocation.TOP_OR_RIGHT.name has only one value
org.jfree.chart.axis.AxisLocation.TOP_OR_RIGHT.name.toString == "AxisLocation.TOP_OR_RIGHT"
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT.name has only one value
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT.name.toString == "AxisLocation.BOTTOM_OR_LEFT"
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_RIGHT.name has only one value
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_RIGHT.name.toString == "AxisLocation.BOTTOM_OR_RIGHT"
location.name has only one value
location.name.toString == "AxisLocation.TOP_OR_LEFT"
notify == false
===========================================================================
org.jfree.chart.plot.CategoryPlot.setRangeAxisLocation(int, org.jfree.chart.axis.AxisLocation, boolean):::EXIT
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE)
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_VALUE_LABEL_FONT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_VALUE_LABEL_FONT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT.getClass().getName())
org.jfree.chart.plot.CategoryPlot.localizationResources == orig(org.jfree.chart.plot.CategoryPlot.localizationResources)
org.jfree.chart.plot.CategoryPlot.localizationResources.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.localizationResources.getClass().getName())
this.orientation == orig(this.orientation)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL)
org.jfree.chart.plot.PlotOrientation.VERTICAL == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name.toString == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name.toString)
org.jfree.chart.plot.PlotOrientation.VERTICAL.name == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL.name)
org.jfree.chart.plot.PlotOrientation.VERTICAL.name.toString == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL.name.toString)
this.orientation.name == orig(this.orientation.name)
this.orientation.name.toString == orig(this.orientation.name.toString)
this.axisOffset == orig(this.axisOffset)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.top == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.top)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.left == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.left)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.bottom == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.bottom)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.right == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.right)
this.axisOffset.unitType == orig(this.axisOffset.unitType)
org.jfree.chart.util.UnitType.ABSOLUTE == orig(org.jfree.chart.util.UnitType.ABSOLUTE)
org.jfree.chart.util.UnitType.RELATIVE == orig(org.jfree.chart.util.UnitType.RELATIVE)
this.axisOffset.unitType.name == orig(this.axisOffset.unitType.name)
this.axisOffset.unitType.name.toString == orig(this.axisOffset.unitType.name.toString)
this.axisOffset.top == orig(this.axisOffset.top)
this.axisOffset.left == orig(this.axisOffset.left)
this.axisOffset.bottom == orig(this.axisOffset.bottom)
this.axisOffset.right == orig(this.axisOffset.right)
this.domainAxes == orig(this.domainAxes)
this.domainAxes.objects == orig(this.domainAxes.objects)
this.domainAxes.objects.getClass().getName() == orig(this.domainAxes.objects.getClass().getName())
this.domainAxes.objects[] == orig(this.domainAxes.objects[])
this.domainAxes.size == orig(this.domainAxes.size)
this.domainAxes.increment == orig(this.domainAxes.increment)
this.domainAxisLocations == orig(this.domainAxisLocations)
this.domainAxisLocations.objects == orig(this.domainAxisLocations.objects)
this.domainAxisLocations.objects.getClass().getName() == orig(this.domainAxisLocations.objects.getClass().getName())
this.domainAxisLocations.objects[] == orig(this.domainAxisLocations.objects[])
this.domainAxisLocations.size == orig(this.domainAxisLocations.size)
this.domainAxisLocations.increment == orig(this.domainAxisLocations.increment)
this.drawSharedDomainAxis == orig(this.drawSharedDomainAxis)
this.rangeAxes == orig(this.rangeAxes)
this.rangeAxes.objects == orig(this.rangeAxes.objects)
this.rangeAxes.objects.getClass().getName() == orig(this.rangeAxes.objects.getClass().getName())
this.rangeAxes.objects[] == orig(this.rangeAxes.objects[])
this.rangeAxes.size == orig(this.rangeAxes.size)
this.rangeAxes.increment == orig(this.rangeAxes.increment)
this.rangeAxisLocations == orig(this.rangeAxisLocations)
this.rangeAxisLocations.objects == orig(this.rangeAxisLocations.objects)
this.rangeAxisLocations.objects.getClass().getName() == orig(this.rangeAxisLocations.objects.getClass().getName())
this.rangeAxisLocations.increment == orig(this.rangeAxisLocations.increment)
this.datasets == orig(this.datasets)
this.datasets.objects == orig(this.datasets.objects)
this.datasets.objects.getClass().getName() == orig(this.datasets.objects.getClass().getName())
this.datasets.objects[] == orig(this.datasets.objects[])
this.datasets.size == orig(this.datasets.size)
this.datasets.increment == orig(this.datasets.increment)
this.datasetToDomainAxesMap == orig(this.datasetToDomainAxesMap)
this.datasetToRangeAxesMap == orig(this.datasetToRangeAxesMap)
this.renderers == orig(this.renderers)
this.renderers.objects == orig(this.renderers.objects)
this.renderers.objects.getClass().getName() == orig(this.renderers.objects.getClass().getName())
this.renderers.objects[] == orig(this.renderers.objects[])
this.renderers.size == orig(this.renderers.size)
this.renderers.increment == orig(this.renderers.increment)
this.renderingOrder == orig(this.renderingOrder)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name.toString == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name.toString)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name.toString == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name.toString)
this.renderingOrder.name == orig(this.renderingOrder.name)
this.renderingOrder.name.toString == orig(this.renderingOrder.name.toString)
this.columnRenderingOrder == orig(this.columnRenderingOrder)
org.jfree.chart.util.SortOrder.ASCENDING == orig(org.jfree.chart.util.SortOrder.ASCENDING)
org.jfree.chart.util.SortOrder.DESCENDING == orig(org.jfree.chart.util.SortOrder.DESCENDING)
org.jfree.chart.util.SortOrder.ASCENDING.name == orig(org.jfree.chart.util.SortOrder.ASCENDING.name)
org.jfree.chart.util.SortOrder.ASCENDING.name.toString == orig(org.jfree.chart.util.SortOrder.ASCENDING.name.toString)
org.jfree.chart.util.SortOrder.DESCENDING.name == orig(org.jfree.chart.util.SortOrder.DESCENDING.name)
org.jfree.chart.util.SortOrder.DESCENDING.name.toString == orig(org.jfree.chart.util.SortOrder.DESCENDING.name.toString)
this.columnRenderingOrder.name == orig(this.columnRenderingOrder.name)
this.columnRenderingOrder.name.toString == orig(this.columnRenderingOrder.name.toString)
this.rowRenderingOrder == orig(this.rowRenderingOrder)
this.rowRenderingOrder.name == orig(this.rowRenderingOrder.name)
this.rowRenderingOrder.name.toString == orig(this.rowRenderingOrder.name.toString)
this.domainGridlinesVisible == orig(this.domainGridlinesVisible)
this.domainGridlinePosition == orig(this.domainGridlinePosition)
this.domainGridlineStroke == orig(this.domainGridlineStroke)
this.domainGridlinePaint == orig(this.domainGridlinePaint)
this.rangeZeroBaselineVisible == orig(this.rangeZeroBaselineVisible)
this.rangeZeroBaselineStroke == orig(this.rangeZeroBaselineStroke)
this.rangeZeroBaselinePaint == orig(this.rangeZeroBaselinePaint)
this.rangeGridlinesVisible == orig(this.rangeGridlinesVisible)
this.rangeGridlineStroke == orig(this.rangeGridlineStroke)
this.rangeGridlinePaint == orig(this.rangeGridlinePaint)
this.rangeMinorGridlinesVisible == orig(this.rangeMinorGridlinesVisible)
this.rangeMinorGridlineStroke == orig(this.rangeMinorGridlineStroke)
this.rangeMinorGridlinePaint == orig(this.rangeMinorGridlinePaint)
this.anchorValue == orig(this.anchorValue)
this.crosshairDatasetIndex == orig(this.crosshairDatasetIndex)
this.domainCrosshairVisible == orig(this.domainCrosshairVisible)
this.domainCrosshairRowKey == orig(this.domainCrosshairRowKey)
this.domainCrosshairColumnKey == orig(this.domainCrosshairColumnKey)
this.domainCrosshairStroke == orig(this.domainCrosshairStroke)
this.domainCrosshairPaint == orig(this.domainCrosshairPaint)
this.rangeCrosshairVisible == orig(this.rangeCrosshairVisible)
this.rangeCrosshairValue == orig(this.rangeCrosshairValue)
this.rangeCrosshairStroke == orig(this.rangeCrosshairStroke)
this.rangeCrosshairPaint == orig(this.rangeCrosshairPaint)
this.rangeCrosshairLockedOnData == orig(this.rangeCrosshairLockedOnData)
this.foregroundDomainMarkers == orig(this.foregroundDomainMarkers)
this.backgroundDomainMarkers == orig(this.backgroundDomainMarkers)
this.foregroundRangeMarkers == orig(this.foregroundRangeMarkers)
this.backgroundRangeMarkers == orig(this.backgroundRangeMarkers)
this.annotations == orig(this.annotations)
this.weight == orig(this.weight)
this.fixedDomainAxisSpace == orig(this.fixedDomainAxisSpace)
this.fixedRangeAxisSpace == orig(this.fixedRangeAxisSpace)
this.fixedLegendItems == orig(this.fixedLegendItems)
this.rangePannable == orig(this.rangePannable)
this.shadowGenerator == orig(this.shadowGenerator)
org.jfree.chart.plot.Plot.ZERO == orig(org.jfree.chart.plot.Plot.ZERO)
org.jfree.chart.plot.Plot.ZERO.getClass().getName() == orig(org.jfree.chart.plot.Plot.ZERO.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_INSETS == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name.toString == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name.toString)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.top == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.top)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.left == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.left)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.right == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.right)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName())
this.parent == orig(this.parent)
org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener == orig(org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener)
this.datasetGroup == orig(this.datasetGroup)
this.noDataMessage == orig(this.noDataMessage)
this.noDataMessageFont == orig(this.noDataMessageFont)
this.noDataMessagePaint == orig(this.noDataMessagePaint)
this.noDataMessagePaint.getClass().getName() == orig(this.noDataMessagePaint.getClass().getName())
this.insets == orig(this.insets)
this.insets.unitType == orig(this.insets.unitType)
this.insets.unitType.name == orig(this.insets.unitType.name)
this.insets.unitType.name.toString == orig(this.insets.unitType.name.toString)
this.insets.top == orig(this.insets.top)
this.insets.left == orig(this.insets.left)
this.insets.bottom == orig(this.insets.bottom)
this.insets.right == orig(this.insets.right)
this.outlineVisible == orig(this.outlineVisible)
this.outlineStroke == orig(this.outlineStroke)
this.outlineStroke.getClass().getName() == orig(this.outlineStroke.getClass().getName())
this.outlinePaint == orig(this.outlinePaint)
this.outlinePaint.getClass().getName() == orig(this.outlinePaint.getClass().getName())
this.backgroundPaint == orig(this.backgroundPaint)
this.backgroundPaint.getClass().getName() == orig(this.backgroundPaint.getClass().getName())
this.backgroundImage == orig(this.backgroundImage)
this.backgroundImageAlignment == orig(this.backgroundImageAlignment)
this.backgroundImageAlpha == orig(this.backgroundImageAlpha)
this.foregroundAlpha == orig(this.foregroundAlpha)
this.backgroundAlpha == orig(this.backgroundAlpha)
this.drawingSupplier == orig(this.drawingSupplier)
this.drawingSupplier.getClass().getName() == orig(this.drawingSupplier.getClass().getName())
this.listenerList == orig(this.listenerList)
this.notify == orig(this.notify)
org.jfree.chart.axis.AxisLocation.TOP_OR_LEFT == orig(org.jfree.chart.axis.AxisLocation.TOP_OR_LEFT)
org.jfree.chart.axis.AxisLocation.TOP_OR_RIGHT == orig(org.jfree.chart.axis.AxisLocation.TOP_OR_RIGHT)
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT == orig(org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT)
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_RIGHT == orig(org.jfree.chart.axis.AxisLocation.BOTTOM_OR_RIGHT)
org.jfree.chart.axis.AxisLocation.TOP_OR_LEFT.name == orig(org.jfree.chart.axis.AxisLocation.TOP_OR_LEFT.name)
org.jfree.chart.axis.AxisLocation.TOP_OR_LEFT.name.toString == orig(org.jfree.chart.axis.AxisLocation.TOP_OR_LEFT.name.toString)
org.jfree.chart.axis.AxisLocation.TOP_OR_RIGHT.name == orig(org.jfree.chart.axis.AxisLocation.TOP_OR_RIGHT.name)
org.jfree.chart.axis.AxisLocation.TOP_OR_RIGHT.name.toString == orig(org.jfree.chart.axis.AxisLocation.TOP_OR_RIGHT.name.toString)
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT.name == orig(org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT.name)
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT.name.toString == orig(org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT.name.toString)
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_RIGHT.name == orig(org.jfree.chart.axis.AxisLocation.BOTTOM_OR_RIGHT.name)
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_RIGHT.name.toString == orig(org.jfree.chart.axis.AxisLocation.BOTTOM_OR_RIGHT.name.toString)
location.name == orig(location.name)
location.name.toString == orig(location.name.toString)
size(this.rangeAxisLocations.objects[]) == orig(size(this.rangeAxisLocations.objects[]))
this.domainAxes.size == 0
this.domainAxisLocations.objects[] has only one value, of length 8
this.domainAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.domainAxisLocations.size == 1
this.rangeAxes.size == 0
this.rangeAxisLocations.objects[] has only one value, of length 8
this.rangeAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.rangeAxisLocations.size == 1
this.datasets.objects[] contains only nulls and has only one value, of length 8
this.datasets.objects[] elements == null
this.datasets.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.datasets.objects[].getClass().getName() elements == null
this.renderers.objects[] contains only nulls and has only one value, of length 8
this.renderers.objects[] elements == null
this.renderers.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.renderers.objects[].getClass().getName() elements == null
this.renderers.size == 0
this.domainGridlinePosition == null
this.domainGridlineStroke == null
this.domainGridlinePaint == null
this.rangeZeroBaselineStroke == null
this.rangeZeroBaselinePaint == null
this.rangeGridlinesVisible == false
this.rangeGridlineStroke == null
this.rangeGridlinePaint == null
this.rangeMinorGridlineStroke == null
this.rangeMinorGridlinePaint == null
this.domainCrosshairStroke == null
this.domainCrosshairPaint == null
this.rangeCrosshairStroke == null
this.rangeCrosshairPaint == null
this.foregroundDomainMarkers == null
this.backgroundDomainMarkers == null
this.foregroundRangeMarkers == null
this.backgroundRangeMarkers == null
this.annotations == null
this.shadowGenerator == null
org.jfree.chart.axis.AxisLocation.TOP_OR_LEFT has only one value
org.jfree.chart.axis.AxisLocation.TOP_OR_RIGHT has only one value
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT has only one value
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_RIGHT has only one value
org.jfree.chart.axis.AxisLocation.TOP_OR_LEFT.name has only one value
org.jfree.chart.axis.AxisLocation.TOP_OR_LEFT.name.toString == "AxisLocation.TOP_OR_LEFT"
org.jfree.chart.axis.AxisLocation.TOP_OR_RIGHT.name has only one value
org.jfree.chart.axis.AxisLocation.TOP_OR_RIGHT.name.toString == "AxisLocation.TOP_OR_RIGHT"
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT.name has only one value
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT.name.toString == "AxisLocation.BOTTOM_OR_LEFT"
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_RIGHT.name has only one value
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_RIGHT.name.toString == "AxisLocation.BOTTOM_OR_RIGHT"
location.name has only one value
location.name.toString == "AxisLocation.TOP_OR_LEFT"
===========================================================================
org.jfree.chart.plot.CategoryPlot.setRangeAxisLocation(org.jfree.chart.axis.AxisLocation, boolean):::ENTER
this.domainAxes.size == 0
this.domainAxisLocations.objects[] has only one value, of length 8
this.domainAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.domainAxisLocations.size == 1
this.rangeAxes.size == 0
this.rangeAxisLocations.objects[] contains only nulls and has only one value, of length 8
this.rangeAxisLocations.objects[] elements == null
this.rangeAxisLocations.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.rangeAxisLocations.objects[].getClass().getName() elements == null
this.rangeAxisLocations.size == 0
this.datasets.objects[] contains only nulls and has only one value, of length 8
this.datasets.objects[] elements == null
this.datasets.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.datasets.objects[].getClass().getName() elements == null
this.renderers.objects[] contains only nulls and has only one value, of length 8
this.renderers.objects[] elements == null
this.renderers.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.renderers.objects[].getClass().getName() elements == null
this.renderers.size == 0
this.domainGridlinePosition == null
this.domainGridlineStroke == null
this.domainGridlinePaint == null
this.rangeZeroBaselineStroke == null
this.rangeZeroBaselinePaint == null
this.rangeGridlinesVisible == false
this.rangeGridlineStroke == null
this.rangeGridlinePaint == null
this.rangeMinorGridlineStroke == null
this.rangeMinorGridlinePaint == null
this.domainCrosshairStroke == null
this.domainCrosshairPaint == null
this.rangeCrosshairStroke == null
this.rangeCrosshairPaint == null
this.foregroundDomainMarkers == null
this.backgroundDomainMarkers == null
this.foregroundRangeMarkers == null
this.backgroundRangeMarkers == null
this.annotations == null
this.shadowGenerator == null
location has only one value
org.jfree.chart.axis.AxisLocation.TOP_OR_LEFT has only one value
org.jfree.chart.axis.AxisLocation.TOP_OR_RIGHT has only one value
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT has only one value
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_RIGHT has only one value
org.jfree.chart.axis.AxisLocation.TOP_OR_LEFT.name has only one value
org.jfree.chart.axis.AxisLocation.TOP_OR_LEFT.name.toString == "AxisLocation.TOP_OR_LEFT"
org.jfree.chart.axis.AxisLocation.TOP_OR_RIGHT.name has only one value
org.jfree.chart.axis.AxisLocation.TOP_OR_RIGHT.name.toString == "AxisLocation.TOP_OR_RIGHT"
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT.name has only one value
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT.name.toString == "AxisLocation.BOTTOM_OR_LEFT"
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_RIGHT.name has only one value
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_RIGHT.name.toString == "AxisLocation.BOTTOM_OR_RIGHT"
location.name has only one value
location.name.toString == "AxisLocation.TOP_OR_LEFT"
notify == false
===========================================================================
org.jfree.chart.plot.CategoryPlot.setRangeAxisLocation(org.jfree.chart.axis.AxisLocation, boolean):::EXIT
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE)
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_VALUE_LABEL_FONT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_VALUE_LABEL_FONT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT.getClass().getName())
org.jfree.chart.plot.CategoryPlot.localizationResources == orig(org.jfree.chart.plot.CategoryPlot.localizationResources)
org.jfree.chart.plot.CategoryPlot.localizationResources.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.localizationResources.getClass().getName())
this.orientation == orig(this.orientation)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL)
org.jfree.chart.plot.PlotOrientation.VERTICAL == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name.toString == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name.toString)
org.jfree.chart.plot.PlotOrientation.VERTICAL.name == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL.name)
org.jfree.chart.plot.PlotOrientation.VERTICAL.name.toString == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL.name.toString)
this.orientation.name == orig(this.orientation.name)
this.orientation.name.toString == orig(this.orientation.name.toString)
this.axisOffset == orig(this.axisOffset)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.top == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.top)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.left == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.left)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.bottom == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.bottom)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.right == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.right)
this.axisOffset.unitType == orig(this.axisOffset.unitType)
org.jfree.chart.util.UnitType.ABSOLUTE == orig(org.jfree.chart.util.UnitType.ABSOLUTE)
org.jfree.chart.util.UnitType.RELATIVE == orig(org.jfree.chart.util.UnitType.RELATIVE)
this.axisOffset.unitType.name == orig(this.axisOffset.unitType.name)
this.axisOffset.unitType.name.toString == orig(this.axisOffset.unitType.name.toString)
this.axisOffset.top == orig(this.axisOffset.top)
this.axisOffset.left == orig(this.axisOffset.left)
this.axisOffset.bottom == orig(this.axisOffset.bottom)
this.axisOffset.right == orig(this.axisOffset.right)
this.domainAxes == orig(this.domainAxes)
this.domainAxes.objects == orig(this.domainAxes.objects)
this.domainAxes.objects.getClass().getName() == orig(this.domainAxes.objects.getClass().getName())
this.domainAxes.objects[] == orig(this.domainAxes.objects[])
this.domainAxes.size == orig(this.domainAxes.size)
this.domainAxes.increment == orig(this.domainAxes.increment)
this.domainAxisLocations == orig(this.domainAxisLocations)
this.domainAxisLocations.objects == orig(this.domainAxisLocations.objects)
this.domainAxisLocations.objects.getClass().getName() == orig(this.domainAxisLocations.objects.getClass().getName())
this.domainAxisLocations.objects[] == orig(this.domainAxisLocations.objects[])
this.domainAxisLocations.size == orig(this.domainAxisLocations.size)
this.domainAxisLocations.increment == orig(this.domainAxisLocations.increment)
this.drawSharedDomainAxis == orig(this.drawSharedDomainAxis)
this.rangeAxes == orig(this.rangeAxes)
this.rangeAxes.objects == orig(this.rangeAxes.objects)
this.rangeAxes.objects.getClass().getName() == orig(this.rangeAxes.objects.getClass().getName())
this.rangeAxes.objects[] == orig(this.rangeAxes.objects[])
this.rangeAxes.size == orig(this.rangeAxes.size)
this.rangeAxes.increment == orig(this.rangeAxes.increment)
this.rangeAxisLocations == orig(this.rangeAxisLocations)
this.rangeAxisLocations.objects == orig(this.rangeAxisLocations.objects)
this.rangeAxisLocations.objects.getClass().getName() == orig(this.rangeAxisLocations.objects.getClass().getName())
this.rangeAxisLocations.increment == orig(this.rangeAxisLocations.increment)
this.datasets == orig(this.datasets)
this.datasets.objects == orig(this.datasets.objects)
this.datasets.objects.getClass().getName() == orig(this.datasets.objects.getClass().getName())
this.datasets.objects[] == orig(this.datasets.objects[])
this.datasets.size == orig(this.datasets.size)
this.datasets.increment == orig(this.datasets.increment)
this.datasetToDomainAxesMap == orig(this.datasetToDomainAxesMap)
this.datasetToRangeAxesMap == orig(this.datasetToRangeAxesMap)
this.renderers == orig(this.renderers)
this.renderers.objects == orig(this.renderers.objects)
this.renderers.objects.getClass().getName() == orig(this.renderers.objects.getClass().getName())
this.renderers.objects[] == orig(this.renderers.objects[])
this.renderers.size == orig(this.renderers.size)
this.renderers.increment == orig(this.renderers.increment)
this.renderingOrder == orig(this.renderingOrder)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name.toString == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name.toString)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name.toString == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name.toString)
this.renderingOrder.name == orig(this.renderingOrder.name)
this.renderingOrder.name.toString == orig(this.renderingOrder.name.toString)
this.columnRenderingOrder == orig(this.columnRenderingOrder)
org.jfree.chart.util.SortOrder.ASCENDING == orig(org.jfree.chart.util.SortOrder.ASCENDING)
org.jfree.chart.util.SortOrder.DESCENDING == orig(org.jfree.chart.util.SortOrder.DESCENDING)
org.jfree.chart.util.SortOrder.ASCENDING.name == orig(org.jfree.chart.util.SortOrder.ASCENDING.name)
org.jfree.chart.util.SortOrder.ASCENDING.name.toString == orig(org.jfree.chart.util.SortOrder.ASCENDING.name.toString)
org.jfree.chart.util.SortOrder.DESCENDING.name == orig(org.jfree.chart.util.SortOrder.DESCENDING.name)
org.jfree.chart.util.SortOrder.DESCENDING.name.toString == orig(org.jfree.chart.util.SortOrder.DESCENDING.name.toString)
this.columnRenderingOrder.name == orig(this.columnRenderingOrder.name)
this.columnRenderingOrder.name.toString == orig(this.columnRenderingOrder.name.toString)
this.rowRenderingOrder == orig(this.rowRenderingOrder)
this.rowRenderingOrder.name == orig(this.rowRenderingOrder.name)
this.rowRenderingOrder.name.toString == orig(this.rowRenderingOrder.name.toString)
this.domainGridlinesVisible == orig(this.domainGridlinesVisible)
this.domainGridlinePosition == orig(this.domainGridlinePosition)
this.domainGridlineStroke == orig(this.domainGridlineStroke)
this.domainGridlinePaint == orig(this.domainGridlinePaint)
this.rangeZeroBaselineVisible == orig(this.rangeZeroBaselineVisible)
this.rangeZeroBaselineStroke == orig(this.rangeZeroBaselineStroke)
this.rangeZeroBaselinePaint == orig(this.rangeZeroBaselinePaint)
this.rangeGridlinesVisible == orig(this.rangeGridlinesVisible)
this.rangeGridlineStroke == orig(this.rangeGridlineStroke)
this.rangeGridlinePaint == orig(this.rangeGridlinePaint)
this.rangeMinorGridlinesVisible == orig(this.rangeMinorGridlinesVisible)
this.rangeMinorGridlineStroke == orig(this.rangeMinorGridlineStroke)
this.rangeMinorGridlinePaint == orig(this.rangeMinorGridlinePaint)
this.anchorValue == orig(this.anchorValue)
this.crosshairDatasetIndex == orig(this.crosshairDatasetIndex)
this.domainCrosshairVisible == orig(this.domainCrosshairVisible)
this.domainCrosshairRowKey == orig(this.domainCrosshairRowKey)
this.domainCrosshairColumnKey == orig(this.domainCrosshairColumnKey)
this.domainCrosshairStroke == orig(this.domainCrosshairStroke)
this.domainCrosshairPaint == orig(this.domainCrosshairPaint)
this.rangeCrosshairVisible == orig(this.rangeCrosshairVisible)
this.rangeCrosshairValue == orig(this.rangeCrosshairValue)
this.rangeCrosshairStroke == orig(this.rangeCrosshairStroke)
this.rangeCrosshairPaint == orig(this.rangeCrosshairPaint)
this.rangeCrosshairLockedOnData == orig(this.rangeCrosshairLockedOnData)
this.foregroundDomainMarkers == orig(this.foregroundDomainMarkers)
this.backgroundDomainMarkers == orig(this.backgroundDomainMarkers)
this.foregroundRangeMarkers == orig(this.foregroundRangeMarkers)
this.backgroundRangeMarkers == orig(this.backgroundRangeMarkers)
this.annotations == orig(this.annotations)
this.weight == orig(this.weight)
this.fixedDomainAxisSpace == orig(this.fixedDomainAxisSpace)
this.fixedRangeAxisSpace == orig(this.fixedRangeAxisSpace)
this.fixedLegendItems == orig(this.fixedLegendItems)
this.rangePannable == orig(this.rangePannable)
this.shadowGenerator == orig(this.shadowGenerator)
org.jfree.chart.plot.Plot.ZERO == orig(org.jfree.chart.plot.Plot.ZERO)
org.jfree.chart.plot.Plot.ZERO.getClass().getName() == orig(org.jfree.chart.plot.Plot.ZERO.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_INSETS == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name.toString == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name.toString)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.top == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.top)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.left == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.left)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.right == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.right)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName())
this.parent == orig(this.parent)
org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener == orig(org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener)
this.datasetGroup == orig(this.datasetGroup)
this.noDataMessage == orig(this.noDataMessage)
this.noDataMessageFont == orig(this.noDataMessageFont)
this.noDataMessagePaint == orig(this.noDataMessagePaint)
this.noDataMessagePaint.getClass().getName() == orig(this.noDataMessagePaint.getClass().getName())
this.insets == orig(this.insets)
this.insets.unitType == orig(this.insets.unitType)
this.insets.unitType.name == orig(this.insets.unitType.name)
this.insets.unitType.name.toString == orig(this.insets.unitType.name.toString)
this.insets.top == orig(this.insets.top)
this.insets.left == orig(this.insets.left)
this.insets.bottom == orig(this.insets.bottom)
this.insets.right == orig(this.insets.right)
this.outlineVisible == orig(this.outlineVisible)
this.outlineStroke == orig(this.outlineStroke)
this.outlineStroke.getClass().getName() == orig(this.outlineStroke.getClass().getName())
this.outlinePaint == orig(this.outlinePaint)
this.outlinePaint.getClass().getName() == orig(this.outlinePaint.getClass().getName())
this.backgroundPaint == orig(this.backgroundPaint)
this.backgroundPaint.getClass().getName() == orig(this.backgroundPaint.getClass().getName())
this.backgroundImage == orig(this.backgroundImage)
this.backgroundImageAlignment == orig(this.backgroundImageAlignment)
this.backgroundImageAlpha == orig(this.backgroundImageAlpha)
this.foregroundAlpha == orig(this.foregroundAlpha)
this.backgroundAlpha == orig(this.backgroundAlpha)
this.drawingSupplier == orig(this.drawingSupplier)
this.drawingSupplier.getClass().getName() == orig(this.drawingSupplier.getClass().getName())
this.listenerList == orig(this.listenerList)
this.notify == orig(this.notify)
org.jfree.chart.axis.AxisLocation.TOP_OR_LEFT == orig(org.jfree.chart.axis.AxisLocation.TOP_OR_LEFT)
org.jfree.chart.axis.AxisLocation.TOP_OR_RIGHT == orig(org.jfree.chart.axis.AxisLocation.TOP_OR_RIGHT)
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT == orig(org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT)
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_RIGHT == orig(org.jfree.chart.axis.AxisLocation.BOTTOM_OR_RIGHT)
org.jfree.chart.axis.AxisLocation.TOP_OR_LEFT.name == orig(org.jfree.chart.axis.AxisLocation.TOP_OR_LEFT.name)
org.jfree.chart.axis.AxisLocation.TOP_OR_LEFT.name.toString == orig(org.jfree.chart.axis.AxisLocation.TOP_OR_LEFT.name.toString)
org.jfree.chart.axis.AxisLocation.TOP_OR_RIGHT.name == orig(org.jfree.chart.axis.AxisLocation.TOP_OR_RIGHT.name)
org.jfree.chart.axis.AxisLocation.TOP_OR_RIGHT.name.toString == orig(org.jfree.chart.axis.AxisLocation.TOP_OR_RIGHT.name.toString)
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT.name == orig(org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT.name)
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT.name.toString == orig(org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT.name.toString)
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_RIGHT.name == orig(org.jfree.chart.axis.AxisLocation.BOTTOM_OR_RIGHT.name)
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_RIGHT.name.toString == orig(org.jfree.chart.axis.AxisLocation.BOTTOM_OR_RIGHT.name.toString)
location.name == orig(location.name)
location.name.toString == orig(location.name.toString)
size(this.rangeAxisLocations.objects[]) == orig(size(this.rangeAxisLocations.objects[]))
this.domainAxes.size == 0
this.domainAxisLocations.objects[] has only one value, of length 8
this.domainAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.domainAxisLocations.size == 1
this.rangeAxes.size == 0
this.rangeAxisLocations.objects[] has only one value, of length 8
this.rangeAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.rangeAxisLocations.size == 1
this.datasets.objects[] contains only nulls and has only one value, of length 8
this.datasets.objects[] elements == null
this.datasets.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.datasets.objects[].getClass().getName() elements == null
this.renderers.objects[] contains only nulls and has only one value, of length 8
this.renderers.objects[] elements == null
this.renderers.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.renderers.objects[].getClass().getName() elements == null
this.renderers.size == 0
this.domainGridlinePosition == null
this.domainGridlineStroke == null
this.domainGridlinePaint == null
this.rangeZeroBaselineStroke == null
this.rangeZeroBaselinePaint == null
this.rangeGridlinesVisible == false
this.rangeGridlineStroke == null
this.rangeGridlinePaint == null
this.rangeMinorGridlineStroke == null
this.rangeMinorGridlinePaint == null
this.domainCrosshairStroke == null
this.domainCrosshairPaint == null
this.rangeCrosshairStroke == null
this.rangeCrosshairPaint == null
this.foregroundDomainMarkers == null
this.backgroundDomainMarkers == null
this.foregroundRangeMarkers == null
this.backgroundRangeMarkers == null
this.annotations == null
this.shadowGenerator == null
org.jfree.chart.axis.AxisLocation.TOP_OR_LEFT has only one value
org.jfree.chart.axis.AxisLocation.TOP_OR_RIGHT has only one value
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT has only one value
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_RIGHT has only one value
org.jfree.chart.axis.AxisLocation.TOP_OR_LEFT.name has only one value
org.jfree.chart.axis.AxisLocation.TOP_OR_LEFT.name.toString == "AxisLocation.TOP_OR_LEFT"
org.jfree.chart.axis.AxisLocation.TOP_OR_RIGHT.name has only one value
org.jfree.chart.axis.AxisLocation.TOP_OR_RIGHT.name.toString == "AxisLocation.TOP_OR_RIGHT"
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT.name has only one value
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT.name.toString == "AxisLocation.BOTTOM_OR_LEFT"
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_RIGHT.name has only one value
org.jfree.chart.axis.AxisLocation.BOTTOM_OR_RIGHT.name.toString == "AxisLocation.BOTTOM_OR_RIGHT"
location.name has only one value
location.name.toString == "AxisLocation.TOP_OR_LEFT"
===========================================================================
org.jfree.chart.plot.CategoryPlot.setRenderer(int, org.jfree.chart.renderer.category.CategoryItemRenderer, boolean):::ENTER
this.domainAxes.size == 1
this.domainAxisLocations.objects[] has only one value, of length 8
this.domainAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.domainAxisLocations.size == 1
this.rangeAxes.size == 1
this.rangeAxisLocations.objects[] has only one value, of length 8
this.rangeAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.rangeAxisLocations.size == 1
this.datasets.objects[] has only one value, of length 8
this.datasets.objects[].getClass().getName() == [org.jfree.data.category.DefaultCategoryDataset, null, null, null, null, null, null, null]
this.renderers.objects[] contains only nulls and has only one value, of length 8
this.renderers.objects[] elements == null
this.renderers.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.renderers.objects[].getClass().getName() elements == null
this.renderers.size == 1
this.domainGridlinePosition has only one value
this.domainGridlineStroke has only one value
this.domainGridlinePaint has only one value
this.rangeZeroBaselineStroke has only one value
this.rangeZeroBaselinePaint has only one value
this.rangeGridlinesVisible == true
this.rangeGridlineStroke has only one value
this.rangeGridlinePaint has only one value
this.rangeMinorGridlineStroke has only one value
this.rangeMinorGridlinePaint has only one value
this.domainCrosshairStroke has only one value
this.domainCrosshairPaint has only one value
this.rangeCrosshairStroke has only one value
this.rangeCrosshairPaint has only one value
this.foregroundDomainMarkers has only one value
this.backgroundDomainMarkers has only one value
this.foregroundRangeMarkers has only one value
this.backgroundRangeMarkers has only one value
this.annotations has only one value
this.shadowGenerator has only one value
index == 0
renderer has only one value
renderer.getClass().getName() == org.jfree.chart.renderer.category.LineAndShapeRenderer.class
notify == true
===========================================================================
org.jfree.chart.plot.CategoryPlot.setRenderer(int, org.jfree.chart.renderer.category.CategoryItemRenderer, boolean):::EXIT
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE)
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_VALUE_LABEL_FONT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_VALUE_LABEL_FONT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT.getClass().getName())
org.jfree.chart.plot.CategoryPlot.localizationResources == orig(org.jfree.chart.plot.CategoryPlot.localizationResources)
org.jfree.chart.plot.CategoryPlot.localizationResources.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.localizationResources.getClass().getName())
this.orientation == orig(this.orientation)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL)
org.jfree.chart.plot.PlotOrientation.VERTICAL == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name.toString == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name.toString)
org.jfree.chart.plot.PlotOrientation.VERTICAL.name == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL.name)
org.jfree.chart.plot.PlotOrientation.VERTICAL.name.toString == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL.name.toString)
this.orientation.name == orig(this.orientation.name)
this.orientation.name.toString == orig(this.orientation.name.toString)
this.axisOffset == orig(this.axisOffset)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.top == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.top)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.left == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.left)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.bottom == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.bottom)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.right == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.right)
this.axisOffset.unitType == orig(this.axisOffset.unitType)
org.jfree.chart.util.UnitType.ABSOLUTE == orig(org.jfree.chart.util.UnitType.ABSOLUTE)
org.jfree.chart.util.UnitType.RELATIVE == orig(org.jfree.chart.util.UnitType.RELATIVE)
this.axisOffset.unitType.name == orig(this.axisOffset.unitType.name)
this.axisOffset.unitType.name.toString == orig(this.axisOffset.unitType.name.toString)
this.axisOffset.top == orig(this.axisOffset.top)
this.axisOffset.left == orig(this.axisOffset.left)
this.axisOffset.bottom == orig(this.axisOffset.bottom)
this.axisOffset.right == orig(this.axisOffset.right)
this.domainAxes == orig(this.domainAxes)
this.domainAxes.objects == orig(this.domainAxes.objects)
this.domainAxes.objects.getClass().getName() == orig(this.domainAxes.objects.getClass().getName())
this.domainAxes.objects[] == orig(this.domainAxes.objects[])
this.domainAxes.size == orig(this.domainAxes.size)
this.domainAxes.increment == orig(this.domainAxes.increment)
this.domainAxisLocations == orig(this.domainAxisLocations)
this.domainAxisLocations.objects == orig(this.domainAxisLocations.objects)
this.domainAxisLocations.objects.getClass().getName() == orig(this.domainAxisLocations.objects.getClass().getName())
this.domainAxisLocations.objects[] == orig(this.domainAxisLocations.objects[])
this.domainAxisLocations.size == orig(this.domainAxisLocations.size)
this.domainAxisLocations.increment == orig(this.domainAxisLocations.increment)
this.drawSharedDomainAxis == orig(this.drawSharedDomainAxis)
this.rangeAxes == orig(this.rangeAxes)
this.rangeAxes.objects == orig(this.rangeAxes.objects)
this.rangeAxes.objects.getClass().getName() == orig(this.rangeAxes.objects.getClass().getName())
this.rangeAxes.objects[] == orig(this.rangeAxes.objects[])
this.rangeAxes.size == orig(this.rangeAxes.size)
this.rangeAxes.increment == orig(this.rangeAxes.increment)
this.rangeAxisLocations == orig(this.rangeAxisLocations)
this.rangeAxisLocations.objects == orig(this.rangeAxisLocations.objects)
this.rangeAxisLocations.objects.getClass().getName() == orig(this.rangeAxisLocations.objects.getClass().getName())
this.rangeAxisLocations.objects[] == orig(this.rangeAxisLocations.objects[])
this.rangeAxisLocations.size == orig(this.rangeAxisLocations.size)
this.rangeAxisLocations.increment == orig(this.rangeAxisLocations.increment)
this.datasets == orig(this.datasets)
this.datasets.objects == orig(this.datasets.objects)
this.datasets.objects.getClass().getName() == orig(this.datasets.objects.getClass().getName())
this.datasets.objects[] == orig(this.datasets.objects[])
this.datasets.size == orig(this.datasets.size)
this.datasets.increment == orig(this.datasets.increment)
this.datasetToDomainAxesMap == orig(this.datasetToDomainAxesMap)
this.datasetToRangeAxesMap == orig(this.datasetToRangeAxesMap)
this.renderers == orig(this.renderers)
this.renderers.objects == orig(this.renderers.objects)
this.renderers.objects.getClass().getName() == orig(this.renderers.objects.getClass().getName())
this.renderers.size == orig(this.renderers.size)
this.renderers.increment == orig(this.renderers.increment)
this.renderingOrder == orig(this.renderingOrder)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name.toString == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name.toString)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name.toString == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name.toString)
this.renderingOrder.name == orig(this.renderingOrder.name)
this.renderingOrder.name.toString == orig(this.renderingOrder.name.toString)
this.columnRenderingOrder == orig(this.columnRenderingOrder)
org.jfree.chart.util.SortOrder.ASCENDING == orig(org.jfree.chart.util.SortOrder.ASCENDING)
org.jfree.chart.util.SortOrder.DESCENDING == orig(org.jfree.chart.util.SortOrder.DESCENDING)
org.jfree.chart.util.SortOrder.ASCENDING.name == orig(org.jfree.chart.util.SortOrder.ASCENDING.name)
org.jfree.chart.util.SortOrder.ASCENDING.name.toString == orig(org.jfree.chart.util.SortOrder.ASCENDING.name.toString)
org.jfree.chart.util.SortOrder.DESCENDING.name == orig(org.jfree.chart.util.SortOrder.DESCENDING.name)
org.jfree.chart.util.SortOrder.DESCENDING.name.toString == orig(org.jfree.chart.util.SortOrder.DESCENDING.name.toString)
this.columnRenderingOrder.name == orig(this.columnRenderingOrder.name)
this.columnRenderingOrder.name.toString == orig(this.columnRenderingOrder.name.toString)
this.rowRenderingOrder == orig(this.rowRenderingOrder)
this.rowRenderingOrder.name == orig(this.rowRenderingOrder.name)
this.rowRenderingOrder.name.toString == orig(this.rowRenderingOrder.name.toString)
this.domainGridlinesVisible == orig(this.domainGridlinesVisible)
this.domainGridlinePosition == orig(this.domainGridlinePosition)
org.jfree.chart.axis.CategoryAnchor.START == orig(org.jfree.chart.axis.CategoryAnchor.START)
org.jfree.chart.axis.CategoryAnchor.MIDDLE == orig(org.jfree.chart.axis.CategoryAnchor.MIDDLE)
org.jfree.chart.axis.CategoryAnchor.END == orig(org.jfree.chart.axis.CategoryAnchor.END)
org.jfree.chart.axis.CategoryAnchor.START.name == orig(org.jfree.chart.axis.CategoryAnchor.START.name)
org.jfree.chart.axis.CategoryAnchor.START.name.toString == orig(org.jfree.chart.axis.CategoryAnchor.START.name.toString)
org.jfree.chart.axis.CategoryAnchor.MIDDLE.name == orig(org.jfree.chart.axis.CategoryAnchor.MIDDLE.name)
org.jfree.chart.axis.CategoryAnchor.MIDDLE.name.toString == orig(org.jfree.chart.axis.CategoryAnchor.MIDDLE.name.toString)
org.jfree.chart.axis.CategoryAnchor.END.name == orig(org.jfree.chart.axis.CategoryAnchor.END.name)
org.jfree.chart.axis.CategoryAnchor.END.name.toString == orig(org.jfree.chart.axis.CategoryAnchor.END.name.toString)
this.domainGridlinePosition.name == orig(this.domainGridlinePosition.name)
this.domainGridlinePosition.name.toString == orig(this.domainGridlinePosition.name.toString)
this.domainGridlineStroke == orig(this.domainGridlineStroke)
this.domainGridlineStroke.getClass().getName() == orig(this.domainGridlineStroke.getClass().getName())
this.domainGridlinePaint == orig(this.domainGridlinePaint)
this.domainGridlinePaint.getClass().getName() == orig(this.domainGridlinePaint.getClass().getName())
this.rangeZeroBaselineVisible == orig(this.rangeZeroBaselineVisible)
this.rangeZeroBaselineStroke == orig(this.rangeZeroBaselineStroke)
this.rangeZeroBaselineStroke.getClass().getName() == orig(this.rangeZeroBaselineStroke.getClass().getName())
this.rangeZeroBaselinePaint == orig(this.rangeZeroBaselinePaint)
this.rangeZeroBaselinePaint.getClass().getName() == orig(this.rangeZeroBaselinePaint.getClass().getName())
this.rangeGridlinesVisible == orig(this.rangeGridlinesVisible)
this.rangeGridlineStroke == orig(this.rangeGridlineStroke)
this.rangeGridlineStroke.getClass().getName() == orig(this.rangeGridlineStroke.getClass().getName())
this.rangeGridlinePaint == orig(this.rangeGridlinePaint)
this.rangeGridlinePaint.getClass().getName() == orig(this.rangeGridlinePaint.getClass().getName())
this.rangeMinorGridlinesVisible == orig(this.rangeMinorGridlinesVisible)
this.rangeMinorGridlineStroke == orig(this.rangeMinorGridlineStroke)
this.rangeMinorGridlineStroke.getClass().getName() == orig(this.rangeMinorGridlineStroke.getClass().getName())
this.rangeMinorGridlinePaint == orig(this.rangeMinorGridlinePaint)
this.rangeMinorGridlinePaint.getClass().getName() == orig(this.rangeMinorGridlinePaint.getClass().getName())
this.anchorValue == orig(this.anchorValue)
this.crosshairDatasetIndex == orig(this.crosshairDatasetIndex)
this.domainCrosshairVisible == orig(this.domainCrosshairVisible)
this.domainCrosshairRowKey == orig(this.domainCrosshairRowKey)
this.domainCrosshairColumnKey == orig(this.domainCrosshairColumnKey)
this.domainCrosshairStroke == orig(this.domainCrosshairStroke)
this.domainCrosshairStroke.getClass().getName() == orig(this.domainCrosshairStroke.getClass().getName())
this.domainCrosshairPaint == orig(this.domainCrosshairPaint)
this.domainCrosshairPaint.getClass().getName() == orig(this.domainCrosshairPaint.getClass().getName())
this.rangeCrosshairVisible == orig(this.rangeCrosshairVisible)
this.rangeCrosshairValue == orig(this.rangeCrosshairValue)
this.rangeCrosshairStroke == orig(this.rangeCrosshairStroke)
this.rangeCrosshairStroke.getClass().getName() == orig(this.rangeCrosshairStroke.getClass().getName())
this.rangeCrosshairPaint == orig(this.rangeCrosshairPaint)
this.rangeCrosshairPaint.getClass().getName() == orig(this.rangeCrosshairPaint.getClass().getName())
this.rangeCrosshairLockedOnData == orig(this.rangeCrosshairLockedOnData)
this.foregroundDomainMarkers == orig(this.foregroundDomainMarkers)
this.foregroundDomainMarkers.getClass().getName() == orig(this.foregroundDomainMarkers.getClass().getName())
this.backgroundDomainMarkers == orig(this.backgroundDomainMarkers)
this.backgroundDomainMarkers.getClass().getName() == orig(this.backgroundDomainMarkers.getClass().getName())
this.foregroundRangeMarkers == orig(this.foregroundRangeMarkers)
this.foregroundRangeMarkers.getClass().getName() == orig(this.foregroundRangeMarkers.getClass().getName())
this.backgroundRangeMarkers == orig(this.backgroundRangeMarkers)
this.backgroundRangeMarkers.getClass().getName() == orig(this.backgroundRangeMarkers.getClass().getName())
this.annotations == orig(this.annotations)
this.annotations[] == orig(this.annotations[])
this.annotations.getClass().getName() == orig(this.annotations.getClass().getName())
this.weight == orig(this.weight)
this.fixedDomainAxisSpace == orig(this.fixedDomainAxisSpace)
this.fixedRangeAxisSpace == orig(this.fixedRangeAxisSpace)
this.fixedLegendItems == orig(this.fixedLegendItems)
this.rangePannable == orig(this.rangePannable)
this.shadowGenerator == orig(this.shadowGenerator)
this.shadowGenerator.getClass().getName() == orig(this.shadowGenerator.getClass().getName())
org.jfree.chart.plot.Plot.ZERO == orig(org.jfree.chart.plot.Plot.ZERO)
org.jfree.chart.plot.Plot.ZERO.getClass().getName() == orig(org.jfree.chart.plot.Plot.ZERO.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_INSETS == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name.toString == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name.toString)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.top == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.top)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.left == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.left)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.right == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.right)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName())
this.parent == orig(this.parent)
org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener == orig(org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener)
this.datasetGroup == orig(this.datasetGroup)
this.noDataMessage == orig(this.noDataMessage)
this.noDataMessageFont == orig(this.noDataMessageFont)
this.noDataMessagePaint == orig(this.noDataMessagePaint)
this.noDataMessagePaint.getClass().getName() == orig(this.noDataMessagePaint.getClass().getName())
this.insets == orig(this.insets)
this.insets.unitType == orig(this.insets.unitType)
this.insets.unitType.name == orig(this.insets.unitType.name)
this.insets.unitType.name.toString == orig(this.insets.unitType.name.toString)
this.insets.top == orig(this.insets.top)
this.insets.left == orig(this.insets.left)
this.insets.bottom == orig(this.insets.bottom)
this.insets.right == orig(this.insets.right)
this.outlineVisible == orig(this.outlineVisible)
this.outlineStroke == orig(this.outlineStroke)
this.outlineStroke.getClass().getName() == orig(this.outlineStroke.getClass().getName())
this.outlinePaint == orig(this.outlinePaint)
this.outlinePaint.getClass().getName() == orig(this.outlinePaint.getClass().getName())
this.backgroundPaint == orig(this.backgroundPaint)
this.backgroundPaint.getClass().getName() == orig(this.backgroundPaint.getClass().getName())
this.backgroundImage == orig(this.backgroundImage)
this.backgroundImageAlignment == orig(this.backgroundImageAlignment)
this.backgroundImageAlpha == orig(this.backgroundImageAlpha)
this.foregroundAlpha == orig(this.foregroundAlpha)
this.backgroundAlpha == orig(this.backgroundAlpha)
this.drawingSupplier == orig(this.drawingSupplier)
this.drawingSupplier.getClass().getName() == orig(this.drawingSupplier.getClass().getName())
this.listenerList == orig(this.listenerList)
this.notify == orig(this.notify)
size(this.renderers.objects[]) == orig(size(this.renderers.objects[]))
this.domainAxes.size == 1
this.domainAxisLocations.objects[] has only one value, of length 8
this.domainAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.domainAxisLocations.size == 1
this.rangeAxes.size == 1
this.rangeAxisLocations.objects[] has only one value, of length 8
this.rangeAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.rangeAxisLocations.size == 1
this.datasets.objects[] has only one value, of length 8
this.datasets.objects[].getClass().getName() == [org.jfree.data.category.DefaultCategoryDataset, null, null, null, null, null, null, null]
this.renderers.objects[] has only one value, of length 8
this.renderers.objects[].getClass().getName() == [org.jfree.chart.renderer.category.LineAndShapeRenderer, null, null, null, null, null, null, null]
this.renderers.size == 1
this.domainGridlinePosition has only one value
this.domainGridlineStroke has only one value
this.domainGridlinePaint has only one value
this.rangeZeroBaselineStroke has only one value
this.rangeZeroBaselinePaint has only one value
this.rangeGridlinesVisible == true
this.rangeGridlineStroke has only one value
this.rangeGridlinePaint has only one value
this.rangeMinorGridlineStroke has only one value
this.rangeMinorGridlinePaint has only one value
this.domainCrosshairStroke has only one value
this.domainCrosshairPaint has only one value
this.rangeCrosshairStroke has only one value
this.rangeCrosshairPaint has only one value
this.foregroundDomainMarkers has only one value
this.backgroundDomainMarkers has only one value
this.foregroundRangeMarkers has only one value
this.backgroundRangeMarkers has only one value
this.annotations has only one value
this.shadowGenerator has only one value
===========================================================================
org.jfree.chart.plot.CategoryPlot.setRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer):::ENTER
this.domainAxes.size == 1
this.domainAxisLocations.objects[] has only one value, of length 8
this.domainAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.domainAxisLocations.size == 1
this.rangeAxes.size == 1
this.rangeAxisLocations.objects[] has only one value, of length 8
this.rangeAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.rangeAxisLocations.size == 1
this.datasets.objects[] has only one value, of length 8
this.datasets.objects[].getClass().getName() == [org.jfree.data.category.DefaultCategoryDataset, null, null, null, null, null, null, null]
this.renderers.objects[] contains only nulls and has only one value, of length 8
this.renderers.objects[] elements == null
this.renderers.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.renderers.objects[].getClass().getName() elements == null
this.renderers.size == 1
this.domainGridlinePosition has only one value
this.domainGridlineStroke has only one value
this.domainGridlinePaint has only one value
this.rangeZeroBaselineStroke has only one value
this.rangeZeroBaselinePaint has only one value
this.rangeGridlinesVisible == true
this.rangeGridlineStroke has only one value
this.rangeGridlinePaint has only one value
this.rangeMinorGridlineStroke has only one value
this.rangeMinorGridlinePaint has only one value
this.domainCrosshairStroke has only one value
this.domainCrosshairPaint has only one value
this.rangeCrosshairStroke has only one value
this.rangeCrosshairPaint has only one value
this.foregroundDomainMarkers has only one value
this.backgroundDomainMarkers has only one value
this.foregroundRangeMarkers has only one value
this.backgroundRangeMarkers has only one value
this.annotations has only one value
this.shadowGenerator has only one value
renderer has only one value
renderer.getClass().getName() == org.jfree.chart.renderer.category.LineAndShapeRenderer.class
===========================================================================
org.jfree.chart.plot.CategoryPlot.setRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer):::EXIT
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE)
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_VALUE_LABEL_FONT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_VALUE_LABEL_FONT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT.getClass().getName())
org.jfree.chart.plot.CategoryPlot.localizationResources == orig(org.jfree.chart.plot.CategoryPlot.localizationResources)
org.jfree.chart.plot.CategoryPlot.localizationResources.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.localizationResources.getClass().getName())
this.orientation == orig(this.orientation)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL)
org.jfree.chart.plot.PlotOrientation.VERTICAL == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name.toString == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL.name.toString)
org.jfree.chart.plot.PlotOrientation.VERTICAL.name == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL.name)
org.jfree.chart.plot.PlotOrientation.VERTICAL.name.toString == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL.name.toString)
this.orientation.name == orig(this.orientation.name)
this.orientation.name.toString == orig(this.orientation.name.toString)
this.axisOffset == orig(this.axisOffset)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.top == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.top)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.left == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.left)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.bottom == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.bottom)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.right == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.right)
this.axisOffset.unitType == orig(this.axisOffset.unitType)
org.jfree.chart.util.UnitType.ABSOLUTE == orig(org.jfree.chart.util.UnitType.ABSOLUTE)
org.jfree.chart.util.UnitType.RELATIVE == orig(org.jfree.chart.util.UnitType.RELATIVE)
this.axisOffset.unitType.name == orig(this.axisOffset.unitType.name)
this.axisOffset.unitType.name.toString == orig(this.axisOffset.unitType.name.toString)
this.axisOffset.top == orig(this.axisOffset.top)
this.axisOffset.left == orig(this.axisOffset.left)
this.axisOffset.bottom == orig(this.axisOffset.bottom)
this.axisOffset.right == orig(this.axisOffset.right)
this.domainAxes == orig(this.domainAxes)
this.domainAxes.objects == orig(this.domainAxes.objects)
this.domainAxes.objects.getClass().getName() == orig(this.domainAxes.objects.getClass().getName())
this.domainAxes.objects[] == orig(this.domainAxes.objects[])
this.domainAxes.size == orig(this.domainAxes.size)
this.domainAxes.increment == orig(this.domainAxes.increment)
this.domainAxisLocations == orig(this.domainAxisLocations)
this.domainAxisLocations.objects == orig(this.domainAxisLocations.objects)
this.domainAxisLocations.objects.getClass().getName() == orig(this.domainAxisLocations.objects.getClass().getName())
this.domainAxisLocations.objects[] == orig(this.domainAxisLocations.objects[])
this.domainAxisLocations.size == orig(this.domainAxisLocations.size)
this.domainAxisLocations.increment == orig(this.domainAxisLocations.increment)
this.drawSharedDomainAxis == orig(this.drawSharedDomainAxis)
this.rangeAxes == orig(this.rangeAxes)
this.rangeAxes.objects == orig(this.rangeAxes.objects)
this.rangeAxes.objects.getClass().getName() == orig(this.rangeAxes.objects.getClass().getName())
this.rangeAxes.objects[] == orig(this.rangeAxes.objects[])
this.rangeAxes.size == orig(this.rangeAxes.size)
this.rangeAxes.increment == orig(this.rangeAxes.increment)
this.rangeAxisLocations == orig(this.rangeAxisLocations)
this.rangeAxisLocations.objects == orig(this.rangeAxisLocations.objects)
this.rangeAxisLocations.objects.getClass().getName() == orig(this.rangeAxisLocations.objects.getClass().getName())
this.rangeAxisLocations.objects[] == orig(this.rangeAxisLocations.objects[])
this.rangeAxisLocations.size == orig(this.rangeAxisLocations.size)
this.rangeAxisLocations.increment == orig(this.rangeAxisLocations.increment)
this.datasets == orig(this.datasets)
this.datasets.objects == orig(this.datasets.objects)
this.datasets.objects.getClass().getName() == orig(this.datasets.objects.getClass().getName())
this.datasets.objects[] == orig(this.datasets.objects[])
this.datasets.size == orig(this.datasets.size)
this.datasets.increment == orig(this.datasets.increment)
this.datasetToDomainAxesMap == orig(this.datasetToDomainAxesMap)
this.datasetToRangeAxesMap == orig(this.datasetToRangeAxesMap)
this.renderers == orig(this.renderers)
this.renderers.objects == orig(this.renderers.objects)
this.renderers.objects.getClass().getName() == orig(this.renderers.objects.getClass().getName())
this.renderers.size == orig(this.renderers.size)
this.renderers.increment == orig(this.renderers.increment)
this.renderingOrder == orig(this.renderingOrder)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name.toString == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD.name.toString)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name.toString == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE.name.toString)
this.renderingOrder.name == orig(this.renderingOrder.name)
this.renderingOrder.name.toString == orig(this.renderingOrder.name.toString)
this.columnRenderingOrder == orig(this.columnRenderingOrder)
org.jfree.chart.util.SortOrder.ASCENDING == orig(org.jfree.chart.util.SortOrder.ASCENDING)
org.jfree.chart.util.SortOrder.DESCENDING == orig(org.jfree.chart.util.SortOrder.DESCENDING)
org.jfree.chart.util.SortOrder.ASCENDING.name == orig(org.jfree.chart.util.SortOrder.ASCENDING.name)
org.jfree.chart.util.SortOrder.ASCENDING.name.toString == orig(org.jfree.chart.util.SortOrder.ASCENDING.name.toString)
org.jfree.chart.util.SortOrder.DESCENDING.name == orig(org.jfree.chart.util.SortOrder.DESCENDING.name)
org.jfree.chart.util.SortOrder.DESCENDING.name.toString == orig(org.jfree.chart.util.SortOrder.DESCENDING.name.toString)
this.columnRenderingOrder.name == orig(this.columnRenderingOrder.name)
this.columnRenderingOrder.name.toString == orig(this.columnRenderingOrder.name.toString)
this.rowRenderingOrder == orig(this.rowRenderingOrder)
this.rowRenderingOrder.name == orig(this.rowRenderingOrder.name)
this.rowRenderingOrder.name.toString == orig(this.rowRenderingOrder.name.toString)
this.domainGridlinesVisible == orig(this.domainGridlinesVisible)
this.domainGridlinePosition == orig(this.domainGridlinePosition)
org.jfree.chart.axis.CategoryAnchor.START == orig(org.jfree.chart.axis.CategoryAnchor.START)
org.jfree.chart.axis.CategoryAnchor.MIDDLE == orig(org.jfree.chart.axis.CategoryAnchor.MIDDLE)
org.jfree.chart.axis.CategoryAnchor.END == orig(org.jfree.chart.axis.CategoryAnchor.END)
org.jfree.chart.axis.CategoryAnchor.START.name == orig(org.jfree.chart.axis.CategoryAnchor.START.name)
org.jfree.chart.axis.CategoryAnchor.START.name.toString == orig(org.jfree.chart.axis.CategoryAnchor.START.name.toString)
org.jfree.chart.axis.CategoryAnchor.MIDDLE.name == orig(org.jfree.chart.axis.CategoryAnchor.MIDDLE.name)
org.jfree.chart.axis.CategoryAnchor.MIDDLE.name.toString == orig(org.jfree.chart.axis.CategoryAnchor.MIDDLE.name.toString)
org.jfree.chart.axis.CategoryAnchor.END.name == orig(org.jfree.chart.axis.CategoryAnchor.END.name)
org.jfree.chart.axis.CategoryAnchor.END.name.toString == orig(org.jfree.chart.axis.CategoryAnchor.END.name.toString)
this.domainGridlinePosition.name == orig(this.domainGridlinePosition.name)
this.domainGridlinePosition.name.toString == orig(this.domainGridlinePosition.name.toString)
this.domainGridlineStroke == orig(this.domainGridlineStroke)
this.domainGridlineStroke.getClass().getName() == orig(this.domainGridlineStroke.getClass().getName())
this.domainGridlinePaint == orig(this.domainGridlinePaint)
this.domainGridlinePaint.getClass().getName() == orig(this.domainGridlinePaint.getClass().getName())
this.rangeZeroBaselineVisible == orig(this.rangeZeroBaselineVisible)
this.rangeZeroBaselineStroke == orig(this.rangeZeroBaselineStroke)
this.rangeZeroBaselineStroke.getClass().getName() == orig(this.rangeZeroBaselineStroke.getClass().getName())
this.rangeZeroBaselinePaint == orig(this.rangeZeroBaselinePaint)
this.rangeZeroBaselinePaint.getClass().getName() == orig(this.rangeZeroBaselinePaint.getClass().getName())
this.rangeGridlinesVisible == orig(this.rangeGridlinesVisible)
this.rangeGridlineStroke == orig(this.rangeGridlineStroke)
this.rangeGridlineStroke.getClass().getName() == orig(this.rangeGridlineStroke.getClass().getName())
this.rangeGridlinePaint == orig(this.rangeGridlinePaint)
this.rangeGridlinePaint.getClass().getName() == orig(this.rangeGridlinePaint.getClass().getName())
this.rangeMinorGridlinesVisible == orig(this.rangeMinorGridlinesVisible)
this.rangeMinorGridlineStroke == orig(this.rangeMinorGridlineStroke)
this.rangeMinorGridlineStroke.getClass().getName() == orig(this.rangeMinorGridlineStroke.getClass().getName())
this.rangeMinorGridlinePaint == orig(this.rangeMinorGridlinePaint)
this.rangeMinorGridlinePaint.getClass().getName() == orig(this.rangeMinorGridlinePaint.getClass().getName())
this.anchorValue == orig(this.anchorValue)
this.crosshairDatasetIndex == orig(this.crosshairDatasetIndex)
this.domainCrosshairVisible == orig(this.domainCrosshairVisible)
this.domainCrosshairRowKey == orig(this.domainCrosshairRowKey)
this.domainCrosshairColumnKey == orig(this.domainCrosshairColumnKey)
this.domainCrosshairStroke == orig(this.domainCrosshairStroke)
this.domainCrosshairStroke.getClass().getName() == orig(this.domainCrosshairStroke.getClass().getName())
this.domainCrosshairPaint == orig(this.domainCrosshairPaint)
this.domainCrosshairPaint.getClass().getName() == orig(this.domainCrosshairPaint.getClass().getName())
this.rangeCrosshairVisible == orig(this.rangeCrosshairVisible)
this.rangeCrosshairValue == orig(this.rangeCrosshairValue)
this.rangeCrosshairStroke == orig(this.rangeCrosshairStroke)
this.rangeCrosshairStroke.getClass().getName() == orig(this.rangeCrosshairStroke.getClass().getName())
this.rangeCrosshairPaint == orig(this.rangeCrosshairPaint)
this.rangeCrosshairPaint.getClass().getName() == orig(this.rangeCrosshairPaint.getClass().getName())
this.rangeCrosshairLockedOnData == orig(this.rangeCrosshairLockedOnData)
this.foregroundDomainMarkers == orig(this.foregroundDomainMarkers)
this.foregroundDomainMarkers.getClass().getName() == orig(this.foregroundDomainMarkers.getClass().getName())
this.backgroundDomainMarkers == orig(this.backgroundDomainMarkers)
this.backgroundDomainMarkers.getClass().getName() == orig(this.backgroundDomainMarkers.getClass().getName())
this.foregroundRangeMarkers == orig(this.foregroundRangeMarkers)
this.foregroundRangeMarkers.getClass().getName() == orig(this.foregroundRangeMarkers.getClass().getName())
this.backgroundRangeMarkers == orig(this.backgroundRangeMarkers)
this.backgroundRangeMarkers.getClass().getName() == orig(this.backgroundRangeMarkers.getClass().getName())
this.annotations == orig(this.annotations)
this.annotations[] == orig(this.annotations[])
this.annotations.getClass().getName() == orig(this.annotations.getClass().getName())
this.weight == orig(this.weight)
this.fixedDomainAxisSpace == orig(this.fixedDomainAxisSpace)
this.fixedRangeAxisSpace == orig(this.fixedRangeAxisSpace)
this.fixedLegendItems == orig(this.fixedLegendItems)
this.rangePannable == orig(this.rangePannable)
this.shadowGenerator == orig(this.shadowGenerator)
this.shadowGenerator.getClass().getName() == orig(this.shadowGenerator.getClass().getName())
org.jfree.chart.plot.Plot.ZERO == orig(org.jfree.chart.plot.Plot.ZERO)
org.jfree.chart.plot.Plot.ZERO.getClass().getName() == orig(org.jfree.chart.plot.Plot.ZERO.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_INSETS == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name.toString == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name.toString)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.top == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.top)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.left == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.left)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.right == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.right)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName())
this.parent == orig(this.parent)
org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener == orig(org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener)
this.datasetGroup == orig(this.datasetGroup)
this.noDataMessage == orig(this.noDataMessage)
this.noDataMessageFont == orig(this.noDataMessageFont)
this.noDataMessagePaint == orig(this.noDataMessagePaint)
this.noDataMessagePaint.getClass().getName() == orig(this.noDataMessagePaint.getClass().getName())
this.insets == orig(this.insets)
this.insets.unitType == orig(this.insets.unitType)
this.insets.unitType.name == orig(this.insets.unitType.name)
this.insets.unitType.name.toString == orig(this.insets.unitType.name.toString)
this.insets.top == orig(this.insets.top)
this.insets.left == orig(this.insets.left)
this.insets.bottom == orig(this.insets.bottom)
this.insets.right == orig(this.insets.right)
this.outlineVisible == orig(this.outlineVisible)
this.outlineStroke == orig(this.outlineStroke)
this.outlineStroke.getClass().getName() == orig(this.outlineStroke.getClass().getName())
this.outlinePaint == orig(this.outlinePaint)
this.outlinePaint.getClass().getName() == orig(this.outlinePaint.getClass().getName())
this.backgroundPaint == orig(this.backgroundPaint)
this.backgroundPaint.getClass().getName() == orig(this.backgroundPaint.getClass().getName())
this.backgroundImage == orig(this.backgroundImage)
this.backgroundImageAlignment == orig(this.backgroundImageAlignment)
this.backgroundImageAlpha == orig(this.backgroundImageAlpha)
this.foregroundAlpha == orig(this.foregroundAlpha)
this.backgroundAlpha == orig(this.backgroundAlpha)
this.drawingSupplier == orig(this.drawingSupplier)
this.drawingSupplier.getClass().getName() == orig(this.drawingSupplier.getClass().getName())
this.listenerList == orig(this.listenerList)
this.notify == orig(this.notify)
size(this.renderers.objects[]) == orig(size(this.renderers.objects[]))
this.domainAxes.size == 1
this.domainAxisLocations.objects[] has only one value, of length 8
this.domainAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.domainAxisLocations.size == 1
this.rangeAxes.size == 1
this.rangeAxisLocations.objects[] has only one value, of length 8
this.rangeAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.rangeAxisLocations.size == 1
this.datasets.objects[] has only one value, of length 8
this.datasets.objects[].getClass().getName() == [org.jfree.data.category.DefaultCategoryDataset, null, null, null, null, null, null, null]
this.renderers.objects[] has only one value, of length 8
this.renderers.objects[].getClass().getName() == [org.jfree.chart.renderer.category.LineAndShapeRenderer, null, null, null, null, null, null, null]
this.renderers.size == 1
this.domainGridlinePosition has only one value
this.domainGridlineStroke has only one value
this.domainGridlinePaint has only one value
this.rangeZeroBaselineStroke has only one value
this.rangeZeroBaselinePaint has only one value
this.rangeGridlinesVisible == true
this.rangeGridlineStroke has only one value
this.rangeGridlinePaint has only one value
this.rangeMinorGridlineStroke has only one value
this.rangeMinorGridlinePaint has only one value
this.domainCrosshairStroke has only one value
this.domainCrosshairPaint has only one value
this.rangeCrosshairStroke has only one value
this.rangeCrosshairPaint has only one value
this.foregroundDomainMarkers has only one value
this.backgroundDomainMarkers has only one value
this.foregroundRangeMarkers has only one value
this.backgroundRangeMarkers has only one value
this.annotations has only one value
this.shadowGenerator has only one value
===========================================================================
org.jfree.chart.plot.DatasetRenderingOrder:::CLASS
===========================================================================
org.jfree.chart.plot.DatasetRenderingOrder:::OBJECT
this.name.toString one of { "DatasetRenderingOrder.FORWARD", "DatasetRenderingOrder.REVERSE" }
===========================================================================
org.jfree.chart.plot.DatasetRenderingOrder.DatasetRenderingOrder(java.lang.String):::ENTER
name.toString one of { "DatasetRenderingOrder.FORWARD", "DatasetRenderingOrder.REVERSE" }
===========================================================================
org.jfree.chart.plot.DatasetRenderingOrder.DatasetRenderingOrder(java.lang.String):::EXIT
name.toString == orig(name.toString)
name.toString one of { "DatasetRenderingOrder.FORWARD", "DatasetRenderingOrder.REVERSE" }
===========================================================================
org.jfree.chart.plot.DefaultDrawingSupplier:::CLASS
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_PAINT_SEQUENCE.getClass().getName() == org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_OUTLINE_PAINT_SEQUENCE.getClass().getName()
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_PAINT_SEQUENCE.getClass().getName() == org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_FILL_PAINT_SEQUENCE.getClass().getName()
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_STROKE_SEQUENCE.getClass().getName() == org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_OUTLINE_STROKE_SEQUENCE.getClass().getName()
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_PAINT_SEQUENCE has only one value
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_PAINT_SEQUENCE.getClass().getName() == java.awt.Paint[].class
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_PAINT_SEQUENCE[] contains no nulls and has only one value, of length 34
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_PAINT_SEQUENCE[].getClass().getName() == [java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color]
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_PAINT_SEQUENCE[].getClass().getName() elements == java.awt.Color.class
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_OUTLINE_PAINT_SEQUENCE has only one value
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_OUTLINE_PAINT_SEQUENCE[] contains no nulls and has only one value, of length 1
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_OUTLINE_PAINT_SEQUENCE[] elements has only one value
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_OUTLINE_PAINT_SEQUENCE[].getClass().getName() == [java.awt.Color]
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_OUTLINE_PAINT_SEQUENCE[].getClass().getName() elements == java.awt.Color.class
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_FILL_PAINT_SEQUENCE has only one value
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_FILL_PAINT_SEQUENCE[] contains no nulls and has only one value, of length 1
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_FILL_PAINT_SEQUENCE[] elements has only one value
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_FILL_PAINT_SEQUENCE[].getClass().getName() == [java.awt.Color]
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_FILL_PAINT_SEQUENCE[].getClass().getName() elements == java.awt.Color.class
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_STROKE_SEQUENCE has only one value
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_STROKE_SEQUENCE.getClass().getName() == java.awt.Stroke[].class
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_STROKE_SEQUENCE[] contains no nulls and has only one value, of length 1
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_STROKE_SEQUENCE[] elements has only one value
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_STROKE_SEQUENCE[].getClass().getName() == [java.awt.BasicStroke]
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_STROKE_SEQUENCE[].getClass().getName() elements == java.awt.BasicStroke.class
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_OUTLINE_STROKE_SEQUENCE has only one value
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_OUTLINE_STROKE_SEQUENCE[] contains no nulls and has only one value, of length 1
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_OUTLINE_STROKE_SEQUENCE[] elements has only one value
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_OUTLINE_STROKE_SEQUENCE[].getClass().getName() == [java.awt.BasicStroke]
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_OUTLINE_STROKE_SEQUENCE[].getClass().getName() elements == java.awt.BasicStroke.class
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_SHAPE_SEQUENCE has only one value
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_SHAPE_SEQUENCE.getClass().getName() == java.awt.Shape[].class
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_SHAPE_SEQUENCE[] contains no nulls and has only one value, of length 10
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_SHAPE_SEQUENCE[].getClass().getName() == [java.awt.geom.Rectangle2D.Double, java.awt.geom.Ellipse2D.Double, java.awt.Polygon, java.awt.Polygon, java.awt.geom.Rectangle2D.Double, java.awt.Polygon, java.awt.geom.Ellipse2D.Double, java.awt.Polygon, java.awt.geom.Rectangle2D.Double, java.awt.Polygon]
size(org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_PAINT_SEQUENCE[]) == 34
size(org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_OUTLINE_PAINT_SEQUENCE[]) == 1
size(org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_FILL_PAINT_SEQUENCE[]) == 1
size(org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_STROKE_SEQUENCE[]) == 1
size(org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_OUTLINE_STROKE_SEQUENCE[]) == 1
size(org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_SHAPE_SEQUENCE[]) == 10
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_PAINT_SEQUENCE.getClass().getName() != org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_STROKE_SEQUENCE.getClass().getName()
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_PAINT_SEQUENCE.getClass().getName() != org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_SHAPE_SEQUENCE.getClass().getName()
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_STROKE_SEQUENCE.getClass().getName() != org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_SHAPE_SEQUENCE.getClass().getName()
===========================================================================
org.jfree.chart.plot.DefaultDrawingSupplier:::OBJECT
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_PAINT_SEQUENCE.getClass().getName() == this.paintSequence.getClass().getName()
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_PAINT_SEQUENCE.getClass().getName() == this.outlinePaintSequence.getClass().getName()
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_PAINT_SEQUENCE.getClass().getName() == this.fillPaintSequence.getClass().getName()
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_STROKE_SEQUENCE.getClass().getName() == this.strokeSequence.getClass().getName()
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_STROKE_SEQUENCE.getClass().getName() == this.outlineStrokeSequence.getClass().getName()
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_SHAPE_SEQUENCE.getClass().getName() == this.shapeSequence.getClass().getName()
this has only one value
this.paintSequence has only one value
this.paintSequence[] contains no nulls and has only one value, of length 34
this.paintSequence[].getClass().getName() == [java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color]
this.paintSequence[].getClass().getName() elements == java.awt.Color.class
this.paintIndex one of { 0, 1 }
this.outlinePaintSequence has only one value
this.outlinePaintSequence[] contains no nulls and has only one value, of length 1
this.outlinePaintSequence[] elements has only one value
this.outlinePaintSequence[].getClass().getName() == [java.awt.Color]
this.outlinePaintSequence[].getClass().getName() elements == java.awt.Color.class
this.outlinePaintIndex == 0
this.fillPaintSequence has only one value
this.fillPaintSequence[] contains no nulls and has only one value, of length 1
this.fillPaintSequence[] elements has only one value
this.fillPaintSequence[].getClass().getName() == [java.awt.Color]
this.fillPaintSequence[].getClass().getName() elements == java.awt.Color.class
this.fillPaintIndex == 0
this.strokeSequence has only one value
this.strokeSequence[] contains no nulls and has only one value, of length 1
this.strokeSequence[] elements has only one value
this.strokeSequence[].getClass().getName() == [java.awt.BasicStroke]
this.strokeSequence[].getClass().getName() elements == java.awt.BasicStroke.class
this.strokeIndex one of { 0, 1 }
this.outlineStrokeSequence has only one value
this.outlineStrokeSequence[] contains no nulls and has only one value, of length 1
this.outlineStrokeSequence[] elements has only one value
this.outlineStrokeSequence[].getClass().getName() == [java.awt.BasicStroke]
this.outlineStrokeSequence[].getClass().getName() elements == java.awt.BasicStroke.class
this.outlineStrokeIndex == 0
this.shapeSequence has only one value
this.shapeSequence[] contains no nulls and has only one value, of length 10
this.shapeSequence[].getClass().getName() == [java.awt.geom.Rectangle2D.Double, java.awt.geom.Ellipse2D.Double, java.awt.Polygon, java.awt.Polygon, java.awt.geom.Rectangle2D.Double, java.awt.Polygon, java.awt.geom.Ellipse2D.Double, java.awt.Polygon, java.awt.geom.Rectangle2D.Double, java.awt.Polygon]
this.shapeIndex one of { 0, 1 }
size(this.paintSequence[]) == 34
size(this.outlinePaintSequence[]) == 1
size(this.fillPaintSequence[]) == 1
size(this.strokeSequence[]) == 1
size(this.outlineStrokeSequence[]) == 1
size(this.shapeSequence[]) == 10
===========================================================================
org.jfree.chart.plot.DefaultDrawingSupplier.DefaultDrawingSupplier():::EXIT
this.paintIndex == 0
this.strokeIndex == 0
this.shapeIndex == 0
===========================================================================
org.jfree.chart.plot.DefaultDrawingSupplier.DefaultDrawingSupplier(java.awt.Paint[], java.awt.Paint[], java.awt.Paint[], java.awt.Stroke[], java.awt.Stroke[], java.awt.Shape[]):::ENTER
paintSequence.getClass().getName() == fillPaintSequence.getClass().getName()
paintSequence.getClass().getName() == outlinePaintSequence.getClass().getName()
strokeSequence.getClass().getName() == outlineStrokeSequence.getClass().getName()
paintSequence has only one value
paintSequence.getClass().getName() == java.awt.Paint[].class
paintSequence[] contains no nulls and has only one value, of length 34
fillPaintSequence has only one value
fillPaintSequence[] contains no nulls and has only one value, of length 1
fillPaintSequence[] elements has only one value
outlinePaintSequence has only one value
outlinePaintSequence[] contains no nulls and has only one value, of length 1
outlinePaintSequence[] elements has only one value
strokeSequence has only one value
strokeSequence.getClass().getName() == java.awt.Stroke[].class
strokeSequence[] contains no nulls and has only one value, of length 1
strokeSequence[] elements has only one value
outlineStrokeSequence has only one value
outlineStrokeSequence[] contains no nulls and has only one value, of length 1
outlineStrokeSequence[] elements has only one value
shapeSequence has only one value
shapeSequence.getClass().getName() == java.awt.Shape[].class
shapeSequence[] contains no nulls and has only one value, of length 10
size(paintSequence[]) == 34
size(fillPaintSequence[]) == 1
size(outlinePaintSequence[]) == 1
size(strokeSequence[]) == 1
size(outlineStrokeSequence[]) == 1
size(shapeSequence[]) == 10
===========================================================================
org.jfree.chart.plot.DefaultDrawingSupplier.DefaultDrawingSupplier(java.awt.Paint[], java.awt.Paint[], java.awt.Paint[], java.awt.Stroke[], java.awt.Stroke[], java.awt.Shape[]):::EXIT
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_PAINT_SEQUENCE.getClass().getName() == orig(paintSequence.getClass().getName())
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_PAINT_SEQUENCE.getClass().getName() == orig(fillPaintSequence.getClass().getName())
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_PAINT_SEQUENCE.getClass().getName() == orig(outlinePaintSequence.getClass().getName())
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_STROKE_SEQUENCE.getClass().getName() == orig(strokeSequence.getClass().getName())
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_STROKE_SEQUENCE.getClass().getName() == orig(outlineStrokeSequence.getClass().getName())
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_SHAPE_SEQUENCE.getClass().getName() == orig(shapeSequence.getClass().getName())
paintSequence[] == orig(paintSequence[])
fillPaintSequence[] == orig(fillPaintSequence[])
outlinePaintSequence[] == orig(outlinePaintSequence[])
strokeSequence[] == orig(strokeSequence[])
outlineStrokeSequence[] == orig(outlineStrokeSequence[])
shapeSequence[] == orig(shapeSequence[])
this.paintIndex == 0
this.strokeIndex == 0
this.shapeIndex == 0
paintSequence[] contains no nulls and has only one value, of length 34
fillPaintSequence[] contains no nulls and has only one value, of length 1
fillPaintSequence[] elements has only one value
outlinePaintSequence[] contains no nulls and has only one value, of length 1
outlinePaintSequence[] elements has only one value
strokeSequence[] contains no nulls and has only one value, of length 1
strokeSequence[] elements has only one value
outlineStrokeSequence[] contains no nulls and has only one value, of length 1
outlineStrokeSequence[] elements has only one value
shapeSequence[] contains no nulls and has only one value, of length 10
===========================================================================
org.jfree.chart.plot.DefaultDrawingSupplier.createStandardSeriesShapes():::ENTER
===========================================================================
org.jfree.chart.plot.DefaultDrawingSupplier.createStandardSeriesShapes():::EXIT
return has only one value
return.getClass().getName() == java.awt.Shape[].class
return[] contains no nulls and has only one value, of length 10
size(return[]) == 10
===========================================================================
org.jfree.chart.plot.DefaultDrawingSupplier.getNextPaint():::ENTER
this.paintIndex == 0
this.strokeIndex == 0
this.shapeIndex == 1
===========================================================================
org.jfree.chart.plot.DefaultDrawingSupplier.getNextPaint():::EXIT
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_PAINT_SEQUENCE == orig(org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_PAINT_SEQUENCE)
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_PAINT_SEQUENCE.getClass().getName() == orig(org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_PAINT_SEQUENCE.getClass().getName())
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_PAINT_SEQUENCE.getClass().getName() == orig(org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_OUTLINE_PAINT_SEQUENCE.getClass().getName())
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_PAINT_SEQUENCE.getClass().getName() == orig(org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_FILL_PAINT_SEQUENCE.getClass().getName())
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_PAINT_SEQUENCE.getClass().getName() == orig(this.paintSequence.getClass().getName())
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_PAINT_SEQUENCE.getClass().getName() == orig(this.outlinePaintSequence.getClass().getName())
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_PAINT_SEQUENCE.getClass().getName() == orig(this.fillPaintSequence.getClass().getName())
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_PAINT_SEQUENCE[] == orig(org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_PAINT_SEQUENCE[])
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_OUTLINE_PAINT_SEQUENCE == orig(org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_OUTLINE_PAINT_SEQUENCE)
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_OUTLINE_PAINT_SEQUENCE[] == orig(org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_OUTLINE_PAINT_SEQUENCE[])
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_FILL_PAINT_SEQUENCE == orig(org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_FILL_PAINT_SEQUENCE)
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_FILL_PAINT_SEQUENCE[] == orig(org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_FILL_PAINT_SEQUENCE[])
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_STROKE_SEQUENCE == orig(org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_STROKE_SEQUENCE)
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_STROKE_SEQUENCE.getClass().getName() == orig(org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_STROKE_SEQUENCE.getClass().getName())
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_STROKE_SEQUENCE.getClass().getName() == orig(org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_OUTLINE_STROKE_SEQUENCE.getClass().getName())
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_STROKE_SEQUENCE.getClass().getName() == orig(this.strokeSequence.getClass().getName())
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_STROKE_SEQUENCE.getClass().getName() == orig(this.outlineStrokeSequence.getClass().getName())
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_STROKE_SEQUENCE[] == orig(org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_STROKE_SEQUENCE[])
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_OUTLINE_STROKE_SEQUENCE == orig(org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_OUTLINE_STROKE_SEQUENCE)
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_OUTLINE_STROKE_SEQUENCE[] == orig(org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_OUTLINE_STROKE_SEQUENCE[])
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_SHAPE_SEQUENCE == orig(org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_SHAPE_SEQUENCE)
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_SHAPE_SEQUENCE.getClass().getName() == orig(org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_SHAPE_SEQUENCE.getClass().getName())
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_SHAPE_SEQUENCE.getClass().getName() == orig(this.shapeSequence.getClass().getName())
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_SHAPE_SEQUENCE[] == orig(org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_SHAPE_SEQUENCE[])
this.paintSequence == orig(this.paintSequence)
this.paintSequence[] == orig(this.paintSequence[])
this.outlinePaintSequence == orig(this.outlinePaintSequence)
this.outlinePaintSequence[] == orig(this.outlinePaintSequence[])
this.outlinePaintIndex == orig(this.outlinePaintIndex)
this.fillPaintSequence == orig(this.fillPaintSequence)
this.fillPaintSequence[] == orig(this.fillPaintSequence[])
this.fillPaintIndex == orig(this.fillPaintIndex)
this.strokeSequence == orig(this.strokeSequence)
this.strokeSequence[] == orig(this.strokeSequence[])
this.strokeIndex == orig(this.strokeIndex)
this.outlineStrokeSequence == orig(this.outlineStrokeSequence)
this.outlineStrokeSequence[] == orig(this.outlineStrokeSequence[])
this.outlineStrokeIndex == orig(this.outlineStrokeIndex)
this.shapeSequence == orig(this.shapeSequence)
this.shapeSequence[] == orig(this.shapeSequence[])
this.shapeIndex == orig(this.shapeIndex)
this.paintIndex == 1
this.strokeIndex == 0
this.shapeIndex == 1
return has only one value
return.getClass().getName() == java.awt.Color.class
return.getClass().getName() in org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_PAINT_SEQUENCE[].getClass().getName()
return.getClass().getName() in org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_OUTLINE_PAINT_SEQUENCE[].getClass().getName()
return.getClass().getName() in org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_FILL_PAINT_SEQUENCE[].getClass().getName()
return.getClass().getName() in this.paintSequence[].getClass().getName()
return.getClass().getName() in this.outlinePaintSequence[].getClass().getName()
return.getClass().getName() in this.fillPaintSequence[].getClass().getName()
===========================================================================
org.jfree.chart.plot.DefaultDrawingSupplier.getNextShape():::ENTER
this.paintIndex == 0
this.strokeIndex == 0
this.shapeIndex == 0
===========================================================================
org.jfree.chart.plot.DefaultDrawingSupplier.getNextShape():::EXIT
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_PAINT_SEQUENCE == orig(org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_PAINT_SEQUENCE)
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_PAINT_SEQUENCE.getClass().getName() == orig(org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_PAINT_SEQUENCE.getClass().getName())
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_PAINT_SEQUENCE.getClass().getName() == orig(org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_OUTLINE_PAINT_SEQUENCE.getClass().getName())
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_PAINT_SEQUENCE.getClass().getName() == orig(org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_FILL_PAINT_SEQUENCE.getClass().getName())
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_PAINT_SEQUENCE.getClass().getName() == orig(this.paintSequence.getClass().getName())
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_PAINT_SEQUENCE.getClass().getName() == orig(this.outlinePaintSequence.getClass().getName())
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_PAINT_SEQUENCE.getClass().getName() == orig(this.fillPaintSequence.getClass().getName())
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_PAINT_SEQUENCE[] == orig(org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_PAINT_SEQUENCE[])
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_OUTLINE_PAINT_SEQUENCE == orig(org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_OUTLINE_PAINT_SEQUENCE)
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_OUTLINE_PAINT_SEQUENCE[] == orig(org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_OUTLINE_PAINT_SEQUENCE[])
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_FILL_PAINT_SEQUENCE == orig(org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_FILL_PAINT_SEQUENCE)
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_FILL_PAINT_SEQUENCE[] == orig(org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_FILL_PAINT_SEQUENCE[])
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_STROKE_SEQUENCE == orig(org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_STROKE_SEQUENCE)
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_STROKE_SEQUENCE.getClass().getName() == orig(org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_STROKE_SEQUENCE.getClass().getName())
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_STROKE_SEQUENCE.getClass().getName() == orig(org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_OUTLINE_STROKE_SEQUENCE.getClass().getName())
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_STROKE_SEQUENCE.getClass().getName() == orig(this.strokeSequence.getClass().getName())
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_STROKE_SEQUENCE.getClass().getName() == orig(this.outlineStrokeSequence.getClass().getName())
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_STROKE_SEQUENCE[] == orig(org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_STROKE_SEQUENCE[])
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_OUTLINE_STROKE_SEQUENCE == orig(org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_OUTLINE_STROKE_SEQUENCE)
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_OUTLINE_STROKE_SEQUENCE[] == orig(org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_OUTLINE_STROKE_SEQUENCE[])
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_SHAPE_SEQUENCE == orig(org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_SHAPE_SEQUENCE)
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_SHAPE_SEQUENCE.getClass().getName() == orig(org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_SHAPE_SEQUENCE.getClass().getName())
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_SHAPE_SEQUENCE.getClass().getName() == orig(this.shapeSequence.getClass().getName())
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_SHAPE_SEQUENCE[] == orig(org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_SHAPE_SEQUENCE[])
this.paintSequence == orig(this.paintSequence)
this.paintSequence[] == orig(this.paintSequence[])
this.paintIndex == orig(this.paintIndex)
this.outlinePaintSequence == orig(this.outlinePaintSequence)
this.outlinePaintSequence[] == orig(this.outlinePaintSequence[])
this.outlinePaintIndex == orig(this.outlinePaintIndex)
this.fillPaintSequence == orig(this.fillPaintSequence)
this.fillPaintSequence[] == orig(this.fillPaintSequence[])
this.fillPaintIndex == orig(this.fillPaintIndex)
this.strokeSequence == orig(this.strokeSequence)
this.strokeSequence[] == orig(this.strokeSequence[])
this.strokeIndex == orig(this.strokeIndex)
this.outlineStrokeSequence == orig(this.outlineStrokeSequence)
this.outlineStrokeSequence[] == orig(this.outlineStrokeSequence[])
this.outlineStrokeIndex == orig(this.outlineStrokeIndex)
this.shapeSequence == orig(this.shapeSequence)
this.shapeSequence[] == orig(this.shapeSequence[])
this.paintIndex == 0
this.strokeIndex == 0
this.shapeIndex == 1
return has only one value
return.getClass().getName() == java.awt.geom.Rectangle2D$Double.class
===========================================================================
org.jfree.chart.plot.DefaultDrawingSupplier.getNextStroke():::ENTER
this.paintIndex == 1
this.strokeIndex == 0
this.shapeIndex == 1
===========================================================================
org.jfree.chart.plot.DefaultDrawingSupplier.getNextStroke():::EXIT
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_PAINT_SEQUENCE == orig(org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_PAINT_SEQUENCE)
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_PAINT_SEQUENCE.getClass().getName() == orig(org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_PAINT_SEQUENCE.getClass().getName())
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_PAINT_SEQUENCE.getClass().getName() == orig(org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_OUTLINE_PAINT_SEQUENCE.getClass().getName())
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_PAINT_SEQUENCE.getClass().getName() == orig(org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_FILL_PAINT_SEQUENCE.getClass().getName())
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_PAINT_SEQUENCE.getClass().getName() == orig(this.paintSequence.getClass().getName())
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_PAINT_SEQUENCE.getClass().getName() == orig(this.outlinePaintSequence.getClass().getName())
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_PAINT_SEQUENCE.getClass().getName() == orig(this.fillPaintSequence.getClass().getName())
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_PAINT_SEQUENCE[] == orig(org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_PAINT_SEQUENCE[])
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_OUTLINE_PAINT_SEQUENCE == orig(org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_OUTLINE_PAINT_SEQUENCE)
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_OUTLINE_PAINT_SEQUENCE[] == orig(org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_OUTLINE_PAINT_SEQUENCE[])
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_FILL_PAINT_SEQUENCE == orig(org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_FILL_PAINT_SEQUENCE)
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_FILL_PAINT_SEQUENCE[] == orig(org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_FILL_PAINT_SEQUENCE[])
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_STROKE_SEQUENCE == orig(org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_STROKE_SEQUENCE)
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_STROKE_SEQUENCE.getClass().getName() == orig(org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_STROKE_SEQUENCE.getClass().getName())
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_STROKE_SEQUENCE.getClass().getName() == orig(org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_OUTLINE_STROKE_SEQUENCE.getClass().getName())
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_STROKE_SEQUENCE.getClass().getName() == orig(this.strokeSequence.getClass().getName())
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_STROKE_SEQUENCE.getClass().getName() == orig(this.outlineStrokeSequence.getClass().getName())
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_STROKE_SEQUENCE[] == orig(org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_STROKE_SEQUENCE[])
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_OUTLINE_STROKE_SEQUENCE == orig(org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_OUTLINE_STROKE_SEQUENCE)
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_OUTLINE_STROKE_SEQUENCE[] == orig(org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_OUTLINE_STROKE_SEQUENCE[])
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_SHAPE_SEQUENCE == orig(org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_SHAPE_SEQUENCE)
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_SHAPE_SEQUENCE.getClass().getName() == orig(org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_SHAPE_SEQUENCE.getClass().getName())
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_SHAPE_SEQUENCE.getClass().getName() == orig(this.shapeSequence.getClass().getName())
org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_SHAPE_SEQUENCE[] == orig(org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_SHAPE_SEQUENCE[])
this.paintSequence == orig(this.paintSequence)
this.paintSequence[] == orig(this.paintSequence[])
this.paintIndex == orig(this.paintIndex)
this.outlinePaintSequence == orig(this.outlinePaintSequence)
this.outlinePaintSequence[] == orig(this.outlinePaintSequence[])
this.outlinePaintIndex == orig(this.outlinePaintIndex)
this.fillPaintSequence == orig(this.fillPaintSequence)
this.fillPaintSequence[] == orig(this.fillPaintSequence[])
this.fillPaintIndex == orig(this.fillPaintIndex)
this.strokeSequence == orig(this.strokeSequence)
this.strokeSequence[] == orig(this.strokeSequence[])
this.outlineStrokeSequence == orig(this.outlineStrokeSequence)
this.outlineStrokeSequence[] == orig(this.outlineStrokeSequence[])
this.outlineStrokeIndex == orig(this.outlineStrokeIndex)
this.shapeSequence == orig(this.shapeSequence)
this.shapeSequence[] == orig(this.shapeSequence[])
this.shapeIndex == orig(this.shapeIndex)
this.paintIndex == 1
this.strokeIndex == 1
this.shapeIndex == 1
return has only one value
return.getClass().getName() == java.awt.BasicStroke.class
return.getClass().getName() in org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_STROKE_SEQUENCE[].getClass().getName()
return.getClass().getName() in org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_OUTLINE_STROKE_SEQUENCE[].getClass().getName()
return.getClass().getName() in this.strokeSequence[].getClass().getName()
return.getClass().getName() in this.outlineStrokeSequence[].getClass().getName()
===========================================================================
org.jfree.chart.plot.DefaultDrawingSupplier.intArray(double, double, double):::ENTER
a one of { -3.0, 0.0 }
b one of { -3.0, 0.0, 3.0 }
c one of { -3.0, 0.0, 3.0 }
===========================================================================
org.jfree.chart.plot.DefaultDrawingSupplier.intArray(double, double, double):::EXIT
return[] elements one of { -3, 0, 3 }
size(return[]) == 3
===========================================================================
org.jfree.chart.plot.DefaultDrawingSupplier.intArray(double, double, double, double):::ENTER
a one of { -3.0, 0.0 }
b one of { 0.0, 3.0 }
c one of { 0.0, 3.0 }
d one of { -3.0, 0.0 }
===========================================================================
org.jfree.chart.plot.DefaultDrawingSupplier.intArray(double, double, double, double):::EXIT
return[] elements one of { -3, 0, 3 }
return[] one of { [-3, 0, 3, 0], [0, 3, 0, -3] }
size(return[]) == 4
===========================================================================
org.jfree.chart.plot.Plot:::CLASS
org.jfree.chart.plot.Plot.ZERO has only one value
org.jfree.chart.plot.Plot.ZERO != null
org.jfree.chart.plot.Plot.ZERO.getClass().getName() == java.lang.Integer.class
org.jfree.chart.plot.Plot.DEFAULT_INSETS has only one value
org.jfree.chart.plot.Plot.DEFAULT_INSETS != null
org.jfree.chart.util.RectangleInsets.ZERO_INSETS has only one value
org.jfree.chart.util.RectangleInsets.ZERO_INSETS != null
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType has only one value
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType != null
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.top == 0.0
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.left == 0.0
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.bottom == 0.0
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.right == 0.0
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType has only one value
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType != null
org.jfree.chart.util.UnitType.ABSOLUTE has only one value
org.jfree.chart.util.UnitType.ABSOLUTE != null
org.jfree.chart.util.UnitType.RELATIVE has only one value
org.jfree.chart.util.UnitType.RELATIVE != null
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name has only one value
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name != null
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name.toString == "UnitType.ABSOLUTE"
org.jfree.chart.plot.Plot.DEFAULT_INSETS.top == 4.0
org.jfree.chart.plot.Plot.DEFAULT_INSETS.left == 8.0
org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom == 4.0
org.jfree.chart.plot.Plot.DEFAULT_INSETS.right == 8.0
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE has only one value
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE != null
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName() == java.awt.BasicStroke.class
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT has only one value
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT != null
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() == java.awt.Color.class
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT has only one value
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT != null
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName() == java.awt.Color.class
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX has only one value
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX != null
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName() == java.awt.geom.Rectangle2D$Double.class
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE has only one value
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE != null
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName() == java.awt.geom.Ellipse2D$Double.class
===========================================================================
org.jfree.chart.plot.Plot:::OBJECT
this has only one value
this.getClass().getName() == org.jfree.chart.plot.CategoryPlot.class
this.parent == null
org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener == null
this.datasetGroup == null
this.noDataMessage == null
this.noDataMessageFont has only one value
this.noDataMessageFont != null
this.noDataMessagePaint has only one value
this.noDataMessagePaint != null
this.noDataMessagePaint.getClass().getName() == java.awt.Color.class
this.insets has only one value
this.insets != null
this.insets.unitType has only one value
this.insets.unitType != null
this.insets.unitType.name has only one value
this.insets.unitType.name != null
this.insets.unitType.name.toString == "UnitType.ABSOLUTE"
this.insets.top == 4.0
this.insets.left == 8.0
this.insets.bottom == 4.0
this.insets.right == 8.0
this.outlineVisible == true
this.outlineStroke has only one value
this.outlineStroke != null
this.outlineStroke.getClass().getName() == java.awt.BasicStroke.class
this.outlinePaint has only one value
this.outlinePaint != null
this.outlinePaint.getClass().getName() == java.awt.Color.class
this.backgroundPaint has only one value
this.backgroundPaint != null
this.backgroundPaint.getClass().getName() == java.awt.Color.class
this.backgroundImage == null
this.backgroundImageAlignment == 15
this.backgroundImageAlpha == 0.5
this.foregroundAlpha == 1.0
this.backgroundAlpha == 1.0
this.drawingSupplier has only one value
this.drawingSupplier != null
this.drawingSupplier.getClass().getName() == org.jfree.chart.plot.DefaultDrawingSupplier.class
this.listenerList has only one value
this.listenerList != null
this.notify == true
===========================================================================
org.jfree.chart.plot.Plot.Plot():::EXIT
===========================================================================
org.jfree.chart.plot.Plot.fireChangeEvent():::ENTER
===========================================================================
org.jfree.chart.plot.Plot.fireChangeEvent():::EXIT
org.jfree.chart.plot.Plot.ZERO == orig(org.jfree.chart.plot.Plot.ZERO)
org.jfree.chart.plot.Plot.ZERO.getClass().getName() == orig(org.jfree.chart.plot.Plot.ZERO.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_INSETS == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.top == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.top)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.left == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.left)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.bottom == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.bottom)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.right == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.right)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType)
org.jfree.chart.util.UnitType.ABSOLUTE == orig(org.jfree.chart.util.UnitType.ABSOLUTE)
org.jfree.chart.util.UnitType.RELATIVE == orig(org.jfree.chart.util.UnitType.RELATIVE)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name.toString == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name.toString)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.top == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.top)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.left == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.left)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.right == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.right)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName())
this.parent == orig(this.parent)
org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener == orig(org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener)
this.datasetGroup == orig(this.datasetGroup)
this.noDataMessage == orig(this.noDataMessage)
this.noDataMessageFont == orig(this.noDataMessageFont)
this.noDataMessagePaint == orig(this.noDataMessagePaint)
this.noDataMessagePaint.getClass().getName() == orig(this.noDataMessagePaint.getClass().getName())
this.insets == orig(this.insets)
this.insets.unitType == orig(this.insets.unitType)
this.insets.unitType.name == orig(this.insets.unitType.name)
this.insets.unitType.name.toString == orig(this.insets.unitType.name.toString)
this.insets.top == orig(this.insets.top)
this.insets.left == orig(this.insets.left)
this.insets.bottom == orig(this.insets.bottom)
this.insets.right == orig(this.insets.right)
this.outlineVisible == orig(this.outlineVisible)
this.outlineStroke == orig(this.outlineStroke)
this.outlineStroke.getClass().getName() == orig(this.outlineStroke.getClass().getName())
this.outlinePaint == orig(this.outlinePaint)
this.outlinePaint.getClass().getName() == orig(this.outlinePaint.getClass().getName())
this.backgroundPaint == orig(this.backgroundPaint)
this.backgroundPaint.getClass().getName() == orig(this.backgroundPaint.getClass().getName())
this.backgroundImage == orig(this.backgroundImage)
this.backgroundImageAlignment == orig(this.backgroundImageAlignment)
this.backgroundImageAlpha == orig(this.backgroundImageAlpha)
this.foregroundAlpha == orig(this.foregroundAlpha)
this.backgroundAlpha == orig(this.backgroundAlpha)
this.drawingSupplier == orig(this.drawingSupplier)
this.drawingSupplier.getClass().getName() == orig(this.drawingSupplier.getClass().getName())
this.listenerList == orig(this.listenerList)
this.notify == orig(this.notify)
===========================================================================
org.jfree.chart.plot.Plot.getDrawingSupplier():::ENTER
===========================================================================
org.jfree.chart.plot.Plot.getDrawingSupplier():::EXIT
org.jfree.chart.plot.Plot.ZERO == orig(org.jfree.chart.plot.Plot.ZERO)
org.jfree.chart.plot.Plot.ZERO.getClass().getName() == orig(org.jfree.chart.plot.Plot.ZERO.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_INSETS == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.top == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.top)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.left == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.left)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.bottom == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.bottom)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.right == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.right)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType)
org.jfree.chart.util.UnitType.ABSOLUTE == orig(org.jfree.chart.util.UnitType.ABSOLUTE)
org.jfree.chart.util.UnitType.RELATIVE == orig(org.jfree.chart.util.UnitType.RELATIVE)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name.toString == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name.toString)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.top == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.top)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.left == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.left)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.right == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.right)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName())
this.parent == orig(this.parent)
org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener == orig(org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener)
this.datasetGroup == orig(this.datasetGroup)
this.noDataMessage == orig(this.noDataMessage)
this.noDataMessageFont == orig(this.noDataMessageFont)
this.noDataMessagePaint == orig(this.noDataMessagePaint)
this.noDataMessagePaint.getClass().getName() == orig(this.noDataMessagePaint.getClass().getName())
this.insets == orig(this.insets)
this.insets.unitType == orig(this.insets.unitType)
this.insets.unitType.name == orig(this.insets.unitType.name)
this.insets.unitType.name.toString == orig(this.insets.unitType.name.toString)
this.insets.top == orig(this.insets.top)
this.insets.left == orig(this.insets.left)
this.insets.bottom == orig(this.insets.bottom)
this.insets.right == orig(this.insets.right)
this.outlineVisible == orig(this.outlineVisible)
this.outlineStroke == orig(this.outlineStroke)
this.outlineStroke.getClass().getName() == orig(this.outlineStroke.getClass().getName())
this.outlinePaint == orig(this.outlinePaint)
this.outlinePaint.getClass().getName() == orig(this.outlinePaint.getClass().getName())
this.backgroundPaint == orig(this.backgroundPaint)
this.backgroundPaint.getClass().getName() == orig(this.backgroundPaint.getClass().getName())
this.backgroundImage == orig(this.backgroundImage)
this.backgroundImageAlignment == orig(this.backgroundImageAlignment)
this.backgroundImageAlpha == orig(this.backgroundImageAlpha)
this.foregroundAlpha == orig(this.foregroundAlpha)
this.backgroundAlpha == orig(this.backgroundAlpha)
this.drawingSupplier == orig(this.drawingSupplier)
this.drawingSupplier.getClass().getName() == orig(this.drawingSupplier.getClass().getName())
this.listenerList == orig(this.listenerList)
this.notify == orig(this.notify)
return has only one value
return.getClass().getName() == org.jfree.chart.plot.DefaultDrawingSupplier.class
===========================================================================
org.jfree.chart.plot.Plot.getParent():::ENTER
===========================================================================
org.jfree.chart.plot.Plot.getParent():::EXIT
org.jfree.chart.plot.Plot.ZERO == orig(org.jfree.chart.plot.Plot.ZERO)
org.jfree.chart.plot.Plot.ZERO.getClass().getName() == orig(org.jfree.chart.plot.Plot.ZERO.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_INSETS == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.top == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.top)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.left == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.left)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.bottom == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.bottom)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.right == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.right)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType)
org.jfree.chart.util.UnitType.ABSOLUTE == orig(org.jfree.chart.util.UnitType.ABSOLUTE)
org.jfree.chart.util.UnitType.RELATIVE == orig(org.jfree.chart.util.UnitType.RELATIVE)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name.toString == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name.toString)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.top == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.top)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.left == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.left)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.right == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.right)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName())
this.parent == orig(this.parent)
org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener == orig(org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener)
this.datasetGroup == orig(this.datasetGroup)
this.noDataMessage == orig(this.noDataMessage)
this.noDataMessageFont == orig(this.noDataMessageFont)
this.noDataMessagePaint == orig(this.noDataMessagePaint)
this.noDataMessagePaint.getClass().getName() == orig(this.noDataMessagePaint.getClass().getName())
this.insets == orig(this.insets)
this.insets.unitType == orig(this.insets.unitType)
this.insets.unitType.name == orig(this.insets.unitType.name)
this.insets.unitType.name.toString == orig(this.insets.unitType.name.toString)
this.insets.top == orig(this.insets.top)
this.insets.left == orig(this.insets.left)
this.insets.bottom == orig(this.insets.bottom)
this.insets.right == orig(this.insets.right)
this.outlineVisible == orig(this.outlineVisible)
this.outlineStroke == orig(this.outlineStroke)
this.outlineStroke.getClass().getName() == orig(this.outlineStroke.getClass().getName())
this.outlinePaint == orig(this.outlinePaint)
this.outlinePaint.getClass().getName() == orig(this.outlinePaint.getClass().getName())
this.backgroundPaint == orig(this.backgroundPaint)
this.backgroundPaint.getClass().getName() == orig(this.backgroundPaint.getClass().getName())
this.backgroundImage == orig(this.backgroundImage)
this.backgroundImageAlignment == orig(this.backgroundImageAlignment)
this.backgroundImageAlpha == orig(this.backgroundImageAlpha)
this.foregroundAlpha == orig(this.foregroundAlpha)
this.backgroundAlpha == orig(this.backgroundAlpha)
this.drawingSupplier == orig(this.drawingSupplier)
this.drawingSupplier.getClass().getName() == orig(this.drawingSupplier.getClass().getName())
this.listenerList == orig(this.listenerList)
this.notify == orig(this.notify)
return == null
===========================================================================
org.jfree.chart.plot.Plot.notifyListeners(org.jfree.chart.event.PlotChangeEvent):::ENTER
event.plot has only one value
event.plot.getClass().getName() == org.jfree.chart.plot.CategoryPlot.class
event.plot.parent == null
event.plot.datasetGroup == null
event.plot.noDataMessage == null
event.plot.noDataMessageFont has only one value
event.plot.noDataMessagePaint has only one value
event.plot.noDataMessagePaint.getClass().getName() == java.awt.Color.class
event.plot.insets has only one value
event.plot.outlineVisible == true
event.plot.outlineStroke has only one value
event.plot.outlineStroke.getClass().getName() == java.awt.BasicStroke.class
event.plot.outlinePaint has only one value
event.plot.outlinePaint.getClass().getName() == java.awt.Color.class
event.plot.backgroundPaint has only one value
event.plot.backgroundPaint.getClass().getName() == java.awt.Color.class
event.plot.backgroundImage == null
event.plot.backgroundImageAlignment == 15
event.plot.backgroundImageAlpha == 0.5
event.plot.foregroundAlpha == 1.0
event.plot.backgroundAlpha == 1.0
event.plot.drawingSupplier has only one value
event.plot.drawingSupplier.getClass().getName() == org.jfree.chart.plot.DefaultDrawingSupplier.class
event.plot.listenerList has only one value
event.plot.notify == true
org.jfree.chart.event.ChartChangeEventType.GENERAL has only one value
org.jfree.chart.event.ChartChangeEventType.NEW_DATASET has only one value
org.jfree.chart.event.ChartChangeEventType.DATASET_UPDATED has only one value
event.type.name.toString one of { "ChartChangeEventType.DATASET_UPDATED", "ChartChangeEventType.GENERAL" }
event.chart == null
===========================================================================
org.jfree.chart.plot.Plot.notifyListeners(org.jfree.chart.event.PlotChangeEvent):::EXIT978
===========================================================================
org.jfree.chart.plot.Plot.notifyListeners(org.jfree.chart.event.PlotChangeEvent):::EXIT
org.jfree.chart.plot.Plot.ZERO == orig(org.jfree.chart.plot.Plot.ZERO)
org.jfree.chart.plot.Plot.ZERO.getClass().getName() == orig(org.jfree.chart.plot.Plot.ZERO.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_INSETS == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.top == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.top)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.left == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.left)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.bottom == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.bottom)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.right == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS.right)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType)
org.jfree.chart.util.UnitType.ABSOLUTE == orig(org.jfree.chart.util.UnitType.ABSOLUTE)
org.jfree.chart.util.UnitType.RELATIVE == orig(org.jfree.chart.util.UnitType.RELATIVE)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name.toString == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType.name.toString)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.top == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.top)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.left == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.left)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.right == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.right)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName())
this.parent == orig(this.parent)
org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener == orig(org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener)
this.datasetGroup == orig(this.datasetGroup)
this.noDataMessage == orig(this.noDataMessage)
this.noDataMessageFont == orig(this.noDataMessageFont)
this.noDataMessagePaint == orig(this.noDataMessagePaint)
this.noDataMessagePaint.getClass().getName() == orig(this.noDataMessagePaint.getClass().getName())
this.insets == orig(this.insets)
this.insets.unitType == orig(this.insets.unitType)
this.insets.unitType.name == orig(this.insets.unitType.name)
this.insets.unitType.name.toString == orig(this.insets.unitType.name.toString)
this.insets.top == orig(this.insets.top)
this.insets.left == orig(this.insets.left)
this.insets.bottom == orig(this.insets.bottom)
this.insets.right == orig(this.insets.right)
this.outlineVisible == orig(this.outlineVisible)
this.outlineStroke == orig(this.outlineStroke)
this.outlineStroke.getClass().getName() == orig(this.outlineStroke.getClass().getName())
this.outlinePaint == orig(this.outlinePaint)
this.outlinePaint.getClass().getName() == orig(this.outlinePaint.getClass().getName())
this.backgroundPaint == orig(this.backgroundPaint)
this.backgroundPaint.getClass().getName() == orig(this.backgroundPaint.getClass().getName())
this.backgroundImage == orig(this.backgroundImage)
this.backgroundImageAlignment == orig(this.backgroundImageAlignment)
this.backgroundImageAlpha == orig(this.backgroundImageAlpha)
this.foregroundAlpha == orig(this.foregroundAlpha)
this.backgroundAlpha == orig(this.backgroundAlpha)
this.drawingSupplier == orig(this.drawingSupplier)
this.drawingSupplier.getClass().getName() == orig(this.drawingSupplier.getClass().getName())
this.listenerList == orig(this.listenerList)
this.notify == orig(this.notify)
event.plot == orig(event.plot)
event.plot.getClass().getName() == orig(event.plot.getClass().getName())
event.plot.parent == orig(event.plot.parent)
event.plot.datasetGroup == orig(event.plot.datasetGroup)
event.plot.noDataMessage == orig(event.plot.noDataMessage)
event.plot.noDataMessageFont == orig(event.plot.noDataMessageFont)
event.plot.noDataMessagePaint == orig(event.plot.noDataMessagePaint)
event.plot.noDataMessagePaint.getClass().getName() == orig(event.plot.noDataMessagePaint.getClass().getName())
event.plot.insets == orig(event.plot.insets)
event.plot.outlineVisible == orig(event.plot.outlineVisible)
event.plot.outlineStroke == orig(event.plot.outlineStroke)
event.plot.outlineStroke.getClass().getName() == orig(event.plot.outlineStroke.getClass().getName())
event.plot.outlinePaint == orig(event.plot.outlinePaint)
event.plot.outlinePaint.getClass().getName() == orig(event.plot.outlinePaint.getClass().getName())
event.plot.backgroundPaint == orig(event.plot.backgroundPaint)
event.plot.backgroundPaint.getClass().getName() == orig(event.plot.backgroundPaint.getClass().getName())
event.plot.backgroundImage == orig(event.plot.backgroundImage)
event.plot.backgroundImageAlignment == orig(event.plot.backgroundImageAlignment)
event.plot.backgroundImageAlpha == orig(event.plot.backgroundImageAlpha)
event.plot.foregroundAlpha == orig(event.plot.foregroundAlpha)
event.plot.backgroundAlpha == orig(event.plot.backgroundAlpha)
event.plot.drawingSupplier == orig(event.plot.drawingSupplier)
event.plot.drawingSupplier.getClass().getName() == orig(event.plot.drawingSupplier.getClass().getName())
event.plot.listenerList == orig(event.plot.listenerList)
event.plot.notify == orig(event.plot.notify)
event.type == orig(event.type)
org.jfree.chart.event.ChartChangeEventType.GENERAL == orig(org.jfree.chart.event.ChartChangeEventType.GENERAL)
org.jfree.chart.event.ChartChangeEventType.NEW_DATASET == orig(org.jfree.chart.event.ChartChangeEventType.NEW_DATASET)
org.jfree.chart.event.ChartChangeEventType.DATASET_UPDATED == orig(org.jfree.chart.event.ChartChangeEventType.DATASET_UPDATED)
event.type.name == orig(event.type.name)
event.type.name.toString == orig(event.type.name.toString)
event.chart == orig(event.chart)
event.plot has only one value
event.plot.getClass().getName() == org.jfree.chart.plot.CategoryPlot.class
event.plot.parent == null
event.plot.datasetGroup == null
event.plot.noDataMessage == null
event.plot.noDataMessageFont has only one value
event.plot.noDataMessagePaint has only one value
event.plot.noDataMessagePaint.getClass().getName() == java.awt.Color.class
event.plot.insets has only one value
event.plot.outlineVisible == true
event.plot.outlineStroke has only one value
event.plot.outlineStroke.getClass().getName() == java.awt.BasicStroke.class
event.plot.outlinePaint has only one value
event.plot.outlinePaint.getClass().getName() == java.awt.Color.class
event.plot.backgroundPaint has only one value
event.plot.backgroundPaint.getClass().getName() == java.awt.Color.class
event.plot.backgroundImage == null
event.plot.backgroundImageAlignment == 15
event.plot.backgroundImageAlpha == 0.5
event.plot.foregroundAlpha == 1.0
event.plot.backgroundAlpha == 1.0
event.plot.drawingSupplier has only one value
event.plot.drawingSupplier.getClass().getName() == org.jfree.chart.plot.DefaultDrawingSupplier.class
event.plot.listenerList has only one value
event.plot.notify == true
org.jfree.chart.event.ChartChangeEventType.GENERAL has only one value
org.jfree.chart.event.ChartChangeEventType.NEW_DATASET has only one value
org.jfree.chart.event.ChartChangeEventType.DATASET_UPDATED has only one value
event.type.name.toString one of { "ChartChangeEventType.DATASET_UPDATED", "ChartChangeEventType.GENERAL" }
event.chart == null
===========================================================================
org.jfree.chart.plot.PlotOrientation:::CLASS
===========================================================================
org.jfree.chart.plot.PlotOrientation:::OBJECT
this.name.toString one of { "PlotOrientation.HORIZONTAL", "PlotOrientation.VERTICAL" }
===========================================================================
org.jfree.chart.plot.PlotOrientation.PlotOrientation(java.lang.String):::ENTER
name.toString one of { "PlotOrientation.HORIZONTAL", "PlotOrientation.VERTICAL" }
===========================================================================
org.jfree.chart.plot.PlotOrientation.PlotOrientation(java.lang.String):::EXIT
name.toString == orig(name.toString)
name.toString one of { "PlotOrientation.HORIZONTAL", "PlotOrientation.VERTICAL" }
===========================================================================
org.jfree.chart.renderer.AbstractRenderer:::CLASS
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT.getClass().getName()
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT.getClass().getName()
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE.getClass().getName()
org.jfree.chart.renderer.AbstractRenderer.ZERO has only one value
org.jfree.chart.renderer.AbstractRenderer.ZERO != null
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT has only one value
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT != null
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == java.awt.Color.class
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT has only one value
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT != null
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE has only one value
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE != null
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == java.awt.BasicStroke.class
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE has only one value
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE != null
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE has only one value
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE != null
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE.getClass().getName() == java.awt.geom.Rectangle2D$Double.class
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_FONT has only one value
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_FONT != null
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT has only one value
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT != null
org.jfree.chart.renderer.AbstractRenderer.ADJ == 0.8660254037844387
org.jfree.chart.renderer.AbstractRenderer.OPP == 0.49999999999999994
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() != org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName()
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() != org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE.getClass().getName()
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() != org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE.getClass().getName()
===========================================================================
org.jfree.chart.renderer.AbstractRenderer:::OBJECT
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == this.basePaint.getClass().getName()
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == this.baseFillPaint.getClass().getName()
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == this.baseOutlinePaint.getClass().getName()
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == this.baseItemLabelPaint.getClass().getName()
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == this.selectedItemAttributes.defaultFillPaint.getClass().getName()
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == this.baseStroke.getClass().getName()
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == this.baseOutlineStroke.getClass().getName()
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE.getClass().getName() == this.baseShape.getClass().getName()
this.seriesVisibleList.objects.getClass().getName() == this.seriesVisibleInLegendList.objects.getClass().getName()
this.seriesVisibleList.objects.getClass().getName() == this.paintList.objects.getClass().getName()
this.seriesVisibleList.objects.getClass().getName() == this.fillPaintList.objects.getClass().getName()
this.seriesVisibleList.objects.getClass().getName() == this.outlinePaintList.objects.getClass().getName()
this.seriesVisibleList.objects.getClass().getName() == this.strokeList.objects.getClass().getName()
this.seriesVisibleList.objects.getClass().getName() == this.outlineStrokeList.objects.getClass().getName()
this.seriesVisibleList.objects.getClass().getName() == this.shapeList.objects.getClass().getName()
this.seriesVisibleList.objects.getClass().getName() == this.itemLabelsVisibleList.objects.getClass().getName()
this.seriesVisibleList.objects.getClass().getName() == this.itemLabelFontList.objects.getClass().getName()
this.seriesVisibleList.objects.getClass().getName() == this.itemLabelPaintList.objects.getClass().getName()
this.seriesVisibleList.objects.getClass().getName() == this.positiveItemLabelPositionList.objects.getClass().getName()
this.seriesVisibleList.objects.getClass().getName() == this.negativeItemLabelPositionList.objects.getClass().getName()
this.seriesVisibleList.objects.getClass().getName() == this.createEntitiesList.objects.getClass().getName()
this.seriesVisibleList.objects.getClass().getName() == this.legendShapeList.objects.getClass().getName()
this.seriesVisibleList.objects.getClass().getName() == this.legendTextFont.objects.getClass().getName()
this.seriesVisibleList.objects.getClass().getName() == this.legendTextPaint.objects.getClass().getName()
this.seriesVisibleList.objects.getClass().getName() == this.selectedItemAttributes.paintList.objects.getClass().getName()
this.seriesVisibleList.objects.getClass().getName() == this.selectedItemAttributes.strokeList.objects.getClass().getName()
this.seriesVisibleList.objects.getClass().getName() == this.selectedItemAttributes.shapeList.objects.getClass().getName()
this.seriesVisibleList.objects.getClass().getName() == this.selectedItemAttributes.fillPaintList.objects.getClass().getName()
this.seriesVisibleList.objects.getClass().getName() == this.selectedItemAttributes.outlinePaintList.objects.getClass().getName()
this has only one value
this.getClass().getName() == org.jfree.chart.renderer.category.LineAndShapeRenderer.class
this.seriesVisibleList has only one value
this.seriesVisibleList != null
this.seriesVisibleList.objects has only one value
this.seriesVisibleList.objects != null
this.seriesVisibleList.objects.getClass().getName() == java.lang.Object[].class
this.seriesVisibleList.objects[] contains only nulls and has only one value, of length 8
this.seriesVisibleList.objects[] elements == null
this.seriesVisibleList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.seriesVisibleList.objects[].getClass().getName() elements == null
this.seriesVisibleList.size == 0
this.seriesVisibleList.increment == 8
this.baseSeriesVisible == true
this.seriesVisibleInLegendList has only one value
this.seriesVisibleInLegendList != null
this.seriesVisibleInLegendList.objects has only one value
this.seriesVisibleInLegendList.objects != null
this.seriesVisibleInLegendList.objects[] contains only nulls and has only one value, of length 8
this.seriesVisibleInLegendList.objects[] elements == null
this.seriesVisibleInLegendList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.seriesVisibleInLegendList.objects[].getClass().getName() elements == null
this.seriesVisibleInLegendList.size == 0
this.seriesVisibleInLegendList.increment == 8
this.baseSeriesVisibleInLegend == true
this.paintList has only one value
this.paintList != null
this.paintList.objects has only one value
this.paintList.objects != null
this.paintList.objects[].getClass().getName() one of { [null, null, null, null, null, null, null, null], [java.awt.Color, null, null, null, null, null, null, null] }
this.paintList.size one of { 0, 1 }
this.paintList.increment == 8
this.autoPopulateSeriesPaint == true
this.basePaint has only one value
this.basePaint != null
this.fillPaintList has only one value
this.fillPaintList != null
this.fillPaintList.objects has only one value
this.fillPaintList.objects != null
this.fillPaintList.objects[] contains only nulls and has only one value, of length 8
this.fillPaintList.objects[] elements == null
this.fillPaintList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.fillPaintList.objects[].getClass().getName() elements == null
this.fillPaintList.size == 0
this.fillPaintList.increment == 8
this.autoPopulateSeriesFillPaint == false
this.baseFillPaint has only one value
this.baseFillPaint != null
this.outlinePaintList has only one value
this.outlinePaintList != null
this.outlinePaintList.objects has only one value
this.outlinePaintList.objects != null
this.outlinePaintList.objects[] contains only nulls and has only one value, of length 8
this.outlinePaintList.objects[] elements == null
this.outlinePaintList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.outlinePaintList.objects[].getClass().getName() elements == null
this.outlinePaintList.size == 0
this.outlinePaintList.increment == 8
this.autoPopulateSeriesOutlinePaint == false
this.baseOutlinePaint has only one value
this.baseOutlinePaint != null
this.strokeList has only one value
this.strokeList != null
this.strokeList.objects has only one value
this.strokeList.objects != null
this.strokeList.objects[].getClass().getName() one of { [null, null, null, null, null, null, null, null], [java.awt.BasicStroke, null, null, null, null, null, null, null] }
this.strokeList.size one of { 0, 1 }
this.strokeList.increment == 8
this.autoPopulateSeriesStroke == true
this.baseStroke has only one value
this.baseStroke != null
this.outlineStrokeList has only one value
this.outlineStrokeList != null
this.outlineStrokeList.objects has only one value
this.outlineStrokeList.objects != null
this.outlineStrokeList.objects[] contains only nulls and has only one value, of length 8
this.outlineStrokeList.objects[] elements == null
this.outlineStrokeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.outlineStrokeList.objects[].getClass().getName() elements == null
this.outlineStrokeList.size == 0
this.outlineStrokeList.increment == 8
this.baseOutlineStroke has only one value
this.baseOutlineStroke != null
this.autoPopulateSeriesOutlineStroke == false
this.shapeList has only one value
this.shapeList != null
this.shapeList.objects has only one value
this.shapeList.objects != null
this.shapeList.objects[].getClass().getName() one of { [null, null, null, null, null, null, null, null], [java.awt.geom.Rectangle2D.Double, null, null, null, null, null, null, null] }
this.shapeList.size one of { 0, 1 }
this.shapeList.increment == 8
this.autoPopulateSeriesShape == true
this.baseShape has only one value
this.baseShape != null
this.itemLabelsVisibleList has only one value
this.itemLabelsVisibleList != null
this.itemLabelsVisibleList.objects has only one value
this.itemLabelsVisibleList.objects != null
this.itemLabelsVisibleList.objects[] contains only nulls and has only one value, of length 8
this.itemLabelsVisibleList.objects[] elements == null
this.itemLabelsVisibleList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.itemLabelsVisibleList.objects[].getClass().getName() elements == null
this.itemLabelsVisibleList.size == 0
this.itemLabelsVisibleList.increment == 8
this.baseItemLabelsVisible == false
this.itemLabelFontList has only one value
this.itemLabelFontList != null
this.itemLabelFontList.objects has only one value
this.itemLabelFontList.objects != null
this.itemLabelFontList.objects[] contains only nulls and has only one value, of length 8
this.itemLabelFontList.objects[] elements == null
this.itemLabelFontList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.itemLabelFontList.objects[].getClass().getName() elements == null
this.itemLabelFontList.size == 0
this.itemLabelFontList.increment == 8
this.baseItemLabelFont has only one value
this.baseItemLabelFont != null
this.itemLabelPaintList has only one value
this.itemLabelPaintList != null
this.itemLabelPaintList.objects has only one value
this.itemLabelPaintList.objects != null
this.itemLabelPaintList.objects[] contains only nulls and has only one value, of length 8
this.itemLabelPaintList.objects[] elements == null
this.itemLabelPaintList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.itemLabelPaintList.objects[].getClass().getName() elements == null
this.itemLabelPaintList.size == 0
this.itemLabelPaintList.increment == 8
this.baseItemLabelPaint has only one value
this.baseItemLabelPaint != null
this.positiveItemLabelPositionList has only one value
this.positiveItemLabelPositionList != null
this.positiveItemLabelPositionList.objects has only one value
this.positiveItemLabelPositionList.objects != null
this.positiveItemLabelPositionList.objects[] contains only nulls and has only one value, of length 8
this.positiveItemLabelPositionList.objects[] elements == null
this.positiveItemLabelPositionList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.positiveItemLabelPositionList.objects[].getClass().getName() elements == null
this.positiveItemLabelPositionList.size == 0
this.positiveItemLabelPositionList.increment == 8
this.basePositiveItemLabelPosition has only one value
this.basePositiveItemLabelPosition != null
this.basePositiveItemLabelPosition.itemLabelAnchor has only one value
this.basePositiveItemLabelPosition.itemLabelAnchor != null
org.jfree.chart.labels.ItemLabelAnchor.CENTER has only one value
org.jfree.chart.labels.ItemLabelAnchor.CENTER != null
org.jfree.chart.labels.ItemLabelAnchor.INSIDE1 has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE1 != null
org.jfree.chart.labels.ItemLabelAnchor.INSIDE2 has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE2 != null
org.jfree.chart.labels.ItemLabelAnchor.INSIDE3 has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE3 != null
org.jfree.chart.labels.ItemLabelAnchor.INSIDE4 has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE4 != null
org.jfree.chart.labels.ItemLabelAnchor.INSIDE5 has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE5 != null
org.jfree.chart.labels.ItemLabelAnchor.INSIDE6 has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE6 != null
org.jfree.chart.labels.ItemLabelAnchor.INSIDE7 has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE7 != null
org.jfree.chart.labels.ItemLabelAnchor.INSIDE8 has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE8 != null
org.jfree.chart.labels.ItemLabelAnchor.INSIDE9 has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE9 != null
org.jfree.chart.labels.ItemLabelAnchor.INSIDE10 has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE10 != null
org.jfree.chart.labels.ItemLabelAnchor.INSIDE11 has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE11 != null
org.jfree.chart.labels.ItemLabelAnchor.INSIDE12 has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE12 != null
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1 has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1 != null
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2 has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2 != null
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3 has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3 != null
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4 has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4 != null
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5 has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5 != null
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6 has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6 != null
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7 has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7 != null
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8 has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8 != null
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9 has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9 != null
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10 has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10 != null
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11 has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11 != null
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12 has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12 != null
this.basePositiveItemLabelPosition.itemLabelAnchor.name has only one value
this.basePositiveItemLabelPosition.itemLabelAnchor.name != null
this.basePositiveItemLabelPosition.itemLabelAnchor.name.toString == "ItemLabelAnchor.OUTSIDE12"
this.basePositiveItemLabelPosition.textAnchor has only one value
this.basePositiveItemLabelPosition.textAnchor != null
org.jfree.chart.text.TextAnchor.TOP_LEFT has only one value
org.jfree.chart.text.TextAnchor.TOP_LEFT != null
org.jfree.chart.text.TextAnchor.TOP_CENTER has only one value
org.jfree.chart.text.TextAnchor.TOP_CENTER != null
org.jfree.chart.text.TextAnchor.TOP_RIGHT has only one value
org.jfree.chart.text.TextAnchor.TOP_RIGHT != null
org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT has only one value
org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT != null
org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER has only one value
org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER != null
org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT has only one value
org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT != null
org.jfree.chart.text.TextAnchor.CENTER_LEFT has only one value
org.jfree.chart.text.TextAnchor.CENTER_LEFT != null
org.jfree.chart.text.TextAnchor.CENTER has only one value
org.jfree.chart.text.TextAnchor.CENTER != null
org.jfree.chart.text.TextAnchor.CENTER_RIGHT has only one value
org.jfree.chart.text.TextAnchor.CENTER_RIGHT != null
org.jfree.chart.text.TextAnchor.BASELINE_LEFT has only one value
org.jfree.chart.text.TextAnchor.BASELINE_LEFT != null
org.jfree.chart.text.TextAnchor.BASELINE_CENTER has only one value
org.jfree.chart.text.TextAnchor.BASELINE_CENTER != null
org.jfree.chart.text.TextAnchor.BASELINE_RIGHT has only one value
org.jfree.chart.text.TextAnchor.BASELINE_RIGHT != null
org.jfree.chart.text.TextAnchor.BOTTOM_LEFT has only one value
org.jfree.chart.text.TextAnchor.BOTTOM_LEFT != null
org.jfree.chart.text.TextAnchor.BOTTOM_CENTER has only one value
org.jfree.chart.text.TextAnchor.BOTTOM_CENTER != null
org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT has only one value
org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT != null
this.basePositiveItemLabelPosition.textAnchor.name has only one value
this.basePositiveItemLabelPosition.textAnchor.name != null
this.basePositiveItemLabelPosition.textAnchor.name.toString == "TextAnchor.BOTTOM_CENTER"
this.basePositiveItemLabelPosition.rotationAnchor has only one value
this.basePositiveItemLabelPosition.rotationAnchor != null
this.basePositiveItemLabelPosition.rotationAnchor.name has only one value
this.basePositiveItemLabelPosition.rotationAnchor.name != null
this.basePositiveItemLabelPosition.rotationAnchor.name.toString == "TextAnchor.CENTER"
this.basePositiveItemLabelPosition.angle == 0.0
this.negativeItemLabelPositionList has only one value
this.negativeItemLabelPositionList != null
this.negativeItemLabelPositionList.objects has only one value
this.negativeItemLabelPositionList.objects != null
this.negativeItemLabelPositionList.objects[] contains only nulls and has only one value, of length 8
this.negativeItemLabelPositionList.objects[] elements == null
this.negativeItemLabelPositionList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.negativeItemLabelPositionList.objects[].getClass().getName() elements == null
this.negativeItemLabelPositionList.size == 0
this.negativeItemLabelPositionList.increment == 8
this.baseNegativeItemLabelPosition has only one value
this.baseNegativeItemLabelPosition != null
this.baseNegativeItemLabelPosition.itemLabelAnchor has only one value
this.baseNegativeItemLabelPosition.itemLabelAnchor != null
this.baseNegativeItemLabelPosition.itemLabelAnchor.name has only one value
this.baseNegativeItemLabelPosition.itemLabelAnchor.name != null
this.baseNegativeItemLabelPosition.itemLabelAnchor.name.toString == "ItemLabelAnchor.OUTSIDE6"
this.baseNegativeItemLabelPosition.textAnchor has only one value
this.baseNegativeItemLabelPosition.textAnchor != null
this.baseNegativeItemLabelPosition.textAnchor.name has only one value
this.baseNegativeItemLabelPosition.textAnchor.name != null
this.baseNegativeItemLabelPosition.textAnchor.name.toString == "TextAnchor.TOP_CENTER"
this.baseNegativeItemLabelPosition.rotationAnchor has only one value
this.baseNegativeItemLabelPosition.rotationAnchor != null
this.baseNegativeItemLabelPosition.rotationAnchor.name has only one value
this.baseNegativeItemLabelPosition.rotationAnchor.name != null
this.baseNegativeItemLabelPosition.rotationAnchor.name.toString == "TextAnchor.CENTER"
this.baseNegativeItemLabelPosition.angle == 0.0
this.itemLabelAnchorOffset == 2.0
this.createEntitiesList has only one value
this.createEntitiesList != null
this.createEntitiesList.objects has only one value
this.createEntitiesList.objects != null
this.createEntitiesList.objects[] contains only nulls and has only one value, of length 8
this.createEntitiesList.objects[] elements == null
this.createEntitiesList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.createEntitiesList.objects[].getClass().getName() elements == null
this.createEntitiesList.size == 0
this.createEntitiesList.increment == 8
this.baseCreateEntities == true
this.legendShapeList has only one value
this.legendShapeList != null
this.legendShapeList.objects has only one value
this.legendShapeList.objects != null
this.legendShapeList.objects[] contains only nulls and has only one value, of length 8
this.legendShapeList.objects[] elements == null
this.legendShapeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.legendShapeList.objects[].getClass().getName() elements == null
this.legendShapeList.size == 0
this.legendShapeList.increment == 8
this.baseLegendShape == null
this.treatLegendShapeAsLine == false
this.legendTextFont has only one value
this.legendTextFont != null
this.legendTextFont.objects has only one value
this.legendTextFont.objects != null
this.legendTextFont.objects[] contains only nulls and has only one value, of length 8
this.legendTextFont.objects[] elements == null
this.legendTextFont.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.legendTextFont.objects[].getClass().getName() elements == null
this.legendTextFont.size == 0
this.legendTextFont.increment == 8
this.baseLegendTextFont == null
this.legendTextPaint has only one value
this.legendTextPaint != null
this.legendTextPaint.objects has only one value
this.legendTextPaint.objects != null
this.legendTextPaint.objects[] contains only nulls and has only one value, of length 8
this.legendTextPaint.objects[] elements == null
this.legendTextPaint.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.legendTextPaint.objects[].getClass().getName() elements == null
this.legendTextPaint.size == 0
this.legendTextPaint.increment == 8
this.baseLegendTextPaint == null
this.dataBoundsIncludesVisibleSeriesOnly == true
this.defaultEntityRadius == 3
this.listenerList has only one value
this.listenerList != null
this.selectedItemAttributes has only one value
this.selectedItemAttributes != null
this.selectedItemAttributes.allowNull == false
this.selectedItemAttributes.paintList has only one value
this.selectedItemAttributes.paintList != null
this.selectedItemAttributes.paintList.objects has only one value
this.selectedItemAttributes.paintList.objects != null
this.selectedItemAttributes.paintList.objects[] contains only nulls and has only one value, of length 8
this.selectedItemAttributes.paintList.objects[] elements == null
this.selectedItemAttributes.paintList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.selectedItemAttributes.paintList.objects[].getClass().getName() elements == null
this.selectedItemAttributes.paintList.size == 0
this.selectedItemAttributes.paintList.increment == 8
this.selectedItemAttributes.defaultPaint == null
this.selectedItemAttributes.strokeList has only one value
this.selectedItemAttributes.strokeList != null
this.selectedItemAttributes.strokeList.objects has only one value
this.selectedItemAttributes.strokeList.objects != null
this.selectedItemAttributes.strokeList.objects[] contains only nulls and has only one value, of length 8
this.selectedItemAttributes.strokeList.objects[] elements == null
this.selectedItemAttributes.strokeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.selectedItemAttributes.strokeList.objects[].getClass().getName() elements == null
this.selectedItemAttributes.strokeList.size == 0
this.selectedItemAttributes.strokeList.increment == 8
this.selectedItemAttributes.defaultStroke == null
this.selectedItemAttributes.shapeList has only one value
this.selectedItemAttributes.shapeList != null
this.selectedItemAttributes.shapeList.objects has only one value
this.selectedItemAttributes.shapeList.objects != null
this.selectedItemAttributes.shapeList.objects[] contains only nulls and has only one value, of length 8
this.selectedItemAttributes.shapeList.objects[] elements == null
this.selectedItemAttributes.shapeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.selectedItemAttributes.shapeList.objects[].getClass().getName() elements == null
this.selectedItemAttributes.shapeList.size == 0
this.selectedItemAttributes.shapeList.increment == 8
this.selectedItemAttributes.defaultShape == null
this.selectedItemAttributes.fillPaintList has only one value
this.selectedItemAttributes.fillPaintList != null
this.selectedItemAttributes.fillPaintList.objects has only one value
this.selectedItemAttributes.fillPaintList.objects != null
this.selectedItemAttributes.fillPaintList.objects[] contains only nulls and has only one value, of length 8
this.selectedItemAttributes.fillPaintList.objects[] elements == null
this.selectedItemAttributes.fillPaintList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.selectedItemAttributes.fillPaintList.objects[].getClass().getName() elements == null
this.selectedItemAttributes.fillPaintList.size == 0
this.selectedItemAttributes.fillPaintList.increment == 8
this.selectedItemAttributes.defaultFillPaint has only one value
this.selectedItemAttributes.defaultFillPaint != null
this.selectedItemAttributes.outlinePaintList has only one value
this.selectedItemAttributes.outlinePaintList != null
this.selectedItemAttributes.outlinePaintList.objects has only one value
this.selectedItemAttributes.outlinePaintList.objects != null
this.selectedItemAttributes.outlinePaintList.objects[] contains only nulls and has only one value, of length 8
this.selectedItemAttributes.outlinePaintList.objects[] elements == null
this.selectedItemAttributes.outlinePaintList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.selectedItemAttributes.outlinePaintList.objects[].getClass().getName() elements == null
this.selectedItemAttributes.outlinePaintList.size == 0
this.selectedItemAttributes.outlinePaintList.increment == 8
this.selectedItemAttributes.defaultOutlinePaint == null
this.selectedItemAttributes.outlineStrokeList == null
this.selectedItemAttributes.defaultOutlineStroke == null
this.selectedItemAttributes.labelsVisibleList == null
this.selectedItemAttributes.defaultLabelVisible == null
this.selectedItemAttributes.labelFontList == null
this.selectedItemAttributes.defaultLabelFont == null
this.selectedItemAttributes.labelPaintList == null
this.selectedItemAttributes.defaultLabelPaint == null
this.selectedItemAttributes.positionItemLabelPositionList == null
this.selectedItemAttributes.defaultPositiveItemLabelPosition == null
this.selectedItemAttributes.negativeItemLabelPositionList == null
this.selectedItemAttributes.defaultNegativeItemLabelPosition == null
this.selectedItemAttributes.createEntityList == null
this.selectedItemAttributes.defaultCreateEntity == null
size(this.seriesVisibleList.objects[]) == 8
size(this.seriesVisibleInLegendList.objects[]) == 8
size(this.paintList.objects[]) == 8
size(this.fillPaintList.objects[]) == 8
size(this.outlinePaintList.objects[]) == 8
size(this.strokeList.objects[]) == 8
size(this.outlineStrokeList.objects[]) == 8
size(this.shapeList.objects[]) == 8
size(this.itemLabelsVisibleList.objects[]) == 8
size(this.itemLabelFontList.objects[]) == 8
size(this.itemLabelPaintList.objects[]) == 8
size(this.positiveItemLabelPositionList.objects[]) == 8
size(this.negativeItemLabelPositionList.objects[]) == 8
size(this.createEntitiesList.objects[]) == 8
size(this.legendShapeList.objects[]) == 8
size(this.legendTextFont.objects[]) == 8
size(this.legendTextPaint.objects[]) == 8
size(this.selectedItemAttributes.paintList.objects[]) == 8
size(this.selectedItemAttributes.strokeList.objects[]) == 8
size(this.selectedItemAttributes.shapeList.objects[]) == 8
size(this.selectedItemAttributes.fillPaintList.objects[]) == 8
size(this.selectedItemAttributes.outlinePaintList.objects[]) == 8
this.getClass().getName() != org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName()
this.getClass().getName() != org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName()
this.getClass().getName() != org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE.getClass().getName()
this.getClass().getName() != this.seriesVisibleList.objects.getClass().getName()
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() != this.seriesVisibleList.objects.getClass().getName()
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() != this.seriesVisibleList.objects.getClass().getName()
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE.getClass().getName() != this.seriesVisibleList.objects.getClass().getName()
===========================================================================
org.jfree.chart.renderer.AbstractRenderer.AbstractRenderer():::EXIT
this.paintList.objects[] contains only nulls and has only one value, of length 8
this.paintList.objects[] elements == null
this.paintList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.paintList.objects[].getClass().getName() elements == null
this.paintList.size == 0
this.strokeList.objects[] contains only nulls and has only one value, of length 8
this.strokeList.objects[] elements == null
this.strokeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.strokeList.objects[].getClass().getName() elements == null
this.strokeList.size == 0
this.shapeList.objects[] contains only nulls and has only one value, of length 8
this.shapeList.objects[] elements == null
this.shapeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.shapeList.objects[].getClass().getName() elements == null
this.shapeList.size == 0
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener == null
===========================================================================
org.jfree.chart.renderer.AbstractRenderer.addChangeListener(org.jfree.chart.event.RendererChangeListener):::ENTER
this.paintList.objects[] contains only nulls and has only one value, of length 8
this.paintList.objects[] elements == null
this.paintList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.paintList.objects[].getClass().getName() elements == null
this.paintList.size == 0
this.strokeList.objects[] contains only nulls and has only one value, of length 8
this.strokeList.objects[] elements == null
this.strokeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.strokeList.objects[].getClass().getName() elements == null
this.strokeList.size == 0
this.shapeList.objects[] contains only nulls and has only one value, of length 8
this.shapeList.objects[] elements == null
this.shapeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.shapeList.objects[].getClass().getName() elements == null
this.shapeList.size == 0
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener == null
listener has only one value
listener.getClass().getName() == org.jfree.chart.plot.CategoryPlot.class
===========================================================================
org.jfree.chart.renderer.AbstractRenderer.addChangeListener(org.jfree.chart.event.RendererChangeListener):::EXIT
org.jfree.chart.renderer.AbstractRenderer.ZERO == orig(org.jfree.chart.renderer.AbstractRenderer.ZERO)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(this.basePaint.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(this.baseFillPaint.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(this.baseOutlinePaint.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(this.baseItemLabelPaint.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(this.selectedItemAttributes.defaultFillPaint.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == orig(this.baseStroke.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == orig(this.baseOutlineStroke.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE.getClass().getName() == orig(this.baseShape.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_FONT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_FONT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT)
this.seriesVisibleList == orig(this.seriesVisibleList)
this.seriesVisibleList.objects == orig(this.seriesVisibleList.objects)
this.seriesVisibleList.objects.getClass().getName() == orig(this.seriesVisibleList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.seriesVisibleInLegendList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.paintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.fillPaintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.outlinePaintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.strokeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.outlineStrokeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.shapeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.itemLabelsVisibleList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.itemLabelFontList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.itemLabelPaintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.positiveItemLabelPositionList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.negativeItemLabelPositionList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.createEntitiesList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.legendShapeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.legendTextFont.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.legendTextPaint.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.selectedItemAttributes.paintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.selectedItemAttributes.strokeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.selectedItemAttributes.shapeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.selectedItemAttributes.fillPaintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.selectedItemAttributes.outlinePaintList.objects.getClass().getName())
this.seriesVisibleList.objects[] == orig(this.seriesVisibleList.objects[])
this.seriesVisibleList.size == orig(this.seriesVisibleList.size)
this.seriesVisibleList.increment == orig(this.seriesVisibleList.increment)
this.baseSeriesVisible == orig(this.baseSeriesVisible)
this.seriesVisibleInLegendList == orig(this.seriesVisibleInLegendList)
this.seriesVisibleInLegendList.objects == orig(this.seriesVisibleInLegendList.objects)
this.seriesVisibleInLegendList.objects[] == orig(this.seriesVisibleInLegendList.objects[])
this.seriesVisibleInLegendList.size == orig(this.seriesVisibleInLegendList.size)
this.seriesVisibleInLegendList.increment == orig(this.seriesVisibleInLegendList.increment)
this.baseSeriesVisibleInLegend == orig(this.baseSeriesVisibleInLegend)
this.paintList == orig(this.paintList)
this.paintList.objects == orig(this.paintList.objects)
this.paintList.objects[] == orig(this.paintList.objects[])
this.paintList.size == orig(this.paintList.size)
this.paintList.increment == orig(this.paintList.increment)
this.autoPopulateSeriesPaint == orig(this.autoPopulateSeriesPaint)
this.basePaint == orig(this.basePaint)
this.fillPaintList == orig(this.fillPaintList)
this.fillPaintList.objects == orig(this.fillPaintList.objects)
this.fillPaintList.objects[] == orig(this.fillPaintList.objects[])
this.fillPaintList.size == orig(this.fillPaintList.size)
this.fillPaintList.increment == orig(this.fillPaintList.increment)
this.autoPopulateSeriesFillPaint == orig(this.autoPopulateSeriesFillPaint)
this.baseFillPaint == orig(this.baseFillPaint)
this.outlinePaintList == orig(this.outlinePaintList)
this.outlinePaintList.objects == orig(this.outlinePaintList.objects)
this.outlinePaintList.objects[] == orig(this.outlinePaintList.objects[])
this.outlinePaintList.size == orig(this.outlinePaintList.size)
this.outlinePaintList.increment == orig(this.outlinePaintList.increment)
this.autoPopulateSeriesOutlinePaint == orig(this.autoPopulateSeriesOutlinePaint)
this.baseOutlinePaint == orig(this.baseOutlinePaint)
this.strokeList == orig(this.strokeList)
this.strokeList.objects == orig(this.strokeList.objects)
this.strokeList.objects[] == orig(this.strokeList.objects[])
this.strokeList.size == orig(this.strokeList.size)
this.strokeList.increment == orig(this.strokeList.increment)
this.autoPopulateSeriesStroke == orig(this.autoPopulateSeriesStroke)
this.baseStroke == orig(this.baseStroke)
this.outlineStrokeList == orig(this.outlineStrokeList)
this.outlineStrokeList.objects == orig(this.outlineStrokeList.objects)
this.outlineStrokeList.objects[] == orig(this.outlineStrokeList.objects[])
this.outlineStrokeList.size == orig(this.outlineStrokeList.size)
this.outlineStrokeList.increment == orig(this.outlineStrokeList.increment)
this.baseOutlineStroke == orig(this.baseOutlineStroke)
this.autoPopulateSeriesOutlineStroke == orig(this.autoPopulateSeriesOutlineStroke)
this.shapeList == orig(this.shapeList)
this.shapeList.objects == orig(this.shapeList.objects)
this.shapeList.objects[] == orig(this.shapeList.objects[])
this.shapeList.size == orig(this.shapeList.size)
this.shapeList.increment == orig(this.shapeList.increment)
this.autoPopulateSeriesShape == orig(this.autoPopulateSeriesShape)
this.baseShape == orig(this.baseShape)
this.itemLabelsVisibleList == orig(this.itemLabelsVisibleList)
this.itemLabelsVisibleList.objects == orig(this.itemLabelsVisibleList.objects)
this.itemLabelsVisibleList.objects[] == orig(this.itemLabelsVisibleList.objects[])
this.itemLabelsVisibleList.size == orig(this.itemLabelsVisibleList.size)
this.itemLabelsVisibleList.increment == orig(this.itemLabelsVisibleList.increment)
this.baseItemLabelsVisible == orig(this.baseItemLabelsVisible)
this.itemLabelFontList == orig(this.itemLabelFontList)
this.itemLabelFontList.objects == orig(this.itemLabelFontList.objects)
this.itemLabelFontList.objects[] == orig(this.itemLabelFontList.objects[])
this.itemLabelFontList.size == orig(this.itemLabelFontList.size)
this.itemLabelFontList.increment == orig(this.itemLabelFontList.increment)
this.baseItemLabelFont == orig(this.baseItemLabelFont)
this.itemLabelPaintList == orig(this.itemLabelPaintList)
this.itemLabelPaintList.objects == orig(this.itemLabelPaintList.objects)
this.itemLabelPaintList.objects[] == orig(this.itemLabelPaintList.objects[])
this.itemLabelPaintList.size == orig(this.itemLabelPaintList.size)
this.itemLabelPaintList.increment == orig(this.itemLabelPaintList.increment)
this.baseItemLabelPaint == orig(this.baseItemLabelPaint)
this.positiveItemLabelPositionList == orig(this.positiveItemLabelPositionList)
this.positiveItemLabelPositionList.objects == orig(this.positiveItemLabelPositionList.objects)
this.positiveItemLabelPositionList.objects[] == orig(this.positiveItemLabelPositionList.objects[])
this.positiveItemLabelPositionList.size == orig(this.positiveItemLabelPositionList.size)
this.positiveItemLabelPositionList.increment == orig(this.positiveItemLabelPositionList.increment)
this.basePositiveItemLabelPosition == orig(this.basePositiveItemLabelPosition)
this.basePositiveItemLabelPosition.itemLabelAnchor == orig(this.basePositiveItemLabelPosition.itemLabelAnchor)
org.jfree.chart.labels.ItemLabelAnchor.CENTER == orig(org.jfree.chart.labels.ItemLabelAnchor.CENTER)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE1 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE1)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE2 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE2)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE3 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE3)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE4 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE4)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE5 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE5)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE6 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE6)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE7 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE7)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE8 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE8)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE9 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE9)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE10 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE10)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE11 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE11)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE12 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE12)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12)
this.basePositiveItemLabelPosition.itemLabelAnchor.name == orig(this.basePositiveItemLabelPosition.itemLabelAnchor.name)
this.basePositiveItemLabelPosition.itemLabelAnchor.name.toString == orig(this.basePositiveItemLabelPosition.itemLabelAnchor.name.toString)
this.basePositiveItemLabelPosition.textAnchor == orig(this.basePositiveItemLabelPosition.textAnchor)
org.jfree.chart.text.TextAnchor.TOP_LEFT == orig(org.jfree.chart.text.TextAnchor.TOP_LEFT)
org.jfree.chart.text.TextAnchor.TOP_CENTER == orig(org.jfree.chart.text.TextAnchor.TOP_CENTER)
org.jfree.chart.text.TextAnchor.TOP_RIGHT == orig(org.jfree.chart.text.TextAnchor.TOP_RIGHT)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT)
org.jfree.chart.text.TextAnchor.CENTER_LEFT == orig(org.jfree.chart.text.TextAnchor.CENTER_LEFT)
org.jfree.chart.text.TextAnchor.CENTER == orig(org.jfree.chart.text.TextAnchor.CENTER)
org.jfree.chart.text.TextAnchor.CENTER_RIGHT == orig(org.jfree.chart.text.TextAnchor.CENTER_RIGHT)
org.jfree.chart.text.TextAnchor.BASELINE_LEFT == orig(org.jfree.chart.text.TextAnchor.BASELINE_LEFT)
org.jfree.chart.text.TextAnchor.BASELINE_CENTER == orig(org.jfree.chart.text.TextAnchor.BASELINE_CENTER)
org.jfree.chart.text.TextAnchor.BASELINE_RIGHT == orig(org.jfree.chart.text.TextAnchor.BASELINE_RIGHT)
org.jfree.chart.text.TextAnchor.BOTTOM_LEFT == orig(org.jfree.chart.text.TextAnchor.BOTTOM_LEFT)
org.jfree.chart.text.TextAnchor.BOTTOM_CENTER == orig(org.jfree.chart.text.TextAnchor.BOTTOM_CENTER)
org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT == orig(org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT)
this.basePositiveItemLabelPosition.textAnchor.name == orig(this.basePositiveItemLabelPosition.textAnchor.name)
this.basePositiveItemLabelPosition.textAnchor.name.toString == orig(this.basePositiveItemLabelPosition.textAnchor.name.toString)
this.basePositiveItemLabelPosition.rotationAnchor == orig(this.basePositiveItemLabelPosition.rotationAnchor)
this.basePositiveItemLabelPosition.rotationAnchor.name == orig(this.basePositiveItemLabelPosition.rotationAnchor.name)
this.basePositiveItemLabelPosition.rotationAnchor.name.toString == orig(this.basePositiveItemLabelPosition.rotationAnchor.name.toString)
this.basePositiveItemLabelPosition.angle == orig(this.basePositiveItemLabelPosition.angle)
this.negativeItemLabelPositionList == orig(this.negativeItemLabelPositionList)
this.negativeItemLabelPositionList.objects == orig(this.negativeItemLabelPositionList.objects)
this.negativeItemLabelPositionList.objects[] == orig(this.negativeItemLabelPositionList.objects[])
this.negativeItemLabelPositionList.size == orig(this.negativeItemLabelPositionList.size)
this.negativeItemLabelPositionList.increment == orig(this.negativeItemLabelPositionList.increment)
this.baseNegativeItemLabelPosition == orig(this.baseNegativeItemLabelPosition)
this.baseNegativeItemLabelPosition.itemLabelAnchor == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor)
this.baseNegativeItemLabelPosition.itemLabelAnchor.name == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor.name)
this.baseNegativeItemLabelPosition.itemLabelAnchor.name.toString == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor.name.toString)
this.baseNegativeItemLabelPosition.textAnchor == orig(this.baseNegativeItemLabelPosition.textAnchor)
this.baseNegativeItemLabelPosition.textAnchor.name == orig(this.baseNegativeItemLabelPosition.textAnchor.name)
this.baseNegativeItemLabelPosition.textAnchor.name.toString == orig(this.baseNegativeItemLabelPosition.textAnchor.name.toString)
this.baseNegativeItemLabelPosition.rotationAnchor == orig(this.baseNegativeItemLabelPosition.rotationAnchor)
this.baseNegativeItemLabelPosition.rotationAnchor.name == orig(this.baseNegativeItemLabelPosition.rotationAnchor.name)
this.baseNegativeItemLabelPosition.rotationAnchor.name.toString == orig(this.baseNegativeItemLabelPosition.rotationAnchor.name.toString)
this.baseNegativeItemLabelPosition.angle == orig(this.baseNegativeItemLabelPosition.angle)
this.itemLabelAnchorOffset == orig(this.itemLabelAnchorOffset)
this.createEntitiesList == orig(this.createEntitiesList)
this.createEntitiesList.objects == orig(this.createEntitiesList.objects)
this.createEntitiesList.objects[] == orig(this.createEntitiesList.objects[])
this.createEntitiesList.size == orig(this.createEntitiesList.size)
this.createEntitiesList.increment == orig(this.createEntitiesList.increment)
this.baseCreateEntities == orig(this.baseCreateEntities)
this.legendShapeList == orig(this.legendShapeList)
this.legendShapeList.objects == orig(this.legendShapeList.objects)
this.legendShapeList.objects[] == orig(this.legendShapeList.objects[])
this.legendShapeList.size == orig(this.legendShapeList.size)
this.legendShapeList.increment == orig(this.legendShapeList.increment)
this.baseLegendShape == orig(this.baseLegendShape)
this.treatLegendShapeAsLine == orig(this.treatLegendShapeAsLine)
this.legendTextFont == orig(this.legendTextFont)
this.legendTextFont.objects == orig(this.legendTextFont.objects)
this.legendTextFont.objects[] == orig(this.legendTextFont.objects[])
this.legendTextFont.size == orig(this.legendTextFont.size)
this.legendTextFont.increment == orig(this.legendTextFont.increment)
this.baseLegendTextFont == orig(this.baseLegendTextFont)
this.legendTextPaint == orig(this.legendTextPaint)
this.legendTextPaint.objects == orig(this.legendTextPaint.objects)
this.legendTextPaint.objects[] == orig(this.legendTextPaint.objects[])
this.legendTextPaint.size == orig(this.legendTextPaint.size)
this.legendTextPaint.increment == orig(this.legendTextPaint.increment)
this.baseLegendTextPaint == orig(this.baseLegendTextPaint)
this.dataBoundsIncludesVisibleSeriesOnly == orig(this.dataBoundsIncludesVisibleSeriesOnly)
this.defaultEntityRadius == orig(this.defaultEntityRadius)
this.listenerList == orig(this.listenerList)
this.selectedItemAttributes == orig(this.selectedItemAttributes)
this.selectedItemAttributes.allowNull == orig(this.selectedItemAttributes.allowNull)
this.selectedItemAttributes.paintList == orig(this.selectedItemAttributes.paintList)
this.selectedItemAttributes.paintList.objects == orig(this.selectedItemAttributes.paintList.objects)
this.selectedItemAttributes.paintList.objects[] == orig(this.selectedItemAttributes.paintList.objects[])
this.selectedItemAttributes.paintList.size == orig(this.selectedItemAttributes.paintList.size)
this.selectedItemAttributes.paintList.increment == orig(this.selectedItemAttributes.paintList.increment)
this.selectedItemAttributes.defaultPaint == orig(this.selectedItemAttributes.defaultPaint)
this.selectedItemAttributes.strokeList == orig(this.selectedItemAttributes.strokeList)
this.selectedItemAttributes.strokeList.objects == orig(this.selectedItemAttributes.strokeList.objects)
this.selectedItemAttributes.strokeList.objects[] == orig(this.selectedItemAttributes.strokeList.objects[])
this.selectedItemAttributes.strokeList.size == orig(this.selectedItemAttributes.strokeList.size)
this.selectedItemAttributes.strokeList.increment == orig(this.selectedItemAttributes.strokeList.increment)
this.selectedItemAttributes.defaultStroke == orig(this.selectedItemAttributes.defaultStroke)
this.selectedItemAttributes.shapeList == orig(this.selectedItemAttributes.shapeList)
this.selectedItemAttributes.shapeList.objects == orig(this.selectedItemAttributes.shapeList.objects)
this.selectedItemAttributes.shapeList.objects[] == orig(this.selectedItemAttributes.shapeList.objects[])
this.selectedItemAttributes.shapeList.size == orig(this.selectedItemAttributes.shapeList.size)
this.selectedItemAttributes.shapeList.increment == orig(this.selectedItemAttributes.shapeList.increment)
this.selectedItemAttributes.defaultShape == orig(this.selectedItemAttributes.defaultShape)
this.selectedItemAttributes.fillPaintList == orig(this.selectedItemAttributes.fillPaintList)
this.selectedItemAttributes.fillPaintList.objects == orig(this.selectedItemAttributes.fillPaintList.objects)
this.selectedItemAttributes.fillPaintList.objects[] == orig(this.selectedItemAttributes.fillPaintList.objects[])
this.selectedItemAttributes.fillPaintList.size == orig(this.selectedItemAttributes.fillPaintList.size)
this.selectedItemAttributes.fillPaintList.increment == orig(this.selectedItemAttributes.fillPaintList.increment)
this.selectedItemAttributes.defaultFillPaint == orig(this.selectedItemAttributes.defaultFillPaint)
this.selectedItemAttributes.outlinePaintList == orig(this.selectedItemAttributes.outlinePaintList)
this.selectedItemAttributes.outlinePaintList.objects == orig(this.selectedItemAttributes.outlinePaintList.objects)
this.selectedItemAttributes.outlinePaintList.objects[] == orig(this.selectedItemAttributes.outlinePaintList.objects[])
this.selectedItemAttributes.outlinePaintList.size == orig(this.selectedItemAttributes.outlinePaintList.size)
this.selectedItemAttributes.outlinePaintList.increment == orig(this.selectedItemAttributes.outlinePaintList.increment)
this.selectedItemAttributes.defaultOutlinePaint == orig(this.selectedItemAttributes.defaultOutlinePaint)
this.selectedItemAttributes.outlineStrokeList == orig(this.selectedItemAttributes.outlineStrokeList)
this.selectedItemAttributes.defaultOutlineStroke == orig(this.selectedItemAttributes.defaultOutlineStroke)
this.selectedItemAttributes.labelsVisibleList == orig(this.selectedItemAttributes.labelsVisibleList)
this.selectedItemAttributes.defaultLabelVisible == orig(this.selectedItemAttributes.defaultLabelVisible)
this.selectedItemAttributes.labelFontList == orig(this.selectedItemAttributes.labelFontList)
this.selectedItemAttributes.defaultLabelFont == orig(this.selectedItemAttributes.defaultLabelFont)
this.selectedItemAttributes.labelPaintList == orig(this.selectedItemAttributes.labelPaintList)
this.selectedItemAttributes.defaultLabelPaint == orig(this.selectedItemAttributes.defaultLabelPaint)
this.selectedItemAttributes.positionItemLabelPositionList == orig(this.selectedItemAttributes.positionItemLabelPositionList)
this.selectedItemAttributes.defaultPositiveItemLabelPosition == orig(this.selectedItemAttributes.defaultPositiveItemLabelPosition)
this.selectedItemAttributes.negativeItemLabelPositionList == orig(this.selectedItemAttributes.negativeItemLabelPositionList)
this.selectedItemAttributes.defaultNegativeItemLabelPosition == orig(this.selectedItemAttributes.defaultNegativeItemLabelPosition)
this.selectedItemAttributes.createEntityList == orig(this.selectedItemAttributes.createEntityList)
this.selectedItemAttributes.defaultCreateEntity == orig(this.selectedItemAttributes.defaultCreateEntity)
org.jfree.chart.renderer.AbstractRenderer.ADJ == orig(org.jfree.chart.renderer.AbstractRenderer.ADJ)
org.jfree.chart.renderer.AbstractRenderer.OPP == orig(org.jfree.chart.renderer.AbstractRenderer.OPP)
this.paintList.objects[] contains only nulls and has only one value, of length 8
this.paintList.objects[] elements == null
this.paintList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.paintList.objects[].getClass().getName() elements == null
this.paintList.size == 0
this.strokeList.objects[] contains only nulls and has only one value, of length 8
this.strokeList.objects[] elements == null
this.strokeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.strokeList.objects[].getClass().getName() elements == null
this.strokeList.size == 0
this.shapeList.objects[] contains only nulls and has only one value, of length 8
this.shapeList.objects[] elements == null
this.shapeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.shapeList.objects[].getClass().getName() elements == null
this.shapeList.size == 0
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener has only one value
===========================================================================
org.jfree.chart.renderer.AbstractRenderer.class$(java.lang.String):::ENTER
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener == null
x0 has only one value
x0.toString == "org.jfree.chart.event.RendererChangeListener"
===========================================================================
org.jfree.chart.renderer.AbstractRenderer.class$(java.lang.String):::EXIT
org.jfree.chart.renderer.AbstractRenderer.ZERO == orig(org.jfree.chart.renderer.AbstractRenderer.ZERO)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_FONT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_FONT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT)
org.jfree.chart.renderer.AbstractRenderer.ADJ == orig(org.jfree.chart.renderer.AbstractRenderer.ADJ)
org.jfree.chart.renderer.AbstractRenderer.OPP == orig(org.jfree.chart.renderer.AbstractRenderer.OPP)
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener == orig(org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener)
x0.toString == orig(x0.toString)
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener == null
x0.toString == "org.jfree.chart.event.RendererChangeListener"
return has only one value
===========================================================================
org.jfree.chart.renderer.AbstractRenderer.getItemPaint(int, int, boolean):::ENTER
this.paintList.objects[] has only one value, of length 8
this.paintList.objects[].getClass().getName() == [java.awt.Color, null, null, null, null, null, null, null]
this.paintList.size == 1
this.strokeList.objects[] has only one value, of length 8
this.strokeList.objects[].getClass().getName() == [java.awt.BasicStroke, null, null, null, null, null, null, null]
this.strokeList.size == 1
this.shapeList.objects[] has only one value, of length 8
this.shapeList.objects[].getClass().getName() == [java.awt.geom.Rectangle2D.Double, null, null, null, null, null, null, null]
this.shapeList.size == 1
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener has only one value
series == 0
item == 0
selected == false
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() in this.paintList.objects[].getClass().getName()
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() in this.strokeList.objects[].getClass().getName()
===========================================================================
org.jfree.chart.renderer.AbstractRenderer.getItemPaint(int, int, boolean):::EXIT
org.jfree.chart.renderer.AbstractRenderer.ZERO == orig(org.jfree.chart.renderer.AbstractRenderer.ZERO)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == return.getClass().getName()
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(this.basePaint.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(this.baseFillPaint.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(this.baseOutlinePaint.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(this.baseItemLabelPaint.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(this.selectedItemAttributes.defaultFillPaint.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == orig(this.baseStroke.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == orig(this.baseOutlineStroke.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE.getClass().getName() == orig(this.baseShape.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_FONT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_FONT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT)
this.seriesVisibleList == orig(this.seriesVisibleList)
this.seriesVisibleList.objects == orig(this.seriesVisibleList.objects)
this.seriesVisibleList.objects.getClass().getName() == orig(this.seriesVisibleList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.seriesVisibleInLegendList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.paintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.fillPaintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.outlinePaintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.strokeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.outlineStrokeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.shapeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.itemLabelsVisibleList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.itemLabelFontList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.itemLabelPaintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.positiveItemLabelPositionList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.negativeItemLabelPositionList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.createEntitiesList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.legendShapeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.legendTextFont.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.legendTextPaint.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.selectedItemAttributes.paintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.selectedItemAttributes.strokeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.selectedItemAttributes.shapeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.selectedItemAttributes.fillPaintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.selectedItemAttributes.outlinePaintList.objects.getClass().getName())
this.seriesVisibleList.objects[] == orig(this.seriesVisibleList.objects[])
this.seriesVisibleList.size == orig(this.seriesVisibleList.size)
this.seriesVisibleList.increment == orig(this.seriesVisibleList.increment)
this.baseSeriesVisible == orig(this.baseSeriesVisible)
this.seriesVisibleInLegendList == orig(this.seriesVisibleInLegendList)
this.seriesVisibleInLegendList.objects == orig(this.seriesVisibleInLegendList.objects)
this.seriesVisibleInLegendList.objects[] == orig(this.seriesVisibleInLegendList.objects[])
this.seriesVisibleInLegendList.size == orig(this.seriesVisibleInLegendList.size)
this.seriesVisibleInLegendList.increment == orig(this.seriesVisibleInLegendList.increment)
this.baseSeriesVisibleInLegend == orig(this.baseSeriesVisibleInLegend)
this.paintList == orig(this.paintList)
this.paintList.objects == orig(this.paintList.objects)
this.paintList.objects[] == orig(this.paintList.objects[])
this.paintList.size == orig(this.paintList.size)
this.paintList.increment == orig(this.paintList.increment)
this.autoPopulateSeriesPaint == orig(this.autoPopulateSeriesPaint)
this.basePaint == orig(this.basePaint)
this.fillPaintList == orig(this.fillPaintList)
this.fillPaintList.objects == orig(this.fillPaintList.objects)
this.fillPaintList.objects[] == orig(this.fillPaintList.objects[])
this.fillPaintList.size == orig(this.fillPaintList.size)
this.fillPaintList.increment == orig(this.fillPaintList.increment)
this.autoPopulateSeriesFillPaint == orig(this.autoPopulateSeriesFillPaint)
this.baseFillPaint == orig(this.baseFillPaint)
this.outlinePaintList == orig(this.outlinePaintList)
this.outlinePaintList.objects == orig(this.outlinePaintList.objects)
this.outlinePaintList.objects[] == orig(this.outlinePaintList.objects[])
this.outlinePaintList.size == orig(this.outlinePaintList.size)
this.outlinePaintList.increment == orig(this.outlinePaintList.increment)
this.autoPopulateSeriesOutlinePaint == orig(this.autoPopulateSeriesOutlinePaint)
this.baseOutlinePaint == orig(this.baseOutlinePaint)
this.strokeList == orig(this.strokeList)
this.strokeList.objects == orig(this.strokeList.objects)
this.strokeList.objects[] == orig(this.strokeList.objects[])
this.strokeList.size == orig(this.strokeList.size)
this.strokeList.increment == orig(this.strokeList.increment)
this.autoPopulateSeriesStroke == orig(this.autoPopulateSeriesStroke)
this.baseStroke == orig(this.baseStroke)
this.outlineStrokeList == orig(this.outlineStrokeList)
this.outlineStrokeList.objects == orig(this.outlineStrokeList.objects)
this.outlineStrokeList.objects[] == orig(this.outlineStrokeList.objects[])
this.outlineStrokeList.size == orig(this.outlineStrokeList.size)
this.outlineStrokeList.increment == orig(this.outlineStrokeList.increment)
this.baseOutlineStroke == orig(this.baseOutlineStroke)
this.autoPopulateSeriesOutlineStroke == orig(this.autoPopulateSeriesOutlineStroke)
this.shapeList == orig(this.shapeList)
this.shapeList.objects == orig(this.shapeList.objects)
this.shapeList.objects[] == orig(this.shapeList.objects[])
this.shapeList.size == orig(this.shapeList.size)
this.shapeList.increment == orig(this.shapeList.increment)
this.autoPopulateSeriesShape == orig(this.autoPopulateSeriesShape)
this.baseShape == orig(this.baseShape)
this.itemLabelsVisibleList == orig(this.itemLabelsVisibleList)
this.itemLabelsVisibleList.objects == orig(this.itemLabelsVisibleList.objects)
this.itemLabelsVisibleList.objects[] == orig(this.itemLabelsVisibleList.objects[])
this.itemLabelsVisibleList.size == orig(this.itemLabelsVisibleList.size)
this.itemLabelsVisibleList.increment == orig(this.itemLabelsVisibleList.increment)
this.baseItemLabelsVisible == orig(this.baseItemLabelsVisible)
this.itemLabelFontList == orig(this.itemLabelFontList)
this.itemLabelFontList.objects == orig(this.itemLabelFontList.objects)
this.itemLabelFontList.objects[] == orig(this.itemLabelFontList.objects[])
this.itemLabelFontList.size == orig(this.itemLabelFontList.size)
this.itemLabelFontList.increment == orig(this.itemLabelFontList.increment)
this.baseItemLabelFont == orig(this.baseItemLabelFont)
this.itemLabelPaintList == orig(this.itemLabelPaintList)
this.itemLabelPaintList.objects == orig(this.itemLabelPaintList.objects)
this.itemLabelPaintList.objects[] == orig(this.itemLabelPaintList.objects[])
this.itemLabelPaintList.size == orig(this.itemLabelPaintList.size)
this.itemLabelPaintList.increment == orig(this.itemLabelPaintList.increment)
this.baseItemLabelPaint == orig(this.baseItemLabelPaint)
this.positiveItemLabelPositionList == orig(this.positiveItemLabelPositionList)
this.positiveItemLabelPositionList.objects == orig(this.positiveItemLabelPositionList.objects)
this.positiveItemLabelPositionList.objects[] == orig(this.positiveItemLabelPositionList.objects[])
this.positiveItemLabelPositionList.size == orig(this.positiveItemLabelPositionList.size)
this.positiveItemLabelPositionList.increment == orig(this.positiveItemLabelPositionList.increment)
this.basePositiveItemLabelPosition == orig(this.basePositiveItemLabelPosition)
this.basePositiveItemLabelPosition.itemLabelAnchor == orig(this.basePositiveItemLabelPosition.itemLabelAnchor)
org.jfree.chart.labels.ItemLabelAnchor.CENTER == orig(org.jfree.chart.labels.ItemLabelAnchor.CENTER)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE1 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE1)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE2 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE2)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE3 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE3)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE4 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE4)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE5 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE5)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE6 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE6)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE7 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE7)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE8 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE8)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE9 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE9)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE10 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE10)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE11 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE11)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE12 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE12)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12)
this.basePositiveItemLabelPosition.itemLabelAnchor.name == orig(this.basePositiveItemLabelPosition.itemLabelAnchor.name)
this.basePositiveItemLabelPosition.itemLabelAnchor.name.toString == orig(this.basePositiveItemLabelPosition.itemLabelAnchor.name.toString)
this.basePositiveItemLabelPosition.textAnchor == orig(this.basePositiveItemLabelPosition.textAnchor)
org.jfree.chart.text.TextAnchor.TOP_LEFT == orig(org.jfree.chart.text.TextAnchor.TOP_LEFT)
org.jfree.chart.text.TextAnchor.TOP_CENTER == orig(org.jfree.chart.text.TextAnchor.TOP_CENTER)
org.jfree.chart.text.TextAnchor.TOP_RIGHT == orig(org.jfree.chart.text.TextAnchor.TOP_RIGHT)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT)
org.jfree.chart.text.TextAnchor.CENTER_LEFT == orig(org.jfree.chart.text.TextAnchor.CENTER_LEFT)
org.jfree.chart.text.TextAnchor.CENTER == orig(org.jfree.chart.text.TextAnchor.CENTER)
org.jfree.chart.text.TextAnchor.CENTER_RIGHT == orig(org.jfree.chart.text.TextAnchor.CENTER_RIGHT)
org.jfree.chart.text.TextAnchor.BASELINE_LEFT == orig(org.jfree.chart.text.TextAnchor.BASELINE_LEFT)
org.jfree.chart.text.TextAnchor.BASELINE_CENTER == orig(org.jfree.chart.text.TextAnchor.BASELINE_CENTER)
org.jfree.chart.text.TextAnchor.BASELINE_RIGHT == orig(org.jfree.chart.text.TextAnchor.BASELINE_RIGHT)
org.jfree.chart.text.TextAnchor.BOTTOM_LEFT == orig(org.jfree.chart.text.TextAnchor.BOTTOM_LEFT)
org.jfree.chart.text.TextAnchor.BOTTOM_CENTER == orig(org.jfree.chart.text.TextAnchor.BOTTOM_CENTER)
org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT == orig(org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT)
this.basePositiveItemLabelPosition.textAnchor.name == orig(this.basePositiveItemLabelPosition.textAnchor.name)
this.basePositiveItemLabelPosition.textAnchor.name.toString == orig(this.basePositiveItemLabelPosition.textAnchor.name.toString)
this.basePositiveItemLabelPosition.rotationAnchor == orig(this.basePositiveItemLabelPosition.rotationAnchor)
this.basePositiveItemLabelPosition.rotationAnchor.name == orig(this.basePositiveItemLabelPosition.rotationAnchor.name)
this.basePositiveItemLabelPosition.rotationAnchor.name.toString == orig(this.basePositiveItemLabelPosition.rotationAnchor.name.toString)
this.basePositiveItemLabelPosition.angle == orig(this.basePositiveItemLabelPosition.angle)
this.negativeItemLabelPositionList == orig(this.negativeItemLabelPositionList)
this.negativeItemLabelPositionList.objects == orig(this.negativeItemLabelPositionList.objects)
this.negativeItemLabelPositionList.objects[] == orig(this.negativeItemLabelPositionList.objects[])
this.negativeItemLabelPositionList.size == orig(this.negativeItemLabelPositionList.size)
this.negativeItemLabelPositionList.increment == orig(this.negativeItemLabelPositionList.increment)
this.baseNegativeItemLabelPosition == orig(this.baseNegativeItemLabelPosition)
this.baseNegativeItemLabelPosition.itemLabelAnchor == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor)
this.baseNegativeItemLabelPosition.itemLabelAnchor.name == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor.name)
this.baseNegativeItemLabelPosition.itemLabelAnchor.name.toString == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor.name.toString)
this.baseNegativeItemLabelPosition.textAnchor == orig(this.baseNegativeItemLabelPosition.textAnchor)
this.baseNegativeItemLabelPosition.textAnchor.name == orig(this.baseNegativeItemLabelPosition.textAnchor.name)
this.baseNegativeItemLabelPosition.textAnchor.name.toString == orig(this.baseNegativeItemLabelPosition.textAnchor.name.toString)
this.baseNegativeItemLabelPosition.rotationAnchor == orig(this.baseNegativeItemLabelPosition.rotationAnchor)
this.baseNegativeItemLabelPosition.rotationAnchor.name == orig(this.baseNegativeItemLabelPosition.rotationAnchor.name)
this.baseNegativeItemLabelPosition.rotationAnchor.name.toString == orig(this.baseNegativeItemLabelPosition.rotationAnchor.name.toString)
this.baseNegativeItemLabelPosition.angle == orig(this.baseNegativeItemLabelPosition.angle)
this.itemLabelAnchorOffset == orig(this.itemLabelAnchorOffset)
this.createEntitiesList == orig(this.createEntitiesList)
this.createEntitiesList.objects == orig(this.createEntitiesList.objects)
this.createEntitiesList.objects[] == orig(this.createEntitiesList.objects[])
this.createEntitiesList.size == orig(this.createEntitiesList.size)
this.createEntitiesList.increment == orig(this.createEntitiesList.increment)
this.baseCreateEntities == orig(this.baseCreateEntities)
this.legendShapeList == orig(this.legendShapeList)
this.legendShapeList.objects == orig(this.legendShapeList.objects)
this.legendShapeList.objects[] == orig(this.legendShapeList.objects[])
this.legendShapeList.size == orig(this.legendShapeList.size)
this.legendShapeList.increment == orig(this.legendShapeList.increment)
this.baseLegendShape == orig(this.baseLegendShape)
this.treatLegendShapeAsLine == orig(this.treatLegendShapeAsLine)
this.legendTextFont == orig(this.legendTextFont)
this.legendTextFont.objects == orig(this.legendTextFont.objects)
this.legendTextFont.objects[] == orig(this.legendTextFont.objects[])
this.legendTextFont.size == orig(this.legendTextFont.size)
this.legendTextFont.increment == orig(this.legendTextFont.increment)
this.baseLegendTextFont == orig(this.baseLegendTextFont)
this.legendTextPaint == orig(this.legendTextPaint)
this.legendTextPaint.objects == orig(this.legendTextPaint.objects)
this.legendTextPaint.objects[] == orig(this.legendTextPaint.objects[])
this.legendTextPaint.size == orig(this.legendTextPaint.size)
this.legendTextPaint.increment == orig(this.legendTextPaint.increment)
this.baseLegendTextPaint == orig(this.baseLegendTextPaint)
this.dataBoundsIncludesVisibleSeriesOnly == orig(this.dataBoundsIncludesVisibleSeriesOnly)
this.defaultEntityRadius == orig(this.defaultEntityRadius)
this.listenerList == orig(this.listenerList)
this.selectedItemAttributes == orig(this.selectedItemAttributes)
this.selectedItemAttributes.allowNull == orig(this.selectedItemAttributes.allowNull)
this.selectedItemAttributes.paintList == orig(this.selectedItemAttributes.paintList)
this.selectedItemAttributes.paintList.objects == orig(this.selectedItemAttributes.paintList.objects)
this.selectedItemAttributes.paintList.objects[] == orig(this.selectedItemAttributes.paintList.objects[])
this.selectedItemAttributes.paintList.size == orig(this.selectedItemAttributes.paintList.size)
this.selectedItemAttributes.paintList.increment == orig(this.selectedItemAttributes.paintList.increment)
this.selectedItemAttributes.defaultPaint == orig(this.selectedItemAttributes.defaultPaint)
this.selectedItemAttributes.strokeList == orig(this.selectedItemAttributes.strokeList)
this.selectedItemAttributes.strokeList.objects == orig(this.selectedItemAttributes.strokeList.objects)
this.selectedItemAttributes.strokeList.objects[] == orig(this.selectedItemAttributes.strokeList.objects[])
this.selectedItemAttributes.strokeList.size == orig(this.selectedItemAttributes.strokeList.size)
this.selectedItemAttributes.strokeList.increment == orig(this.selectedItemAttributes.strokeList.increment)
this.selectedItemAttributes.defaultStroke == orig(this.selectedItemAttributes.defaultStroke)
this.selectedItemAttributes.shapeList == orig(this.selectedItemAttributes.shapeList)
this.selectedItemAttributes.shapeList.objects == orig(this.selectedItemAttributes.shapeList.objects)
this.selectedItemAttributes.shapeList.objects[] == orig(this.selectedItemAttributes.shapeList.objects[])
this.selectedItemAttributes.shapeList.size == orig(this.selectedItemAttributes.shapeList.size)
this.selectedItemAttributes.shapeList.increment == orig(this.selectedItemAttributes.shapeList.increment)
this.selectedItemAttributes.defaultShape == orig(this.selectedItemAttributes.defaultShape)
this.selectedItemAttributes.fillPaintList == orig(this.selectedItemAttributes.fillPaintList)
this.selectedItemAttributes.fillPaintList.objects == orig(this.selectedItemAttributes.fillPaintList.objects)
this.selectedItemAttributes.fillPaintList.objects[] == orig(this.selectedItemAttributes.fillPaintList.objects[])
this.selectedItemAttributes.fillPaintList.size == orig(this.selectedItemAttributes.fillPaintList.size)
this.selectedItemAttributes.fillPaintList.increment == orig(this.selectedItemAttributes.fillPaintList.increment)
this.selectedItemAttributes.defaultFillPaint == orig(this.selectedItemAttributes.defaultFillPaint)
this.selectedItemAttributes.outlinePaintList == orig(this.selectedItemAttributes.outlinePaintList)
this.selectedItemAttributes.outlinePaintList.objects == orig(this.selectedItemAttributes.outlinePaintList.objects)
this.selectedItemAttributes.outlinePaintList.objects[] == orig(this.selectedItemAttributes.outlinePaintList.objects[])
this.selectedItemAttributes.outlinePaintList.size == orig(this.selectedItemAttributes.outlinePaintList.size)
this.selectedItemAttributes.outlinePaintList.increment == orig(this.selectedItemAttributes.outlinePaintList.increment)
this.selectedItemAttributes.defaultOutlinePaint == orig(this.selectedItemAttributes.defaultOutlinePaint)
this.selectedItemAttributes.outlineStrokeList == orig(this.selectedItemAttributes.outlineStrokeList)
this.selectedItemAttributes.defaultOutlineStroke == orig(this.selectedItemAttributes.defaultOutlineStroke)
this.selectedItemAttributes.labelsVisibleList == orig(this.selectedItemAttributes.labelsVisibleList)
this.selectedItemAttributes.defaultLabelVisible == orig(this.selectedItemAttributes.defaultLabelVisible)
this.selectedItemAttributes.labelFontList == orig(this.selectedItemAttributes.labelFontList)
this.selectedItemAttributes.defaultLabelFont == orig(this.selectedItemAttributes.defaultLabelFont)
this.selectedItemAttributes.labelPaintList == orig(this.selectedItemAttributes.labelPaintList)
this.selectedItemAttributes.defaultLabelPaint == orig(this.selectedItemAttributes.defaultLabelPaint)
this.selectedItemAttributes.positionItemLabelPositionList == orig(this.selectedItemAttributes.positionItemLabelPositionList)
this.selectedItemAttributes.defaultPositiveItemLabelPosition == orig(this.selectedItemAttributes.defaultPositiveItemLabelPosition)
this.selectedItemAttributes.negativeItemLabelPositionList == orig(this.selectedItemAttributes.negativeItemLabelPositionList)
this.selectedItemAttributes.defaultNegativeItemLabelPosition == orig(this.selectedItemAttributes.defaultNegativeItemLabelPosition)
this.selectedItemAttributes.createEntityList == orig(this.selectedItemAttributes.createEntityList)
this.selectedItemAttributes.defaultCreateEntity == orig(this.selectedItemAttributes.defaultCreateEntity)
org.jfree.chart.renderer.AbstractRenderer.ADJ == orig(org.jfree.chart.renderer.AbstractRenderer.ADJ)
org.jfree.chart.renderer.AbstractRenderer.OPP == orig(org.jfree.chart.renderer.AbstractRenderer.OPP)
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener == orig(org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener)
this.paintList.objects[] has only one value, of length 8
this.paintList.objects[].getClass().getName() == [java.awt.Color, null, null, null, null, null, null, null]
this.paintList.size == 1
this.strokeList.objects[] has only one value, of length 8
this.strokeList.objects[].getClass().getName() == [java.awt.BasicStroke, null, null, null, null, null, null, null]
this.strokeList.size == 1
this.shapeList.objects[] has only one value, of length 8
this.shapeList.objects[].getClass().getName() == [java.awt.geom.Rectangle2D.Double, null, null, null, null, null, null, null]
this.shapeList.size == 1
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener has only one value
return has only one value
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() in this.paintList.objects[].getClass().getName()
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() in this.strokeList.objects[].getClass().getName()
===========================================================================
org.jfree.chart.renderer.AbstractRenderer.getItemStroke(int, int, boolean):::ENTER
this.paintList.objects[] has only one value, of length 8
this.paintList.objects[].getClass().getName() == [java.awt.Color, null, null, null, null, null, null, null]
this.paintList.size == 1
this.strokeList.objects[] contains only nulls and has only one value, of length 8
this.strokeList.objects[] elements == null
this.strokeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.strokeList.objects[].getClass().getName() elements == null
this.strokeList.size == 0
this.shapeList.objects[] has only one value, of length 8
this.shapeList.objects[].getClass().getName() == [java.awt.geom.Rectangle2D.Double, null, null, null, null, null, null, null]
this.shapeList.size == 1
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener has only one value
series == 0
item == 0
selected == false
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() in this.paintList.objects[].getClass().getName()
===========================================================================
org.jfree.chart.renderer.AbstractRenderer.getItemStroke(int, int, boolean):::EXIT
org.jfree.chart.renderer.AbstractRenderer.ZERO == orig(org.jfree.chart.renderer.AbstractRenderer.ZERO)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(this.basePaint.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(this.baseFillPaint.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(this.baseOutlinePaint.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(this.baseItemLabelPaint.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(this.selectedItemAttributes.defaultFillPaint.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == return.getClass().getName()
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == orig(this.baseStroke.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == orig(this.baseOutlineStroke.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE.getClass().getName() == orig(this.baseShape.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_FONT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_FONT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT)
this.seriesVisibleList == orig(this.seriesVisibleList)
this.seriesVisibleList.objects == orig(this.seriesVisibleList.objects)
this.seriesVisibleList.objects.getClass().getName() == orig(this.seriesVisibleList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.seriesVisibleInLegendList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.paintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.fillPaintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.outlinePaintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.strokeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.outlineStrokeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.shapeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.itemLabelsVisibleList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.itemLabelFontList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.itemLabelPaintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.positiveItemLabelPositionList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.negativeItemLabelPositionList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.createEntitiesList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.legendShapeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.legendTextFont.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.legendTextPaint.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.selectedItemAttributes.paintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.selectedItemAttributes.strokeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.selectedItemAttributes.shapeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.selectedItemAttributes.fillPaintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.selectedItemAttributes.outlinePaintList.objects.getClass().getName())
this.seriesVisibleList.objects[] == orig(this.seriesVisibleList.objects[])
this.seriesVisibleList.size == orig(this.seriesVisibleList.size)
this.seriesVisibleList.increment == orig(this.seriesVisibleList.increment)
this.baseSeriesVisible == orig(this.baseSeriesVisible)
this.seriesVisibleInLegendList == orig(this.seriesVisibleInLegendList)
this.seriesVisibleInLegendList.objects == orig(this.seriesVisibleInLegendList.objects)
this.seriesVisibleInLegendList.objects[] == orig(this.seriesVisibleInLegendList.objects[])
this.seriesVisibleInLegendList.size == orig(this.seriesVisibleInLegendList.size)
this.seriesVisibleInLegendList.increment == orig(this.seriesVisibleInLegendList.increment)
this.baseSeriesVisibleInLegend == orig(this.baseSeriesVisibleInLegend)
this.paintList == orig(this.paintList)
this.paintList.objects == orig(this.paintList.objects)
this.paintList.objects[] == orig(this.paintList.objects[])
this.paintList.size == orig(this.paintList.size)
this.paintList.increment == orig(this.paintList.increment)
this.autoPopulateSeriesPaint == orig(this.autoPopulateSeriesPaint)
this.basePaint == orig(this.basePaint)
this.fillPaintList == orig(this.fillPaintList)
this.fillPaintList.objects == orig(this.fillPaintList.objects)
this.fillPaintList.objects[] == orig(this.fillPaintList.objects[])
this.fillPaintList.size == orig(this.fillPaintList.size)
this.fillPaintList.increment == orig(this.fillPaintList.increment)
this.autoPopulateSeriesFillPaint == orig(this.autoPopulateSeriesFillPaint)
this.baseFillPaint == orig(this.baseFillPaint)
this.outlinePaintList == orig(this.outlinePaintList)
this.outlinePaintList.objects == orig(this.outlinePaintList.objects)
this.outlinePaintList.objects[] == orig(this.outlinePaintList.objects[])
this.outlinePaintList.size == orig(this.outlinePaintList.size)
this.outlinePaintList.increment == orig(this.outlinePaintList.increment)
this.autoPopulateSeriesOutlinePaint == orig(this.autoPopulateSeriesOutlinePaint)
this.baseOutlinePaint == orig(this.baseOutlinePaint)
this.strokeList == orig(this.strokeList)
this.strokeList.objects == orig(this.strokeList.objects)
this.strokeList.increment == orig(this.strokeList.increment)
this.autoPopulateSeriesStroke == orig(this.autoPopulateSeriesStroke)
this.baseStroke == orig(this.baseStroke)
this.outlineStrokeList == orig(this.outlineStrokeList)
this.outlineStrokeList.objects == orig(this.outlineStrokeList.objects)
this.outlineStrokeList.objects[] == orig(this.outlineStrokeList.objects[])
this.outlineStrokeList.size == orig(this.outlineStrokeList.size)
this.outlineStrokeList.increment == orig(this.outlineStrokeList.increment)
this.baseOutlineStroke == orig(this.baseOutlineStroke)
this.autoPopulateSeriesOutlineStroke == orig(this.autoPopulateSeriesOutlineStroke)
this.shapeList == orig(this.shapeList)
this.shapeList.objects == orig(this.shapeList.objects)
this.shapeList.objects[] == orig(this.shapeList.objects[])
this.shapeList.size == orig(this.shapeList.size)
this.shapeList.increment == orig(this.shapeList.increment)
this.autoPopulateSeriesShape == orig(this.autoPopulateSeriesShape)
this.baseShape == orig(this.baseShape)
this.itemLabelsVisibleList == orig(this.itemLabelsVisibleList)
this.itemLabelsVisibleList.objects == orig(this.itemLabelsVisibleList.objects)
this.itemLabelsVisibleList.objects[] == orig(this.itemLabelsVisibleList.objects[])
this.itemLabelsVisibleList.size == orig(this.itemLabelsVisibleList.size)
this.itemLabelsVisibleList.increment == orig(this.itemLabelsVisibleList.increment)
this.baseItemLabelsVisible == orig(this.baseItemLabelsVisible)
this.itemLabelFontList == orig(this.itemLabelFontList)
this.itemLabelFontList.objects == orig(this.itemLabelFontList.objects)
this.itemLabelFontList.objects[] == orig(this.itemLabelFontList.objects[])
this.itemLabelFontList.size == orig(this.itemLabelFontList.size)
this.itemLabelFontList.increment == orig(this.itemLabelFontList.increment)
this.baseItemLabelFont == orig(this.baseItemLabelFont)
this.itemLabelPaintList == orig(this.itemLabelPaintList)
this.itemLabelPaintList.objects == orig(this.itemLabelPaintList.objects)
this.itemLabelPaintList.objects[] == orig(this.itemLabelPaintList.objects[])
this.itemLabelPaintList.size == orig(this.itemLabelPaintList.size)
this.itemLabelPaintList.increment == orig(this.itemLabelPaintList.increment)
this.baseItemLabelPaint == orig(this.baseItemLabelPaint)
this.positiveItemLabelPositionList == orig(this.positiveItemLabelPositionList)
this.positiveItemLabelPositionList.objects == orig(this.positiveItemLabelPositionList.objects)
this.positiveItemLabelPositionList.objects[] == orig(this.positiveItemLabelPositionList.objects[])
this.positiveItemLabelPositionList.size == orig(this.positiveItemLabelPositionList.size)
this.positiveItemLabelPositionList.increment == orig(this.positiveItemLabelPositionList.increment)
this.basePositiveItemLabelPosition == orig(this.basePositiveItemLabelPosition)
this.basePositiveItemLabelPosition.itemLabelAnchor == orig(this.basePositiveItemLabelPosition.itemLabelAnchor)
org.jfree.chart.labels.ItemLabelAnchor.CENTER == orig(org.jfree.chart.labels.ItemLabelAnchor.CENTER)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE1 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE1)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE2 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE2)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE3 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE3)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE4 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE4)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE5 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE5)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE6 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE6)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE7 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE7)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE8 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE8)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE9 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE9)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE10 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE10)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE11 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE11)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE12 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE12)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12)
this.basePositiveItemLabelPosition.itemLabelAnchor.name == orig(this.basePositiveItemLabelPosition.itemLabelAnchor.name)
this.basePositiveItemLabelPosition.itemLabelAnchor.name.toString == orig(this.basePositiveItemLabelPosition.itemLabelAnchor.name.toString)
this.basePositiveItemLabelPosition.textAnchor == orig(this.basePositiveItemLabelPosition.textAnchor)
org.jfree.chart.text.TextAnchor.TOP_LEFT == orig(org.jfree.chart.text.TextAnchor.TOP_LEFT)
org.jfree.chart.text.TextAnchor.TOP_CENTER == orig(org.jfree.chart.text.TextAnchor.TOP_CENTER)
org.jfree.chart.text.TextAnchor.TOP_RIGHT == orig(org.jfree.chart.text.TextAnchor.TOP_RIGHT)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT)
org.jfree.chart.text.TextAnchor.CENTER_LEFT == orig(org.jfree.chart.text.TextAnchor.CENTER_LEFT)
org.jfree.chart.text.TextAnchor.CENTER == orig(org.jfree.chart.text.TextAnchor.CENTER)
org.jfree.chart.text.TextAnchor.CENTER_RIGHT == orig(org.jfree.chart.text.TextAnchor.CENTER_RIGHT)
org.jfree.chart.text.TextAnchor.BASELINE_LEFT == orig(org.jfree.chart.text.TextAnchor.BASELINE_LEFT)
org.jfree.chart.text.TextAnchor.BASELINE_CENTER == orig(org.jfree.chart.text.TextAnchor.BASELINE_CENTER)
org.jfree.chart.text.TextAnchor.BASELINE_RIGHT == orig(org.jfree.chart.text.TextAnchor.BASELINE_RIGHT)
org.jfree.chart.text.TextAnchor.BOTTOM_LEFT == orig(org.jfree.chart.text.TextAnchor.BOTTOM_LEFT)
org.jfree.chart.text.TextAnchor.BOTTOM_CENTER == orig(org.jfree.chart.text.TextAnchor.BOTTOM_CENTER)
org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT == orig(org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT)
this.basePositiveItemLabelPosition.textAnchor.name == orig(this.basePositiveItemLabelPosition.textAnchor.name)
this.basePositiveItemLabelPosition.textAnchor.name.toString == orig(this.basePositiveItemLabelPosition.textAnchor.name.toString)
this.basePositiveItemLabelPosition.rotationAnchor == orig(this.basePositiveItemLabelPosition.rotationAnchor)
this.basePositiveItemLabelPosition.rotationAnchor.name == orig(this.basePositiveItemLabelPosition.rotationAnchor.name)
this.basePositiveItemLabelPosition.rotationAnchor.name.toString == orig(this.basePositiveItemLabelPosition.rotationAnchor.name.toString)
this.basePositiveItemLabelPosition.angle == orig(this.basePositiveItemLabelPosition.angle)
this.negativeItemLabelPositionList == orig(this.negativeItemLabelPositionList)
this.negativeItemLabelPositionList.objects == orig(this.negativeItemLabelPositionList.objects)
this.negativeItemLabelPositionList.objects[] == orig(this.negativeItemLabelPositionList.objects[])
this.negativeItemLabelPositionList.size == orig(this.negativeItemLabelPositionList.size)
this.negativeItemLabelPositionList.increment == orig(this.negativeItemLabelPositionList.increment)
this.baseNegativeItemLabelPosition == orig(this.baseNegativeItemLabelPosition)
this.baseNegativeItemLabelPosition.itemLabelAnchor == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor)
this.baseNegativeItemLabelPosition.itemLabelAnchor.name == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor.name)
this.baseNegativeItemLabelPosition.itemLabelAnchor.name.toString == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor.name.toString)
this.baseNegativeItemLabelPosition.textAnchor == orig(this.baseNegativeItemLabelPosition.textAnchor)
this.baseNegativeItemLabelPosition.textAnchor.name == orig(this.baseNegativeItemLabelPosition.textAnchor.name)
this.baseNegativeItemLabelPosition.textAnchor.name.toString == orig(this.baseNegativeItemLabelPosition.textAnchor.name.toString)
this.baseNegativeItemLabelPosition.rotationAnchor == orig(this.baseNegativeItemLabelPosition.rotationAnchor)
this.baseNegativeItemLabelPosition.rotationAnchor.name == orig(this.baseNegativeItemLabelPosition.rotationAnchor.name)
this.baseNegativeItemLabelPosition.rotationAnchor.name.toString == orig(this.baseNegativeItemLabelPosition.rotationAnchor.name.toString)
this.baseNegativeItemLabelPosition.angle == orig(this.baseNegativeItemLabelPosition.angle)
this.itemLabelAnchorOffset == orig(this.itemLabelAnchorOffset)
this.createEntitiesList == orig(this.createEntitiesList)
this.createEntitiesList.objects == orig(this.createEntitiesList.objects)
this.createEntitiesList.objects[] == orig(this.createEntitiesList.objects[])
this.createEntitiesList.size == orig(this.createEntitiesList.size)
this.createEntitiesList.increment == orig(this.createEntitiesList.increment)
this.baseCreateEntities == orig(this.baseCreateEntities)
this.legendShapeList == orig(this.legendShapeList)
this.legendShapeList.objects == orig(this.legendShapeList.objects)
this.legendShapeList.objects[] == orig(this.legendShapeList.objects[])
this.legendShapeList.size == orig(this.legendShapeList.size)
this.legendShapeList.increment == orig(this.legendShapeList.increment)
this.baseLegendShape == orig(this.baseLegendShape)
this.treatLegendShapeAsLine == orig(this.treatLegendShapeAsLine)
this.legendTextFont == orig(this.legendTextFont)
this.legendTextFont.objects == orig(this.legendTextFont.objects)
this.legendTextFont.objects[] == orig(this.legendTextFont.objects[])
this.legendTextFont.size == orig(this.legendTextFont.size)
this.legendTextFont.increment == orig(this.legendTextFont.increment)
this.baseLegendTextFont == orig(this.baseLegendTextFont)
this.legendTextPaint == orig(this.legendTextPaint)
this.legendTextPaint.objects == orig(this.legendTextPaint.objects)
this.legendTextPaint.objects[] == orig(this.legendTextPaint.objects[])
this.legendTextPaint.size == orig(this.legendTextPaint.size)
this.legendTextPaint.increment == orig(this.legendTextPaint.increment)
this.baseLegendTextPaint == orig(this.baseLegendTextPaint)
this.dataBoundsIncludesVisibleSeriesOnly == orig(this.dataBoundsIncludesVisibleSeriesOnly)
this.defaultEntityRadius == orig(this.defaultEntityRadius)
this.listenerList == orig(this.listenerList)
this.selectedItemAttributes == orig(this.selectedItemAttributes)
this.selectedItemAttributes.allowNull == orig(this.selectedItemAttributes.allowNull)
this.selectedItemAttributes.paintList == orig(this.selectedItemAttributes.paintList)
this.selectedItemAttributes.paintList.objects == orig(this.selectedItemAttributes.paintList.objects)
this.selectedItemAttributes.paintList.objects[] == orig(this.selectedItemAttributes.paintList.objects[])
this.selectedItemAttributes.paintList.size == orig(this.selectedItemAttributes.paintList.size)
this.selectedItemAttributes.paintList.increment == orig(this.selectedItemAttributes.paintList.increment)
this.selectedItemAttributes.defaultPaint == orig(this.selectedItemAttributes.defaultPaint)
this.selectedItemAttributes.strokeList == orig(this.selectedItemAttributes.strokeList)
this.selectedItemAttributes.strokeList.objects == orig(this.selectedItemAttributes.strokeList.objects)
this.selectedItemAttributes.strokeList.objects[] == orig(this.selectedItemAttributes.strokeList.objects[])
this.selectedItemAttributes.strokeList.size == orig(this.selectedItemAttributes.strokeList.size)
this.selectedItemAttributes.strokeList.increment == orig(this.selectedItemAttributes.strokeList.increment)
this.selectedItemAttributes.defaultStroke == orig(this.selectedItemAttributes.defaultStroke)
this.selectedItemAttributes.shapeList == orig(this.selectedItemAttributes.shapeList)
this.selectedItemAttributes.shapeList.objects == orig(this.selectedItemAttributes.shapeList.objects)
this.selectedItemAttributes.shapeList.objects[] == orig(this.selectedItemAttributes.shapeList.objects[])
this.selectedItemAttributes.shapeList.size == orig(this.selectedItemAttributes.shapeList.size)
this.selectedItemAttributes.shapeList.increment == orig(this.selectedItemAttributes.shapeList.increment)
this.selectedItemAttributes.defaultShape == orig(this.selectedItemAttributes.defaultShape)
this.selectedItemAttributes.fillPaintList == orig(this.selectedItemAttributes.fillPaintList)
this.selectedItemAttributes.fillPaintList.objects == orig(this.selectedItemAttributes.fillPaintList.objects)
this.selectedItemAttributes.fillPaintList.objects[] == orig(this.selectedItemAttributes.fillPaintList.objects[])
this.selectedItemAttributes.fillPaintList.size == orig(this.selectedItemAttributes.fillPaintList.size)
this.selectedItemAttributes.fillPaintList.increment == orig(this.selectedItemAttributes.fillPaintList.increment)
this.selectedItemAttributes.defaultFillPaint == orig(this.selectedItemAttributes.defaultFillPaint)
this.selectedItemAttributes.outlinePaintList == orig(this.selectedItemAttributes.outlinePaintList)
this.selectedItemAttributes.outlinePaintList.objects == orig(this.selectedItemAttributes.outlinePaintList.objects)
this.selectedItemAttributes.outlinePaintList.objects[] == orig(this.selectedItemAttributes.outlinePaintList.objects[])
this.selectedItemAttributes.outlinePaintList.size == orig(this.selectedItemAttributes.outlinePaintList.size)
this.selectedItemAttributes.outlinePaintList.increment == orig(this.selectedItemAttributes.outlinePaintList.increment)
this.selectedItemAttributes.defaultOutlinePaint == orig(this.selectedItemAttributes.defaultOutlinePaint)
this.selectedItemAttributes.outlineStrokeList == orig(this.selectedItemAttributes.outlineStrokeList)
this.selectedItemAttributes.defaultOutlineStroke == orig(this.selectedItemAttributes.defaultOutlineStroke)
this.selectedItemAttributes.labelsVisibleList == orig(this.selectedItemAttributes.labelsVisibleList)
this.selectedItemAttributes.defaultLabelVisible == orig(this.selectedItemAttributes.defaultLabelVisible)
this.selectedItemAttributes.labelFontList == orig(this.selectedItemAttributes.labelFontList)
this.selectedItemAttributes.defaultLabelFont == orig(this.selectedItemAttributes.defaultLabelFont)
this.selectedItemAttributes.labelPaintList == orig(this.selectedItemAttributes.labelPaintList)
this.selectedItemAttributes.defaultLabelPaint == orig(this.selectedItemAttributes.defaultLabelPaint)
this.selectedItemAttributes.positionItemLabelPositionList == orig(this.selectedItemAttributes.positionItemLabelPositionList)
this.selectedItemAttributes.defaultPositiveItemLabelPosition == orig(this.selectedItemAttributes.defaultPositiveItemLabelPosition)
this.selectedItemAttributes.negativeItemLabelPositionList == orig(this.selectedItemAttributes.negativeItemLabelPositionList)
this.selectedItemAttributes.defaultNegativeItemLabelPosition == orig(this.selectedItemAttributes.defaultNegativeItemLabelPosition)
this.selectedItemAttributes.createEntityList == orig(this.selectedItemAttributes.createEntityList)
this.selectedItemAttributes.defaultCreateEntity == orig(this.selectedItemAttributes.defaultCreateEntity)
org.jfree.chart.renderer.AbstractRenderer.ADJ == orig(org.jfree.chart.renderer.AbstractRenderer.ADJ)
org.jfree.chart.renderer.AbstractRenderer.OPP == orig(org.jfree.chart.renderer.AbstractRenderer.OPP)
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener == orig(org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener)
size(this.strokeList.objects[]) == orig(size(this.strokeList.objects[]))
this.paintList.objects[] has only one value, of length 8
this.paintList.objects[].getClass().getName() == [java.awt.Color, null, null, null, null, null, null, null]
this.paintList.size == 1
this.strokeList.objects[] has only one value, of length 8
this.strokeList.objects[].getClass().getName() == [java.awt.BasicStroke, null, null, null, null, null, null, null]
this.strokeList.size == 1
this.shapeList.objects[] has only one value, of length 8
this.shapeList.objects[].getClass().getName() == [java.awt.geom.Rectangle2D.Double, null, null, null, null, null, null, null]
this.shapeList.size == 1
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener has only one value
return has only one value
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() in this.paintList.objects[].getClass().getName()
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() in this.strokeList.objects[].getClass().getName()
===========================================================================
org.jfree.chart.renderer.AbstractRenderer.getLegendShape(int):::ENTER
this.paintList.objects[] contains only nulls and has only one value, of length 8
this.paintList.objects[] elements == null
this.paintList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.paintList.objects[].getClass().getName() elements == null
this.paintList.size == 0
this.strokeList.objects[] contains only nulls and has only one value, of length 8
this.strokeList.objects[] elements == null
this.strokeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.strokeList.objects[].getClass().getName() elements == null
this.strokeList.size == 0
this.shapeList.objects[] contains only nulls and has only one value, of length 8
this.shapeList.objects[] elements == null
this.shapeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.shapeList.objects[].getClass().getName() elements == null
this.shapeList.size == 0
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener has only one value
series == 0
===========================================================================
org.jfree.chart.renderer.AbstractRenderer.getLegendShape(int):::EXIT
org.jfree.chart.renderer.AbstractRenderer.ZERO == orig(org.jfree.chart.renderer.AbstractRenderer.ZERO)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(this.basePaint.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(this.baseFillPaint.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(this.baseOutlinePaint.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(this.baseItemLabelPaint.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(this.selectedItemAttributes.defaultFillPaint.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == orig(this.baseStroke.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == orig(this.baseOutlineStroke.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE.getClass().getName() == orig(this.baseShape.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_FONT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_FONT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT)
this.seriesVisibleList == orig(this.seriesVisibleList)
this.seriesVisibleList.objects == orig(this.seriesVisibleList.objects)
this.seriesVisibleList.objects.getClass().getName() == orig(this.seriesVisibleList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.seriesVisibleInLegendList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.paintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.fillPaintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.outlinePaintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.strokeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.outlineStrokeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.shapeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.itemLabelsVisibleList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.itemLabelFontList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.itemLabelPaintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.positiveItemLabelPositionList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.negativeItemLabelPositionList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.createEntitiesList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.legendShapeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.legendTextFont.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.legendTextPaint.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.selectedItemAttributes.paintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.selectedItemAttributes.strokeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.selectedItemAttributes.shapeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.selectedItemAttributes.fillPaintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.selectedItemAttributes.outlinePaintList.objects.getClass().getName())
this.seriesVisibleList.objects[] == orig(this.seriesVisibleList.objects[])
this.seriesVisibleList.size == orig(this.seriesVisibleList.size)
this.seriesVisibleList.increment == orig(this.seriesVisibleList.increment)
this.baseSeriesVisible == orig(this.baseSeriesVisible)
this.seriesVisibleInLegendList == orig(this.seriesVisibleInLegendList)
this.seriesVisibleInLegendList.objects == orig(this.seriesVisibleInLegendList.objects)
this.seriesVisibleInLegendList.objects[] == orig(this.seriesVisibleInLegendList.objects[])
this.seriesVisibleInLegendList.size == orig(this.seriesVisibleInLegendList.size)
this.seriesVisibleInLegendList.increment == orig(this.seriesVisibleInLegendList.increment)
this.baseSeriesVisibleInLegend == orig(this.baseSeriesVisibleInLegend)
this.paintList == orig(this.paintList)
this.paintList.objects == orig(this.paintList.objects)
this.paintList.objects[] == orig(this.paintList.objects[])
this.paintList.size == orig(this.paintList.size)
this.paintList.increment == orig(this.paintList.increment)
this.autoPopulateSeriesPaint == orig(this.autoPopulateSeriesPaint)
this.basePaint == orig(this.basePaint)
this.fillPaintList == orig(this.fillPaintList)
this.fillPaintList.objects == orig(this.fillPaintList.objects)
this.fillPaintList.objects[] == orig(this.fillPaintList.objects[])
this.fillPaintList.size == orig(this.fillPaintList.size)
this.fillPaintList.increment == orig(this.fillPaintList.increment)
this.autoPopulateSeriesFillPaint == orig(this.autoPopulateSeriesFillPaint)
this.baseFillPaint == orig(this.baseFillPaint)
this.outlinePaintList == orig(this.outlinePaintList)
this.outlinePaintList.objects == orig(this.outlinePaintList.objects)
this.outlinePaintList.objects[] == orig(this.outlinePaintList.objects[])
this.outlinePaintList.size == orig(this.outlinePaintList.size)
this.outlinePaintList.increment == orig(this.outlinePaintList.increment)
this.autoPopulateSeriesOutlinePaint == orig(this.autoPopulateSeriesOutlinePaint)
this.baseOutlinePaint == orig(this.baseOutlinePaint)
this.strokeList == orig(this.strokeList)
this.strokeList.objects == orig(this.strokeList.objects)
this.strokeList.objects[] == orig(this.strokeList.objects[])
this.strokeList.size == orig(this.strokeList.size)
this.strokeList.increment == orig(this.strokeList.increment)
this.autoPopulateSeriesStroke == orig(this.autoPopulateSeriesStroke)
this.baseStroke == orig(this.baseStroke)
this.outlineStrokeList == orig(this.outlineStrokeList)
this.outlineStrokeList.objects == orig(this.outlineStrokeList.objects)
this.outlineStrokeList.objects[] == orig(this.outlineStrokeList.objects[])
this.outlineStrokeList.size == orig(this.outlineStrokeList.size)
this.outlineStrokeList.increment == orig(this.outlineStrokeList.increment)
this.baseOutlineStroke == orig(this.baseOutlineStroke)
this.autoPopulateSeriesOutlineStroke == orig(this.autoPopulateSeriesOutlineStroke)
this.shapeList == orig(this.shapeList)
this.shapeList.objects == orig(this.shapeList.objects)
this.shapeList.objects[] == orig(this.shapeList.objects[])
this.shapeList.size == orig(this.shapeList.size)
this.shapeList.increment == orig(this.shapeList.increment)
this.autoPopulateSeriesShape == orig(this.autoPopulateSeriesShape)
this.baseShape == orig(this.baseShape)
this.itemLabelsVisibleList == orig(this.itemLabelsVisibleList)
this.itemLabelsVisibleList.objects == orig(this.itemLabelsVisibleList.objects)
this.itemLabelsVisibleList.objects[] == orig(this.itemLabelsVisibleList.objects[])
this.itemLabelsVisibleList.size == orig(this.itemLabelsVisibleList.size)
this.itemLabelsVisibleList.increment == orig(this.itemLabelsVisibleList.increment)
this.baseItemLabelsVisible == orig(this.baseItemLabelsVisible)
this.itemLabelFontList == orig(this.itemLabelFontList)
this.itemLabelFontList.objects == orig(this.itemLabelFontList.objects)
this.itemLabelFontList.objects[] == orig(this.itemLabelFontList.objects[])
this.itemLabelFontList.size == orig(this.itemLabelFontList.size)
this.itemLabelFontList.increment == orig(this.itemLabelFontList.increment)
this.baseItemLabelFont == orig(this.baseItemLabelFont)
this.itemLabelPaintList == orig(this.itemLabelPaintList)
this.itemLabelPaintList.objects == orig(this.itemLabelPaintList.objects)
this.itemLabelPaintList.objects[] == orig(this.itemLabelPaintList.objects[])
this.itemLabelPaintList.size == orig(this.itemLabelPaintList.size)
this.itemLabelPaintList.increment == orig(this.itemLabelPaintList.increment)
this.baseItemLabelPaint == orig(this.baseItemLabelPaint)
this.positiveItemLabelPositionList == orig(this.positiveItemLabelPositionList)
this.positiveItemLabelPositionList.objects == orig(this.positiveItemLabelPositionList.objects)
this.positiveItemLabelPositionList.objects[] == orig(this.positiveItemLabelPositionList.objects[])
this.positiveItemLabelPositionList.size == orig(this.positiveItemLabelPositionList.size)
this.positiveItemLabelPositionList.increment == orig(this.positiveItemLabelPositionList.increment)
this.basePositiveItemLabelPosition == orig(this.basePositiveItemLabelPosition)
this.basePositiveItemLabelPosition.itemLabelAnchor == orig(this.basePositiveItemLabelPosition.itemLabelAnchor)
org.jfree.chart.labels.ItemLabelAnchor.CENTER == orig(org.jfree.chart.labels.ItemLabelAnchor.CENTER)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE1 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE1)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE2 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE2)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE3 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE3)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE4 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE4)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE5 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE5)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE6 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE6)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE7 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE7)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE8 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE8)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE9 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE9)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE10 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE10)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE11 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE11)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE12 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE12)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12)
this.basePositiveItemLabelPosition.itemLabelAnchor.name == orig(this.basePositiveItemLabelPosition.itemLabelAnchor.name)
this.basePositiveItemLabelPosition.itemLabelAnchor.name.toString == orig(this.basePositiveItemLabelPosition.itemLabelAnchor.name.toString)
this.basePositiveItemLabelPosition.textAnchor == orig(this.basePositiveItemLabelPosition.textAnchor)
org.jfree.chart.text.TextAnchor.TOP_LEFT == orig(org.jfree.chart.text.TextAnchor.TOP_LEFT)
org.jfree.chart.text.TextAnchor.TOP_CENTER == orig(org.jfree.chart.text.TextAnchor.TOP_CENTER)
org.jfree.chart.text.TextAnchor.TOP_RIGHT == orig(org.jfree.chart.text.TextAnchor.TOP_RIGHT)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT)
org.jfree.chart.text.TextAnchor.CENTER_LEFT == orig(org.jfree.chart.text.TextAnchor.CENTER_LEFT)
org.jfree.chart.text.TextAnchor.CENTER == orig(org.jfree.chart.text.TextAnchor.CENTER)
org.jfree.chart.text.TextAnchor.CENTER_RIGHT == orig(org.jfree.chart.text.TextAnchor.CENTER_RIGHT)
org.jfree.chart.text.TextAnchor.BASELINE_LEFT == orig(org.jfree.chart.text.TextAnchor.BASELINE_LEFT)
org.jfree.chart.text.TextAnchor.BASELINE_CENTER == orig(org.jfree.chart.text.TextAnchor.BASELINE_CENTER)
org.jfree.chart.text.TextAnchor.BASELINE_RIGHT == orig(org.jfree.chart.text.TextAnchor.BASELINE_RIGHT)
org.jfree.chart.text.TextAnchor.BOTTOM_LEFT == orig(org.jfree.chart.text.TextAnchor.BOTTOM_LEFT)
org.jfree.chart.text.TextAnchor.BOTTOM_CENTER == orig(org.jfree.chart.text.TextAnchor.BOTTOM_CENTER)
org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT == orig(org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT)
this.basePositiveItemLabelPosition.textAnchor.name == orig(this.basePositiveItemLabelPosition.textAnchor.name)
this.basePositiveItemLabelPosition.textAnchor.name.toString == orig(this.basePositiveItemLabelPosition.textAnchor.name.toString)
this.basePositiveItemLabelPosition.rotationAnchor == orig(this.basePositiveItemLabelPosition.rotationAnchor)
this.basePositiveItemLabelPosition.rotationAnchor.name == orig(this.basePositiveItemLabelPosition.rotationAnchor.name)
this.basePositiveItemLabelPosition.rotationAnchor.name.toString == orig(this.basePositiveItemLabelPosition.rotationAnchor.name.toString)
this.basePositiveItemLabelPosition.angle == orig(this.basePositiveItemLabelPosition.angle)
this.negativeItemLabelPositionList == orig(this.negativeItemLabelPositionList)
this.negativeItemLabelPositionList.objects == orig(this.negativeItemLabelPositionList.objects)
this.negativeItemLabelPositionList.objects[] == orig(this.negativeItemLabelPositionList.objects[])
this.negativeItemLabelPositionList.size == orig(this.negativeItemLabelPositionList.size)
this.negativeItemLabelPositionList.increment == orig(this.negativeItemLabelPositionList.increment)
this.baseNegativeItemLabelPosition == orig(this.baseNegativeItemLabelPosition)
this.baseNegativeItemLabelPosition.itemLabelAnchor == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor)
this.baseNegativeItemLabelPosition.itemLabelAnchor.name == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor.name)
this.baseNegativeItemLabelPosition.itemLabelAnchor.name.toString == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor.name.toString)
this.baseNegativeItemLabelPosition.textAnchor == orig(this.baseNegativeItemLabelPosition.textAnchor)
this.baseNegativeItemLabelPosition.textAnchor.name == orig(this.baseNegativeItemLabelPosition.textAnchor.name)
this.baseNegativeItemLabelPosition.textAnchor.name.toString == orig(this.baseNegativeItemLabelPosition.textAnchor.name.toString)
this.baseNegativeItemLabelPosition.rotationAnchor == orig(this.baseNegativeItemLabelPosition.rotationAnchor)
this.baseNegativeItemLabelPosition.rotationAnchor.name == orig(this.baseNegativeItemLabelPosition.rotationAnchor.name)
this.baseNegativeItemLabelPosition.rotationAnchor.name.toString == orig(this.baseNegativeItemLabelPosition.rotationAnchor.name.toString)
this.baseNegativeItemLabelPosition.angle == orig(this.baseNegativeItemLabelPosition.angle)
this.itemLabelAnchorOffset == orig(this.itemLabelAnchorOffset)
this.createEntitiesList == orig(this.createEntitiesList)
this.createEntitiesList.objects == orig(this.createEntitiesList.objects)
this.createEntitiesList.objects[] == orig(this.createEntitiesList.objects[])
this.createEntitiesList.size == orig(this.createEntitiesList.size)
this.createEntitiesList.increment == orig(this.createEntitiesList.increment)
this.baseCreateEntities == orig(this.baseCreateEntities)
this.legendShapeList == orig(this.legendShapeList)
this.legendShapeList.objects == orig(this.legendShapeList.objects)
this.legendShapeList.objects[] == orig(this.legendShapeList.objects[])
this.legendShapeList.size == orig(this.legendShapeList.size)
this.legendShapeList.increment == orig(this.legendShapeList.increment)
this.baseLegendShape == orig(this.baseLegendShape)
this.treatLegendShapeAsLine == orig(this.treatLegendShapeAsLine)
this.legendTextFont == orig(this.legendTextFont)
this.legendTextFont.objects == orig(this.legendTextFont.objects)
this.legendTextFont.objects[] == orig(this.legendTextFont.objects[])
this.legendTextFont.size == orig(this.legendTextFont.size)
this.legendTextFont.increment == orig(this.legendTextFont.increment)
this.baseLegendTextFont == orig(this.baseLegendTextFont)
this.legendTextPaint == orig(this.legendTextPaint)
this.legendTextPaint.objects == orig(this.legendTextPaint.objects)
this.legendTextPaint.objects[] == orig(this.legendTextPaint.objects[])
this.legendTextPaint.size == orig(this.legendTextPaint.size)
this.legendTextPaint.increment == orig(this.legendTextPaint.increment)
this.baseLegendTextPaint == orig(this.baseLegendTextPaint)
this.dataBoundsIncludesVisibleSeriesOnly == orig(this.dataBoundsIncludesVisibleSeriesOnly)
this.defaultEntityRadius == orig(this.defaultEntityRadius)
this.listenerList == orig(this.listenerList)
this.selectedItemAttributes == orig(this.selectedItemAttributes)
this.selectedItemAttributes.allowNull == orig(this.selectedItemAttributes.allowNull)
this.selectedItemAttributes.paintList == orig(this.selectedItemAttributes.paintList)
this.selectedItemAttributes.paintList.objects == orig(this.selectedItemAttributes.paintList.objects)
this.selectedItemAttributes.paintList.objects[] == orig(this.selectedItemAttributes.paintList.objects[])
this.selectedItemAttributes.paintList.size == orig(this.selectedItemAttributes.paintList.size)
this.selectedItemAttributes.paintList.increment == orig(this.selectedItemAttributes.paintList.increment)
this.selectedItemAttributes.defaultPaint == orig(this.selectedItemAttributes.defaultPaint)
this.selectedItemAttributes.strokeList == orig(this.selectedItemAttributes.strokeList)
this.selectedItemAttributes.strokeList.objects == orig(this.selectedItemAttributes.strokeList.objects)
this.selectedItemAttributes.strokeList.objects[] == orig(this.selectedItemAttributes.strokeList.objects[])
this.selectedItemAttributes.strokeList.size == orig(this.selectedItemAttributes.strokeList.size)
this.selectedItemAttributes.strokeList.increment == orig(this.selectedItemAttributes.strokeList.increment)
this.selectedItemAttributes.defaultStroke == orig(this.selectedItemAttributes.defaultStroke)
this.selectedItemAttributes.shapeList == orig(this.selectedItemAttributes.shapeList)
this.selectedItemAttributes.shapeList.objects == orig(this.selectedItemAttributes.shapeList.objects)
this.selectedItemAttributes.shapeList.objects[] == orig(this.selectedItemAttributes.shapeList.objects[])
this.selectedItemAttributes.shapeList.size == orig(this.selectedItemAttributes.shapeList.size)
this.selectedItemAttributes.shapeList.increment == orig(this.selectedItemAttributes.shapeList.increment)
this.selectedItemAttributes.defaultShape == orig(this.selectedItemAttributes.defaultShape)
this.selectedItemAttributes.fillPaintList == orig(this.selectedItemAttributes.fillPaintList)
this.selectedItemAttributes.fillPaintList.objects == orig(this.selectedItemAttributes.fillPaintList.objects)
this.selectedItemAttributes.fillPaintList.objects[] == orig(this.selectedItemAttributes.fillPaintList.objects[])
this.selectedItemAttributes.fillPaintList.size == orig(this.selectedItemAttributes.fillPaintList.size)
this.selectedItemAttributes.fillPaintList.increment == orig(this.selectedItemAttributes.fillPaintList.increment)
this.selectedItemAttributes.defaultFillPaint == orig(this.selectedItemAttributes.defaultFillPaint)
this.selectedItemAttributes.outlinePaintList == orig(this.selectedItemAttributes.outlinePaintList)
this.selectedItemAttributes.outlinePaintList.objects == orig(this.selectedItemAttributes.outlinePaintList.objects)
this.selectedItemAttributes.outlinePaintList.objects[] == orig(this.selectedItemAttributes.outlinePaintList.objects[])
this.selectedItemAttributes.outlinePaintList.size == orig(this.selectedItemAttributes.outlinePaintList.size)
this.selectedItemAttributes.outlinePaintList.increment == orig(this.selectedItemAttributes.outlinePaintList.increment)
this.selectedItemAttributes.defaultOutlinePaint == orig(this.selectedItemAttributes.defaultOutlinePaint)
this.selectedItemAttributes.outlineStrokeList == orig(this.selectedItemAttributes.outlineStrokeList)
this.selectedItemAttributes.defaultOutlineStroke == orig(this.selectedItemAttributes.defaultOutlineStroke)
this.selectedItemAttributes.labelsVisibleList == orig(this.selectedItemAttributes.labelsVisibleList)
this.selectedItemAttributes.defaultLabelVisible == orig(this.selectedItemAttributes.defaultLabelVisible)
this.selectedItemAttributes.labelFontList == orig(this.selectedItemAttributes.labelFontList)
this.selectedItemAttributes.defaultLabelFont == orig(this.selectedItemAttributes.defaultLabelFont)
this.selectedItemAttributes.labelPaintList == orig(this.selectedItemAttributes.labelPaintList)
this.selectedItemAttributes.defaultLabelPaint == orig(this.selectedItemAttributes.defaultLabelPaint)
this.selectedItemAttributes.positionItemLabelPositionList == orig(this.selectedItemAttributes.positionItemLabelPositionList)
this.selectedItemAttributes.defaultPositiveItemLabelPosition == orig(this.selectedItemAttributes.defaultPositiveItemLabelPosition)
this.selectedItemAttributes.negativeItemLabelPositionList == orig(this.selectedItemAttributes.negativeItemLabelPositionList)
this.selectedItemAttributes.defaultNegativeItemLabelPosition == orig(this.selectedItemAttributes.defaultNegativeItemLabelPosition)
this.selectedItemAttributes.createEntityList == orig(this.selectedItemAttributes.createEntityList)
this.selectedItemAttributes.defaultCreateEntity == orig(this.selectedItemAttributes.defaultCreateEntity)
org.jfree.chart.renderer.AbstractRenderer.ADJ == orig(org.jfree.chart.renderer.AbstractRenderer.ADJ)
org.jfree.chart.renderer.AbstractRenderer.OPP == orig(org.jfree.chart.renderer.AbstractRenderer.OPP)
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener == orig(org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener)
this.paintList.objects[] contains only nulls and has only one value, of length 8
this.paintList.objects[] elements == null
this.paintList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.paintList.objects[].getClass().getName() elements == null
this.paintList.size == 0
this.strokeList.objects[] contains only nulls and has only one value, of length 8
this.strokeList.objects[] elements == null
this.strokeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.strokeList.objects[].getClass().getName() elements == null
this.strokeList.size == 0
this.shapeList.objects[] contains only nulls and has only one value, of length 8
this.shapeList.objects[] elements == null
this.shapeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.shapeList.objects[].getClass().getName() elements == null
this.shapeList.size == 0
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener has only one value
return == null
===========================================================================
org.jfree.chart.renderer.AbstractRenderer.getLegendTextFont(int):::ENTER
this.paintList.objects[] has only one value, of length 8
this.paintList.objects[].getClass().getName() == [java.awt.Color, null, null, null, null, null, null, null]
this.paintList.size == 1
this.strokeList.objects[] has only one value, of length 8
this.strokeList.objects[].getClass().getName() == [java.awt.BasicStroke, null, null, null, null, null, null, null]
this.strokeList.size == 1
this.shapeList.objects[] has only one value, of length 8
this.shapeList.objects[].getClass().getName() == [java.awt.geom.Rectangle2D.Double, null, null, null, null, null, null, null]
this.shapeList.size == 1
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener has only one value
series == 0
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() in this.paintList.objects[].getClass().getName()
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() in this.strokeList.objects[].getClass().getName()
===========================================================================
org.jfree.chart.renderer.AbstractRenderer.getLegendTextFont(int):::EXIT
org.jfree.chart.renderer.AbstractRenderer.ZERO == orig(org.jfree.chart.renderer.AbstractRenderer.ZERO)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(this.basePaint.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(this.baseFillPaint.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(this.baseOutlinePaint.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(this.baseItemLabelPaint.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(this.selectedItemAttributes.defaultFillPaint.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == orig(this.baseStroke.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == orig(this.baseOutlineStroke.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE.getClass().getName() == orig(this.baseShape.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_FONT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_FONT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT)
this.seriesVisibleList == orig(this.seriesVisibleList)
this.seriesVisibleList.objects == orig(this.seriesVisibleList.objects)
this.seriesVisibleList.objects.getClass().getName() == orig(this.seriesVisibleList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.seriesVisibleInLegendList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.paintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.fillPaintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.outlinePaintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.strokeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.outlineStrokeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.shapeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.itemLabelsVisibleList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.itemLabelFontList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.itemLabelPaintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.positiveItemLabelPositionList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.negativeItemLabelPositionList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.createEntitiesList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.legendShapeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.legendTextFont.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.legendTextPaint.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.selectedItemAttributes.paintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.selectedItemAttributes.strokeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.selectedItemAttributes.shapeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.selectedItemAttributes.fillPaintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.selectedItemAttributes.outlinePaintList.objects.getClass().getName())
this.seriesVisibleList.objects[] == orig(this.seriesVisibleList.objects[])
this.seriesVisibleList.size == orig(this.seriesVisibleList.size)
this.seriesVisibleList.increment == orig(this.seriesVisibleList.increment)
this.baseSeriesVisible == orig(this.baseSeriesVisible)
this.seriesVisibleInLegendList == orig(this.seriesVisibleInLegendList)
this.seriesVisibleInLegendList.objects == orig(this.seriesVisibleInLegendList.objects)
this.seriesVisibleInLegendList.objects[] == orig(this.seriesVisibleInLegendList.objects[])
this.seriesVisibleInLegendList.size == orig(this.seriesVisibleInLegendList.size)
this.seriesVisibleInLegendList.increment == orig(this.seriesVisibleInLegendList.increment)
this.baseSeriesVisibleInLegend == orig(this.baseSeriesVisibleInLegend)
this.paintList == orig(this.paintList)
this.paintList.objects == orig(this.paintList.objects)
this.paintList.objects[] == orig(this.paintList.objects[])
this.paintList.size == orig(this.paintList.size)
this.paintList.increment == orig(this.paintList.increment)
this.autoPopulateSeriesPaint == orig(this.autoPopulateSeriesPaint)
this.basePaint == orig(this.basePaint)
this.fillPaintList == orig(this.fillPaintList)
this.fillPaintList.objects == orig(this.fillPaintList.objects)
this.fillPaintList.objects[] == orig(this.fillPaintList.objects[])
this.fillPaintList.size == orig(this.fillPaintList.size)
this.fillPaintList.increment == orig(this.fillPaintList.increment)
this.autoPopulateSeriesFillPaint == orig(this.autoPopulateSeriesFillPaint)
this.baseFillPaint == orig(this.baseFillPaint)
this.outlinePaintList == orig(this.outlinePaintList)
this.outlinePaintList.objects == orig(this.outlinePaintList.objects)
this.outlinePaintList.objects[] == orig(this.outlinePaintList.objects[])
this.outlinePaintList.size == orig(this.outlinePaintList.size)
this.outlinePaintList.increment == orig(this.outlinePaintList.increment)
this.autoPopulateSeriesOutlinePaint == orig(this.autoPopulateSeriesOutlinePaint)
this.baseOutlinePaint == orig(this.baseOutlinePaint)
this.strokeList == orig(this.strokeList)
this.strokeList.objects == orig(this.strokeList.objects)
this.strokeList.objects[] == orig(this.strokeList.objects[])
this.strokeList.size == orig(this.strokeList.size)
this.strokeList.increment == orig(this.strokeList.increment)
this.autoPopulateSeriesStroke == orig(this.autoPopulateSeriesStroke)
this.baseStroke == orig(this.baseStroke)
this.outlineStrokeList == orig(this.outlineStrokeList)
this.outlineStrokeList.objects == orig(this.outlineStrokeList.objects)
this.outlineStrokeList.objects[] == orig(this.outlineStrokeList.objects[])
this.outlineStrokeList.size == orig(this.outlineStrokeList.size)
this.outlineStrokeList.increment == orig(this.outlineStrokeList.increment)
this.baseOutlineStroke == orig(this.baseOutlineStroke)
this.autoPopulateSeriesOutlineStroke == orig(this.autoPopulateSeriesOutlineStroke)
this.shapeList == orig(this.shapeList)
this.shapeList.objects == orig(this.shapeList.objects)
this.shapeList.objects[] == orig(this.shapeList.objects[])
this.shapeList.size == orig(this.shapeList.size)
this.shapeList.increment == orig(this.shapeList.increment)
this.autoPopulateSeriesShape == orig(this.autoPopulateSeriesShape)
this.baseShape == orig(this.baseShape)
this.itemLabelsVisibleList == orig(this.itemLabelsVisibleList)
this.itemLabelsVisibleList.objects == orig(this.itemLabelsVisibleList.objects)
this.itemLabelsVisibleList.objects[] == orig(this.itemLabelsVisibleList.objects[])
this.itemLabelsVisibleList.size == orig(this.itemLabelsVisibleList.size)
this.itemLabelsVisibleList.increment == orig(this.itemLabelsVisibleList.increment)
this.baseItemLabelsVisible == orig(this.baseItemLabelsVisible)
this.itemLabelFontList == orig(this.itemLabelFontList)
this.itemLabelFontList.objects == orig(this.itemLabelFontList.objects)
this.itemLabelFontList.objects[] == orig(this.itemLabelFontList.objects[])
this.itemLabelFontList.size == orig(this.itemLabelFontList.size)
this.itemLabelFontList.increment == orig(this.itemLabelFontList.increment)
this.baseItemLabelFont == orig(this.baseItemLabelFont)
this.itemLabelPaintList == orig(this.itemLabelPaintList)
this.itemLabelPaintList.objects == orig(this.itemLabelPaintList.objects)
this.itemLabelPaintList.objects[] == orig(this.itemLabelPaintList.objects[])
this.itemLabelPaintList.size == orig(this.itemLabelPaintList.size)
this.itemLabelPaintList.increment == orig(this.itemLabelPaintList.increment)
this.baseItemLabelPaint == orig(this.baseItemLabelPaint)
this.positiveItemLabelPositionList == orig(this.positiveItemLabelPositionList)
this.positiveItemLabelPositionList.objects == orig(this.positiveItemLabelPositionList.objects)
this.positiveItemLabelPositionList.objects[] == orig(this.positiveItemLabelPositionList.objects[])
this.positiveItemLabelPositionList.size == orig(this.positiveItemLabelPositionList.size)
this.positiveItemLabelPositionList.increment == orig(this.positiveItemLabelPositionList.increment)
this.basePositiveItemLabelPosition == orig(this.basePositiveItemLabelPosition)
this.basePositiveItemLabelPosition.itemLabelAnchor == orig(this.basePositiveItemLabelPosition.itemLabelAnchor)
org.jfree.chart.labels.ItemLabelAnchor.CENTER == orig(org.jfree.chart.labels.ItemLabelAnchor.CENTER)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE1 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE1)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE2 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE2)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE3 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE3)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE4 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE4)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE5 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE5)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE6 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE6)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE7 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE7)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE8 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE8)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE9 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE9)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE10 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE10)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE11 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE11)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE12 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE12)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12)
this.basePositiveItemLabelPosition.itemLabelAnchor.name == orig(this.basePositiveItemLabelPosition.itemLabelAnchor.name)
this.basePositiveItemLabelPosition.itemLabelAnchor.name.toString == orig(this.basePositiveItemLabelPosition.itemLabelAnchor.name.toString)
this.basePositiveItemLabelPosition.textAnchor == orig(this.basePositiveItemLabelPosition.textAnchor)
org.jfree.chart.text.TextAnchor.TOP_LEFT == orig(org.jfree.chart.text.TextAnchor.TOP_LEFT)
org.jfree.chart.text.TextAnchor.TOP_CENTER == orig(org.jfree.chart.text.TextAnchor.TOP_CENTER)
org.jfree.chart.text.TextAnchor.TOP_RIGHT == orig(org.jfree.chart.text.TextAnchor.TOP_RIGHT)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT)
org.jfree.chart.text.TextAnchor.CENTER_LEFT == orig(org.jfree.chart.text.TextAnchor.CENTER_LEFT)
org.jfree.chart.text.TextAnchor.CENTER == orig(org.jfree.chart.text.TextAnchor.CENTER)
org.jfree.chart.text.TextAnchor.CENTER_RIGHT == orig(org.jfree.chart.text.TextAnchor.CENTER_RIGHT)
org.jfree.chart.text.TextAnchor.BASELINE_LEFT == orig(org.jfree.chart.text.TextAnchor.BASELINE_LEFT)
org.jfree.chart.text.TextAnchor.BASELINE_CENTER == orig(org.jfree.chart.text.TextAnchor.BASELINE_CENTER)
org.jfree.chart.text.TextAnchor.BASELINE_RIGHT == orig(org.jfree.chart.text.TextAnchor.BASELINE_RIGHT)
org.jfree.chart.text.TextAnchor.BOTTOM_LEFT == orig(org.jfree.chart.text.TextAnchor.BOTTOM_LEFT)
org.jfree.chart.text.TextAnchor.BOTTOM_CENTER == orig(org.jfree.chart.text.TextAnchor.BOTTOM_CENTER)
org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT == orig(org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT)
this.basePositiveItemLabelPosition.textAnchor.name == orig(this.basePositiveItemLabelPosition.textAnchor.name)
this.basePositiveItemLabelPosition.textAnchor.name.toString == orig(this.basePositiveItemLabelPosition.textAnchor.name.toString)
this.basePositiveItemLabelPosition.rotationAnchor == orig(this.basePositiveItemLabelPosition.rotationAnchor)
this.basePositiveItemLabelPosition.rotationAnchor.name == orig(this.basePositiveItemLabelPosition.rotationAnchor.name)
this.basePositiveItemLabelPosition.rotationAnchor.name.toString == orig(this.basePositiveItemLabelPosition.rotationAnchor.name.toString)
this.basePositiveItemLabelPosition.angle == orig(this.basePositiveItemLabelPosition.angle)
this.negativeItemLabelPositionList == orig(this.negativeItemLabelPositionList)
this.negativeItemLabelPositionList.objects == orig(this.negativeItemLabelPositionList.objects)
this.negativeItemLabelPositionList.objects[] == orig(this.negativeItemLabelPositionList.objects[])
this.negativeItemLabelPositionList.size == orig(this.negativeItemLabelPositionList.size)
this.negativeItemLabelPositionList.increment == orig(this.negativeItemLabelPositionList.increment)
this.baseNegativeItemLabelPosition == orig(this.baseNegativeItemLabelPosition)
this.baseNegativeItemLabelPosition.itemLabelAnchor == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor)
this.baseNegativeItemLabelPosition.itemLabelAnchor.name == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor.name)
this.baseNegativeItemLabelPosition.itemLabelAnchor.name.toString == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor.name.toString)
this.baseNegativeItemLabelPosition.textAnchor == orig(this.baseNegativeItemLabelPosition.textAnchor)
this.baseNegativeItemLabelPosition.textAnchor.name == orig(this.baseNegativeItemLabelPosition.textAnchor.name)
this.baseNegativeItemLabelPosition.textAnchor.name.toString == orig(this.baseNegativeItemLabelPosition.textAnchor.name.toString)
this.baseNegativeItemLabelPosition.rotationAnchor == orig(this.baseNegativeItemLabelPosition.rotationAnchor)
this.baseNegativeItemLabelPosition.rotationAnchor.name == orig(this.baseNegativeItemLabelPosition.rotationAnchor.name)
this.baseNegativeItemLabelPosition.rotationAnchor.name.toString == orig(this.baseNegativeItemLabelPosition.rotationAnchor.name.toString)
this.baseNegativeItemLabelPosition.angle == orig(this.baseNegativeItemLabelPosition.angle)
this.itemLabelAnchorOffset == orig(this.itemLabelAnchorOffset)
this.createEntitiesList == orig(this.createEntitiesList)
this.createEntitiesList.objects == orig(this.createEntitiesList.objects)
this.createEntitiesList.objects[] == orig(this.createEntitiesList.objects[])
this.createEntitiesList.size == orig(this.createEntitiesList.size)
this.createEntitiesList.increment == orig(this.createEntitiesList.increment)
this.baseCreateEntities == orig(this.baseCreateEntities)
this.legendShapeList == orig(this.legendShapeList)
this.legendShapeList.objects == orig(this.legendShapeList.objects)
this.legendShapeList.objects[] == orig(this.legendShapeList.objects[])
this.legendShapeList.size == orig(this.legendShapeList.size)
this.legendShapeList.increment == orig(this.legendShapeList.increment)
this.baseLegendShape == orig(this.baseLegendShape)
this.treatLegendShapeAsLine == orig(this.treatLegendShapeAsLine)
this.legendTextFont == orig(this.legendTextFont)
this.legendTextFont.objects == orig(this.legendTextFont.objects)
this.legendTextFont.objects[] == orig(this.legendTextFont.objects[])
this.legendTextFont.size == orig(this.legendTextFont.size)
this.legendTextFont.increment == orig(this.legendTextFont.increment)
this.baseLegendTextFont == orig(this.baseLegendTextFont)
this.legendTextPaint == orig(this.legendTextPaint)
this.legendTextPaint.objects == orig(this.legendTextPaint.objects)
this.legendTextPaint.objects[] == orig(this.legendTextPaint.objects[])
this.legendTextPaint.size == orig(this.legendTextPaint.size)
this.legendTextPaint.increment == orig(this.legendTextPaint.increment)
this.baseLegendTextPaint == orig(this.baseLegendTextPaint)
this.dataBoundsIncludesVisibleSeriesOnly == orig(this.dataBoundsIncludesVisibleSeriesOnly)
this.defaultEntityRadius == orig(this.defaultEntityRadius)
this.listenerList == orig(this.listenerList)
this.selectedItemAttributes == orig(this.selectedItemAttributes)
this.selectedItemAttributes.allowNull == orig(this.selectedItemAttributes.allowNull)
this.selectedItemAttributes.paintList == orig(this.selectedItemAttributes.paintList)
this.selectedItemAttributes.paintList.objects == orig(this.selectedItemAttributes.paintList.objects)
this.selectedItemAttributes.paintList.objects[] == orig(this.selectedItemAttributes.paintList.objects[])
this.selectedItemAttributes.paintList.size == orig(this.selectedItemAttributes.paintList.size)
this.selectedItemAttributes.paintList.increment == orig(this.selectedItemAttributes.paintList.increment)
this.selectedItemAttributes.defaultPaint == orig(this.selectedItemAttributes.defaultPaint)
this.selectedItemAttributes.strokeList == orig(this.selectedItemAttributes.strokeList)
this.selectedItemAttributes.strokeList.objects == orig(this.selectedItemAttributes.strokeList.objects)
this.selectedItemAttributes.strokeList.objects[] == orig(this.selectedItemAttributes.strokeList.objects[])
this.selectedItemAttributes.strokeList.size == orig(this.selectedItemAttributes.strokeList.size)
this.selectedItemAttributes.strokeList.increment == orig(this.selectedItemAttributes.strokeList.increment)
this.selectedItemAttributes.defaultStroke == orig(this.selectedItemAttributes.defaultStroke)
this.selectedItemAttributes.shapeList == orig(this.selectedItemAttributes.shapeList)
this.selectedItemAttributes.shapeList.objects == orig(this.selectedItemAttributes.shapeList.objects)
this.selectedItemAttributes.shapeList.objects[] == orig(this.selectedItemAttributes.shapeList.objects[])
this.selectedItemAttributes.shapeList.size == orig(this.selectedItemAttributes.shapeList.size)
this.selectedItemAttributes.shapeList.increment == orig(this.selectedItemAttributes.shapeList.increment)
this.selectedItemAttributes.defaultShape == orig(this.selectedItemAttributes.defaultShape)
this.selectedItemAttributes.fillPaintList == orig(this.selectedItemAttributes.fillPaintList)
this.selectedItemAttributes.fillPaintList.objects == orig(this.selectedItemAttributes.fillPaintList.objects)
this.selectedItemAttributes.fillPaintList.objects[] == orig(this.selectedItemAttributes.fillPaintList.objects[])
this.selectedItemAttributes.fillPaintList.size == orig(this.selectedItemAttributes.fillPaintList.size)
this.selectedItemAttributes.fillPaintList.increment == orig(this.selectedItemAttributes.fillPaintList.increment)
this.selectedItemAttributes.defaultFillPaint == orig(this.selectedItemAttributes.defaultFillPaint)
this.selectedItemAttributes.outlinePaintList == orig(this.selectedItemAttributes.outlinePaintList)
this.selectedItemAttributes.outlinePaintList.objects == orig(this.selectedItemAttributes.outlinePaintList.objects)
this.selectedItemAttributes.outlinePaintList.objects[] == orig(this.selectedItemAttributes.outlinePaintList.objects[])
this.selectedItemAttributes.outlinePaintList.size == orig(this.selectedItemAttributes.outlinePaintList.size)
this.selectedItemAttributes.outlinePaintList.increment == orig(this.selectedItemAttributes.outlinePaintList.increment)
this.selectedItemAttributes.defaultOutlinePaint == orig(this.selectedItemAttributes.defaultOutlinePaint)
this.selectedItemAttributes.outlineStrokeList == orig(this.selectedItemAttributes.outlineStrokeList)
this.selectedItemAttributes.defaultOutlineStroke == orig(this.selectedItemAttributes.defaultOutlineStroke)
this.selectedItemAttributes.labelsVisibleList == orig(this.selectedItemAttributes.labelsVisibleList)
this.selectedItemAttributes.defaultLabelVisible == orig(this.selectedItemAttributes.defaultLabelVisible)
this.selectedItemAttributes.labelFontList == orig(this.selectedItemAttributes.labelFontList)
this.selectedItemAttributes.defaultLabelFont == orig(this.selectedItemAttributes.defaultLabelFont)
this.selectedItemAttributes.labelPaintList == orig(this.selectedItemAttributes.labelPaintList)
this.selectedItemAttributes.defaultLabelPaint == orig(this.selectedItemAttributes.defaultLabelPaint)
this.selectedItemAttributes.positionItemLabelPositionList == orig(this.selectedItemAttributes.positionItemLabelPositionList)
this.selectedItemAttributes.defaultPositiveItemLabelPosition == orig(this.selectedItemAttributes.defaultPositiveItemLabelPosition)
this.selectedItemAttributes.negativeItemLabelPositionList == orig(this.selectedItemAttributes.negativeItemLabelPositionList)
this.selectedItemAttributes.defaultNegativeItemLabelPosition == orig(this.selectedItemAttributes.defaultNegativeItemLabelPosition)
this.selectedItemAttributes.createEntityList == orig(this.selectedItemAttributes.createEntityList)
this.selectedItemAttributes.defaultCreateEntity == orig(this.selectedItemAttributes.defaultCreateEntity)
org.jfree.chart.renderer.AbstractRenderer.ADJ == orig(org.jfree.chart.renderer.AbstractRenderer.ADJ)
org.jfree.chart.renderer.AbstractRenderer.OPP == orig(org.jfree.chart.renderer.AbstractRenderer.OPP)
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener == orig(org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener)
this.paintList.objects[] has only one value, of length 8
this.paintList.objects[].getClass().getName() == [java.awt.Color, null, null, null, null, null, null, null]
this.paintList.size == 1
this.strokeList.objects[] has only one value, of length 8
this.strokeList.objects[].getClass().getName() == [java.awt.BasicStroke, null, null, null, null, null, null, null]
this.strokeList.size == 1
this.shapeList.objects[] has only one value, of length 8
this.shapeList.objects[].getClass().getName() == [java.awt.geom.Rectangle2D.Double, null, null, null, null, null, null, null]
this.shapeList.size == 1
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener has only one value
return == null
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() in this.paintList.objects[].getClass().getName()
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() in this.strokeList.objects[].getClass().getName()
===========================================================================
org.jfree.chart.renderer.AbstractRenderer.getLegendTextPaint(int):::ENTER
this.paintList.objects[] has only one value, of length 8
this.paintList.objects[].getClass().getName() == [java.awt.Color, null, null, null, null, null, null, null]
this.paintList.size == 1
this.strokeList.objects[] has only one value, of length 8
this.strokeList.objects[].getClass().getName() == [java.awt.BasicStroke, null, null, null, null, null, null, null]
this.strokeList.size == 1
this.shapeList.objects[] has only one value, of length 8
this.shapeList.objects[].getClass().getName() == [java.awt.geom.Rectangle2D.Double, null, null, null, null, null, null, null]
this.shapeList.size == 1
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener has only one value
series == 0
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() in this.paintList.objects[].getClass().getName()
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() in this.strokeList.objects[].getClass().getName()
===========================================================================
org.jfree.chart.renderer.AbstractRenderer.getLegendTextPaint(int):::EXIT
org.jfree.chart.renderer.AbstractRenderer.ZERO == orig(org.jfree.chart.renderer.AbstractRenderer.ZERO)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(this.basePaint.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(this.baseFillPaint.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(this.baseOutlinePaint.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(this.baseItemLabelPaint.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(this.selectedItemAttributes.defaultFillPaint.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == orig(this.baseStroke.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == orig(this.baseOutlineStroke.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE.getClass().getName() == orig(this.baseShape.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_FONT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_FONT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT)
this.seriesVisibleList == orig(this.seriesVisibleList)
this.seriesVisibleList.objects == orig(this.seriesVisibleList.objects)
this.seriesVisibleList.objects.getClass().getName() == orig(this.seriesVisibleList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.seriesVisibleInLegendList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.paintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.fillPaintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.outlinePaintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.strokeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.outlineStrokeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.shapeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.itemLabelsVisibleList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.itemLabelFontList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.itemLabelPaintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.positiveItemLabelPositionList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.negativeItemLabelPositionList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.createEntitiesList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.legendShapeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.legendTextFont.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.legendTextPaint.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.selectedItemAttributes.paintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.selectedItemAttributes.strokeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.selectedItemAttributes.shapeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.selectedItemAttributes.fillPaintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.selectedItemAttributes.outlinePaintList.objects.getClass().getName())
this.seriesVisibleList.objects[] == orig(this.seriesVisibleList.objects[])
this.seriesVisibleList.size == orig(this.seriesVisibleList.size)
this.seriesVisibleList.increment == orig(this.seriesVisibleList.increment)
this.baseSeriesVisible == orig(this.baseSeriesVisible)
this.seriesVisibleInLegendList == orig(this.seriesVisibleInLegendList)
this.seriesVisibleInLegendList.objects == orig(this.seriesVisibleInLegendList.objects)
this.seriesVisibleInLegendList.objects[] == orig(this.seriesVisibleInLegendList.objects[])
this.seriesVisibleInLegendList.size == orig(this.seriesVisibleInLegendList.size)
this.seriesVisibleInLegendList.increment == orig(this.seriesVisibleInLegendList.increment)
this.baseSeriesVisibleInLegend == orig(this.baseSeriesVisibleInLegend)
this.paintList == orig(this.paintList)
this.paintList.objects == orig(this.paintList.objects)
this.paintList.objects[] == orig(this.paintList.objects[])
this.paintList.size == orig(this.paintList.size)
this.paintList.increment == orig(this.paintList.increment)
this.autoPopulateSeriesPaint == orig(this.autoPopulateSeriesPaint)
this.basePaint == orig(this.basePaint)
this.fillPaintList == orig(this.fillPaintList)
this.fillPaintList.objects == orig(this.fillPaintList.objects)
this.fillPaintList.objects[] == orig(this.fillPaintList.objects[])
this.fillPaintList.size == orig(this.fillPaintList.size)
this.fillPaintList.increment == orig(this.fillPaintList.increment)
this.autoPopulateSeriesFillPaint == orig(this.autoPopulateSeriesFillPaint)
this.baseFillPaint == orig(this.baseFillPaint)
this.outlinePaintList == orig(this.outlinePaintList)
this.outlinePaintList.objects == orig(this.outlinePaintList.objects)
this.outlinePaintList.objects[] == orig(this.outlinePaintList.objects[])
this.outlinePaintList.size == orig(this.outlinePaintList.size)
this.outlinePaintList.increment == orig(this.outlinePaintList.increment)
this.autoPopulateSeriesOutlinePaint == orig(this.autoPopulateSeriesOutlinePaint)
this.baseOutlinePaint == orig(this.baseOutlinePaint)
this.strokeList == orig(this.strokeList)
this.strokeList.objects == orig(this.strokeList.objects)
this.strokeList.objects[] == orig(this.strokeList.objects[])
this.strokeList.size == orig(this.strokeList.size)
this.strokeList.increment == orig(this.strokeList.increment)
this.autoPopulateSeriesStroke == orig(this.autoPopulateSeriesStroke)
this.baseStroke == orig(this.baseStroke)
this.outlineStrokeList == orig(this.outlineStrokeList)
this.outlineStrokeList.objects == orig(this.outlineStrokeList.objects)
this.outlineStrokeList.objects[] == orig(this.outlineStrokeList.objects[])
this.outlineStrokeList.size == orig(this.outlineStrokeList.size)
this.outlineStrokeList.increment == orig(this.outlineStrokeList.increment)
this.baseOutlineStroke == orig(this.baseOutlineStroke)
this.autoPopulateSeriesOutlineStroke == orig(this.autoPopulateSeriesOutlineStroke)
this.shapeList == orig(this.shapeList)
this.shapeList.objects == orig(this.shapeList.objects)
this.shapeList.objects[] == orig(this.shapeList.objects[])
this.shapeList.size == orig(this.shapeList.size)
this.shapeList.increment == orig(this.shapeList.increment)
this.autoPopulateSeriesShape == orig(this.autoPopulateSeriesShape)
this.baseShape == orig(this.baseShape)
this.itemLabelsVisibleList == orig(this.itemLabelsVisibleList)
this.itemLabelsVisibleList.objects == orig(this.itemLabelsVisibleList.objects)
this.itemLabelsVisibleList.objects[] == orig(this.itemLabelsVisibleList.objects[])
this.itemLabelsVisibleList.size == orig(this.itemLabelsVisibleList.size)
this.itemLabelsVisibleList.increment == orig(this.itemLabelsVisibleList.increment)
this.baseItemLabelsVisible == orig(this.baseItemLabelsVisible)
this.itemLabelFontList == orig(this.itemLabelFontList)
this.itemLabelFontList.objects == orig(this.itemLabelFontList.objects)
this.itemLabelFontList.objects[] == orig(this.itemLabelFontList.objects[])
this.itemLabelFontList.size == orig(this.itemLabelFontList.size)
this.itemLabelFontList.increment == orig(this.itemLabelFontList.increment)
this.baseItemLabelFont == orig(this.baseItemLabelFont)
this.itemLabelPaintList == orig(this.itemLabelPaintList)
this.itemLabelPaintList.objects == orig(this.itemLabelPaintList.objects)
this.itemLabelPaintList.objects[] == orig(this.itemLabelPaintList.objects[])
this.itemLabelPaintList.size == orig(this.itemLabelPaintList.size)
this.itemLabelPaintList.increment == orig(this.itemLabelPaintList.increment)
this.baseItemLabelPaint == orig(this.baseItemLabelPaint)
this.positiveItemLabelPositionList == orig(this.positiveItemLabelPositionList)
this.positiveItemLabelPositionList.objects == orig(this.positiveItemLabelPositionList.objects)
this.positiveItemLabelPositionList.objects[] == orig(this.positiveItemLabelPositionList.objects[])
this.positiveItemLabelPositionList.size == orig(this.positiveItemLabelPositionList.size)
this.positiveItemLabelPositionList.increment == orig(this.positiveItemLabelPositionList.increment)
this.basePositiveItemLabelPosition == orig(this.basePositiveItemLabelPosition)
this.basePositiveItemLabelPosition.itemLabelAnchor == orig(this.basePositiveItemLabelPosition.itemLabelAnchor)
org.jfree.chart.labels.ItemLabelAnchor.CENTER == orig(org.jfree.chart.labels.ItemLabelAnchor.CENTER)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE1 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE1)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE2 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE2)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE3 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE3)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE4 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE4)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE5 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE5)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE6 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE6)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE7 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE7)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE8 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE8)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE9 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE9)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE10 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE10)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE11 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE11)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE12 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE12)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12)
this.basePositiveItemLabelPosition.itemLabelAnchor.name == orig(this.basePositiveItemLabelPosition.itemLabelAnchor.name)
this.basePositiveItemLabelPosition.itemLabelAnchor.name.toString == orig(this.basePositiveItemLabelPosition.itemLabelAnchor.name.toString)
this.basePositiveItemLabelPosition.textAnchor == orig(this.basePositiveItemLabelPosition.textAnchor)
org.jfree.chart.text.TextAnchor.TOP_LEFT == orig(org.jfree.chart.text.TextAnchor.TOP_LEFT)
org.jfree.chart.text.TextAnchor.TOP_CENTER == orig(org.jfree.chart.text.TextAnchor.TOP_CENTER)
org.jfree.chart.text.TextAnchor.TOP_RIGHT == orig(org.jfree.chart.text.TextAnchor.TOP_RIGHT)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT)
org.jfree.chart.text.TextAnchor.CENTER_LEFT == orig(org.jfree.chart.text.TextAnchor.CENTER_LEFT)
org.jfree.chart.text.TextAnchor.CENTER == orig(org.jfree.chart.text.TextAnchor.CENTER)
org.jfree.chart.text.TextAnchor.CENTER_RIGHT == orig(org.jfree.chart.text.TextAnchor.CENTER_RIGHT)
org.jfree.chart.text.TextAnchor.BASELINE_LEFT == orig(org.jfree.chart.text.TextAnchor.BASELINE_LEFT)
org.jfree.chart.text.TextAnchor.BASELINE_CENTER == orig(org.jfree.chart.text.TextAnchor.BASELINE_CENTER)
org.jfree.chart.text.TextAnchor.BASELINE_RIGHT == orig(org.jfree.chart.text.TextAnchor.BASELINE_RIGHT)
org.jfree.chart.text.TextAnchor.BOTTOM_LEFT == orig(org.jfree.chart.text.TextAnchor.BOTTOM_LEFT)
org.jfree.chart.text.TextAnchor.BOTTOM_CENTER == orig(org.jfree.chart.text.TextAnchor.BOTTOM_CENTER)
org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT == orig(org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT)
this.basePositiveItemLabelPosition.textAnchor.name == orig(this.basePositiveItemLabelPosition.textAnchor.name)
this.basePositiveItemLabelPosition.textAnchor.name.toString == orig(this.basePositiveItemLabelPosition.textAnchor.name.toString)
this.basePositiveItemLabelPosition.rotationAnchor == orig(this.basePositiveItemLabelPosition.rotationAnchor)
this.basePositiveItemLabelPosition.rotationAnchor.name == orig(this.basePositiveItemLabelPosition.rotationAnchor.name)
this.basePositiveItemLabelPosition.rotationAnchor.name.toString == orig(this.basePositiveItemLabelPosition.rotationAnchor.name.toString)
this.basePositiveItemLabelPosition.angle == orig(this.basePositiveItemLabelPosition.angle)
this.negativeItemLabelPositionList == orig(this.negativeItemLabelPositionList)
this.negativeItemLabelPositionList.objects == orig(this.negativeItemLabelPositionList.objects)
this.negativeItemLabelPositionList.objects[] == orig(this.negativeItemLabelPositionList.objects[])
this.negativeItemLabelPositionList.size == orig(this.negativeItemLabelPositionList.size)
this.negativeItemLabelPositionList.increment == orig(this.negativeItemLabelPositionList.increment)
this.baseNegativeItemLabelPosition == orig(this.baseNegativeItemLabelPosition)
this.baseNegativeItemLabelPosition.itemLabelAnchor == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor)
this.baseNegativeItemLabelPosition.itemLabelAnchor.name == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor.name)
this.baseNegativeItemLabelPosition.itemLabelAnchor.name.toString == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor.name.toString)
this.baseNegativeItemLabelPosition.textAnchor == orig(this.baseNegativeItemLabelPosition.textAnchor)
this.baseNegativeItemLabelPosition.textAnchor.name == orig(this.baseNegativeItemLabelPosition.textAnchor.name)
this.baseNegativeItemLabelPosition.textAnchor.name.toString == orig(this.baseNegativeItemLabelPosition.textAnchor.name.toString)
this.baseNegativeItemLabelPosition.rotationAnchor == orig(this.baseNegativeItemLabelPosition.rotationAnchor)
this.baseNegativeItemLabelPosition.rotationAnchor.name == orig(this.baseNegativeItemLabelPosition.rotationAnchor.name)
this.baseNegativeItemLabelPosition.rotationAnchor.name.toString == orig(this.baseNegativeItemLabelPosition.rotationAnchor.name.toString)
this.baseNegativeItemLabelPosition.angle == orig(this.baseNegativeItemLabelPosition.angle)
this.itemLabelAnchorOffset == orig(this.itemLabelAnchorOffset)
this.createEntitiesList == orig(this.createEntitiesList)
this.createEntitiesList.objects == orig(this.createEntitiesList.objects)
this.createEntitiesList.objects[] == orig(this.createEntitiesList.objects[])
this.createEntitiesList.size == orig(this.createEntitiesList.size)
this.createEntitiesList.increment == orig(this.createEntitiesList.increment)
this.baseCreateEntities == orig(this.baseCreateEntities)
this.legendShapeList == orig(this.legendShapeList)
this.legendShapeList.objects == orig(this.legendShapeList.objects)
this.legendShapeList.objects[] == orig(this.legendShapeList.objects[])
this.legendShapeList.size == orig(this.legendShapeList.size)
this.legendShapeList.increment == orig(this.legendShapeList.increment)
this.baseLegendShape == orig(this.baseLegendShape)
this.treatLegendShapeAsLine == orig(this.treatLegendShapeAsLine)
this.legendTextFont == orig(this.legendTextFont)
this.legendTextFont.objects == orig(this.legendTextFont.objects)
this.legendTextFont.objects[] == orig(this.legendTextFont.objects[])
this.legendTextFont.size == orig(this.legendTextFont.size)
this.legendTextFont.increment == orig(this.legendTextFont.increment)
this.baseLegendTextFont == orig(this.baseLegendTextFont)
this.legendTextPaint == orig(this.legendTextPaint)
this.legendTextPaint.objects == orig(this.legendTextPaint.objects)
this.legendTextPaint.objects[] == orig(this.legendTextPaint.objects[])
this.legendTextPaint.size == orig(this.legendTextPaint.size)
this.legendTextPaint.increment == orig(this.legendTextPaint.increment)
this.baseLegendTextPaint == orig(this.baseLegendTextPaint)
this.dataBoundsIncludesVisibleSeriesOnly == orig(this.dataBoundsIncludesVisibleSeriesOnly)
this.defaultEntityRadius == orig(this.defaultEntityRadius)
this.listenerList == orig(this.listenerList)
this.selectedItemAttributes == orig(this.selectedItemAttributes)
this.selectedItemAttributes.allowNull == orig(this.selectedItemAttributes.allowNull)
this.selectedItemAttributes.paintList == orig(this.selectedItemAttributes.paintList)
this.selectedItemAttributes.paintList.objects == orig(this.selectedItemAttributes.paintList.objects)
this.selectedItemAttributes.paintList.objects[] == orig(this.selectedItemAttributes.paintList.objects[])
this.selectedItemAttributes.paintList.size == orig(this.selectedItemAttributes.paintList.size)
this.selectedItemAttributes.paintList.increment == orig(this.selectedItemAttributes.paintList.increment)
this.selectedItemAttributes.defaultPaint == orig(this.selectedItemAttributes.defaultPaint)
this.selectedItemAttributes.strokeList == orig(this.selectedItemAttributes.strokeList)
this.selectedItemAttributes.strokeList.objects == orig(this.selectedItemAttributes.strokeList.objects)
this.selectedItemAttributes.strokeList.objects[] == orig(this.selectedItemAttributes.strokeList.objects[])
this.selectedItemAttributes.strokeList.size == orig(this.selectedItemAttributes.strokeList.size)
this.selectedItemAttributes.strokeList.increment == orig(this.selectedItemAttributes.strokeList.increment)
this.selectedItemAttributes.defaultStroke == orig(this.selectedItemAttributes.defaultStroke)
this.selectedItemAttributes.shapeList == orig(this.selectedItemAttributes.shapeList)
this.selectedItemAttributes.shapeList.objects == orig(this.selectedItemAttributes.shapeList.objects)
this.selectedItemAttributes.shapeList.objects[] == orig(this.selectedItemAttributes.shapeList.objects[])
this.selectedItemAttributes.shapeList.size == orig(this.selectedItemAttributes.shapeList.size)
this.selectedItemAttributes.shapeList.increment == orig(this.selectedItemAttributes.shapeList.increment)
this.selectedItemAttributes.defaultShape == orig(this.selectedItemAttributes.defaultShape)
this.selectedItemAttributes.fillPaintList == orig(this.selectedItemAttributes.fillPaintList)
this.selectedItemAttributes.fillPaintList.objects == orig(this.selectedItemAttributes.fillPaintList.objects)
this.selectedItemAttributes.fillPaintList.objects[] == orig(this.selectedItemAttributes.fillPaintList.objects[])
this.selectedItemAttributes.fillPaintList.size == orig(this.selectedItemAttributes.fillPaintList.size)
this.selectedItemAttributes.fillPaintList.increment == orig(this.selectedItemAttributes.fillPaintList.increment)
this.selectedItemAttributes.defaultFillPaint == orig(this.selectedItemAttributes.defaultFillPaint)
this.selectedItemAttributes.outlinePaintList == orig(this.selectedItemAttributes.outlinePaintList)
this.selectedItemAttributes.outlinePaintList.objects == orig(this.selectedItemAttributes.outlinePaintList.objects)
this.selectedItemAttributes.outlinePaintList.objects[] == orig(this.selectedItemAttributes.outlinePaintList.objects[])
this.selectedItemAttributes.outlinePaintList.size == orig(this.selectedItemAttributes.outlinePaintList.size)
this.selectedItemAttributes.outlinePaintList.increment == orig(this.selectedItemAttributes.outlinePaintList.increment)
this.selectedItemAttributes.defaultOutlinePaint == orig(this.selectedItemAttributes.defaultOutlinePaint)
this.selectedItemAttributes.outlineStrokeList == orig(this.selectedItemAttributes.outlineStrokeList)
this.selectedItemAttributes.defaultOutlineStroke == orig(this.selectedItemAttributes.defaultOutlineStroke)
this.selectedItemAttributes.labelsVisibleList == orig(this.selectedItemAttributes.labelsVisibleList)
this.selectedItemAttributes.defaultLabelVisible == orig(this.selectedItemAttributes.defaultLabelVisible)
this.selectedItemAttributes.labelFontList == orig(this.selectedItemAttributes.labelFontList)
this.selectedItemAttributes.defaultLabelFont == orig(this.selectedItemAttributes.defaultLabelFont)
this.selectedItemAttributes.labelPaintList == orig(this.selectedItemAttributes.labelPaintList)
this.selectedItemAttributes.defaultLabelPaint == orig(this.selectedItemAttributes.defaultLabelPaint)
this.selectedItemAttributes.positionItemLabelPositionList == orig(this.selectedItemAttributes.positionItemLabelPositionList)
this.selectedItemAttributes.defaultPositiveItemLabelPosition == orig(this.selectedItemAttributes.defaultPositiveItemLabelPosition)
this.selectedItemAttributes.negativeItemLabelPositionList == orig(this.selectedItemAttributes.negativeItemLabelPositionList)
this.selectedItemAttributes.defaultNegativeItemLabelPosition == orig(this.selectedItemAttributes.defaultNegativeItemLabelPosition)
this.selectedItemAttributes.createEntityList == orig(this.selectedItemAttributes.createEntityList)
this.selectedItemAttributes.defaultCreateEntity == orig(this.selectedItemAttributes.defaultCreateEntity)
org.jfree.chart.renderer.AbstractRenderer.ADJ == orig(org.jfree.chart.renderer.AbstractRenderer.ADJ)
org.jfree.chart.renderer.AbstractRenderer.OPP == orig(org.jfree.chart.renderer.AbstractRenderer.OPP)
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener == orig(org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener)
this.paintList.objects[] has only one value, of length 8
this.paintList.objects[].getClass().getName() == [java.awt.Color, null, null, null, null, null, null, null]
this.paintList.size == 1
this.strokeList.objects[] has only one value, of length 8
this.strokeList.objects[].getClass().getName() == [java.awt.BasicStroke, null, null, null, null, null, null, null]
this.strokeList.size == 1
this.shapeList.objects[] has only one value, of length 8
this.shapeList.objects[].getClass().getName() == [java.awt.geom.Rectangle2D.Double, null, null, null, null, null, null, null]
this.shapeList.size == 1
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener has only one value
return == null
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() in this.paintList.objects[].getClass().getName()
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() in this.strokeList.objects[].getClass().getName()
===========================================================================
org.jfree.chart.renderer.AbstractRenderer.getSeriesOutlineStroke(int):::ENTER
this.paintList.objects[] has only one value, of length 8
this.paintList.objects[].getClass().getName() == [java.awt.Color, null, null, null, null, null, null, null]
this.paintList.size == 1
this.strokeList.objects[] contains only nulls and has only one value, of length 8
this.strokeList.objects[] elements == null
this.strokeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.strokeList.objects[].getClass().getName() elements == null
this.strokeList.size == 0
this.shapeList.objects[] has only one value, of length 8
this.shapeList.objects[].getClass().getName() == [java.awt.geom.Rectangle2D.Double, null, null, null, null, null, null, null]
this.shapeList.size == 1
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener has only one value
series == 0
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() in this.paintList.objects[].getClass().getName()
===========================================================================
org.jfree.chart.renderer.AbstractRenderer.getSeriesOutlineStroke(int):::EXIT
org.jfree.chart.renderer.AbstractRenderer.ZERO == orig(org.jfree.chart.renderer.AbstractRenderer.ZERO)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(this.basePaint.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(this.baseFillPaint.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(this.baseOutlinePaint.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(this.baseItemLabelPaint.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(this.selectedItemAttributes.defaultFillPaint.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == orig(this.baseStroke.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == orig(this.baseOutlineStroke.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE.getClass().getName() == orig(this.baseShape.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_FONT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_FONT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT)
this.seriesVisibleList == orig(this.seriesVisibleList)
this.seriesVisibleList.objects == orig(this.seriesVisibleList.objects)
this.seriesVisibleList.objects.getClass().getName() == orig(this.seriesVisibleList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.seriesVisibleInLegendList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.paintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.fillPaintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.outlinePaintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.strokeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.outlineStrokeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.shapeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.itemLabelsVisibleList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.itemLabelFontList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.itemLabelPaintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.positiveItemLabelPositionList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.negativeItemLabelPositionList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.createEntitiesList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.legendShapeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.legendTextFont.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.legendTextPaint.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.selectedItemAttributes.paintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.selectedItemAttributes.strokeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.selectedItemAttributes.shapeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.selectedItemAttributes.fillPaintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.selectedItemAttributes.outlinePaintList.objects.getClass().getName())
this.seriesVisibleList.objects[] == orig(this.seriesVisibleList.objects[])
this.seriesVisibleList.size == orig(this.seriesVisibleList.size)
this.seriesVisibleList.increment == orig(this.seriesVisibleList.increment)
this.baseSeriesVisible == orig(this.baseSeriesVisible)
this.seriesVisibleInLegendList == orig(this.seriesVisibleInLegendList)
this.seriesVisibleInLegendList.objects == orig(this.seriesVisibleInLegendList.objects)
this.seriesVisibleInLegendList.objects[] == orig(this.seriesVisibleInLegendList.objects[])
this.seriesVisibleInLegendList.size == orig(this.seriesVisibleInLegendList.size)
this.seriesVisibleInLegendList.increment == orig(this.seriesVisibleInLegendList.increment)
this.baseSeriesVisibleInLegend == orig(this.baseSeriesVisibleInLegend)
this.paintList == orig(this.paintList)
this.paintList.objects == orig(this.paintList.objects)
this.paintList.objects[] == orig(this.paintList.objects[])
this.paintList.size == orig(this.paintList.size)
this.paintList.increment == orig(this.paintList.increment)
this.autoPopulateSeriesPaint == orig(this.autoPopulateSeriesPaint)
this.basePaint == orig(this.basePaint)
this.fillPaintList == orig(this.fillPaintList)
this.fillPaintList.objects == orig(this.fillPaintList.objects)
this.fillPaintList.objects[] == orig(this.fillPaintList.objects[])
this.fillPaintList.size == orig(this.fillPaintList.size)
this.fillPaintList.increment == orig(this.fillPaintList.increment)
this.autoPopulateSeriesFillPaint == orig(this.autoPopulateSeriesFillPaint)
this.baseFillPaint == orig(this.baseFillPaint)
this.outlinePaintList == orig(this.outlinePaintList)
this.outlinePaintList.objects == orig(this.outlinePaintList.objects)
this.outlinePaintList.objects[] == orig(this.outlinePaintList.objects[])
this.outlinePaintList.size == orig(this.outlinePaintList.size)
this.outlinePaintList.increment == orig(this.outlinePaintList.increment)
this.autoPopulateSeriesOutlinePaint == orig(this.autoPopulateSeriesOutlinePaint)
this.baseOutlinePaint == orig(this.baseOutlinePaint)
this.strokeList == orig(this.strokeList)
this.strokeList.objects == orig(this.strokeList.objects)
this.strokeList.objects[] == orig(this.strokeList.objects[])
this.strokeList.size == orig(this.strokeList.size)
this.strokeList.increment == orig(this.strokeList.increment)
this.autoPopulateSeriesStroke == orig(this.autoPopulateSeriesStroke)
this.baseStroke == orig(this.baseStroke)
this.outlineStrokeList == orig(this.outlineStrokeList)
this.outlineStrokeList.objects == orig(this.outlineStrokeList.objects)
this.outlineStrokeList.objects[] == orig(this.outlineStrokeList.objects[])
this.outlineStrokeList.size == orig(this.outlineStrokeList.size)
this.outlineStrokeList.increment == orig(this.outlineStrokeList.increment)
this.baseOutlineStroke == orig(this.baseOutlineStroke)
this.autoPopulateSeriesOutlineStroke == orig(this.autoPopulateSeriesOutlineStroke)
this.shapeList == orig(this.shapeList)
this.shapeList.objects == orig(this.shapeList.objects)
this.shapeList.objects[] == orig(this.shapeList.objects[])
this.shapeList.size == orig(this.shapeList.size)
this.shapeList.increment == orig(this.shapeList.increment)
this.autoPopulateSeriesShape == orig(this.autoPopulateSeriesShape)
this.baseShape == orig(this.baseShape)
this.itemLabelsVisibleList == orig(this.itemLabelsVisibleList)
this.itemLabelsVisibleList.objects == orig(this.itemLabelsVisibleList.objects)
this.itemLabelsVisibleList.objects[] == orig(this.itemLabelsVisibleList.objects[])
this.itemLabelsVisibleList.size == orig(this.itemLabelsVisibleList.size)
this.itemLabelsVisibleList.increment == orig(this.itemLabelsVisibleList.increment)
this.baseItemLabelsVisible == orig(this.baseItemLabelsVisible)
this.itemLabelFontList == orig(this.itemLabelFontList)
this.itemLabelFontList.objects == orig(this.itemLabelFontList.objects)
this.itemLabelFontList.objects[] == orig(this.itemLabelFontList.objects[])
this.itemLabelFontList.size == orig(this.itemLabelFontList.size)
this.itemLabelFontList.increment == orig(this.itemLabelFontList.increment)
this.baseItemLabelFont == orig(this.baseItemLabelFont)
this.itemLabelPaintList == orig(this.itemLabelPaintList)
this.itemLabelPaintList.objects == orig(this.itemLabelPaintList.objects)
this.itemLabelPaintList.objects[] == orig(this.itemLabelPaintList.objects[])
this.itemLabelPaintList.size == orig(this.itemLabelPaintList.size)
this.itemLabelPaintList.increment == orig(this.itemLabelPaintList.increment)
this.baseItemLabelPaint == orig(this.baseItemLabelPaint)
this.positiveItemLabelPositionList == orig(this.positiveItemLabelPositionList)
this.positiveItemLabelPositionList.objects == orig(this.positiveItemLabelPositionList.objects)
this.positiveItemLabelPositionList.objects[] == orig(this.positiveItemLabelPositionList.objects[])
this.positiveItemLabelPositionList.size == orig(this.positiveItemLabelPositionList.size)
this.positiveItemLabelPositionList.increment == orig(this.positiveItemLabelPositionList.increment)
this.basePositiveItemLabelPosition == orig(this.basePositiveItemLabelPosition)
this.basePositiveItemLabelPosition.itemLabelAnchor == orig(this.basePositiveItemLabelPosition.itemLabelAnchor)
org.jfree.chart.labels.ItemLabelAnchor.CENTER == orig(org.jfree.chart.labels.ItemLabelAnchor.CENTER)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE1 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE1)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE2 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE2)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE3 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE3)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE4 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE4)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE5 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE5)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE6 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE6)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE7 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE7)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE8 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE8)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE9 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE9)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE10 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE10)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE11 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE11)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE12 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE12)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12)
this.basePositiveItemLabelPosition.itemLabelAnchor.name == orig(this.basePositiveItemLabelPosition.itemLabelAnchor.name)
this.basePositiveItemLabelPosition.itemLabelAnchor.name.toString == orig(this.basePositiveItemLabelPosition.itemLabelAnchor.name.toString)
this.basePositiveItemLabelPosition.textAnchor == orig(this.basePositiveItemLabelPosition.textAnchor)
org.jfree.chart.text.TextAnchor.TOP_LEFT == orig(org.jfree.chart.text.TextAnchor.TOP_LEFT)
org.jfree.chart.text.TextAnchor.TOP_CENTER == orig(org.jfree.chart.text.TextAnchor.TOP_CENTER)
org.jfree.chart.text.TextAnchor.TOP_RIGHT == orig(org.jfree.chart.text.TextAnchor.TOP_RIGHT)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT)
org.jfree.chart.text.TextAnchor.CENTER_LEFT == orig(org.jfree.chart.text.TextAnchor.CENTER_LEFT)
org.jfree.chart.text.TextAnchor.CENTER == orig(org.jfree.chart.text.TextAnchor.CENTER)
org.jfree.chart.text.TextAnchor.CENTER_RIGHT == orig(org.jfree.chart.text.TextAnchor.CENTER_RIGHT)
org.jfree.chart.text.TextAnchor.BASELINE_LEFT == orig(org.jfree.chart.text.TextAnchor.BASELINE_LEFT)
org.jfree.chart.text.TextAnchor.BASELINE_CENTER == orig(org.jfree.chart.text.TextAnchor.BASELINE_CENTER)
org.jfree.chart.text.TextAnchor.BASELINE_RIGHT == orig(org.jfree.chart.text.TextAnchor.BASELINE_RIGHT)
org.jfree.chart.text.TextAnchor.BOTTOM_LEFT == orig(org.jfree.chart.text.TextAnchor.BOTTOM_LEFT)
org.jfree.chart.text.TextAnchor.BOTTOM_CENTER == orig(org.jfree.chart.text.TextAnchor.BOTTOM_CENTER)
org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT == orig(org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT)
this.basePositiveItemLabelPosition.textAnchor.name == orig(this.basePositiveItemLabelPosition.textAnchor.name)
this.basePositiveItemLabelPosition.textAnchor.name.toString == orig(this.basePositiveItemLabelPosition.textAnchor.name.toString)
this.basePositiveItemLabelPosition.rotationAnchor == orig(this.basePositiveItemLabelPosition.rotationAnchor)
this.basePositiveItemLabelPosition.rotationAnchor.name == orig(this.basePositiveItemLabelPosition.rotationAnchor.name)
this.basePositiveItemLabelPosition.rotationAnchor.name.toString == orig(this.basePositiveItemLabelPosition.rotationAnchor.name.toString)
this.basePositiveItemLabelPosition.angle == orig(this.basePositiveItemLabelPosition.angle)
this.negativeItemLabelPositionList == orig(this.negativeItemLabelPositionList)
this.negativeItemLabelPositionList.objects == orig(this.negativeItemLabelPositionList.objects)
this.negativeItemLabelPositionList.objects[] == orig(this.negativeItemLabelPositionList.objects[])
this.negativeItemLabelPositionList.size == orig(this.negativeItemLabelPositionList.size)
this.negativeItemLabelPositionList.increment == orig(this.negativeItemLabelPositionList.increment)
this.baseNegativeItemLabelPosition == orig(this.baseNegativeItemLabelPosition)
this.baseNegativeItemLabelPosition.itemLabelAnchor == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor)
this.baseNegativeItemLabelPosition.itemLabelAnchor.name == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor.name)
this.baseNegativeItemLabelPosition.itemLabelAnchor.name.toString == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor.name.toString)
this.baseNegativeItemLabelPosition.textAnchor == orig(this.baseNegativeItemLabelPosition.textAnchor)
this.baseNegativeItemLabelPosition.textAnchor.name == orig(this.baseNegativeItemLabelPosition.textAnchor.name)
this.baseNegativeItemLabelPosition.textAnchor.name.toString == orig(this.baseNegativeItemLabelPosition.textAnchor.name.toString)
this.baseNegativeItemLabelPosition.rotationAnchor == orig(this.baseNegativeItemLabelPosition.rotationAnchor)
this.baseNegativeItemLabelPosition.rotationAnchor.name == orig(this.baseNegativeItemLabelPosition.rotationAnchor.name)
this.baseNegativeItemLabelPosition.rotationAnchor.name.toString == orig(this.baseNegativeItemLabelPosition.rotationAnchor.name.toString)
this.baseNegativeItemLabelPosition.angle == orig(this.baseNegativeItemLabelPosition.angle)
this.itemLabelAnchorOffset == orig(this.itemLabelAnchorOffset)
this.createEntitiesList == orig(this.createEntitiesList)
this.createEntitiesList.objects == orig(this.createEntitiesList.objects)
this.createEntitiesList.objects[] == orig(this.createEntitiesList.objects[])
this.createEntitiesList.size == orig(this.createEntitiesList.size)
this.createEntitiesList.increment == orig(this.createEntitiesList.increment)
this.baseCreateEntities == orig(this.baseCreateEntities)
this.legendShapeList == orig(this.legendShapeList)
this.legendShapeList.objects == orig(this.legendShapeList.objects)
this.legendShapeList.objects[] == orig(this.legendShapeList.objects[])
this.legendShapeList.size == orig(this.legendShapeList.size)
this.legendShapeList.increment == orig(this.legendShapeList.increment)
this.baseLegendShape == orig(this.baseLegendShape)
this.treatLegendShapeAsLine == orig(this.treatLegendShapeAsLine)
this.legendTextFont == orig(this.legendTextFont)
this.legendTextFont.objects == orig(this.legendTextFont.objects)
this.legendTextFont.objects[] == orig(this.legendTextFont.objects[])
this.legendTextFont.size == orig(this.legendTextFont.size)
this.legendTextFont.increment == orig(this.legendTextFont.increment)
this.baseLegendTextFont == orig(this.baseLegendTextFont)
this.legendTextPaint == orig(this.legendTextPaint)
this.legendTextPaint.objects == orig(this.legendTextPaint.objects)
this.legendTextPaint.objects[] == orig(this.legendTextPaint.objects[])
this.legendTextPaint.size == orig(this.legendTextPaint.size)
this.legendTextPaint.increment == orig(this.legendTextPaint.increment)
this.baseLegendTextPaint == orig(this.baseLegendTextPaint)
this.dataBoundsIncludesVisibleSeriesOnly == orig(this.dataBoundsIncludesVisibleSeriesOnly)
this.defaultEntityRadius == orig(this.defaultEntityRadius)
this.listenerList == orig(this.listenerList)
this.selectedItemAttributes == orig(this.selectedItemAttributes)
this.selectedItemAttributes.allowNull == orig(this.selectedItemAttributes.allowNull)
this.selectedItemAttributes.paintList == orig(this.selectedItemAttributes.paintList)
this.selectedItemAttributes.paintList.objects == orig(this.selectedItemAttributes.paintList.objects)
this.selectedItemAttributes.paintList.objects[] == orig(this.selectedItemAttributes.paintList.objects[])
this.selectedItemAttributes.paintList.size == orig(this.selectedItemAttributes.paintList.size)
this.selectedItemAttributes.paintList.increment == orig(this.selectedItemAttributes.paintList.increment)
this.selectedItemAttributes.defaultPaint == orig(this.selectedItemAttributes.defaultPaint)
this.selectedItemAttributes.strokeList == orig(this.selectedItemAttributes.strokeList)
this.selectedItemAttributes.strokeList.objects == orig(this.selectedItemAttributes.strokeList.objects)
this.selectedItemAttributes.strokeList.objects[] == orig(this.selectedItemAttributes.strokeList.objects[])
this.selectedItemAttributes.strokeList.size == orig(this.selectedItemAttributes.strokeList.size)
this.selectedItemAttributes.strokeList.increment == orig(this.selectedItemAttributes.strokeList.increment)
this.selectedItemAttributes.defaultStroke == orig(this.selectedItemAttributes.defaultStroke)
this.selectedItemAttributes.shapeList == orig(this.selectedItemAttributes.shapeList)
this.selectedItemAttributes.shapeList.objects == orig(this.selectedItemAttributes.shapeList.objects)
this.selectedItemAttributes.shapeList.objects[] == orig(this.selectedItemAttributes.shapeList.objects[])
this.selectedItemAttributes.shapeList.size == orig(this.selectedItemAttributes.shapeList.size)
this.selectedItemAttributes.shapeList.increment == orig(this.selectedItemAttributes.shapeList.increment)
this.selectedItemAttributes.defaultShape == orig(this.selectedItemAttributes.defaultShape)
this.selectedItemAttributes.fillPaintList == orig(this.selectedItemAttributes.fillPaintList)
this.selectedItemAttributes.fillPaintList.objects == orig(this.selectedItemAttributes.fillPaintList.objects)
this.selectedItemAttributes.fillPaintList.objects[] == orig(this.selectedItemAttributes.fillPaintList.objects[])
this.selectedItemAttributes.fillPaintList.size == orig(this.selectedItemAttributes.fillPaintList.size)
this.selectedItemAttributes.fillPaintList.increment == orig(this.selectedItemAttributes.fillPaintList.increment)
this.selectedItemAttributes.defaultFillPaint == orig(this.selectedItemAttributes.defaultFillPaint)
this.selectedItemAttributes.outlinePaintList == orig(this.selectedItemAttributes.outlinePaintList)
this.selectedItemAttributes.outlinePaintList.objects == orig(this.selectedItemAttributes.outlinePaintList.objects)
this.selectedItemAttributes.outlinePaintList.objects[] == orig(this.selectedItemAttributes.outlinePaintList.objects[])
this.selectedItemAttributes.outlinePaintList.size == orig(this.selectedItemAttributes.outlinePaintList.size)
this.selectedItemAttributes.outlinePaintList.increment == orig(this.selectedItemAttributes.outlinePaintList.increment)
this.selectedItemAttributes.defaultOutlinePaint == orig(this.selectedItemAttributes.defaultOutlinePaint)
this.selectedItemAttributes.outlineStrokeList == orig(this.selectedItemAttributes.outlineStrokeList)
this.selectedItemAttributes.defaultOutlineStroke == orig(this.selectedItemAttributes.defaultOutlineStroke)
this.selectedItemAttributes.labelsVisibleList == orig(this.selectedItemAttributes.labelsVisibleList)
this.selectedItemAttributes.defaultLabelVisible == orig(this.selectedItemAttributes.defaultLabelVisible)
this.selectedItemAttributes.labelFontList == orig(this.selectedItemAttributes.labelFontList)
this.selectedItemAttributes.defaultLabelFont == orig(this.selectedItemAttributes.defaultLabelFont)
this.selectedItemAttributes.labelPaintList == orig(this.selectedItemAttributes.labelPaintList)
this.selectedItemAttributes.defaultLabelPaint == orig(this.selectedItemAttributes.defaultLabelPaint)
this.selectedItemAttributes.positionItemLabelPositionList == orig(this.selectedItemAttributes.positionItemLabelPositionList)
this.selectedItemAttributes.defaultPositiveItemLabelPosition == orig(this.selectedItemAttributes.defaultPositiveItemLabelPosition)
this.selectedItemAttributes.negativeItemLabelPositionList == orig(this.selectedItemAttributes.negativeItemLabelPositionList)
this.selectedItemAttributes.defaultNegativeItemLabelPosition == orig(this.selectedItemAttributes.defaultNegativeItemLabelPosition)
this.selectedItemAttributes.createEntityList == orig(this.selectedItemAttributes.createEntityList)
this.selectedItemAttributes.defaultCreateEntity == orig(this.selectedItemAttributes.defaultCreateEntity)
org.jfree.chart.renderer.AbstractRenderer.ADJ == orig(org.jfree.chart.renderer.AbstractRenderer.ADJ)
org.jfree.chart.renderer.AbstractRenderer.OPP == orig(org.jfree.chart.renderer.AbstractRenderer.OPP)
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener == orig(org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener)
this.paintList.objects[] has only one value, of length 8
this.paintList.objects[].getClass().getName() == [java.awt.Color, null, null, null, null, null, null, null]
this.paintList.size == 1
this.strokeList.objects[] contains only nulls and has only one value, of length 8
this.strokeList.objects[] elements == null
this.strokeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.strokeList.objects[].getClass().getName() elements == null
this.strokeList.size == 0
this.shapeList.objects[] has only one value, of length 8
this.shapeList.objects[].getClass().getName() == [java.awt.geom.Rectangle2D.Double, null, null, null, null, null, null, null]
this.shapeList.size == 1
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener has only one value
return == null
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() in this.paintList.objects[].getClass().getName()
===========================================================================
org.jfree.chart.renderer.AbstractRenderer.getSeriesPaint(int):::ENTER
this.shapeList.objects[] has only one value, of length 8
this.shapeList.objects[].getClass().getName() == [java.awt.geom.Rectangle2D.Double, null, null, null, null, null, null, null]
this.shapeList.size == 1
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener has only one value
series == 0
===========================================================================
org.jfree.chart.renderer.AbstractRenderer.getSeriesPaint(int):::EXIT
org.jfree.chart.renderer.AbstractRenderer.ZERO == orig(org.jfree.chart.renderer.AbstractRenderer.ZERO)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == return.getClass().getName()
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(this.basePaint.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(this.baseFillPaint.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(this.baseOutlinePaint.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(this.baseItemLabelPaint.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(this.selectedItemAttributes.defaultFillPaint.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == orig(this.baseStroke.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == orig(this.baseOutlineStroke.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE.getClass().getName() == orig(this.baseShape.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_FONT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_FONT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT)
this.seriesVisibleList == orig(this.seriesVisibleList)
this.seriesVisibleList.objects == orig(this.seriesVisibleList.objects)
this.seriesVisibleList.objects.getClass().getName() == orig(this.seriesVisibleList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.seriesVisibleInLegendList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.paintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.fillPaintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.outlinePaintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.strokeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.outlineStrokeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.shapeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.itemLabelsVisibleList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.itemLabelFontList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.itemLabelPaintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.positiveItemLabelPositionList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.negativeItemLabelPositionList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.createEntitiesList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.legendShapeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.legendTextFont.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.legendTextPaint.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.selectedItemAttributes.paintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.selectedItemAttributes.strokeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.selectedItemAttributes.shapeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.selectedItemAttributes.fillPaintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.selectedItemAttributes.outlinePaintList.objects.getClass().getName())
this.seriesVisibleList.objects[] == orig(this.seriesVisibleList.objects[])
this.seriesVisibleList.size == orig(this.seriesVisibleList.size)
this.seriesVisibleList.increment == orig(this.seriesVisibleList.increment)
this.baseSeriesVisible == orig(this.baseSeriesVisible)
this.seriesVisibleInLegendList == orig(this.seriesVisibleInLegendList)
this.seriesVisibleInLegendList.objects == orig(this.seriesVisibleInLegendList.objects)
this.seriesVisibleInLegendList.objects[] == orig(this.seriesVisibleInLegendList.objects[])
this.seriesVisibleInLegendList.size == orig(this.seriesVisibleInLegendList.size)
this.seriesVisibleInLegendList.increment == orig(this.seriesVisibleInLegendList.increment)
this.baseSeriesVisibleInLegend == orig(this.baseSeriesVisibleInLegend)
this.paintList == orig(this.paintList)
this.paintList.objects == orig(this.paintList.objects)
this.paintList.objects[] == orig(this.paintList.objects[])
this.paintList.size == orig(this.paintList.size)
this.paintList.increment == orig(this.paintList.increment)
this.autoPopulateSeriesPaint == orig(this.autoPopulateSeriesPaint)
this.basePaint == orig(this.basePaint)
this.fillPaintList == orig(this.fillPaintList)
this.fillPaintList.objects == orig(this.fillPaintList.objects)
this.fillPaintList.objects[] == orig(this.fillPaintList.objects[])
this.fillPaintList.size == orig(this.fillPaintList.size)
this.fillPaintList.increment == orig(this.fillPaintList.increment)
this.autoPopulateSeriesFillPaint == orig(this.autoPopulateSeriesFillPaint)
this.baseFillPaint == orig(this.baseFillPaint)
this.outlinePaintList == orig(this.outlinePaintList)
this.outlinePaintList.objects == orig(this.outlinePaintList.objects)
this.outlinePaintList.objects[] == orig(this.outlinePaintList.objects[])
this.outlinePaintList.size == orig(this.outlinePaintList.size)
this.outlinePaintList.increment == orig(this.outlinePaintList.increment)
this.autoPopulateSeriesOutlinePaint == orig(this.autoPopulateSeriesOutlinePaint)
this.baseOutlinePaint == orig(this.baseOutlinePaint)
this.strokeList == orig(this.strokeList)
this.strokeList.objects == orig(this.strokeList.objects)
this.strokeList.objects[] == orig(this.strokeList.objects[])
this.strokeList.size == orig(this.strokeList.size)
this.strokeList.increment == orig(this.strokeList.increment)
this.autoPopulateSeriesStroke == orig(this.autoPopulateSeriesStroke)
this.baseStroke == orig(this.baseStroke)
this.outlineStrokeList == orig(this.outlineStrokeList)
this.outlineStrokeList.objects == orig(this.outlineStrokeList.objects)
this.outlineStrokeList.objects[] == orig(this.outlineStrokeList.objects[])
this.outlineStrokeList.size == orig(this.outlineStrokeList.size)
this.outlineStrokeList.increment == orig(this.outlineStrokeList.increment)
this.baseOutlineStroke == orig(this.baseOutlineStroke)
this.autoPopulateSeriesOutlineStroke == orig(this.autoPopulateSeriesOutlineStroke)
this.shapeList == orig(this.shapeList)
this.shapeList.objects == orig(this.shapeList.objects)
this.shapeList.objects[] == orig(this.shapeList.objects[])
this.shapeList.size == orig(this.shapeList.size)
this.shapeList.increment == orig(this.shapeList.increment)
this.autoPopulateSeriesShape == orig(this.autoPopulateSeriesShape)
this.baseShape == orig(this.baseShape)
this.itemLabelsVisibleList == orig(this.itemLabelsVisibleList)
this.itemLabelsVisibleList.objects == orig(this.itemLabelsVisibleList.objects)
this.itemLabelsVisibleList.objects[] == orig(this.itemLabelsVisibleList.objects[])
this.itemLabelsVisibleList.size == orig(this.itemLabelsVisibleList.size)
this.itemLabelsVisibleList.increment == orig(this.itemLabelsVisibleList.increment)
this.baseItemLabelsVisible == orig(this.baseItemLabelsVisible)
this.itemLabelFontList == orig(this.itemLabelFontList)
this.itemLabelFontList.objects == orig(this.itemLabelFontList.objects)
this.itemLabelFontList.objects[] == orig(this.itemLabelFontList.objects[])
this.itemLabelFontList.size == orig(this.itemLabelFontList.size)
this.itemLabelFontList.increment == orig(this.itemLabelFontList.increment)
this.baseItemLabelFont == orig(this.baseItemLabelFont)
this.itemLabelPaintList == orig(this.itemLabelPaintList)
this.itemLabelPaintList.objects == orig(this.itemLabelPaintList.objects)
this.itemLabelPaintList.objects[] == orig(this.itemLabelPaintList.objects[])
this.itemLabelPaintList.size == orig(this.itemLabelPaintList.size)
this.itemLabelPaintList.increment == orig(this.itemLabelPaintList.increment)
this.baseItemLabelPaint == orig(this.baseItemLabelPaint)
this.positiveItemLabelPositionList == orig(this.positiveItemLabelPositionList)
this.positiveItemLabelPositionList.objects == orig(this.positiveItemLabelPositionList.objects)
this.positiveItemLabelPositionList.objects[] == orig(this.positiveItemLabelPositionList.objects[])
this.positiveItemLabelPositionList.size == orig(this.positiveItemLabelPositionList.size)
this.positiveItemLabelPositionList.increment == orig(this.positiveItemLabelPositionList.increment)
this.basePositiveItemLabelPosition == orig(this.basePositiveItemLabelPosition)
this.basePositiveItemLabelPosition.itemLabelAnchor == orig(this.basePositiveItemLabelPosition.itemLabelAnchor)
org.jfree.chart.labels.ItemLabelAnchor.CENTER == orig(org.jfree.chart.labels.ItemLabelAnchor.CENTER)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE1 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE1)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE2 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE2)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE3 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE3)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE4 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE4)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE5 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE5)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE6 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE6)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE7 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE7)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE8 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE8)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE9 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE9)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE10 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE10)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE11 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE11)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE12 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE12)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12)
this.basePositiveItemLabelPosition.itemLabelAnchor.name == orig(this.basePositiveItemLabelPosition.itemLabelAnchor.name)
this.basePositiveItemLabelPosition.itemLabelAnchor.name.toString == orig(this.basePositiveItemLabelPosition.itemLabelAnchor.name.toString)
this.basePositiveItemLabelPosition.textAnchor == orig(this.basePositiveItemLabelPosition.textAnchor)
org.jfree.chart.text.TextAnchor.TOP_LEFT == orig(org.jfree.chart.text.TextAnchor.TOP_LEFT)
org.jfree.chart.text.TextAnchor.TOP_CENTER == orig(org.jfree.chart.text.TextAnchor.TOP_CENTER)
org.jfree.chart.text.TextAnchor.TOP_RIGHT == orig(org.jfree.chart.text.TextAnchor.TOP_RIGHT)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT)
org.jfree.chart.text.TextAnchor.CENTER_LEFT == orig(org.jfree.chart.text.TextAnchor.CENTER_LEFT)
org.jfree.chart.text.TextAnchor.CENTER == orig(org.jfree.chart.text.TextAnchor.CENTER)
org.jfree.chart.text.TextAnchor.CENTER_RIGHT == orig(org.jfree.chart.text.TextAnchor.CENTER_RIGHT)
org.jfree.chart.text.TextAnchor.BASELINE_LEFT == orig(org.jfree.chart.text.TextAnchor.BASELINE_LEFT)
org.jfree.chart.text.TextAnchor.BASELINE_CENTER == orig(org.jfree.chart.text.TextAnchor.BASELINE_CENTER)
org.jfree.chart.text.TextAnchor.BASELINE_RIGHT == orig(org.jfree.chart.text.TextAnchor.BASELINE_RIGHT)
org.jfree.chart.text.TextAnchor.BOTTOM_LEFT == orig(org.jfree.chart.text.TextAnchor.BOTTOM_LEFT)
org.jfree.chart.text.TextAnchor.BOTTOM_CENTER == orig(org.jfree.chart.text.TextAnchor.BOTTOM_CENTER)
org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT == orig(org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT)
this.basePositiveItemLabelPosition.textAnchor.name == orig(this.basePositiveItemLabelPosition.textAnchor.name)
this.basePositiveItemLabelPosition.textAnchor.name.toString == orig(this.basePositiveItemLabelPosition.textAnchor.name.toString)
this.basePositiveItemLabelPosition.rotationAnchor == orig(this.basePositiveItemLabelPosition.rotationAnchor)
this.basePositiveItemLabelPosition.rotationAnchor.name == orig(this.basePositiveItemLabelPosition.rotationAnchor.name)
this.basePositiveItemLabelPosition.rotationAnchor.name.toString == orig(this.basePositiveItemLabelPosition.rotationAnchor.name.toString)
this.basePositiveItemLabelPosition.angle == orig(this.basePositiveItemLabelPosition.angle)
this.negativeItemLabelPositionList == orig(this.negativeItemLabelPositionList)
this.negativeItemLabelPositionList.objects == orig(this.negativeItemLabelPositionList.objects)
this.negativeItemLabelPositionList.objects[] == orig(this.negativeItemLabelPositionList.objects[])
this.negativeItemLabelPositionList.size == orig(this.negativeItemLabelPositionList.size)
this.negativeItemLabelPositionList.increment == orig(this.negativeItemLabelPositionList.increment)
this.baseNegativeItemLabelPosition == orig(this.baseNegativeItemLabelPosition)
this.baseNegativeItemLabelPosition.itemLabelAnchor == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor)
this.baseNegativeItemLabelPosition.itemLabelAnchor.name == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor.name)
this.baseNegativeItemLabelPosition.itemLabelAnchor.name.toString == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor.name.toString)
this.baseNegativeItemLabelPosition.textAnchor == orig(this.baseNegativeItemLabelPosition.textAnchor)
this.baseNegativeItemLabelPosition.textAnchor.name == orig(this.baseNegativeItemLabelPosition.textAnchor.name)
this.baseNegativeItemLabelPosition.textAnchor.name.toString == orig(this.baseNegativeItemLabelPosition.textAnchor.name.toString)
this.baseNegativeItemLabelPosition.rotationAnchor == orig(this.baseNegativeItemLabelPosition.rotationAnchor)
this.baseNegativeItemLabelPosition.rotationAnchor.name == orig(this.baseNegativeItemLabelPosition.rotationAnchor.name)
this.baseNegativeItemLabelPosition.rotationAnchor.name.toString == orig(this.baseNegativeItemLabelPosition.rotationAnchor.name.toString)
this.baseNegativeItemLabelPosition.angle == orig(this.baseNegativeItemLabelPosition.angle)
this.itemLabelAnchorOffset == orig(this.itemLabelAnchorOffset)
this.createEntitiesList == orig(this.createEntitiesList)
this.createEntitiesList.objects == orig(this.createEntitiesList.objects)
this.createEntitiesList.objects[] == orig(this.createEntitiesList.objects[])
this.createEntitiesList.size == orig(this.createEntitiesList.size)
this.createEntitiesList.increment == orig(this.createEntitiesList.increment)
this.baseCreateEntities == orig(this.baseCreateEntities)
this.legendShapeList == orig(this.legendShapeList)
this.legendShapeList.objects == orig(this.legendShapeList.objects)
this.legendShapeList.objects[] == orig(this.legendShapeList.objects[])
this.legendShapeList.size == orig(this.legendShapeList.size)
this.legendShapeList.increment == orig(this.legendShapeList.increment)
this.baseLegendShape == orig(this.baseLegendShape)
this.treatLegendShapeAsLine == orig(this.treatLegendShapeAsLine)
this.legendTextFont == orig(this.legendTextFont)
this.legendTextFont.objects == orig(this.legendTextFont.objects)
this.legendTextFont.objects[] == orig(this.legendTextFont.objects[])
this.legendTextFont.size == orig(this.legendTextFont.size)
this.legendTextFont.increment == orig(this.legendTextFont.increment)
this.baseLegendTextFont == orig(this.baseLegendTextFont)
this.legendTextPaint == orig(this.legendTextPaint)
this.legendTextPaint.objects == orig(this.legendTextPaint.objects)
this.legendTextPaint.objects[] == orig(this.legendTextPaint.objects[])
this.legendTextPaint.size == orig(this.legendTextPaint.size)
this.legendTextPaint.increment == orig(this.legendTextPaint.increment)
this.baseLegendTextPaint == orig(this.baseLegendTextPaint)
this.dataBoundsIncludesVisibleSeriesOnly == orig(this.dataBoundsIncludesVisibleSeriesOnly)
this.defaultEntityRadius == orig(this.defaultEntityRadius)
this.listenerList == orig(this.listenerList)
this.selectedItemAttributes == orig(this.selectedItemAttributes)
this.selectedItemAttributes.allowNull == orig(this.selectedItemAttributes.allowNull)
this.selectedItemAttributes.paintList == orig(this.selectedItemAttributes.paintList)
this.selectedItemAttributes.paintList.objects == orig(this.selectedItemAttributes.paintList.objects)
this.selectedItemAttributes.paintList.objects[] == orig(this.selectedItemAttributes.paintList.objects[])
this.selectedItemAttributes.paintList.size == orig(this.selectedItemAttributes.paintList.size)
this.selectedItemAttributes.paintList.increment == orig(this.selectedItemAttributes.paintList.increment)
this.selectedItemAttributes.defaultPaint == orig(this.selectedItemAttributes.defaultPaint)
this.selectedItemAttributes.strokeList == orig(this.selectedItemAttributes.strokeList)
this.selectedItemAttributes.strokeList.objects == orig(this.selectedItemAttributes.strokeList.objects)
this.selectedItemAttributes.strokeList.objects[] == orig(this.selectedItemAttributes.strokeList.objects[])
this.selectedItemAttributes.strokeList.size == orig(this.selectedItemAttributes.strokeList.size)
this.selectedItemAttributes.strokeList.increment == orig(this.selectedItemAttributes.strokeList.increment)
this.selectedItemAttributes.defaultStroke == orig(this.selectedItemAttributes.defaultStroke)
this.selectedItemAttributes.shapeList == orig(this.selectedItemAttributes.shapeList)
this.selectedItemAttributes.shapeList.objects == orig(this.selectedItemAttributes.shapeList.objects)
this.selectedItemAttributes.shapeList.objects[] == orig(this.selectedItemAttributes.shapeList.objects[])
this.selectedItemAttributes.shapeList.size == orig(this.selectedItemAttributes.shapeList.size)
this.selectedItemAttributes.shapeList.increment == orig(this.selectedItemAttributes.shapeList.increment)
this.selectedItemAttributes.defaultShape == orig(this.selectedItemAttributes.defaultShape)
this.selectedItemAttributes.fillPaintList == orig(this.selectedItemAttributes.fillPaintList)
this.selectedItemAttributes.fillPaintList.objects == orig(this.selectedItemAttributes.fillPaintList.objects)
this.selectedItemAttributes.fillPaintList.objects[] == orig(this.selectedItemAttributes.fillPaintList.objects[])
this.selectedItemAttributes.fillPaintList.size == orig(this.selectedItemAttributes.fillPaintList.size)
this.selectedItemAttributes.fillPaintList.increment == orig(this.selectedItemAttributes.fillPaintList.increment)
this.selectedItemAttributes.defaultFillPaint == orig(this.selectedItemAttributes.defaultFillPaint)
this.selectedItemAttributes.outlinePaintList == orig(this.selectedItemAttributes.outlinePaintList)
this.selectedItemAttributes.outlinePaintList.objects == orig(this.selectedItemAttributes.outlinePaintList.objects)
this.selectedItemAttributes.outlinePaintList.objects[] == orig(this.selectedItemAttributes.outlinePaintList.objects[])
this.selectedItemAttributes.outlinePaintList.size == orig(this.selectedItemAttributes.outlinePaintList.size)
this.selectedItemAttributes.outlinePaintList.increment == orig(this.selectedItemAttributes.outlinePaintList.increment)
this.selectedItemAttributes.defaultOutlinePaint == orig(this.selectedItemAttributes.defaultOutlinePaint)
this.selectedItemAttributes.outlineStrokeList == orig(this.selectedItemAttributes.outlineStrokeList)
this.selectedItemAttributes.defaultOutlineStroke == orig(this.selectedItemAttributes.defaultOutlineStroke)
this.selectedItemAttributes.labelsVisibleList == orig(this.selectedItemAttributes.labelsVisibleList)
this.selectedItemAttributes.defaultLabelVisible == orig(this.selectedItemAttributes.defaultLabelVisible)
this.selectedItemAttributes.labelFontList == orig(this.selectedItemAttributes.labelFontList)
this.selectedItemAttributes.defaultLabelFont == orig(this.selectedItemAttributes.defaultLabelFont)
this.selectedItemAttributes.labelPaintList == orig(this.selectedItemAttributes.labelPaintList)
this.selectedItemAttributes.defaultLabelPaint == orig(this.selectedItemAttributes.defaultLabelPaint)
this.selectedItemAttributes.positionItemLabelPositionList == orig(this.selectedItemAttributes.positionItemLabelPositionList)
this.selectedItemAttributes.defaultPositiveItemLabelPosition == orig(this.selectedItemAttributes.defaultPositiveItemLabelPosition)
this.selectedItemAttributes.negativeItemLabelPositionList == orig(this.selectedItemAttributes.negativeItemLabelPositionList)
this.selectedItemAttributes.defaultNegativeItemLabelPosition == orig(this.selectedItemAttributes.defaultNegativeItemLabelPosition)
this.selectedItemAttributes.createEntityList == orig(this.selectedItemAttributes.createEntityList)
this.selectedItemAttributes.defaultCreateEntity == orig(this.selectedItemAttributes.defaultCreateEntity)
org.jfree.chart.renderer.AbstractRenderer.ADJ == orig(org.jfree.chart.renderer.AbstractRenderer.ADJ)
org.jfree.chart.renderer.AbstractRenderer.OPP == orig(org.jfree.chart.renderer.AbstractRenderer.OPP)
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener == orig(org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener)
this.shapeList.objects[] has only one value, of length 8
this.shapeList.objects[].getClass().getName() == [java.awt.geom.Rectangle2D.Double, null, null, null, null, null, null, null]
this.shapeList.size == 1
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener has only one value
return.getClass().getName() == java.awt.Color.class
return.getClass().getName() in this.paintList.objects[].getClass().getName()
===========================================================================
org.jfree.chart.renderer.AbstractRenderer.getSeriesShape(int):::ENTER
this.paintList.objects[] contains only nulls and has only one value, of length 8
this.paintList.objects[] elements == null
this.paintList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.paintList.objects[].getClass().getName() elements == null
this.paintList.size == 0
this.strokeList.objects[] contains only nulls and has only one value, of length 8
this.strokeList.objects[] elements == null
this.strokeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.strokeList.objects[].getClass().getName() elements == null
this.strokeList.size == 0
this.shapeList.objects[] contains only nulls and has only one value, of length 8
this.shapeList.objects[] elements == null
this.shapeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.shapeList.objects[].getClass().getName() elements == null
this.shapeList.size == 0
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener has only one value
series == 0
===========================================================================
org.jfree.chart.renderer.AbstractRenderer.getSeriesShape(int):::EXIT
org.jfree.chart.renderer.AbstractRenderer.ZERO == orig(org.jfree.chart.renderer.AbstractRenderer.ZERO)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(this.basePaint.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(this.baseFillPaint.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(this.baseOutlinePaint.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(this.baseItemLabelPaint.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(this.selectedItemAttributes.defaultFillPaint.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == orig(this.baseStroke.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == orig(this.baseOutlineStroke.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE.getClass().getName() == orig(this.baseShape.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_FONT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_FONT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT)
this.seriesVisibleList == orig(this.seriesVisibleList)
this.seriesVisibleList.objects == orig(this.seriesVisibleList.objects)
this.seriesVisibleList.objects.getClass().getName() == orig(this.seriesVisibleList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.seriesVisibleInLegendList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.paintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.fillPaintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.outlinePaintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.strokeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.outlineStrokeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.shapeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.itemLabelsVisibleList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.itemLabelFontList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.itemLabelPaintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.positiveItemLabelPositionList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.negativeItemLabelPositionList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.createEntitiesList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.legendShapeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.legendTextFont.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.legendTextPaint.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.selectedItemAttributes.paintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.selectedItemAttributes.strokeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.selectedItemAttributes.shapeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.selectedItemAttributes.fillPaintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.selectedItemAttributes.outlinePaintList.objects.getClass().getName())
this.seriesVisibleList.objects[] == orig(this.seriesVisibleList.objects[])
this.seriesVisibleList.size == orig(this.seriesVisibleList.size)
this.seriesVisibleList.increment == orig(this.seriesVisibleList.increment)
this.baseSeriesVisible == orig(this.baseSeriesVisible)
this.seriesVisibleInLegendList == orig(this.seriesVisibleInLegendList)
this.seriesVisibleInLegendList.objects == orig(this.seriesVisibleInLegendList.objects)
this.seriesVisibleInLegendList.objects[] == orig(this.seriesVisibleInLegendList.objects[])
this.seriesVisibleInLegendList.size == orig(this.seriesVisibleInLegendList.size)
this.seriesVisibleInLegendList.increment == orig(this.seriesVisibleInLegendList.increment)
this.baseSeriesVisibleInLegend == orig(this.baseSeriesVisibleInLegend)
this.paintList == orig(this.paintList)
this.paintList.objects == orig(this.paintList.objects)
this.paintList.objects[] == orig(this.paintList.objects[])
this.paintList.size == orig(this.paintList.size)
this.paintList.increment == orig(this.paintList.increment)
this.autoPopulateSeriesPaint == orig(this.autoPopulateSeriesPaint)
this.basePaint == orig(this.basePaint)
this.fillPaintList == orig(this.fillPaintList)
this.fillPaintList.objects == orig(this.fillPaintList.objects)
this.fillPaintList.objects[] == orig(this.fillPaintList.objects[])
this.fillPaintList.size == orig(this.fillPaintList.size)
this.fillPaintList.increment == orig(this.fillPaintList.increment)
this.autoPopulateSeriesFillPaint == orig(this.autoPopulateSeriesFillPaint)
this.baseFillPaint == orig(this.baseFillPaint)
this.outlinePaintList == orig(this.outlinePaintList)
this.outlinePaintList.objects == orig(this.outlinePaintList.objects)
this.outlinePaintList.objects[] == orig(this.outlinePaintList.objects[])
this.outlinePaintList.size == orig(this.outlinePaintList.size)
this.outlinePaintList.increment == orig(this.outlinePaintList.increment)
this.autoPopulateSeriesOutlinePaint == orig(this.autoPopulateSeriesOutlinePaint)
this.baseOutlinePaint == orig(this.baseOutlinePaint)
this.strokeList == orig(this.strokeList)
this.strokeList.objects == orig(this.strokeList.objects)
this.strokeList.objects[] == orig(this.strokeList.objects[])
this.strokeList.size == orig(this.strokeList.size)
this.strokeList.increment == orig(this.strokeList.increment)
this.autoPopulateSeriesStroke == orig(this.autoPopulateSeriesStroke)
this.baseStroke == orig(this.baseStroke)
this.outlineStrokeList == orig(this.outlineStrokeList)
this.outlineStrokeList.objects == orig(this.outlineStrokeList.objects)
this.outlineStrokeList.objects[] == orig(this.outlineStrokeList.objects[])
this.outlineStrokeList.size == orig(this.outlineStrokeList.size)
this.outlineStrokeList.increment == orig(this.outlineStrokeList.increment)
this.baseOutlineStroke == orig(this.baseOutlineStroke)
this.autoPopulateSeriesOutlineStroke == orig(this.autoPopulateSeriesOutlineStroke)
this.shapeList == orig(this.shapeList)
this.shapeList.objects == orig(this.shapeList.objects)
this.shapeList.objects[] == orig(this.shapeList.objects[])
this.shapeList.size == orig(this.shapeList.size)
this.shapeList.increment == orig(this.shapeList.increment)
this.autoPopulateSeriesShape == orig(this.autoPopulateSeriesShape)
this.baseShape == orig(this.baseShape)
this.itemLabelsVisibleList == orig(this.itemLabelsVisibleList)
this.itemLabelsVisibleList.objects == orig(this.itemLabelsVisibleList.objects)
this.itemLabelsVisibleList.objects[] == orig(this.itemLabelsVisibleList.objects[])
this.itemLabelsVisibleList.size == orig(this.itemLabelsVisibleList.size)
this.itemLabelsVisibleList.increment == orig(this.itemLabelsVisibleList.increment)
this.baseItemLabelsVisible == orig(this.baseItemLabelsVisible)
this.itemLabelFontList == orig(this.itemLabelFontList)
this.itemLabelFontList.objects == orig(this.itemLabelFontList.objects)
this.itemLabelFontList.objects[] == orig(this.itemLabelFontList.objects[])
this.itemLabelFontList.size == orig(this.itemLabelFontList.size)
this.itemLabelFontList.increment == orig(this.itemLabelFontList.increment)
this.baseItemLabelFont == orig(this.baseItemLabelFont)
this.itemLabelPaintList == orig(this.itemLabelPaintList)
this.itemLabelPaintList.objects == orig(this.itemLabelPaintList.objects)
this.itemLabelPaintList.objects[] == orig(this.itemLabelPaintList.objects[])
this.itemLabelPaintList.size == orig(this.itemLabelPaintList.size)
this.itemLabelPaintList.increment == orig(this.itemLabelPaintList.increment)
this.baseItemLabelPaint == orig(this.baseItemLabelPaint)
this.positiveItemLabelPositionList == orig(this.positiveItemLabelPositionList)
this.positiveItemLabelPositionList.objects == orig(this.positiveItemLabelPositionList.objects)
this.positiveItemLabelPositionList.objects[] == orig(this.positiveItemLabelPositionList.objects[])
this.positiveItemLabelPositionList.size == orig(this.positiveItemLabelPositionList.size)
this.positiveItemLabelPositionList.increment == orig(this.positiveItemLabelPositionList.increment)
this.basePositiveItemLabelPosition == orig(this.basePositiveItemLabelPosition)
this.basePositiveItemLabelPosition.itemLabelAnchor == orig(this.basePositiveItemLabelPosition.itemLabelAnchor)
org.jfree.chart.labels.ItemLabelAnchor.CENTER == orig(org.jfree.chart.labels.ItemLabelAnchor.CENTER)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE1 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE1)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE2 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE2)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE3 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE3)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE4 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE4)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE5 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE5)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE6 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE6)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE7 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE7)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE8 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE8)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE9 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE9)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE10 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE10)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE11 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE11)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE12 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE12)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12)
this.basePositiveItemLabelPosition.itemLabelAnchor.name == orig(this.basePositiveItemLabelPosition.itemLabelAnchor.name)
this.basePositiveItemLabelPosition.itemLabelAnchor.name.toString == orig(this.basePositiveItemLabelPosition.itemLabelAnchor.name.toString)
this.basePositiveItemLabelPosition.textAnchor == orig(this.basePositiveItemLabelPosition.textAnchor)
org.jfree.chart.text.TextAnchor.TOP_LEFT == orig(org.jfree.chart.text.TextAnchor.TOP_LEFT)
org.jfree.chart.text.TextAnchor.TOP_CENTER == orig(org.jfree.chart.text.TextAnchor.TOP_CENTER)
org.jfree.chart.text.TextAnchor.TOP_RIGHT == orig(org.jfree.chart.text.TextAnchor.TOP_RIGHT)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT)
org.jfree.chart.text.TextAnchor.CENTER_LEFT == orig(org.jfree.chart.text.TextAnchor.CENTER_LEFT)
org.jfree.chart.text.TextAnchor.CENTER == orig(org.jfree.chart.text.TextAnchor.CENTER)
org.jfree.chart.text.TextAnchor.CENTER_RIGHT == orig(org.jfree.chart.text.TextAnchor.CENTER_RIGHT)
org.jfree.chart.text.TextAnchor.BASELINE_LEFT == orig(org.jfree.chart.text.TextAnchor.BASELINE_LEFT)
org.jfree.chart.text.TextAnchor.BASELINE_CENTER == orig(org.jfree.chart.text.TextAnchor.BASELINE_CENTER)
org.jfree.chart.text.TextAnchor.BASELINE_RIGHT == orig(org.jfree.chart.text.TextAnchor.BASELINE_RIGHT)
org.jfree.chart.text.TextAnchor.BOTTOM_LEFT == orig(org.jfree.chart.text.TextAnchor.BOTTOM_LEFT)
org.jfree.chart.text.TextAnchor.BOTTOM_CENTER == orig(org.jfree.chart.text.TextAnchor.BOTTOM_CENTER)
org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT == orig(org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT)
this.basePositiveItemLabelPosition.textAnchor.name == orig(this.basePositiveItemLabelPosition.textAnchor.name)
this.basePositiveItemLabelPosition.textAnchor.name.toString == orig(this.basePositiveItemLabelPosition.textAnchor.name.toString)
this.basePositiveItemLabelPosition.rotationAnchor == orig(this.basePositiveItemLabelPosition.rotationAnchor)
this.basePositiveItemLabelPosition.rotationAnchor.name == orig(this.basePositiveItemLabelPosition.rotationAnchor.name)
this.basePositiveItemLabelPosition.rotationAnchor.name.toString == orig(this.basePositiveItemLabelPosition.rotationAnchor.name.toString)
this.basePositiveItemLabelPosition.angle == orig(this.basePositiveItemLabelPosition.angle)
this.negativeItemLabelPositionList == orig(this.negativeItemLabelPositionList)
this.negativeItemLabelPositionList.objects == orig(this.negativeItemLabelPositionList.objects)
this.negativeItemLabelPositionList.objects[] == orig(this.negativeItemLabelPositionList.objects[])
this.negativeItemLabelPositionList.size == orig(this.negativeItemLabelPositionList.size)
this.negativeItemLabelPositionList.increment == orig(this.negativeItemLabelPositionList.increment)
this.baseNegativeItemLabelPosition == orig(this.baseNegativeItemLabelPosition)
this.baseNegativeItemLabelPosition.itemLabelAnchor == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor)
this.baseNegativeItemLabelPosition.itemLabelAnchor.name == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor.name)
this.baseNegativeItemLabelPosition.itemLabelAnchor.name.toString == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor.name.toString)
this.baseNegativeItemLabelPosition.textAnchor == orig(this.baseNegativeItemLabelPosition.textAnchor)
this.baseNegativeItemLabelPosition.textAnchor.name == orig(this.baseNegativeItemLabelPosition.textAnchor.name)
this.baseNegativeItemLabelPosition.textAnchor.name.toString == orig(this.baseNegativeItemLabelPosition.textAnchor.name.toString)
this.baseNegativeItemLabelPosition.rotationAnchor == orig(this.baseNegativeItemLabelPosition.rotationAnchor)
this.baseNegativeItemLabelPosition.rotationAnchor.name == orig(this.baseNegativeItemLabelPosition.rotationAnchor.name)
this.baseNegativeItemLabelPosition.rotationAnchor.name.toString == orig(this.baseNegativeItemLabelPosition.rotationAnchor.name.toString)
this.baseNegativeItemLabelPosition.angle == orig(this.baseNegativeItemLabelPosition.angle)
this.itemLabelAnchorOffset == orig(this.itemLabelAnchorOffset)
this.createEntitiesList == orig(this.createEntitiesList)
this.createEntitiesList.objects == orig(this.createEntitiesList.objects)
this.createEntitiesList.objects[] == orig(this.createEntitiesList.objects[])
this.createEntitiesList.size == orig(this.createEntitiesList.size)
this.createEntitiesList.increment == orig(this.createEntitiesList.increment)
this.baseCreateEntities == orig(this.baseCreateEntities)
this.legendShapeList == orig(this.legendShapeList)
this.legendShapeList.objects == orig(this.legendShapeList.objects)
this.legendShapeList.objects[] == orig(this.legendShapeList.objects[])
this.legendShapeList.size == orig(this.legendShapeList.size)
this.legendShapeList.increment == orig(this.legendShapeList.increment)
this.baseLegendShape == orig(this.baseLegendShape)
this.treatLegendShapeAsLine == orig(this.treatLegendShapeAsLine)
this.legendTextFont == orig(this.legendTextFont)
this.legendTextFont.objects == orig(this.legendTextFont.objects)
this.legendTextFont.objects[] == orig(this.legendTextFont.objects[])
this.legendTextFont.size == orig(this.legendTextFont.size)
this.legendTextFont.increment == orig(this.legendTextFont.increment)
this.baseLegendTextFont == orig(this.baseLegendTextFont)
this.legendTextPaint == orig(this.legendTextPaint)
this.legendTextPaint.objects == orig(this.legendTextPaint.objects)
this.legendTextPaint.objects[] == orig(this.legendTextPaint.objects[])
this.legendTextPaint.size == orig(this.legendTextPaint.size)
this.legendTextPaint.increment == orig(this.legendTextPaint.increment)
this.baseLegendTextPaint == orig(this.baseLegendTextPaint)
this.dataBoundsIncludesVisibleSeriesOnly == orig(this.dataBoundsIncludesVisibleSeriesOnly)
this.defaultEntityRadius == orig(this.defaultEntityRadius)
this.listenerList == orig(this.listenerList)
this.selectedItemAttributes == orig(this.selectedItemAttributes)
this.selectedItemAttributes.allowNull == orig(this.selectedItemAttributes.allowNull)
this.selectedItemAttributes.paintList == orig(this.selectedItemAttributes.paintList)
this.selectedItemAttributes.paintList.objects == orig(this.selectedItemAttributes.paintList.objects)
this.selectedItemAttributes.paintList.objects[] == orig(this.selectedItemAttributes.paintList.objects[])
this.selectedItemAttributes.paintList.size == orig(this.selectedItemAttributes.paintList.size)
this.selectedItemAttributes.paintList.increment == orig(this.selectedItemAttributes.paintList.increment)
this.selectedItemAttributes.defaultPaint == orig(this.selectedItemAttributes.defaultPaint)
this.selectedItemAttributes.strokeList == orig(this.selectedItemAttributes.strokeList)
this.selectedItemAttributes.strokeList.objects == orig(this.selectedItemAttributes.strokeList.objects)
this.selectedItemAttributes.strokeList.objects[] == orig(this.selectedItemAttributes.strokeList.objects[])
this.selectedItemAttributes.strokeList.size == orig(this.selectedItemAttributes.strokeList.size)
this.selectedItemAttributes.strokeList.increment == orig(this.selectedItemAttributes.strokeList.increment)
this.selectedItemAttributes.defaultStroke == orig(this.selectedItemAttributes.defaultStroke)
this.selectedItemAttributes.shapeList == orig(this.selectedItemAttributes.shapeList)
this.selectedItemAttributes.shapeList.objects == orig(this.selectedItemAttributes.shapeList.objects)
this.selectedItemAttributes.shapeList.objects[] == orig(this.selectedItemAttributes.shapeList.objects[])
this.selectedItemAttributes.shapeList.size == orig(this.selectedItemAttributes.shapeList.size)
this.selectedItemAttributes.shapeList.increment == orig(this.selectedItemAttributes.shapeList.increment)
this.selectedItemAttributes.defaultShape == orig(this.selectedItemAttributes.defaultShape)
this.selectedItemAttributes.fillPaintList == orig(this.selectedItemAttributes.fillPaintList)
this.selectedItemAttributes.fillPaintList.objects == orig(this.selectedItemAttributes.fillPaintList.objects)
this.selectedItemAttributes.fillPaintList.objects[] == orig(this.selectedItemAttributes.fillPaintList.objects[])
this.selectedItemAttributes.fillPaintList.size == orig(this.selectedItemAttributes.fillPaintList.size)
this.selectedItemAttributes.fillPaintList.increment == orig(this.selectedItemAttributes.fillPaintList.increment)
this.selectedItemAttributes.defaultFillPaint == orig(this.selectedItemAttributes.defaultFillPaint)
this.selectedItemAttributes.outlinePaintList == orig(this.selectedItemAttributes.outlinePaintList)
this.selectedItemAttributes.outlinePaintList.objects == orig(this.selectedItemAttributes.outlinePaintList.objects)
this.selectedItemAttributes.outlinePaintList.objects[] == orig(this.selectedItemAttributes.outlinePaintList.objects[])
this.selectedItemAttributes.outlinePaintList.size == orig(this.selectedItemAttributes.outlinePaintList.size)
this.selectedItemAttributes.outlinePaintList.increment == orig(this.selectedItemAttributes.outlinePaintList.increment)
this.selectedItemAttributes.defaultOutlinePaint == orig(this.selectedItemAttributes.defaultOutlinePaint)
this.selectedItemAttributes.outlineStrokeList == orig(this.selectedItemAttributes.outlineStrokeList)
this.selectedItemAttributes.defaultOutlineStroke == orig(this.selectedItemAttributes.defaultOutlineStroke)
this.selectedItemAttributes.labelsVisibleList == orig(this.selectedItemAttributes.labelsVisibleList)
this.selectedItemAttributes.defaultLabelVisible == orig(this.selectedItemAttributes.defaultLabelVisible)
this.selectedItemAttributes.labelFontList == orig(this.selectedItemAttributes.labelFontList)
this.selectedItemAttributes.defaultLabelFont == orig(this.selectedItemAttributes.defaultLabelFont)
this.selectedItemAttributes.labelPaintList == orig(this.selectedItemAttributes.labelPaintList)
this.selectedItemAttributes.defaultLabelPaint == orig(this.selectedItemAttributes.defaultLabelPaint)
this.selectedItemAttributes.positionItemLabelPositionList == orig(this.selectedItemAttributes.positionItemLabelPositionList)
this.selectedItemAttributes.defaultPositiveItemLabelPosition == orig(this.selectedItemAttributes.defaultPositiveItemLabelPosition)
this.selectedItemAttributes.negativeItemLabelPositionList == orig(this.selectedItemAttributes.negativeItemLabelPositionList)
this.selectedItemAttributes.defaultNegativeItemLabelPosition == orig(this.selectedItemAttributes.defaultNegativeItemLabelPosition)
this.selectedItemAttributes.createEntityList == orig(this.selectedItemAttributes.createEntityList)
this.selectedItemAttributes.defaultCreateEntity == orig(this.selectedItemAttributes.defaultCreateEntity)
org.jfree.chart.renderer.AbstractRenderer.ADJ == orig(org.jfree.chart.renderer.AbstractRenderer.ADJ)
org.jfree.chart.renderer.AbstractRenderer.OPP == orig(org.jfree.chart.renderer.AbstractRenderer.OPP)
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener == orig(org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener)
this.paintList.objects[] contains only nulls and has only one value, of length 8
this.paintList.objects[] elements == null
this.paintList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.paintList.objects[].getClass().getName() elements == null
this.paintList.size == 0
this.strokeList.objects[] contains only nulls and has only one value, of length 8
this.strokeList.objects[] elements == null
this.strokeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.strokeList.objects[].getClass().getName() elements == null
this.strokeList.size == 0
this.shapeList.objects[] contains only nulls and has only one value, of length 8
this.shapeList.objects[] elements == null
this.shapeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.shapeList.objects[].getClass().getName() elements == null
this.shapeList.size == 0
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener has only one value
return == null
===========================================================================
org.jfree.chart.renderer.AbstractRenderer.getSeriesStroke(int):::ENTER
this.paintList.objects[] has only one value, of length 8
this.paintList.objects[].getClass().getName() == [java.awt.Color, null, null, null, null, null, null, null]
this.paintList.size == 1
this.strokeList.objects[] contains only nulls and has only one value, of length 8
this.strokeList.objects[] elements == null
this.strokeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.strokeList.objects[].getClass().getName() elements == null
this.strokeList.size == 0
this.shapeList.objects[] has only one value, of length 8
this.shapeList.objects[].getClass().getName() == [java.awt.geom.Rectangle2D.Double, null, null, null, null, null, null, null]
this.shapeList.size == 1
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener has only one value
series == 0
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() in this.paintList.objects[].getClass().getName()
===========================================================================
org.jfree.chart.renderer.AbstractRenderer.getSeriesStroke(int):::EXIT
org.jfree.chart.renderer.AbstractRenderer.ZERO == orig(org.jfree.chart.renderer.AbstractRenderer.ZERO)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(this.basePaint.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(this.baseFillPaint.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(this.baseOutlinePaint.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(this.baseItemLabelPaint.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(this.selectedItemAttributes.defaultFillPaint.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == orig(this.baseStroke.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == orig(this.baseOutlineStroke.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE.getClass().getName() == orig(this.baseShape.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_FONT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_FONT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT)
this.seriesVisibleList == orig(this.seriesVisibleList)
this.seriesVisibleList.objects == orig(this.seriesVisibleList.objects)
this.seriesVisibleList.objects.getClass().getName() == orig(this.seriesVisibleList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.seriesVisibleInLegendList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.paintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.fillPaintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.outlinePaintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.strokeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.outlineStrokeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.shapeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.itemLabelsVisibleList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.itemLabelFontList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.itemLabelPaintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.positiveItemLabelPositionList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.negativeItemLabelPositionList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.createEntitiesList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.legendShapeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.legendTextFont.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.legendTextPaint.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.selectedItemAttributes.paintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.selectedItemAttributes.strokeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.selectedItemAttributes.shapeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.selectedItemAttributes.fillPaintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.selectedItemAttributes.outlinePaintList.objects.getClass().getName())
this.seriesVisibleList.objects[] == orig(this.seriesVisibleList.objects[])
this.seriesVisibleList.size == orig(this.seriesVisibleList.size)
this.seriesVisibleList.increment == orig(this.seriesVisibleList.increment)
this.baseSeriesVisible == orig(this.baseSeriesVisible)
this.seriesVisibleInLegendList == orig(this.seriesVisibleInLegendList)
this.seriesVisibleInLegendList.objects == orig(this.seriesVisibleInLegendList.objects)
this.seriesVisibleInLegendList.objects[] == orig(this.seriesVisibleInLegendList.objects[])
this.seriesVisibleInLegendList.size == orig(this.seriesVisibleInLegendList.size)
this.seriesVisibleInLegendList.increment == orig(this.seriesVisibleInLegendList.increment)
this.baseSeriesVisibleInLegend == orig(this.baseSeriesVisibleInLegend)
this.paintList == orig(this.paintList)
this.paintList.objects == orig(this.paintList.objects)
this.paintList.objects[] == orig(this.paintList.objects[])
this.paintList.size == orig(this.paintList.size)
this.paintList.increment == orig(this.paintList.increment)
this.autoPopulateSeriesPaint == orig(this.autoPopulateSeriesPaint)
this.basePaint == orig(this.basePaint)
this.fillPaintList == orig(this.fillPaintList)
this.fillPaintList.objects == orig(this.fillPaintList.objects)
this.fillPaintList.objects[] == orig(this.fillPaintList.objects[])
this.fillPaintList.size == orig(this.fillPaintList.size)
this.fillPaintList.increment == orig(this.fillPaintList.increment)
this.autoPopulateSeriesFillPaint == orig(this.autoPopulateSeriesFillPaint)
this.baseFillPaint == orig(this.baseFillPaint)
this.outlinePaintList == orig(this.outlinePaintList)
this.outlinePaintList.objects == orig(this.outlinePaintList.objects)
this.outlinePaintList.objects[] == orig(this.outlinePaintList.objects[])
this.outlinePaintList.size == orig(this.outlinePaintList.size)
this.outlinePaintList.increment == orig(this.outlinePaintList.increment)
this.autoPopulateSeriesOutlinePaint == orig(this.autoPopulateSeriesOutlinePaint)
this.baseOutlinePaint == orig(this.baseOutlinePaint)
this.strokeList == orig(this.strokeList)
this.strokeList.objects == orig(this.strokeList.objects)
this.strokeList.objects[] == orig(this.strokeList.objects[])
this.strokeList.size == orig(this.strokeList.size)
this.strokeList.increment == orig(this.strokeList.increment)
this.autoPopulateSeriesStroke == orig(this.autoPopulateSeriesStroke)
this.baseStroke == orig(this.baseStroke)
this.outlineStrokeList == orig(this.outlineStrokeList)
this.outlineStrokeList.objects == orig(this.outlineStrokeList.objects)
this.outlineStrokeList.objects[] == orig(this.outlineStrokeList.objects[])
this.outlineStrokeList.size == orig(this.outlineStrokeList.size)
this.outlineStrokeList.increment == orig(this.outlineStrokeList.increment)
this.baseOutlineStroke == orig(this.baseOutlineStroke)
this.autoPopulateSeriesOutlineStroke == orig(this.autoPopulateSeriesOutlineStroke)
this.shapeList == orig(this.shapeList)
this.shapeList.objects == orig(this.shapeList.objects)
this.shapeList.objects[] == orig(this.shapeList.objects[])
this.shapeList.size == orig(this.shapeList.size)
this.shapeList.increment == orig(this.shapeList.increment)
this.autoPopulateSeriesShape == orig(this.autoPopulateSeriesShape)
this.baseShape == orig(this.baseShape)
this.itemLabelsVisibleList == orig(this.itemLabelsVisibleList)
this.itemLabelsVisibleList.objects == orig(this.itemLabelsVisibleList.objects)
this.itemLabelsVisibleList.objects[] == orig(this.itemLabelsVisibleList.objects[])
this.itemLabelsVisibleList.size == orig(this.itemLabelsVisibleList.size)
this.itemLabelsVisibleList.increment == orig(this.itemLabelsVisibleList.increment)
this.baseItemLabelsVisible == orig(this.baseItemLabelsVisible)
this.itemLabelFontList == orig(this.itemLabelFontList)
this.itemLabelFontList.objects == orig(this.itemLabelFontList.objects)
this.itemLabelFontList.objects[] == orig(this.itemLabelFontList.objects[])
this.itemLabelFontList.size == orig(this.itemLabelFontList.size)
this.itemLabelFontList.increment == orig(this.itemLabelFontList.increment)
this.baseItemLabelFont == orig(this.baseItemLabelFont)
this.itemLabelPaintList == orig(this.itemLabelPaintList)
this.itemLabelPaintList.objects == orig(this.itemLabelPaintList.objects)
this.itemLabelPaintList.objects[] == orig(this.itemLabelPaintList.objects[])
this.itemLabelPaintList.size == orig(this.itemLabelPaintList.size)
this.itemLabelPaintList.increment == orig(this.itemLabelPaintList.increment)
this.baseItemLabelPaint == orig(this.baseItemLabelPaint)
this.positiveItemLabelPositionList == orig(this.positiveItemLabelPositionList)
this.positiveItemLabelPositionList.objects == orig(this.positiveItemLabelPositionList.objects)
this.positiveItemLabelPositionList.objects[] == orig(this.positiveItemLabelPositionList.objects[])
this.positiveItemLabelPositionList.size == orig(this.positiveItemLabelPositionList.size)
this.positiveItemLabelPositionList.increment == orig(this.positiveItemLabelPositionList.increment)
this.basePositiveItemLabelPosition == orig(this.basePositiveItemLabelPosition)
this.basePositiveItemLabelPosition.itemLabelAnchor == orig(this.basePositiveItemLabelPosition.itemLabelAnchor)
org.jfree.chart.labels.ItemLabelAnchor.CENTER == orig(org.jfree.chart.labels.ItemLabelAnchor.CENTER)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE1 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE1)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE2 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE2)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE3 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE3)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE4 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE4)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE5 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE5)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE6 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE6)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE7 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE7)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE8 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE8)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE9 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE9)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE10 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE10)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE11 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE11)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE12 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE12)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12)
this.basePositiveItemLabelPosition.itemLabelAnchor.name == orig(this.basePositiveItemLabelPosition.itemLabelAnchor.name)
this.basePositiveItemLabelPosition.itemLabelAnchor.name.toString == orig(this.basePositiveItemLabelPosition.itemLabelAnchor.name.toString)
this.basePositiveItemLabelPosition.textAnchor == orig(this.basePositiveItemLabelPosition.textAnchor)
org.jfree.chart.text.TextAnchor.TOP_LEFT == orig(org.jfree.chart.text.TextAnchor.TOP_LEFT)
org.jfree.chart.text.TextAnchor.TOP_CENTER == orig(org.jfree.chart.text.TextAnchor.TOP_CENTER)
org.jfree.chart.text.TextAnchor.TOP_RIGHT == orig(org.jfree.chart.text.TextAnchor.TOP_RIGHT)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT)
org.jfree.chart.text.TextAnchor.CENTER_LEFT == orig(org.jfree.chart.text.TextAnchor.CENTER_LEFT)
org.jfree.chart.text.TextAnchor.CENTER == orig(org.jfree.chart.text.TextAnchor.CENTER)
org.jfree.chart.text.TextAnchor.CENTER_RIGHT == orig(org.jfree.chart.text.TextAnchor.CENTER_RIGHT)
org.jfree.chart.text.TextAnchor.BASELINE_LEFT == orig(org.jfree.chart.text.TextAnchor.BASELINE_LEFT)
org.jfree.chart.text.TextAnchor.BASELINE_CENTER == orig(org.jfree.chart.text.TextAnchor.BASELINE_CENTER)
org.jfree.chart.text.TextAnchor.BASELINE_RIGHT == orig(org.jfree.chart.text.TextAnchor.BASELINE_RIGHT)
org.jfree.chart.text.TextAnchor.BOTTOM_LEFT == orig(org.jfree.chart.text.TextAnchor.BOTTOM_LEFT)
org.jfree.chart.text.TextAnchor.BOTTOM_CENTER == orig(org.jfree.chart.text.TextAnchor.BOTTOM_CENTER)
org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT == orig(org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT)
this.basePositiveItemLabelPosition.textAnchor.name == orig(this.basePositiveItemLabelPosition.textAnchor.name)
this.basePositiveItemLabelPosition.textAnchor.name.toString == orig(this.basePositiveItemLabelPosition.textAnchor.name.toString)
this.basePositiveItemLabelPosition.rotationAnchor == orig(this.basePositiveItemLabelPosition.rotationAnchor)
this.basePositiveItemLabelPosition.rotationAnchor.name == orig(this.basePositiveItemLabelPosition.rotationAnchor.name)
this.basePositiveItemLabelPosition.rotationAnchor.name.toString == orig(this.basePositiveItemLabelPosition.rotationAnchor.name.toString)
this.basePositiveItemLabelPosition.angle == orig(this.basePositiveItemLabelPosition.angle)
this.negativeItemLabelPositionList == orig(this.negativeItemLabelPositionList)
this.negativeItemLabelPositionList.objects == orig(this.negativeItemLabelPositionList.objects)
this.negativeItemLabelPositionList.objects[] == orig(this.negativeItemLabelPositionList.objects[])
this.negativeItemLabelPositionList.size == orig(this.negativeItemLabelPositionList.size)
this.negativeItemLabelPositionList.increment == orig(this.negativeItemLabelPositionList.increment)
this.baseNegativeItemLabelPosition == orig(this.baseNegativeItemLabelPosition)
this.baseNegativeItemLabelPosition.itemLabelAnchor == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor)
this.baseNegativeItemLabelPosition.itemLabelAnchor.name == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor.name)
this.baseNegativeItemLabelPosition.itemLabelAnchor.name.toString == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor.name.toString)
this.baseNegativeItemLabelPosition.textAnchor == orig(this.baseNegativeItemLabelPosition.textAnchor)
this.baseNegativeItemLabelPosition.textAnchor.name == orig(this.baseNegativeItemLabelPosition.textAnchor.name)
this.baseNegativeItemLabelPosition.textAnchor.name.toString == orig(this.baseNegativeItemLabelPosition.textAnchor.name.toString)
this.baseNegativeItemLabelPosition.rotationAnchor == orig(this.baseNegativeItemLabelPosition.rotationAnchor)
this.baseNegativeItemLabelPosition.rotationAnchor.name == orig(this.baseNegativeItemLabelPosition.rotationAnchor.name)
this.baseNegativeItemLabelPosition.rotationAnchor.name.toString == orig(this.baseNegativeItemLabelPosition.rotationAnchor.name.toString)
this.baseNegativeItemLabelPosition.angle == orig(this.baseNegativeItemLabelPosition.angle)
this.itemLabelAnchorOffset == orig(this.itemLabelAnchorOffset)
this.createEntitiesList == orig(this.createEntitiesList)
this.createEntitiesList.objects == orig(this.createEntitiesList.objects)
this.createEntitiesList.objects[] == orig(this.createEntitiesList.objects[])
this.createEntitiesList.size == orig(this.createEntitiesList.size)
this.createEntitiesList.increment == orig(this.createEntitiesList.increment)
this.baseCreateEntities == orig(this.baseCreateEntities)
this.legendShapeList == orig(this.legendShapeList)
this.legendShapeList.objects == orig(this.legendShapeList.objects)
this.legendShapeList.objects[] == orig(this.legendShapeList.objects[])
this.legendShapeList.size == orig(this.legendShapeList.size)
this.legendShapeList.increment == orig(this.legendShapeList.increment)
this.baseLegendShape == orig(this.baseLegendShape)
this.treatLegendShapeAsLine == orig(this.treatLegendShapeAsLine)
this.legendTextFont == orig(this.legendTextFont)
this.legendTextFont.objects == orig(this.legendTextFont.objects)
this.legendTextFont.objects[] == orig(this.legendTextFont.objects[])
this.legendTextFont.size == orig(this.legendTextFont.size)
this.legendTextFont.increment == orig(this.legendTextFont.increment)
this.baseLegendTextFont == orig(this.baseLegendTextFont)
this.legendTextPaint == orig(this.legendTextPaint)
this.legendTextPaint.objects == orig(this.legendTextPaint.objects)
this.legendTextPaint.objects[] == orig(this.legendTextPaint.objects[])
this.legendTextPaint.size == orig(this.legendTextPaint.size)
this.legendTextPaint.increment == orig(this.legendTextPaint.increment)
this.baseLegendTextPaint == orig(this.baseLegendTextPaint)
this.dataBoundsIncludesVisibleSeriesOnly == orig(this.dataBoundsIncludesVisibleSeriesOnly)
this.defaultEntityRadius == orig(this.defaultEntityRadius)
this.listenerList == orig(this.listenerList)
this.selectedItemAttributes == orig(this.selectedItemAttributes)
this.selectedItemAttributes.allowNull == orig(this.selectedItemAttributes.allowNull)
this.selectedItemAttributes.paintList == orig(this.selectedItemAttributes.paintList)
this.selectedItemAttributes.paintList.objects == orig(this.selectedItemAttributes.paintList.objects)
this.selectedItemAttributes.paintList.objects[] == orig(this.selectedItemAttributes.paintList.objects[])
this.selectedItemAttributes.paintList.size == orig(this.selectedItemAttributes.paintList.size)
this.selectedItemAttributes.paintList.increment == orig(this.selectedItemAttributes.paintList.increment)
this.selectedItemAttributes.defaultPaint == orig(this.selectedItemAttributes.defaultPaint)
this.selectedItemAttributes.strokeList == orig(this.selectedItemAttributes.strokeList)
this.selectedItemAttributes.strokeList.objects == orig(this.selectedItemAttributes.strokeList.objects)
this.selectedItemAttributes.strokeList.objects[] == orig(this.selectedItemAttributes.strokeList.objects[])
this.selectedItemAttributes.strokeList.size == orig(this.selectedItemAttributes.strokeList.size)
this.selectedItemAttributes.strokeList.increment == orig(this.selectedItemAttributes.strokeList.increment)
this.selectedItemAttributes.defaultStroke == orig(this.selectedItemAttributes.defaultStroke)
this.selectedItemAttributes.shapeList == orig(this.selectedItemAttributes.shapeList)
this.selectedItemAttributes.shapeList.objects == orig(this.selectedItemAttributes.shapeList.objects)
this.selectedItemAttributes.shapeList.objects[] == orig(this.selectedItemAttributes.shapeList.objects[])
this.selectedItemAttributes.shapeList.size == orig(this.selectedItemAttributes.shapeList.size)
this.selectedItemAttributes.shapeList.increment == orig(this.selectedItemAttributes.shapeList.increment)
this.selectedItemAttributes.defaultShape == orig(this.selectedItemAttributes.defaultShape)
this.selectedItemAttributes.fillPaintList == orig(this.selectedItemAttributes.fillPaintList)
this.selectedItemAttributes.fillPaintList.objects == orig(this.selectedItemAttributes.fillPaintList.objects)
this.selectedItemAttributes.fillPaintList.objects[] == orig(this.selectedItemAttributes.fillPaintList.objects[])
this.selectedItemAttributes.fillPaintList.size == orig(this.selectedItemAttributes.fillPaintList.size)
this.selectedItemAttributes.fillPaintList.increment == orig(this.selectedItemAttributes.fillPaintList.increment)
this.selectedItemAttributes.defaultFillPaint == orig(this.selectedItemAttributes.defaultFillPaint)
this.selectedItemAttributes.outlinePaintList == orig(this.selectedItemAttributes.outlinePaintList)
this.selectedItemAttributes.outlinePaintList.objects == orig(this.selectedItemAttributes.outlinePaintList.objects)
this.selectedItemAttributes.outlinePaintList.objects[] == orig(this.selectedItemAttributes.outlinePaintList.objects[])
this.selectedItemAttributes.outlinePaintList.size == orig(this.selectedItemAttributes.outlinePaintList.size)
this.selectedItemAttributes.outlinePaintList.increment == orig(this.selectedItemAttributes.outlinePaintList.increment)
this.selectedItemAttributes.defaultOutlinePaint == orig(this.selectedItemAttributes.defaultOutlinePaint)
this.selectedItemAttributes.outlineStrokeList == orig(this.selectedItemAttributes.outlineStrokeList)
this.selectedItemAttributes.defaultOutlineStroke == orig(this.selectedItemAttributes.defaultOutlineStroke)
this.selectedItemAttributes.labelsVisibleList == orig(this.selectedItemAttributes.labelsVisibleList)
this.selectedItemAttributes.defaultLabelVisible == orig(this.selectedItemAttributes.defaultLabelVisible)
this.selectedItemAttributes.labelFontList == orig(this.selectedItemAttributes.labelFontList)
this.selectedItemAttributes.defaultLabelFont == orig(this.selectedItemAttributes.defaultLabelFont)
this.selectedItemAttributes.labelPaintList == orig(this.selectedItemAttributes.labelPaintList)
this.selectedItemAttributes.defaultLabelPaint == orig(this.selectedItemAttributes.defaultLabelPaint)
this.selectedItemAttributes.positionItemLabelPositionList == orig(this.selectedItemAttributes.positionItemLabelPositionList)
this.selectedItemAttributes.defaultPositiveItemLabelPosition == orig(this.selectedItemAttributes.defaultPositiveItemLabelPosition)
this.selectedItemAttributes.negativeItemLabelPositionList == orig(this.selectedItemAttributes.negativeItemLabelPositionList)
this.selectedItemAttributes.defaultNegativeItemLabelPosition == orig(this.selectedItemAttributes.defaultNegativeItemLabelPosition)
this.selectedItemAttributes.createEntityList == orig(this.selectedItemAttributes.createEntityList)
this.selectedItemAttributes.defaultCreateEntity == orig(this.selectedItemAttributes.defaultCreateEntity)
org.jfree.chart.renderer.AbstractRenderer.ADJ == orig(org.jfree.chart.renderer.AbstractRenderer.ADJ)
org.jfree.chart.renderer.AbstractRenderer.OPP == orig(org.jfree.chart.renderer.AbstractRenderer.OPP)
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener == orig(org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener)
this.paintList.objects[] has only one value, of length 8
this.paintList.objects[].getClass().getName() == [java.awt.Color, null, null, null, null, null, null, null]
this.paintList.size == 1
this.strokeList.objects[] contains only nulls and has only one value, of length 8
this.strokeList.objects[] elements == null
this.strokeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.strokeList.objects[].getClass().getName() elements == null
this.strokeList.size == 0
this.shapeList.objects[] has only one value, of length 8
this.shapeList.objects[].getClass().getName() == [java.awt.geom.Rectangle2D.Double, null, null, null, null, null, null, null]
this.shapeList.size == 1
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener has only one value
return == null
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() in this.paintList.objects[].getClass().getName()
===========================================================================
org.jfree.chart.renderer.AbstractRenderer.isSeriesVisible(int):::ENTER
this.paintList.objects[] contains only nulls and has only one value, of length 8
this.paintList.objects[] elements == null
this.paintList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.paintList.objects[].getClass().getName() elements == null
this.paintList.size == 0
this.strokeList.objects[] contains only nulls and has only one value, of length 8
this.strokeList.objects[] elements == null
this.strokeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.strokeList.objects[].getClass().getName() elements == null
this.strokeList.size == 0
this.shapeList.objects[] contains only nulls and has only one value, of length 8
this.shapeList.objects[] elements == null
this.shapeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.shapeList.objects[].getClass().getName() elements == null
this.shapeList.size == 0
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener has only one value
series == 0
===========================================================================
org.jfree.chart.renderer.AbstractRenderer.isSeriesVisible(int):::EXIT
org.jfree.chart.renderer.AbstractRenderer.ZERO == orig(org.jfree.chart.renderer.AbstractRenderer.ZERO)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(this.basePaint.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(this.baseFillPaint.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(this.baseOutlinePaint.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(this.baseItemLabelPaint.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(this.selectedItemAttributes.defaultFillPaint.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == orig(this.baseStroke.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == orig(this.baseOutlineStroke.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE.getClass().getName() == orig(this.baseShape.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_FONT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_FONT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT)
this.seriesVisibleList == orig(this.seriesVisibleList)
this.seriesVisibleList.objects == orig(this.seriesVisibleList.objects)
this.seriesVisibleList.objects.getClass().getName() == orig(this.seriesVisibleList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.seriesVisibleInLegendList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.paintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.fillPaintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.outlinePaintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.strokeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.outlineStrokeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.shapeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.itemLabelsVisibleList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.itemLabelFontList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.itemLabelPaintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.positiveItemLabelPositionList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.negativeItemLabelPositionList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.createEntitiesList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.legendShapeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.legendTextFont.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.legendTextPaint.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.selectedItemAttributes.paintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.selectedItemAttributes.strokeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.selectedItemAttributes.shapeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.selectedItemAttributes.fillPaintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.selectedItemAttributes.outlinePaintList.objects.getClass().getName())
this.seriesVisibleList.objects[] == orig(this.seriesVisibleList.objects[])
this.seriesVisibleList.size == orig(this.seriesVisibleList.size)
this.seriesVisibleList.increment == orig(this.seriesVisibleList.increment)
this.baseSeriesVisible == orig(this.baseSeriesVisible)
this.seriesVisibleInLegendList == orig(this.seriesVisibleInLegendList)
this.seriesVisibleInLegendList.objects == orig(this.seriesVisibleInLegendList.objects)
this.seriesVisibleInLegendList.objects[] == orig(this.seriesVisibleInLegendList.objects[])
this.seriesVisibleInLegendList.size == orig(this.seriesVisibleInLegendList.size)
this.seriesVisibleInLegendList.increment == orig(this.seriesVisibleInLegendList.increment)
this.baseSeriesVisibleInLegend == orig(this.baseSeriesVisibleInLegend)
this.paintList == orig(this.paintList)
this.paintList.objects == orig(this.paintList.objects)
this.paintList.objects[] == orig(this.paintList.objects[])
this.paintList.size == orig(this.paintList.size)
this.paintList.increment == orig(this.paintList.increment)
this.autoPopulateSeriesPaint == orig(this.autoPopulateSeriesPaint)
this.basePaint == orig(this.basePaint)
this.fillPaintList == orig(this.fillPaintList)
this.fillPaintList.objects == orig(this.fillPaintList.objects)
this.fillPaintList.objects[] == orig(this.fillPaintList.objects[])
this.fillPaintList.size == orig(this.fillPaintList.size)
this.fillPaintList.increment == orig(this.fillPaintList.increment)
this.autoPopulateSeriesFillPaint == orig(this.autoPopulateSeriesFillPaint)
this.baseFillPaint == orig(this.baseFillPaint)
this.outlinePaintList == orig(this.outlinePaintList)
this.outlinePaintList.objects == orig(this.outlinePaintList.objects)
this.outlinePaintList.objects[] == orig(this.outlinePaintList.objects[])
this.outlinePaintList.size == orig(this.outlinePaintList.size)
this.outlinePaintList.increment == orig(this.outlinePaintList.increment)
this.autoPopulateSeriesOutlinePaint == orig(this.autoPopulateSeriesOutlinePaint)
this.baseOutlinePaint == orig(this.baseOutlinePaint)
this.strokeList == orig(this.strokeList)
this.strokeList.objects == orig(this.strokeList.objects)
this.strokeList.objects[] == orig(this.strokeList.objects[])
this.strokeList.size == orig(this.strokeList.size)
this.strokeList.increment == orig(this.strokeList.increment)
this.autoPopulateSeriesStroke == orig(this.autoPopulateSeriesStroke)
this.baseStroke == orig(this.baseStroke)
this.outlineStrokeList == orig(this.outlineStrokeList)
this.outlineStrokeList.objects == orig(this.outlineStrokeList.objects)
this.outlineStrokeList.objects[] == orig(this.outlineStrokeList.objects[])
this.outlineStrokeList.size == orig(this.outlineStrokeList.size)
this.outlineStrokeList.increment == orig(this.outlineStrokeList.increment)
this.baseOutlineStroke == orig(this.baseOutlineStroke)
this.autoPopulateSeriesOutlineStroke == orig(this.autoPopulateSeriesOutlineStroke)
this.shapeList == orig(this.shapeList)
this.shapeList.objects == orig(this.shapeList.objects)
this.shapeList.objects[] == orig(this.shapeList.objects[])
this.shapeList.size == orig(this.shapeList.size)
this.shapeList.increment == orig(this.shapeList.increment)
this.autoPopulateSeriesShape == orig(this.autoPopulateSeriesShape)
this.baseShape == orig(this.baseShape)
this.itemLabelsVisibleList == orig(this.itemLabelsVisibleList)
this.itemLabelsVisibleList.objects == orig(this.itemLabelsVisibleList.objects)
this.itemLabelsVisibleList.objects[] == orig(this.itemLabelsVisibleList.objects[])
this.itemLabelsVisibleList.size == orig(this.itemLabelsVisibleList.size)
this.itemLabelsVisibleList.increment == orig(this.itemLabelsVisibleList.increment)
this.baseItemLabelsVisible == orig(this.baseItemLabelsVisible)
this.itemLabelFontList == orig(this.itemLabelFontList)
this.itemLabelFontList.objects == orig(this.itemLabelFontList.objects)
this.itemLabelFontList.objects[] == orig(this.itemLabelFontList.objects[])
this.itemLabelFontList.size == orig(this.itemLabelFontList.size)
this.itemLabelFontList.increment == orig(this.itemLabelFontList.increment)
this.baseItemLabelFont == orig(this.baseItemLabelFont)
this.itemLabelPaintList == orig(this.itemLabelPaintList)
this.itemLabelPaintList.objects == orig(this.itemLabelPaintList.objects)
this.itemLabelPaintList.objects[] == orig(this.itemLabelPaintList.objects[])
this.itemLabelPaintList.size == orig(this.itemLabelPaintList.size)
this.itemLabelPaintList.increment == orig(this.itemLabelPaintList.increment)
this.baseItemLabelPaint == orig(this.baseItemLabelPaint)
this.positiveItemLabelPositionList == orig(this.positiveItemLabelPositionList)
this.positiveItemLabelPositionList.objects == orig(this.positiveItemLabelPositionList.objects)
this.positiveItemLabelPositionList.objects[] == orig(this.positiveItemLabelPositionList.objects[])
this.positiveItemLabelPositionList.size == orig(this.positiveItemLabelPositionList.size)
this.positiveItemLabelPositionList.increment == orig(this.positiveItemLabelPositionList.increment)
this.basePositiveItemLabelPosition == orig(this.basePositiveItemLabelPosition)
this.basePositiveItemLabelPosition.itemLabelAnchor == orig(this.basePositiveItemLabelPosition.itemLabelAnchor)
org.jfree.chart.labels.ItemLabelAnchor.CENTER == orig(org.jfree.chart.labels.ItemLabelAnchor.CENTER)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE1 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE1)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE2 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE2)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE3 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE3)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE4 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE4)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE5 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE5)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE6 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE6)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE7 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE7)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE8 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE8)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE9 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE9)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE10 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE10)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE11 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE11)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE12 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE12)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12)
this.basePositiveItemLabelPosition.itemLabelAnchor.name == orig(this.basePositiveItemLabelPosition.itemLabelAnchor.name)
this.basePositiveItemLabelPosition.itemLabelAnchor.name.toString == orig(this.basePositiveItemLabelPosition.itemLabelAnchor.name.toString)
this.basePositiveItemLabelPosition.textAnchor == orig(this.basePositiveItemLabelPosition.textAnchor)
org.jfree.chart.text.TextAnchor.TOP_LEFT == orig(org.jfree.chart.text.TextAnchor.TOP_LEFT)
org.jfree.chart.text.TextAnchor.TOP_CENTER == orig(org.jfree.chart.text.TextAnchor.TOP_CENTER)
org.jfree.chart.text.TextAnchor.TOP_RIGHT == orig(org.jfree.chart.text.TextAnchor.TOP_RIGHT)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT)
org.jfree.chart.text.TextAnchor.CENTER_LEFT == orig(org.jfree.chart.text.TextAnchor.CENTER_LEFT)
org.jfree.chart.text.TextAnchor.CENTER == orig(org.jfree.chart.text.TextAnchor.CENTER)
org.jfree.chart.text.TextAnchor.CENTER_RIGHT == orig(org.jfree.chart.text.TextAnchor.CENTER_RIGHT)
org.jfree.chart.text.TextAnchor.BASELINE_LEFT == orig(org.jfree.chart.text.TextAnchor.BASELINE_LEFT)
org.jfree.chart.text.TextAnchor.BASELINE_CENTER == orig(org.jfree.chart.text.TextAnchor.BASELINE_CENTER)
org.jfree.chart.text.TextAnchor.BASELINE_RIGHT == orig(org.jfree.chart.text.TextAnchor.BASELINE_RIGHT)
org.jfree.chart.text.TextAnchor.BOTTOM_LEFT == orig(org.jfree.chart.text.TextAnchor.BOTTOM_LEFT)
org.jfree.chart.text.TextAnchor.BOTTOM_CENTER == orig(org.jfree.chart.text.TextAnchor.BOTTOM_CENTER)
org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT == orig(org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT)
this.basePositiveItemLabelPosition.textAnchor.name == orig(this.basePositiveItemLabelPosition.textAnchor.name)
this.basePositiveItemLabelPosition.textAnchor.name.toString == orig(this.basePositiveItemLabelPosition.textAnchor.name.toString)
this.basePositiveItemLabelPosition.rotationAnchor == orig(this.basePositiveItemLabelPosition.rotationAnchor)
this.basePositiveItemLabelPosition.rotationAnchor.name == orig(this.basePositiveItemLabelPosition.rotationAnchor.name)
this.basePositiveItemLabelPosition.rotationAnchor.name.toString == orig(this.basePositiveItemLabelPosition.rotationAnchor.name.toString)
this.basePositiveItemLabelPosition.angle == orig(this.basePositiveItemLabelPosition.angle)
this.negativeItemLabelPositionList == orig(this.negativeItemLabelPositionList)
this.negativeItemLabelPositionList.objects == orig(this.negativeItemLabelPositionList.objects)
this.negativeItemLabelPositionList.objects[] == orig(this.negativeItemLabelPositionList.objects[])
this.negativeItemLabelPositionList.size == orig(this.negativeItemLabelPositionList.size)
this.negativeItemLabelPositionList.increment == orig(this.negativeItemLabelPositionList.increment)
this.baseNegativeItemLabelPosition == orig(this.baseNegativeItemLabelPosition)
this.baseNegativeItemLabelPosition.itemLabelAnchor == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor)
this.baseNegativeItemLabelPosition.itemLabelAnchor.name == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor.name)
this.baseNegativeItemLabelPosition.itemLabelAnchor.name.toString == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor.name.toString)
this.baseNegativeItemLabelPosition.textAnchor == orig(this.baseNegativeItemLabelPosition.textAnchor)
this.baseNegativeItemLabelPosition.textAnchor.name == orig(this.baseNegativeItemLabelPosition.textAnchor.name)
this.baseNegativeItemLabelPosition.textAnchor.name.toString == orig(this.baseNegativeItemLabelPosition.textAnchor.name.toString)
this.baseNegativeItemLabelPosition.rotationAnchor == orig(this.baseNegativeItemLabelPosition.rotationAnchor)
this.baseNegativeItemLabelPosition.rotationAnchor.name == orig(this.baseNegativeItemLabelPosition.rotationAnchor.name)
this.baseNegativeItemLabelPosition.rotationAnchor.name.toString == orig(this.baseNegativeItemLabelPosition.rotationAnchor.name.toString)
this.baseNegativeItemLabelPosition.angle == orig(this.baseNegativeItemLabelPosition.angle)
this.itemLabelAnchorOffset == orig(this.itemLabelAnchorOffset)
this.createEntitiesList == orig(this.createEntitiesList)
this.createEntitiesList.objects == orig(this.createEntitiesList.objects)
this.createEntitiesList.objects[] == orig(this.createEntitiesList.objects[])
this.createEntitiesList.size == orig(this.createEntitiesList.size)
this.createEntitiesList.increment == orig(this.createEntitiesList.increment)
this.baseCreateEntities == orig(this.baseCreateEntities)
this.legendShapeList == orig(this.legendShapeList)
this.legendShapeList.objects == orig(this.legendShapeList.objects)
this.legendShapeList.objects[] == orig(this.legendShapeList.objects[])
this.legendShapeList.size == orig(this.legendShapeList.size)
this.legendShapeList.increment == orig(this.legendShapeList.increment)
this.baseLegendShape == orig(this.baseLegendShape)
this.treatLegendShapeAsLine == orig(this.treatLegendShapeAsLine)
this.legendTextFont == orig(this.legendTextFont)
this.legendTextFont.objects == orig(this.legendTextFont.objects)
this.legendTextFont.objects[] == orig(this.legendTextFont.objects[])
this.legendTextFont.size == orig(this.legendTextFont.size)
this.legendTextFont.increment == orig(this.legendTextFont.increment)
this.baseLegendTextFont == orig(this.baseLegendTextFont)
this.legendTextPaint == orig(this.legendTextPaint)
this.legendTextPaint.objects == orig(this.legendTextPaint.objects)
this.legendTextPaint.objects[] == orig(this.legendTextPaint.objects[])
this.legendTextPaint.size == orig(this.legendTextPaint.size)
this.legendTextPaint.increment == orig(this.legendTextPaint.increment)
this.baseLegendTextPaint == orig(this.baseLegendTextPaint)
this.dataBoundsIncludesVisibleSeriesOnly == orig(this.dataBoundsIncludesVisibleSeriesOnly)
this.defaultEntityRadius == orig(this.defaultEntityRadius)
this.listenerList == orig(this.listenerList)
this.selectedItemAttributes == orig(this.selectedItemAttributes)
this.selectedItemAttributes.allowNull == orig(this.selectedItemAttributes.allowNull)
this.selectedItemAttributes.paintList == orig(this.selectedItemAttributes.paintList)
this.selectedItemAttributes.paintList.objects == orig(this.selectedItemAttributes.paintList.objects)
this.selectedItemAttributes.paintList.objects[] == orig(this.selectedItemAttributes.paintList.objects[])
this.selectedItemAttributes.paintList.size == orig(this.selectedItemAttributes.paintList.size)
this.selectedItemAttributes.paintList.increment == orig(this.selectedItemAttributes.paintList.increment)
this.selectedItemAttributes.defaultPaint == orig(this.selectedItemAttributes.defaultPaint)
this.selectedItemAttributes.strokeList == orig(this.selectedItemAttributes.strokeList)
this.selectedItemAttributes.strokeList.objects == orig(this.selectedItemAttributes.strokeList.objects)
this.selectedItemAttributes.strokeList.objects[] == orig(this.selectedItemAttributes.strokeList.objects[])
this.selectedItemAttributes.strokeList.size == orig(this.selectedItemAttributes.strokeList.size)
this.selectedItemAttributes.strokeList.increment == orig(this.selectedItemAttributes.strokeList.increment)
this.selectedItemAttributes.defaultStroke == orig(this.selectedItemAttributes.defaultStroke)
this.selectedItemAttributes.shapeList == orig(this.selectedItemAttributes.shapeList)
this.selectedItemAttributes.shapeList.objects == orig(this.selectedItemAttributes.shapeList.objects)
this.selectedItemAttributes.shapeList.objects[] == orig(this.selectedItemAttributes.shapeList.objects[])
this.selectedItemAttributes.shapeList.size == orig(this.selectedItemAttributes.shapeList.size)
this.selectedItemAttributes.shapeList.increment == orig(this.selectedItemAttributes.shapeList.increment)
this.selectedItemAttributes.defaultShape == orig(this.selectedItemAttributes.defaultShape)
this.selectedItemAttributes.fillPaintList == orig(this.selectedItemAttributes.fillPaintList)
this.selectedItemAttributes.fillPaintList.objects == orig(this.selectedItemAttributes.fillPaintList.objects)
this.selectedItemAttributes.fillPaintList.objects[] == orig(this.selectedItemAttributes.fillPaintList.objects[])
this.selectedItemAttributes.fillPaintList.size == orig(this.selectedItemAttributes.fillPaintList.size)
this.selectedItemAttributes.fillPaintList.increment == orig(this.selectedItemAttributes.fillPaintList.increment)
this.selectedItemAttributes.defaultFillPaint == orig(this.selectedItemAttributes.defaultFillPaint)
this.selectedItemAttributes.outlinePaintList == orig(this.selectedItemAttributes.outlinePaintList)
this.selectedItemAttributes.outlinePaintList.objects == orig(this.selectedItemAttributes.outlinePaintList.objects)
this.selectedItemAttributes.outlinePaintList.objects[] == orig(this.selectedItemAttributes.outlinePaintList.objects[])
this.selectedItemAttributes.outlinePaintList.size == orig(this.selectedItemAttributes.outlinePaintList.size)
this.selectedItemAttributes.outlinePaintList.increment == orig(this.selectedItemAttributes.outlinePaintList.increment)
this.selectedItemAttributes.defaultOutlinePaint == orig(this.selectedItemAttributes.defaultOutlinePaint)
this.selectedItemAttributes.outlineStrokeList == orig(this.selectedItemAttributes.outlineStrokeList)
this.selectedItemAttributes.defaultOutlineStroke == orig(this.selectedItemAttributes.defaultOutlineStroke)
this.selectedItemAttributes.labelsVisibleList == orig(this.selectedItemAttributes.labelsVisibleList)
this.selectedItemAttributes.defaultLabelVisible == orig(this.selectedItemAttributes.defaultLabelVisible)
this.selectedItemAttributes.labelFontList == orig(this.selectedItemAttributes.labelFontList)
this.selectedItemAttributes.defaultLabelFont == orig(this.selectedItemAttributes.defaultLabelFont)
this.selectedItemAttributes.labelPaintList == orig(this.selectedItemAttributes.labelPaintList)
this.selectedItemAttributes.defaultLabelPaint == orig(this.selectedItemAttributes.defaultLabelPaint)
this.selectedItemAttributes.positionItemLabelPositionList == orig(this.selectedItemAttributes.positionItemLabelPositionList)
this.selectedItemAttributes.defaultPositiveItemLabelPosition == orig(this.selectedItemAttributes.defaultPositiveItemLabelPosition)
this.selectedItemAttributes.negativeItemLabelPositionList == orig(this.selectedItemAttributes.negativeItemLabelPositionList)
this.selectedItemAttributes.defaultNegativeItemLabelPosition == orig(this.selectedItemAttributes.defaultNegativeItemLabelPosition)
this.selectedItemAttributes.createEntityList == orig(this.selectedItemAttributes.createEntityList)
this.selectedItemAttributes.defaultCreateEntity == orig(this.selectedItemAttributes.defaultCreateEntity)
org.jfree.chart.renderer.AbstractRenderer.ADJ == orig(org.jfree.chart.renderer.AbstractRenderer.ADJ)
org.jfree.chart.renderer.AbstractRenderer.OPP == orig(org.jfree.chart.renderer.AbstractRenderer.OPP)
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener == orig(org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener)
this.paintList.objects[] contains only nulls and has only one value, of length 8
this.paintList.objects[] elements == null
this.paintList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.paintList.objects[].getClass().getName() elements == null
this.paintList.size == 0
this.strokeList.objects[] contains only nulls and has only one value, of length 8
this.strokeList.objects[] elements == null
this.strokeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.strokeList.objects[].getClass().getName() elements == null
this.strokeList.size == 0
this.shapeList.objects[] contains only nulls and has only one value, of length 8
this.shapeList.objects[] elements == null
this.shapeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.shapeList.objects[].getClass().getName() elements == null
this.shapeList.size == 0
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener has only one value
return == true
===========================================================================
org.jfree.chart.renderer.AbstractRenderer.isSeriesVisible(int):::EXIT;condition="return == true"
===========================================================================
org.jfree.chart.renderer.AbstractRenderer.isSeriesVisibleInLegend(int):::ENTER
this.paintList.objects[] contains only nulls and has only one value, of length 8
this.paintList.objects[] elements == null
this.paintList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.paintList.objects[].getClass().getName() elements == null
this.paintList.size == 0
this.strokeList.objects[] contains only nulls and has only one value, of length 8
this.strokeList.objects[] elements == null
this.strokeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.strokeList.objects[].getClass().getName() elements == null
this.strokeList.size == 0
this.shapeList.objects[] contains only nulls and has only one value, of length 8
this.shapeList.objects[] elements == null
this.shapeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.shapeList.objects[].getClass().getName() elements == null
this.shapeList.size == 0
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener has only one value
series == 0
===========================================================================
org.jfree.chart.renderer.AbstractRenderer.isSeriesVisibleInLegend(int):::EXIT
org.jfree.chart.renderer.AbstractRenderer.ZERO == orig(org.jfree.chart.renderer.AbstractRenderer.ZERO)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(this.basePaint.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(this.baseFillPaint.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(this.baseOutlinePaint.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(this.baseItemLabelPaint.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(this.selectedItemAttributes.defaultFillPaint.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == orig(this.baseStroke.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == orig(this.baseOutlineStroke.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE.getClass().getName() == orig(this.baseShape.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_FONT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_FONT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT)
this.seriesVisibleList == orig(this.seriesVisibleList)
this.seriesVisibleList.objects == orig(this.seriesVisibleList.objects)
this.seriesVisibleList.objects.getClass().getName() == orig(this.seriesVisibleList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.seriesVisibleInLegendList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.paintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.fillPaintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.outlinePaintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.strokeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.outlineStrokeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.shapeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.itemLabelsVisibleList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.itemLabelFontList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.itemLabelPaintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.positiveItemLabelPositionList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.negativeItemLabelPositionList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.createEntitiesList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.legendShapeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.legendTextFont.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.legendTextPaint.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.selectedItemAttributes.paintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.selectedItemAttributes.strokeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.selectedItemAttributes.shapeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.selectedItemAttributes.fillPaintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.selectedItemAttributes.outlinePaintList.objects.getClass().getName())
this.seriesVisibleList.objects[] == orig(this.seriesVisibleList.objects[])
this.seriesVisibleList.size == orig(this.seriesVisibleList.size)
this.seriesVisibleList.increment == orig(this.seriesVisibleList.increment)
this.baseSeriesVisible == orig(this.baseSeriesVisible)
this.seriesVisibleInLegendList == orig(this.seriesVisibleInLegendList)
this.seriesVisibleInLegendList.objects == orig(this.seriesVisibleInLegendList.objects)
this.seriesVisibleInLegendList.objects[] == orig(this.seriesVisibleInLegendList.objects[])
this.seriesVisibleInLegendList.size == orig(this.seriesVisibleInLegendList.size)
this.seriesVisibleInLegendList.increment == orig(this.seriesVisibleInLegendList.increment)
this.baseSeriesVisibleInLegend == orig(this.baseSeriesVisibleInLegend)
this.paintList == orig(this.paintList)
this.paintList.objects == orig(this.paintList.objects)
this.paintList.objects[] == orig(this.paintList.objects[])
this.paintList.size == orig(this.paintList.size)
this.paintList.increment == orig(this.paintList.increment)
this.autoPopulateSeriesPaint == orig(this.autoPopulateSeriesPaint)
this.basePaint == orig(this.basePaint)
this.fillPaintList == orig(this.fillPaintList)
this.fillPaintList.objects == orig(this.fillPaintList.objects)
this.fillPaintList.objects[] == orig(this.fillPaintList.objects[])
this.fillPaintList.size == orig(this.fillPaintList.size)
this.fillPaintList.increment == orig(this.fillPaintList.increment)
this.autoPopulateSeriesFillPaint == orig(this.autoPopulateSeriesFillPaint)
this.baseFillPaint == orig(this.baseFillPaint)
this.outlinePaintList == orig(this.outlinePaintList)
this.outlinePaintList.objects == orig(this.outlinePaintList.objects)
this.outlinePaintList.objects[] == orig(this.outlinePaintList.objects[])
this.outlinePaintList.size == orig(this.outlinePaintList.size)
this.outlinePaintList.increment == orig(this.outlinePaintList.increment)
this.autoPopulateSeriesOutlinePaint == orig(this.autoPopulateSeriesOutlinePaint)
this.baseOutlinePaint == orig(this.baseOutlinePaint)
this.strokeList == orig(this.strokeList)
this.strokeList.objects == orig(this.strokeList.objects)
this.strokeList.objects[] == orig(this.strokeList.objects[])
this.strokeList.size == orig(this.strokeList.size)
this.strokeList.increment == orig(this.strokeList.increment)
this.autoPopulateSeriesStroke == orig(this.autoPopulateSeriesStroke)
this.baseStroke == orig(this.baseStroke)
this.outlineStrokeList == orig(this.outlineStrokeList)
this.outlineStrokeList.objects == orig(this.outlineStrokeList.objects)
this.outlineStrokeList.objects[] == orig(this.outlineStrokeList.objects[])
this.outlineStrokeList.size == orig(this.outlineStrokeList.size)
this.outlineStrokeList.increment == orig(this.outlineStrokeList.increment)
this.baseOutlineStroke == orig(this.baseOutlineStroke)
this.autoPopulateSeriesOutlineStroke == orig(this.autoPopulateSeriesOutlineStroke)
this.shapeList == orig(this.shapeList)
this.shapeList.objects == orig(this.shapeList.objects)
this.shapeList.objects[] == orig(this.shapeList.objects[])
this.shapeList.size == orig(this.shapeList.size)
this.shapeList.increment == orig(this.shapeList.increment)
this.autoPopulateSeriesShape == orig(this.autoPopulateSeriesShape)
this.baseShape == orig(this.baseShape)
this.itemLabelsVisibleList == orig(this.itemLabelsVisibleList)
this.itemLabelsVisibleList.objects == orig(this.itemLabelsVisibleList.objects)
this.itemLabelsVisibleList.objects[] == orig(this.itemLabelsVisibleList.objects[])
this.itemLabelsVisibleList.size == orig(this.itemLabelsVisibleList.size)
this.itemLabelsVisibleList.increment == orig(this.itemLabelsVisibleList.increment)
this.baseItemLabelsVisible == orig(this.baseItemLabelsVisible)
this.itemLabelFontList == orig(this.itemLabelFontList)
this.itemLabelFontList.objects == orig(this.itemLabelFontList.objects)
this.itemLabelFontList.objects[] == orig(this.itemLabelFontList.objects[])
this.itemLabelFontList.size == orig(this.itemLabelFontList.size)
this.itemLabelFontList.increment == orig(this.itemLabelFontList.increment)
this.baseItemLabelFont == orig(this.baseItemLabelFont)
this.itemLabelPaintList == orig(this.itemLabelPaintList)
this.itemLabelPaintList.objects == orig(this.itemLabelPaintList.objects)
this.itemLabelPaintList.objects[] == orig(this.itemLabelPaintList.objects[])
this.itemLabelPaintList.size == orig(this.itemLabelPaintList.size)
this.itemLabelPaintList.increment == orig(this.itemLabelPaintList.increment)
this.baseItemLabelPaint == orig(this.baseItemLabelPaint)
this.positiveItemLabelPositionList == orig(this.positiveItemLabelPositionList)
this.positiveItemLabelPositionList.objects == orig(this.positiveItemLabelPositionList.objects)
this.positiveItemLabelPositionList.objects[] == orig(this.positiveItemLabelPositionList.objects[])
this.positiveItemLabelPositionList.size == orig(this.positiveItemLabelPositionList.size)
this.positiveItemLabelPositionList.increment == orig(this.positiveItemLabelPositionList.increment)
this.basePositiveItemLabelPosition == orig(this.basePositiveItemLabelPosition)
this.basePositiveItemLabelPosition.itemLabelAnchor == orig(this.basePositiveItemLabelPosition.itemLabelAnchor)
org.jfree.chart.labels.ItemLabelAnchor.CENTER == orig(org.jfree.chart.labels.ItemLabelAnchor.CENTER)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE1 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE1)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE2 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE2)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE3 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE3)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE4 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE4)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE5 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE5)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE6 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE6)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE7 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE7)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE8 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE8)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE9 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE9)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE10 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE10)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE11 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE11)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE12 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE12)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12)
this.basePositiveItemLabelPosition.itemLabelAnchor.name == orig(this.basePositiveItemLabelPosition.itemLabelAnchor.name)
this.basePositiveItemLabelPosition.itemLabelAnchor.name.toString == orig(this.basePositiveItemLabelPosition.itemLabelAnchor.name.toString)
this.basePositiveItemLabelPosition.textAnchor == orig(this.basePositiveItemLabelPosition.textAnchor)
org.jfree.chart.text.TextAnchor.TOP_LEFT == orig(org.jfree.chart.text.TextAnchor.TOP_LEFT)
org.jfree.chart.text.TextAnchor.TOP_CENTER == orig(org.jfree.chart.text.TextAnchor.TOP_CENTER)
org.jfree.chart.text.TextAnchor.TOP_RIGHT == orig(org.jfree.chart.text.TextAnchor.TOP_RIGHT)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT)
org.jfree.chart.text.TextAnchor.CENTER_LEFT == orig(org.jfree.chart.text.TextAnchor.CENTER_LEFT)
org.jfree.chart.text.TextAnchor.CENTER == orig(org.jfree.chart.text.TextAnchor.CENTER)
org.jfree.chart.text.TextAnchor.CENTER_RIGHT == orig(org.jfree.chart.text.TextAnchor.CENTER_RIGHT)
org.jfree.chart.text.TextAnchor.BASELINE_LEFT == orig(org.jfree.chart.text.TextAnchor.BASELINE_LEFT)
org.jfree.chart.text.TextAnchor.BASELINE_CENTER == orig(org.jfree.chart.text.TextAnchor.BASELINE_CENTER)
org.jfree.chart.text.TextAnchor.BASELINE_RIGHT == orig(org.jfree.chart.text.TextAnchor.BASELINE_RIGHT)
org.jfree.chart.text.TextAnchor.BOTTOM_LEFT == orig(org.jfree.chart.text.TextAnchor.BOTTOM_LEFT)
org.jfree.chart.text.TextAnchor.BOTTOM_CENTER == orig(org.jfree.chart.text.TextAnchor.BOTTOM_CENTER)
org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT == orig(org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT)
this.basePositiveItemLabelPosition.textAnchor.name == orig(this.basePositiveItemLabelPosition.textAnchor.name)
this.basePositiveItemLabelPosition.textAnchor.name.toString == orig(this.basePositiveItemLabelPosition.textAnchor.name.toString)
this.basePositiveItemLabelPosition.rotationAnchor == orig(this.basePositiveItemLabelPosition.rotationAnchor)
this.basePositiveItemLabelPosition.rotationAnchor.name == orig(this.basePositiveItemLabelPosition.rotationAnchor.name)
this.basePositiveItemLabelPosition.rotationAnchor.name.toString == orig(this.basePositiveItemLabelPosition.rotationAnchor.name.toString)
this.basePositiveItemLabelPosition.angle == orig(this.basePositiveItemLabelPosition.angle)
this.negativeItemLabelPositionList == orig(this.negativeItemLabelPositionList)
this.negativeItemLabelPositionList.objects == orig(this.negativeItemLabelPositionList.objects)
this.negativeItemLabelPositionList.objects[] == orig(this.negativeItemLabelPositionList.objects[])
this.negativeItemLabelPositionList.size == orig(this.negativeItemLabelPositionList.size)
this.negativeItemLabelPositionList.increment == orig(this.negativeItemLabelPositionList.increment)
this.baseNegativeItemLabelPosition == orig(this.baseNegativeItemLabelPosition)
this.baseNegativeItemLabelPosition.itemLabelAnchor == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor)
this.baseNegativeItemLabelPosition.itemLabelAnchor.name == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor.name)
this.baseNegativeItemLabelPosition.itemLabelAnchor.name.toString == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor.name.toString)
this.baseNegativeItemLabelPosition.textAnchor == orig(this.baseNegativeItemLabelPosition.textAnchor)
this.baseNegativeItemLabelPosition.textAnchor.name == orig(this.baseNegativeItemLabelPosition.textAnchor.name)
this.baseNegativeItemLabelPosition.textAnchor.name.toString == orig(this.baseNegativeItemLabelPosition.textAnchor.name.toString)
this.baseNegativeItemLabelPosition.rotationAnchor == orig(this.baseNegativeItemLabelPosition.rotationAnchor)
this.baseNegativeItemLabelPosition.rotationAnchor.name == orig(this.baseNegativeItemLabelPosition.rotationAnchor.name)
this.baseNegativeItemLabelPosition.rotationAnchor.name.toString == orig(this.baseNegativeItemLabelPosition.rotationAnchor.name.toString)
this.baseNegativeItemLabelPosition.angle == orig(this.baseNegativeItemLabelPosition.angle)
this.itemLabelAnchorOffset == orig(this.itemLabelAnchorOffset)
this.createEntitiesList == orig(this.createEntitiesList)
this.createEntitiesList.objects == orig(this.createEntitiesList.objects)
this.createEntitiesList.objects[] == orig(this.createEntitiesList.objects[])
this.createEntitiesList.size == orig(this.createEntitiesList.size)
this.createEntitiesList.increment == orig(this.createEntitiesList.increment)
this.baseCreateEntities == orig(this.baseCreateEntities)
this.legendShapeList == orig(this.legendShapeList)
this.legendShapeList.objects == orig(this.legendShapeList.objects)
this.legendShapeList.objects[] == orig(this.legendShapeList.objects[])
this.legendShapeList.size == orig(this.legendShapeList.size)
this.legendShapeList.increment == orig(this.legendShapeList.increment)
this.baseLegendShape == orig(this.baseLegendShape)
this.treatLegendShapeAsLine == orig(this.treatLegendShapeAsLine)
this.legendTextFont == orig(this.legendTextFont)
this.legendTextFont.objects == orig(this.legendTextFont.objects)
this.legendTextFont.objects[] == orig(this.legendTextFont.objects[])
this.legendTextFont.size == orig(this.legendTextFont.size)
this.legendTextFont.increment == orig(this.legendTextFont.increment)
this.baseLegendTextFont == orig(this.baseLegendTextFont)
this.legendTextPaint == orig(this.legendTextPaint)
this.legendTextPaint.objects == orig(this.legendTextPaint.objects)
this.legendTextPaint.objects[] == orig(this.legendTextPaint.objects[])
this.legendTextPaint.size == orig(this.legendTextPaint.size)
this.legendTextPaint.increment == orig(this.legendTextPaint.increment)
this.baseLegendTextPaint == orig(this.baseLegendTextPaint)
this.dataBoundsIncludesVisibleSeriesOnly == orig(this.dataBoundsIncludesVisibleSeriesOnly)
this.defaultEntityRadius == orig(this.defaultEntityRadius)
this.listenerList == orig(this.listenerList)
this.selectedItemAttributes == orig(this.selectedItemAttributes)
this.selectedItemAttributes.allowNull == orig(this.selectedItemAttributes.allowNull)
this.selectedItemAttributes.paintList == orig(this.selectedItemAttributes.paintList)
this.selectedItemAttributes.paintList.objects == orig(this.selectedItemAttributes.paintList.objects)
this.selectedItemAttributes.paintList.objects[] == orig(this.selectedItemAttributes.paintList.objects[])
this.selectedItemAttributes.paintList.size == orig(this.selectedItemAttributes.paintList.size)
this.selectedItemAttributes.paintList.increment == orig(this.selectedItemAttributes.paintList.increment)
this.selectedItemAttributes.defaultPaint == orig(this.selectedItemAttributes.defaultPaint)
this.selectedItemAttributes.strokeList == orig(this.selectedItemAttributes.strokeList)
this.selectedItemAttributes.strokeList.objects == orig(this.selectedItemAttributes.strokeList.objects)
this.selectedItemAttributes.strokeList.objects[] == orig(this.selectedItemAttributes.strokeList.objects[])
this.selectedItemAttributes.strokeList.size == orig(this.selectedItemAttributes.strokeList.size)
this.selectedItemAttributes.strokeList.increment == orig(this.selectedItemAttributes.strokeList.increment)
this.selectedItemAttributes.defaultStroke == orig(this.selectedItemAttributes.defaultStroke)
this.selectedItemAttributes.shapeList == orig(this.selectedItemAttributes.shapeList)
this.selectedItemAttributes.shapeList.objects == orig(this.selectedItemAttributes.shapeList.objects)
this.selectedItemAttributes.shapeList.objects[] == orig(this.selectedItemAttributes.shapeList.objects[])
this.selectedItemAttributes.shapeList.size == orig(this.selectedItemAttributes.shapeList.size)
this.selectedItemAttributes.shapeList.increment == orig(this.selectedItemAttributes.shapeList.increment)
this.selectedItemAttributes.defaultShape == orig(this.selectedItemAttributes.defaultShape)
this.selectedItemAttributes.fillPaintList == orig(this.selectedItemAttributes.fillPaintList)
this.selectedItemAttributes.fillPaintList.objects == orig(this.selectedItemAttributes.fillPaintList.objects)
this.selectedItemAttributes.fillPaintList.objects[] == orig(this.selectedItemAttributes.fillPaintList.objects[])
this.selectedItemAttributes.fillPaintList.size == orig(this.selectedItemAttributes.fillPaintList.size)
this.selectedItemAttributes.fillPaintList.increment == orig(this.selectedItemAttributes.fillPaintList.increment)
this.selectedItemAttributes.defaultFillPaint == orig(this.selectedItemAttributes.defaultFillPaint)
this.selectedItemAttributes.outlinePaintList == orig(this.selectedItemAttributes.outlinePaintList)
this.selectedItemAttributes.outlinePaintList.objects == orig(this.selectedItemAttributes.outlinePaintList.objects)
this.selectedItemAttributes.outlinePaintList.objects[] == orig(this.selectedItemAttributes.outlinePaintList.objects[])
this.selectedItemAttributes.outlinePaintList.size == orig(this.selectedItemAttributes.outlinePaintList.size)
this.selectedItemAttributes.outlinePaintList.increment == orig(this.selectedItemAttributes.outlinePaintList.increment)
this.selectedItemAttributes.defaultOutlinePaint == orig(this.selectedItemAttributes.defaultOutlinePaint)
this.selectedItemAttributes.outlineStrokeList == orig(this.selectedItemAttributes.outlineStrokeList)
this.selectedItemAttributes.defaultOutlineStroke == orig(this.selectedItemAttributes.defaultOutlineStroke)
this.selectedItemAttributes.labelsVisibleList == orig(this.selectedItemAttributes.labelsVisibleList)
this.selectedItemAttributes.defaultLabelVisible == orig(this.selectedItemAttributes.defaultLabelVisible)
this.selectedItemAttributes.labelFontList == orig(this.selectedItemAttributes.labelFontList)
this.selectedItemAttributes.defaultLabelFont == orig(this.selectedItemAttributes.defaultLabelFont)
this.selectedItemAttributes.labelPaintList == orig(this.selectedItemAttributes.labelPaintList)
this.selectedItemAttributes.defaultLabelPaint == orig(this.selectedItemAttributes.defaultLabelPaint)
this.selectedItemAttributes.positionItemLabelPositionList == orig(this.selectedItemAttributes.positionItemLabelPositionList)
this.selectedItemAttributes.defaultPositiveItemLabelPosition == orig(this.selectedItemAttributes.defaultPositiveItemLabelPosition)
this.selectedItemAttributes.negativeItemLabelPositionList == orig(this.selectedItemAttributes.negativeItemLabelPositionList)
this.selectedItemAttributes.defaultNegativeItemLabelPosition == orig(this.selectedItemAttributes.defaultNegativeItemLabelPosition)
this.selectedItemAttributes.createEntityList == orig(this.selectedItemAttributes.createEntityList)
this.selectedItemAttributes.defaultCreateEntity == orig(this.selectedItemAttributes.defaultCreateEntity)
org.jfree.chart.renderer.AbstractRenderer.ADJ == orig(org.jfree.chart.renderer.AbstractRenderer.ADJ)
org.jfree.chart.renderer.AbstractRenderer.OPP == orig(org.jfree.chart.renderer.AbstractRenderer.OPP)
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener == orig(org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener)
this.paintList.objects[] contains only nulls and has only one value, of length 8
this.paintList.objects[] elements == null
this.paintList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.paintList.objects[].getClass().getName() elements == null
this.paintList.size == 0
this.strokeList.objects[] contains only nulls and has only one value, of length 8
this.strokeList.objects[] elements == null
this.strokeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.strokeList.objects[].getClass().getName() elements == null
this.strokeList.size == 0
this.shapeList.objects[] contains only nulls and has only one value, of length 8
this.shapeList.objects[] elements == null
this.shapeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.shapeList.objects[].getClass().getName() elements == null
this.shapeList.size == 0
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener has only one value
return == true
===========================================================================
org.jfree.chart.renderer.AbstractRenderer.isSeriesVisibleInLegend(int):::EXIT;condition="return == true"
===========================================================================
org.jfree.chart.renderer.AbstractRenderer.lookupLegendShape(int):::ENTER
this.paintList.objects[] contains only nulls and has only one value, of length 8
this.paintList.objects[] elements == null
this.paintList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.paintList.objects[].getClass().getName() elements == null
this.paintList.size == 0
this.strokeList.objects[] contains only nulls and has only one value, of length 8
this.strokeList.objects[] elements == null
this.strokeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.strokeList.objects[].getClass().getName() elements == null
this.strokeList.size == 0
this.shapeList.objects[] contains only nulls and has only one value, of length 8
this.shapeList.objects[] elements == null
this.shapeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.shapeList.objects[].getClass().getName() elements == null
this.shapeList.size == 0
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener has only one value
series == 0
===========================================================================
org.jfree.chart.renderer.AbstractRenderer.lookupLegendShape(int):::EXIT
org.jfree.chart.renderer.AbstractRenderer.ZERO == orig(org.jfree.chart.renderer.AbstractRenderer.ZERO)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(this.basePaint.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(this.baseFillPaint.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(this.baseOutlinePaint.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(this.baseItemLabelPaint.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(this.selectedItemAttributes.defaultFillPaint.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == orig(this.baseStroke.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == orig(this.baseOutlineStroke.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE.getClass().getName() == return.getClass().getName()
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE.getClass().getName() == orig(this.baseShape.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_FONT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_FONT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT)
this.seriesVisibleList == orig(this.seriesVisibleList)
this.seriesVisibleList.objects == orig(this.seriesVisibleList.objects)
this.seriesVisibleList.objects.getClass().getName() == orig(this.seriesVisibleList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.seriesVisibleInLegendList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.paintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.fillPaintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.outlinePaintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.strokeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.outlineStrokeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.shapeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.itemLabelsVisibleList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.itemLabelFontList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.itemLabelPaintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.positiveItemLabelPositionList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.negativeItemLabelPositionList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.createEntitiesList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.legendShapeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.legendTextFont.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.legendTextPaint.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.selectedItemAttributes.paintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.selectedItemAttributes.strokeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.selectedItemAttributes.shapeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.selectedItemAttributes.fillPaintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.selectedItemAttributes.outlinePaintList.objects.getClass().getName())
this.seriesVisibleList.objects[] == orig(this.seriesVisibleList.objects[])
this.seriesVisibleList.size == orig(this.seriesVisibleList.size)
this.seriesVisibleList.increment == orig(this.seriesVisibleList.increment)
this.baseSeriesVisible == orig(this.baseSeriesVisible)
this.seriesVisibleInLegendList == orig(this.seriesVisibleInLegendList)
this.seriesVisibleInLegendList.objects == orig(this.seriesVisibleInLegendList.objects)
this.seriesVisibleInLegendList.objects[] == orig(this.seriesVisibleInLegendList.objects[])
this.seriesVisibleInLegendList.size == orig(this.seriesVisibleInLegendList.size)
this.seriesVisibleInLegendList.increment == orig(this.seriesVisibleInLegendList.increment)
this.baseSeriesVisibleInLegend == orig(this.baseSeriesVisibleInLegend)
this.paintList == orig(this.paintList)
this.paintList.objects == orig(this.paintList.objects)
this.paintList.objects[] == orig(this.paintList.objects[])
this.paintList.size == orig(this.paintList.size)
this.paintList.increment == orig(this.paintList.increment)
this.autoPopulateSeriesPaint == orig(this.autoPopulateSeriesPaint)
this.basePaint == orig(this.basePaint)
this.fillPaintList == orig(this.fillPaintList)
this.fillPaintList.objects == orig(this.fillPaintList.objects)
this.fillPaintList.objects[] == orig(this.fillPaintList.objects[])
this.fillPaintList.size == orig(this.fillPaintList.size)
this.fillPaintList.increment == orig(this.fillPaintList.increment)
this.autoPopulateSeriesFillPaint == orig(this.autoPopulateSeriesFillPaint)
this.baseFillPaint == orig(this.baseFillPaint)
this.outlinePaintList == orig(this.outlinePaintList)
this.outlinePaintList.objects == orig(this.outlinePaintList.objects)
this.outlinePaintList.objects[] == orig(this.outlinePaintList.objects[])
this.outlinePaintList.size == orig(this.outlinePaintList.size)
this.outlinePaintList.increment == orig(this.outlinePaintList.increment)
this.autoPopulateSeriesOutlinePaint == orig(this.autoPopulateSeriesOutlinePaint)
this.baseOutlinePaint == orig(this.baseOutlinePaint)
this.strokeList == orig(this.strokeList)
this.strokeList.objects == orig(this.strokeList.objects)
this.strokeList.objects[] == orig(this.strokeList.objects[])
this.strokeList.size == orig(this.strokeList.size)
this.strokeList.increment == orig(this.strokeList.increment)
this.autoPopulateSeriesStroke == orig(this.autoPopulateSeriesStroke)
this.baseStroke == orig(this.baseStroke)
this.outlineStrokeList == orig(this.outlineStrokeList)
this.outlineStrokeList.objects == orig(this.outlineStrokeList.objects)
this.outlineStrokeList.objects[] == orig(this.outlineStrokeList.objects[])
this.outlineStrokeList.size == orig(this.outlineStrokeList.size)
this.outlineStrokeList.increment == orig(this.outlineStrokeList.increment)
this.baseOutlineStroke == orig(this.baseOutlineStroke)
this.autoPopulateSeriesOutlineStroke == orig(this.autoPopulateSeriesOutlineStroke)
this.shapeList == orig(this.shapeList)
this.shapeList.objects == orig(this.shapeList.objects)
this.shapeList.increment == orig(this.shapeList.increment)
this.autoPopulateSeriesShape == orig(this.autoPopulateSeriesShape)
this.baseShape == orig(this.baseShape)
this.itemLabelsVisibleList == orig(this.itemLabelsVisibleList)
this.itemLabelsVisibleList.objects == orig(this.itemLabelsVisibleList.objects)
this.itemLabelsVisibleList.objects[] == orig(this.itemLabelsVisibleList.objects[])
this.itemLabelsVisibleList.size == orig(this.itemLabelsVisibleList.size)
this.itemLabelsVisibleList.increment == orig(this.itemLabelsVisibleList.increment)
this.baseItemLabelsVisible == orig(this.baseItemLabelsVisible)
this.itemLabelFontList == orig(this.itemLabelFontList)
this.itemLabelFontList.objects == orig(this.itemLabelFontList.objects)
this.itemLabelFontList.objects[] == orig(this.itemLabelFontList.objects[])
this.itemLabelFontList.size == orig(this.itemLabelFontList.size)
this.itemLabelFontList.increment == orig(this.itemLabelFontList.increment)
this.baseItemLabelFont == orig(this.baseItemLabelFont)
this.itemLabelPaintList == orig(this.itemLabelPaintList)
this.itemLabelPaintList.objects == orig(this.itemLabelPaintList.objects)
this.itemLabelPaintList.objects[] == orig(this.itemLabelPaintList.objects[])
this.itemLabelPaintList.size == orig(this.itemLabelPaintList.size)
this.itemLabelPaintList.increment == orig(this.itemLabelPaintList.increment)
this.baseItemLabelPaint == orig(this.baseItemLabelPaint)
this.positiveItemLabelPositionList == orig(this.positiveItemLabelPositionList)
this.positiveItemLabelPositionList.objects == orig(this.positiveItemLabelPositionList.objects)
this.positiveItemLabelPositionList.objects[] == orig(this.positiveItemLabelPositionList.objects[])
this.positiveItemLabelPositionList.size == orig(this.positiveItemLabelPositionList.size)
this.positiveItemLabelPositionList.increment == orig(this.positiveItemLabelPositionList.increment)
this.basePositiveItemLabelPosition == orig(this.basePositiveItemLabelPosition)
this.basePositiveItemLabelPosition.itemLabelAnchor == orig(this.basePositiveItemLabelPosition.itemLabelAnchor)
org.jfree.chart.labels.ItemLabelAnchor.CENTER == orig(org.jfree.chart.labels.ItemLabelAnchor.CENTER)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE1 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE1)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE2 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE2)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE3 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE3)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE4 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE4)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE5 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE5)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE6 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE6)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE7 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE7)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE8 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE8)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE9 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE9)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE10 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE10)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE11 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE11)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE12 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE12)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12)
this.basePositiveItemLabelPosition.itemLabelAnchor.name == orig(this.basePositiveItemLabelPosition.itemLabelAnchor.name)
this.basePositiveItemLabelPosition.itemLabelAnchor.name.toString == orig(this.basePositiveItemLabelPosition.itemLabelAnchor.name.toString)
this.basePositiveItemLabelPosition.textAnchor == orig(this.basePositiveItemLabelPosition.textAnchor)
org.jfree.chart.text.TextAnchor.TOP_LEFT == orig(org.jfree.chart.text.TextAnchor.TOP_LEFT)
org.jfree.chart.text.TextAnchor.TOP_CENTER == orig(org.jfree.chart.text.TextAnchor.TOP_CENTER)
org.jfree.chart.text.TextAnchor.TOP_RIGHT == orig(org.jfree.chart.text.TextAnchor.TOP_RIGHT)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT)
org.jfree.chart.text.TextAnchor.CENTER_LEFT == orig(org.jfree.chart.text.TextAnchor.CENTER_LEFT)
org.jfree.chart.text.TextAnchor.CENTER == orig(org.jfree.chart.text.TextAnchor.CENTER)
org.jfree.chart.text.TextAnchor.CENTER_RIGHT == orig(org.jfree.chart.text.TextAnchor.CENTER_RIGHT)
org.jfree.chart.text.TextAnchor.BASELINE_LEFT == orig(org.jfree.chart.text.TextAnchor.BASELINE_LEFT)
org.jfree.chart.text.TextAnchor.BASELINE_CENTER == orig(org.jfree.chart.text.TextAnchor.BASELINE_CENTER)
org.jfree.chart.text.TextAnchor.BASELINE_RIGHT == orig(org.jfree.chart.text.TextAnchor.BASELINE_RIGHT)
org.jfree.chart.text.TextAnchor.BOTTOM_LEFT == orig(org.jfree.chart.text.TextAnchor.BOTTOM_LEFT)
org.jfree.chart.text.TextAnchor.BOTTOM_CENTER == orig(org.jfree.chart.text.TextAnchor.BOTTOM_CENTER)
org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT == orig(org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT)
this.basePositiveItemLabelPosition.textAnchor.name == orig(this.basePositiveItemLabelPosition.textAnchor.name)
this.basePositiveItemLabelPosition.textAnchor.name.toString == orig(this.basePositiveItemLabelPosition.textAnchor.name.toString)
this.basePositiveItemLabelPosition.rotationAnchor == orig(this.basePositiveItemLabelPosition.rotationAnchor)
this.basePositiveItemLabelPosition.rotationAnchor.name == orig(this.basePositiveItemLabelPosition.rotationAnchor.name)
this.basePositiveItemLabelPosition.rotationAnchor.name.toString == orig(this.basePositiveItemLabelPosition.rotationAnchor.name.toString)
this.basePositiveItemLabelPosition.angle == orig(this.basePositiveItemLabelPosition.angle)
this.negativeItemLabelPositionList == orig(this.negativeItemLabelPositionList)
this.negativeItemLabelPositionList.objects == orig(this.negativeItemLabelPositionList.objects)
this.negativeItemLabelPositionList.objects[] == orig(this.negativeItemLabelPositionList.objects[])
this.negativeItemLabelPositionList.size == orig(this.negativeItemLabelPositionList.size)
this.negativeItemLabelPositionList.increment == orig(this.negativeItemLabelPositionList.increment)
this.baseNegativeItemLabelPosition == orig(this.baseNegativeItemLabelPosition)
this.baseNegativeItemLabelPosition.itemLabelAnchor == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor)
this.baseNegativeItemLabelPosition.itemLabelAnchor.name == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor.name)
this.baseNegativeItemLabelPosition.itemLabelAnchor.name.toString == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor.name.toString)
this.baseNegativeItemLabelPosition.textAnchor == orig(this.baseNegativeItemLabelPosition.textAnchor)
this.baseNegativeItemLabelPosition.textAnchor.name == orig(this.baseNegativeItemLabelPosition.textAnchor.name)
this.baseNegativeItemLabelPosition.textAnchor.name.toString == orig(this.baseNegativeItemLabelPosition.textAnchor.name.toString)
this.baseNegativeItemLabelPosition.rotationAnchor == orig(this.baseNegativeItemLabelPosition.rotationAnchor)
this.baseNegativeItemLabelPosition.rotationAnchor.name == orig(this.baseNegativeItemLabelPosition.rotationAnchor.name)
this.baseNegativeItemLabelPosition.rotationAnchor.name.toString == orig(this.baseNegativeItemLabelPosition.rotationAnchor.name.toString)
this.baseNegativeItemLabelPosition.angle == orig(this.baseNegativeItemLabelPosition.angle)
this.itemLabelAnchorOffset == orig(this.itemLabelAnchorOffset)
this.createEntitiesList == orig(this.createEntitiesList)
this.createEntitiesList.objects == orig(this.createEntitiesList.objects)
this.createEntitiesList.objects[] == orig(this.createEntitiesList.objects[])
this.createEntitiesList.size == orig(this.createEntitiesList.size)
this.createEntitiesList.increment == orig(this.createEntitiesList.increment)
this.baseCreateEntities == orig(this.baseCreateEntities)
this.legendShapeList == orig(this.legendShapeList)
this.legendShapeList.objects == orig(this.legendShapeList.objects)
this.legendShapeList.objects[] == orig(this.legendShapeList.objects[])
this.legendShapeList.size == orig(this.legendShapeList.size)
this.legendShapeList.increment == orig(this.legendShapeList.increment)
this.baseLegendShape == orig(this.baseLegendShape)
this.treatLegendShapeAsLine == orig(this.treatLegendShapeAsLine)
this.legendTextFont == orig(this.legendTextFont)
this.legendTextFont.objects == orig(this.legendTextFont.objects)
this.legendTextFont.objects[] == orig(this.legendTextFont.objects[])
this.legendTextFont.size == orig(this.legendTextFont.size)
this.legendTextFont.increment == orig(this.legendTextFont.increment)
this.baseLegendTextFont == orig(this.baseLegendTextFont)
this.legendTextPaint == orig(this.legendTextPaint)
this.legendTextPaint.objects == orig(this.legendTextPaint.objects)
this.legendTextPaint.objects[] == orig(this.legendTextPaint.objects[])
this.legendTextPaint.size == orig(this.legendTextPaint.size)
this.legendTextPaint.increment == orig(this.legendTextPaint.increment)
this.baseLegendTextPaint == orig(this.baseLegendTextPaint)
this.dataBoundsIncludesVisibleSeriesOnly == orig(this.dataBoundsIncludesVisibleSeriesOnly)
this.defaultEntityRadius == orig(this.defaultEntityRadius)
this.listenerList == orig(this.listenerList)
this.selectedItemAttributes == orig(this.selectedItemAttributes)
this.selectedItemAttributes.allowNull == orig(this.selectedItemAttributes.allowNull)
this.selectedItemAttributes.paintList == orig(this.selectedItemAttributes.paintList)
this.selectedItemAttributes.paintList.objects == orig(this.selectedItemAttributes.paintList.objects)
this.selectedItemAttributes.paintList.objects[] == orig(this.selectedItemAttributes.paintList.objects[])
this.selectedItemAttributes.paintList.size == orig(this.selectedItemAttributes.paintList.size)
this.selectedItemAttributes.paintList.increment == orig(this.selectedItemAttributes.paintList.increment)
this.selectedItemAttributes.defaultPaint == orig(this.selectedItemAttributes.defaultPaint)
this.selectedItemAttributes.strokeList == orig(this.selectedItemAttributes.strokeList)
this.selectedItemAttributes.strokeList.objects == orig(this.selectedItemAttributes.strokeList.objects)
this.selectedItemAttributes.strokeList.objects[] == orig(this.selectedItemAttributes.strokeList.objects[])
this.selectedItemAttributes.strokeList.size == orig(this.selectedItemAttributes.strokeList.size)
this.selectedItemAttributes.strokeList.increment == orig(this.selectedItemAttributes.strokeList.increment)
this.selectedItemAttributes.defaultStroke == orig(this.selectedItemAttributes.defaultStroke)
this.selectedItemAttributes.shapeList == orig(this.selectedItemAttributes.shapeList)
this.selectedItemAttributes.shapeList.objects == orig(this.selectedItemAttributes.shapeList.objects)
this.selectedItemAttributes.shapeList.objects[] == orig(this.selectedItemAttributes.shapeList.objects[])
this.selectedItemAttributes.shapeList.size == orig(this.selectedItemAttributes.shapeList.size)
this.selectedItemAttributes.shapeList.increment == orig(this.selectedItemAttributes.shapeList.increment)
this.selectedItemAttributes.defaultShape == orig(this.selectedItemAttributes.defaultShape)
this.selectedItemAttributes.fillPaintList == orig(this.selectedItemAttributes.fillPaintList)
this.selectedItemAttributes.fillPaintList.objects == orig(this.selectedItemAttributes.fillPaintList.objects)
this.selectedItemAttributes.fillPaintList.objects[] == orig(this.selectedItemAttributes.fillPaintList.objects[])
this.selectedItemAttributes.fillPaintList.size == orig(this.selectedItemAttributes.fillPaintList.size)
this.selectedItemAttributes.fillPaintList.increment == orig(this.selectedItemAttributes.fillPaintList.increment)
this.selectedItemAttributes.defaultFillPaint == orig(this.selectedItemAttributes.defaultFillPaint)
this.selectedItemAttributes.outlinePaintList == orig(this.selectedItemAttributes.outlinePaintList)
this.selectedItemAttributes.outlinePaintList.objects == orig(this.selectedItemAttributes.outlinePaintList.objects)
this.selectedItemAttributes.outlinePaintList.objects[] == orig(this.selectedItemAttributes.outlinePaintList.objects[])
this.selectedItemAttributes.outlinePaintList.size == orig(this.selectedItemAttributes.outlinePaintList.size)
this.selectedItemAttributes.outlinePaintList.increment == orig(this.selectedItemAttributes.outlinePaintList.increment)
this.selectedItemAttributes.defaultOutlinePaint == orig(this.selectedItemAttributes.defaultOutlinePaint)
this.selectedItemAttributes.outlineStrokeList == orig(this.selectedItemAttributes.outlineStrokeList)
this.selectedItemAttributes.defaultOutlineStroke == orig(this.selectedItemAttributes.defaultOutlineStroke)
this.selectedItemAttributes.labelsVisibleList == orig(this.selectedItemAttributes.labelsVisibleList)
this.selectedItemAttributes.defaultLabelVisible == orig(this.selectedItemAttributes.defaultLabelVisible)
this.selectedItemAttributes.labelFontList == orig(this.selectedItemAttributes.labelFontList)
this.selectedItemAttributes.defaultLabelFont == orig(this.selectedItemAttributes.defaultLabelFont)
this.selectedItemAttributes.labelPaintList == orig(this.selectedItemAttributes.labelPaintList)
this.selectedItemAttributes.defaultLabelPaint == orig(this.selectedItemAttributes.defaultLabelPaint)
this.selectedItemAttributes.positionItemLabelPositionList == orig(this.selectedItemAttributes.positionItemLabelPositionList)
this.selectedItemAttributes.defaultPositiveItemLabelPosition == orig(this.selectedItemAttributes.defaultPositiveItemLabelPosition)
this.selectedItemAttributes.negativeItemLabelPositionList == orig(this.selectedItemAttributes.negativeItemLabelPositionList)
this.selectedItemAttributes.defaultNegativeItemLabelPosition == orig(this.selectedItemAttributes.defaultNegativeItemLabelPosition)
this.selectedItemAttributes.createEntityList == orig(this.selectedItemAttributes.createEntityList)
this.selectedItemAttributes.defaultCreateEntity == orig(this.selectedItemAttributes.defaultCreateEntity)
org.jfree.chart.renderer.AbstractRenderer.ADJ == orig(org.jfree.chart.renderer.AbstractRenderer.ADJ)
org.jfree.chart.renderer.AbstractRenderer.OPP == orig(org.jfree.chart.renderer.AbstractRenderer.OPP)
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener == orig(org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener)
size(this.shapeList.objects[]) == orig(size(this.shapeList.objects[]))
this.paintList.objects[] contains only nulls and has only one value, of length 8
this.paintList.objects[] elements == null
this.paintList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.paintList.objects[].getClass().getName() elements == null
this.paintList.size == 0
this.strokeList.objects[] contains only nulls and has only one value, of length 8
this.strokeList.objects[] elements == null
this.strokeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.strokeList.objects[].getClass().getName() elements == null
this.strokeList.size == 0
this.shapeList.objects[] has only one value, of length 8
this.shapeList.objects[].getClass().getName() == [java.awt.geom.Rectangle2D.Double, null, null, null, null, null, null, null]
this.shapeList.size == 1
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener has only one value
return has only one value
===========================================================================
org.jfree.chart.renderer.AbstractRenderer.lookupLegendTextFont(int):::ENTER
this.paintList.objects[] has only one value, of length 8
this.paintList.objects[].getClass().getName() == [java.awt.Color, null, null, null, null, null, null, null]
this.paintList.size == 1
this.strokeList.objects[] has only one value, of length 8
this.strokeList.objects[].getClass().getName() == [java.awt.BasicStroke, null, null, null, null, null, null, null]
this.strokeList.size == 1
this.shapeList.objects[] has only one value, of length 8
this.shapeList.objects[].getClass().getName() == [java.awt.geom.Rectangle2D.Double, null, null, null, null, null, null, null]
this.shapeList.size == 1
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener has only one value
series == 0
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() in this.paintList.objects[].getClass().getName()
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() in this.strokeList.objects[].getClass().getName()
===========================================================================
org.jfree.chart.renderer.AbstractRenderer.lookupLegendTextFont(int):::EXIT
org.jfree.chart.renderer.AbstractRenderer.ZERO == orig(org.jfree.chart.renderer.AbstractRenderer.ZERO)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(this.basePaint.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(this.baseFillPaint.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(this.baseOutlinePaint.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(this.baseItemLabelPaint.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(this.selectedItemAttributes.defaultFillPaint.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == orig(this.baseStroke.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == orig(this.baseOutlineStroke.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE.getClass().getName() == orig(this.baseShape.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_FONT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_FONT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT)
this.seriesVisibleList == orig(this.seriesVisibleList)
this.seriesVisibleList.objects == orig(this.seriesVisibleList.objects)
this.seriesVisibleList.objects.getClass().getName() == orig(this.seriesVisibleList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.seriesVisibleInLegendList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.paintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.fillPaintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.outlinePaintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.strokeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.outlineStrokeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.shapeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.itemLabelsVisibleList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.itemLabelFontList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.itemLabelPaintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.positiveItemLabelPositionList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.negativeItemLabelPositionList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.createEntitiesList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.legendShapeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.legendTextFont.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.legendTextPaint.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.selectedItemAttributes.paintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.selectedItemAttributes.strokeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.selectedItemAttributes.shapeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.selectedItemAttributes.fillPaintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.selectedItemAttributes.outlinePaintList.objects.getClass().getName())
this.seriesVisibleList.objects[] == orig(this.seriesVisibleList.objects[])
this.seriesVisibleList.size == orig(this.seriesVisibleList.size)
this.seriesVisibleList.increment == orig(this.seriesVisibleList.increment)
this.baseSeriesVisible == orig(this.baseSeriesVisible)
this.seriesVisibleInLegendList == orig(this.seriesVisibleInLegendList)
this.seriesVisibleInLegendList.objects == orig(this.seriesVisibleInLegendList.objects)
this.seriesVisibleInLegendList.objects[] == orig(this.seriesVisibleInLegendList.objects[])
this.seriesVisibleInLegendList.size == orig(this.seriesVisibleInLegendList.size)
this.seriesVisibleInLegendList.increment == orig(this.seriesVisibleInLegendList.increment)
this.baseSeriesVisibleInLegend == orig(this.baseSeriesVisibleInLegend)
this.paintList == orig(this.paintList)
this.paintList.objects == orig(this.paintList.objects)
this.paintList.objects[] == orig(this.paintList.objects[])
this.paintList.size == orig(this.paintList.size)
this.paintList.increment == orig(this.paintList.increment)
this.autoPopulateSeriesPaint == orig(this.autoPopulateSeriesPaint)
this.basePaint == orig(this.basePaint)
this.fillPaintList == orig(this.fillPaintList)
this.fillPaintList.objects == orig(this.fillPaintList.objects)
this.fillPaintList.objects[] == orig(this.fillPaintList.objects[])
this.fillPaintList.size == orig(this.fillPaintList.size)
this.fillPaintList.increment == orig(this.fillPaintList.increment)
this.autoPopulateSeriesFillPaint == orig(this.autoPopulateSeriesFillPaint)
this.baseFillPaint == orig(this.baseFillPaint)
this.outlinePaintList == orig(this.outlinePaintList)
this.outlinePaintList.objects == orig(this.outlinePaintList.objects)
this.outlinePaintList.objects[] == orig(this.outlinePaintList.objects[])
this.outlinePaintList.size == orig(this.outlinePaintList.size)
this.outlinePaintList.increment == orig(this.outlinePaintList.increment)
this.autoPopulateSeriesOutlinePaint == orig(this.autoPopulateSeriesOutlinePaint)
this.baseOutlinePaint == orig(this.baseOutlinePaint)
this.strokeList == orig(this.strokeList)
this.strokeList.objects == orig(this.strokeList.objects)
this.strokeList.objects[] == orig(this.strokeList.objects[])
this.strokeList.size == orig(this.strokeList.size)
this.strokeList.increment == orig(this.strokeList.increment)
this.autoPopulateSeriesStroke == orig(this.autoPopulateSeriesStroke)
this.baseStroke == orig(this.baseStroke)
this.outlineStrokeList == orig(this.outlineStrokeList)
this.outlineStrokeList.objects == orig(this.outlineStrokeList.objects)
this.outlineStrokeList.objects[] == orig(this.outlineStrokeList.objects[])
this.outlineStrokeList.size == orig(this.outlineStrokeList.size)
this.outlineStrokeList.increment == orig(this.outlineStrokeList.increment)
this.baseOutlineStroke == orig(this.baseOutlineStroke)
this.autoPopulateSeriesOutlineStroke == orig(this.autoPopulateSeriesOutlineStroke)
this.shapeList == orig(this.shapeList)
this.shapeList.objects == orig(this.shapeList.objects)
this.shapeList.objects[] == orig(this.shapeList.objects[])
this.shapeList.size == orig(this.shapeList.size)
this.shapeList.increment == orig(this.shapeList.increment)
this.autoPopulateSeriesShape == orig(this.autoPopulateSeriesShape)
this.baseShape == orig(this.baseShape)
this.itemLabelsVisibleList == orig(this.itemLabelsVisibleList)
this.itemLabelsVisibleList.objects == orig(this.itemLabelsVisibleList.objects)
this.itemLabelsVisibleList.objects[] == orig(this.itemLabelsVisibleList.objects[])
this.itemLabelsVisibleList.size == orig(this.itemLabelsVisibleList.size)
this.itemLabelsVisibleList.increment == orig(this.itemLabelsVisibleList.increment)
this.baseItemLabelsVisible == orig(this.baseItemLabelsVisible)
this.itemLabelFontList == orig(this.itemLabelFontList)
this.itemLabelFontList.objects == orig(this.itemLabelFontList.objects)
this.itemLabelFontList.objects[] == orig(this.itemLabelFontList.objects[])
this.itemLabelFontList.size == orig(this.itemLabelFontList.size)
this.itemLabelFontList.increment == orig(this.itemLabelFontList.increment)
this.baseItemLabelFont == orig(this.baseItemLabelFont)
this.itemLabelPaintList == orig(this.itemLabelPaintList)
this.itemLabelPaintList.objects == orig(this.itemLabelPaintList.objects)
this.itemLabelPaintList.objects[] == orig(this.itemLabelPaintList.objects[])
this.itemLabelPaintList.size == orig(this.itemLabelPaintList.size)
this.itemLabelPaintList.increment == orig(this.itemLabelPaintList.increment)
this.baseItemLabelPaint == orig(this.baseItemLabelPaint)
this.positiveItemLabelPositionList == orig(this.positiveItemLabelPositionList)
this.positiveItemLabelPositionList.objects == orig(this.positiveItemLabelPositionList.objects)
this.positiveItemLabelPositionList.objects[] == orig(this.positiveItemLabelPositionList.objects[])
this.positiveItemLabelPositionList.size == orig(this.positiveItemLabelPositionList.size)
this.positiveItemLabelPositionList.increment == orig(this.positiveItemLabelPositionList.increment)
this.basePositiveItemLabelPosition == orig(this.basePositiveItemLabelPosition)
this.basePositiveItemLabelPosition.itemLabelAnchor == orig(this.basePositiveItemLabelPosition.itemLabelAnchor)
org.jfree.chart.labels.ItemLabelAnchor.CENTER == orig(org.jfree.chart.labels.ItemLabelAnchor.CENTER)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE1 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE1)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE2 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE2)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE3 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE3)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE4 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE4)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE5 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE5)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE6 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE6)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE7 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE7)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE8 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE8)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE9 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE9)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE10 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE10)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE11 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE11)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE12 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE12)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12)
this.basePositiveItemLabelPosition.itemLabelAnchor.name == orig(this.basePositiveItemLabelPosition.itemLabelAnchor.name)
this.basePositiveItemLabelPosition.itemLabelAnchor.name.toString == orig(this.basePositiveItemLabelPosition.itemLabelAnchor.name.toString)
this.basePositiveItemLabelPosition.textAnchor == orig(this.basePositiveItemLabelPosition.textAnchor)
org.jfree.chart.text.TextAnchor.TOP_LEFT == orig(org.jfree.chart.text.TextAnchor.TOP_LEFT)
org.jfree.chart.text.TextAnchor.TOP_CENTER == orig(org.jfree.chart.text.TextAnchor.TOP_CENTER)
org.jfree.chart.text.TextAnchor.TOP_RIGHT == orig(org.jfree.chart.text.TextAnchor.TOP_RIGHT)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT)
org.jfree.chart.text.TextAnchor.CENTER_LEFT == orig(org.jfree.chart.text.TextAnchor.CENTER_LEFT)
org.jfree.chart.text.TextAnchor.CENTER == orig(org.jfree.chart.text.TextAnchor.CENTER)
org.jfree.chart.text.TextAnchor.CENTER_RIGHT == orig(org.jfree.chart.text.TextAnchor.CENTER_RIGHT)
org.jfree.chart.text.TextAnchor.BASELINE_LEFT == orig(org.jfree.chart.text.TextAnchor.BASELINE_LEFT)
org.jfree.chart.text.TextAnchor.BASELINE_CENTER == orig(org.jfree.chart.text.TextAnchor.BASELINE_CENTER)
org.jfree.chart.text.TextAnchor.BASELINE_RIGHT == orig(org.jfree.chart.text.TextAnchor.BASELINE_RIGHT)
org.jfree.chart.text.TextAnchor.BOTTOM_LEFT == orig(org.jfree.chart.text.TextAnchor.BOTTOM_LEFT)
org.jfree.chart.text.TextAnchor.BOTTOM_CENTER == orig(org.jfree.chart.text.TextAnchor.BOTTOM_CENTER)
org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT == orig(org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT)
this.basePositiveItemLabelPosition.textAnchor.name == orig(this.basePositiveItemLabelPosition.textAnchor.name)
this.basePositiveItemLabelPosition.textAnchor.name.toString == orig(this.basePositiveItemLabelPosition.textAnchor.name.toString)
this.basePositiveItemLabelPosition.rotationAnchor == orig(this.basePositiveItemLabelPosition.rotationAnchor)
this.basePositiveItemLabelPosition.rotationAnchor.name == orig(this.basePositiveItemLabelPosition.rotationAnchor.name)
this.basePositiveItemLabelPosition.rotationAnchor.name.toString == orig(this.basePositiveItemLabelPosition.rotationAnchor.name.toString)
this.basePositiveItemLabelPosition.angle == orig(this.basePositiveItemLabelPosition.angle)
this.negativeItemLabelPositionList == orig(this.negativeItemLabelPositionList)
this.negativeItemLabelPositionList.objects == orig(this.negativeItemLabelPositionList.objects)
this.negativeItemLabelPositionList.objects[] == orig(this.negativeItemLabelPositionList.objects[])
this.negativeItemLabelPositionList.size == orig(this.negativeItemLabelPositionList.size)
this.negativeItemLabelPositionList.increment == orig(this.negativeItemLabelPositionList.increment)
this.baseNegativeItemLabelPosition == orig(this.baseNegativeItemLabelPosition)
this.baseNegativeItemLabelPosition.itemLabelAnchor == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor)
this.baseNegativeItemLabelPosition.itemLabelAnchor.name == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor.name)
this.baseNegativeItemLabelPosition.itemLabelAnchor.name.toString == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor.name.toString)
this.baseNegativeItemLabelPosition.textAnchor == orig(this.baseNegativeItemLabelPosition.textAnchor)
this.baseNegativeItemLabelPosition.textAnchor.name == orig(this.baseNegativeItemLabelPosition.textAnchor.name)
this.baseNegativeItemLabelPosition.textAnchor.name.toString == orig(this.baseNegativeItemLabelPosition.textAnchor.name.toString)
this.baseNegativeItemLabelPosition.rotationAnchor == orig(this.baseNegativeItemLabelPosition.rotationAnchor)
this.baseNegativeItemLabelPosition.rotationAnchor.name == orig(this.baseNegativeItemLabelPosition.rotationAnchor.name)
this.baseNegativeItemLabelPosition.rotationAnchor.name.toString == orig(this.baseNegativeItemLabelPosition.rotationAnchor.name.toString)
this.baseNegativeItemLabelPosition.angle == orig(this.baseNegativeItemLabelPosition.angle)
this.itemLabelAnchorOffset == orig(this.itemLabelAnchorOffset)
this.createEntitiesList == orig(this.createEntitiesList)
this.createEntitiesList.objects == orig(this.createEntitiesList.objects)
this.createEntitiesList.objects[] == orig(this.createEntitiesList.objects[])
this.createEntitiesList.size == orig(this.createEntitiesList.size)
this.createEntitiesList.increment == orig(this.createEntitiesList.increment)
this.baseCreateEntities == orig(this.baseCreateEntities)
this.legendShapeList == orig(this.legendShapeList)
this.legendShapeList.objects == orig(this.legendShapeList.objects)
this.legendShapeList.objects[] == orig(this.legendShapeList.objects[])
this.legendShapeList.size == orig(this.legendShapeList.size)
this.legendShapeList.increment == orig(this.legendShapeList.increment)
this.baseLegendShape == orig(this.baseLegendShape)
this.treatLegendShapeAsLine == orig(this.treatLegendShapeAsLine)
this.legendTextFont == orig(this.legendTextFont)
this.legendTextFont.objects == orig(this.legendTextFont.objects)
this.legendTextFont.objects[] == orig(this.legendTextFont.objects[])
this.legendTextFont.size == orig(this.legendTextFont.size)
this.legendTextFont.increment == orig(this.legendTextFont.increment)
this.baseLegendTextFont == orig(this.baseLegendTextFont)
this.legendTextPaint == orig(this.legendTextPaint)
this.legendTextPaint.objects == orig(this.legendTextPaint.objects)
this.legendTextPaint.objects[] == orig(this.legendTextPaint.objects[])
this.legendTextPaint.size == orig(this.legendTextPaint.size)
this.legendTextPaint.increment == orig(this.legendTextPaint.increment)
this.baseLegendTextPaint == orig(this.baseLegendTextPaint)
this.dataBoundsIncludesVisibleSeriesOnly == orig(this.dataBoundsIncludesVisibleSeriesOnly)
this.defaultEntityRadius == orig(this.defaultEntityRadius)
this.listenerList == orig(this.listenerList)
this.selectedItemAttributes == orig(this.selectedItemAttributes)
this.selectedItemAttributes.allowNull == orig(this.selectedItemAttributes.allowNull)
this.selectedItemAttributes.paintList == orig(this.selectedItemAttributes.paintList)
this.selectedItemAttributes.paintList.objects == orig(this.selectedItemAttributes.paintList.objects)
this.selectedItemAttributes.paintList.objects[] == orig(this.selectedItemAttributes.paintList.objects[])
this.selectedItemAttributes.paintList.size == orig(this.selectedItemAttributes.paintList.size)
this.selectedItemAttributes.paintList.increment == orig(this.selectedItemAttributes.paintList.increment)
this.selectedItemAttributes.defaultPaint == orig(this.selectedItemAttributes.defaultPaint)
this.selectedItemAttributes.strokeList == orig(this.selectedItemAttributes.strokeList)
this.selectedItemAttributes.strokeList.objects == orig(this.selectedItemAttributes.strokeList.objects)
this.selectedItemAttributes.strokeList.objects[] == orig(this.selectedItemAttributes.strokeList.objects[])
this.selectedItemAttributes.strokeList.size == orig(this.selectedItemAttributes.strokeList.size)
this.selectedItemAttributes.strokeList.increment == orig(this.selectedItemAttributes.strokeList.increment)
this.selectedItemAttributes.defaultStroke == orig(this.selectedItemAttributes.defaultStroke)
this.selectedItemAttributes.shapeList == orig(this.selectedItemAttributes.shapeList)
this.selectedItemAttributes.shapeList.objects == orig(this.selectedItemAttributes.shapeList.objects)
this.selectedItemAttributes.shapeList.objects[] == orig(this.selectedItemAttributes.shapeList.objects[])
this.selectedItemAttributes.shapeList.size == orig(this.selectedItemAttributes.shapeList.size)
this.selectedItemAttributes.shapeList.increment == orig(this.selectedItemAttributes.shapeList.increment)
this.selectedItemAttributes.defaultShape == orig(this.selectedItemAttributes.defaultShape)
this.selectedItemAttributes.fillPaintList == orig(this.selectedItemAttributes.fillPaintList)
this.selectedItemAttributes.fillPaintList.objects == orig(this.selectedItemAttributes.fillPaintList.objects)
this.selectedItemAttributes.fillPaintList.objects[] == orig(this.selectedItemAttributes.fillPaintList.objects[])
this.selectedItemAttributes.fillPaintList.size == orig(this.selectedItemAttributes.fillPaintList.size)
this.selectedItemAttributes.fillPaintList.increment == orig(this.selectedItemAttributes.fillPaintList.increment)
this.selectedItemAttributes.defaultFillPaint == orig(this.selectedItemAttributes.defaultFillPaint)
this.selectedItemAttributes.outlinePaintList == orig(this.selectedItemAttributes.outlinePaintList)
this.selectedItemAttributes.outlinePaintList.objects == orig(this.selectedItemAttributes.outlinePaintList.objects)
this.selectedItemAttributes.outlinePaintList.objects[] == orig(this.selectedItemAttributes.outlinePaintList.objects[])
this.selectedItemAttributes.outlinePaintList.size == orig(this.selectedItemAttributes.outlinePaintList.size)
this.selectedItemAttributes.outlinePaintList.increment == orig(this.selectedItemAttributes.outlinePaintList.increment)
this.selectedItemAttributes.defaultOutlinePaint == orig(this.selectedItemAttributes.defaultOutlinePaint)
this.selectedItemAttributes.outlineStrokeList == orig(this.selectedItemAttributes.outlineStrokeList)
this.selectedItemAttributes.defaultOutlineStroke == orig(this.selectedItemAttributes.defaultOutlineStroke)
this.selectedItemAttributes.labelsVisibleList == orig(this.selectedItemAttributes.labelsVisibleList)
this.selectedItemAttributes.defaultLabelVisible == orig(this.selectedItemAttributes.defaultLabelVisible)
this.selectedItemAttributes.labelFontList == orig(this.selectedItemAttributes.labelFontList)
this.selectedItemAttributes.defaultLabelFont == orig(this.selectedItemAttributes.defaultLabelFont)
this.selectedItemAttributes.labelPaintList == orig(this.selectedItemAttributes.labelPaintList)
this.selectedItemAttributes.defaultLabelPaint == orig(this.selectedItemAttributes.defaultLabelPaint)
this.selectedItemAttributes.positionItemLabelPositionList == orig(this.selectedItemAttributes.positionItemLabelPositionList)
this.selectedItemAttributes.defaultPositiveItemLabelPosition == orig(this.selectedItemAttributes.defaultPositiveItemLabelPosition)
this.selectedItemAttributes.negativeItemLabelPositionList == orig(this.selectedItemAttributes.negativeItemLabelPositionList)
this.selectedItemAttributes.defaultNegativeItemLabelPosition == orig(this.selectedItemAttributes.defaultNegativeItemLabelPosition)
this.selectedItemAttributes.createEntityList == orig(this.selectedItemAttributes.createEntityList)
this.selectedItemAttributes.defaultCreateEntity == orig(this.selectedItemAttributes.defaultCreateEntity)
org.jfree.chart.renderer.AbstractRenderer.ADJ == orig(org.jfree.chart.renderer.AbstractRenderer.ADJ)
org.jfree.chart.renderer.AbstractRenderer.OPP == orig(org.jfree.chart.renderer.AbstractRenderer.OPP)
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener == orig(org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener)
this.paintList.objects[] has only one value, of length 8
this.paintList.objects[].getClass().getName() == [java.awt.Color, null, null, null, null, null, null, null]
this.paintList.size == 1
this.strokeList.objects[] has only one value, of length 8
this.strokeList.objects[].getClass().getName() == [java.awt.BasicStroke, null, null, null, null, null, null, null]
this.strokeList.size == 1
this.shapeList.objects[] has only one value, of length 8
this.shapeList.objects[].getClass().getName() == [java.awt.geom.Rectangle2D.Double, null, null, null, null, null, null, null]
this.shapeList.size == 1
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener has only one value
return == null
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() in this.paintList.objects[].getClass().getName()
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() in this.strokeList.objects[].getClass().getName()
===========================================================================
org.jfree.chart.renderer.AbstractRenderer.lookupLegendTextPaint(int):::ENTER
this.paintList.objects[] has only one value, of length 8
this.paintList.objects[].getClass().getName() == [java.awt.Color, null, null, null, null, null, null, null]
this.paintList.size == 1
this.strokeList.objects[] has only one value, of length 8
this.strokeList.objects[].getClass().getName() == [java.awt.BasicStroke, null, null, null, null, null, null, null]
this.strokeList.size == 1
this.shapeList.objects[] has only one value, of length 8
this.shapeList.objects[].getClass().getName() == [java.awt.geom.Rectangle2D.Double, null, null, null, null, null, null, null]
this.shapeList.size == 1
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener has only one value
series == 0
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() in this.paintList.objects[].getClass().getName()
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() in this.strokeList.objects[].getClass().getName()
===========================================================================
org.jfree.chart.renderer.AbstractRenderer.lookupLegendTextPaint(int):::EXIT
org.jfree.chart.renderer.AbstractRenderer.ZERO == orig(org.jfree.chart.renderer.AbstractRenderer.ZERO)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(this.basePaint.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(this.baseFillPaint.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(this.baseOutlinePaint.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(this.baseItemLabelPaint.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(this.selectedItemAttributes.defaultFillPaint.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == orig(this.baseStroke.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == orig(this.baseOutlineStroke.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE.getClass().getName() == orig(this.baseShape.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_FONT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_FONT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT)
this.seriesVisibleList == orig(this.seriesVisibleList)
this.seriesVisibleList.objects == orig(this.seriesVisibleList.objects)
this.seriesVisibleList.objects.getClass().getName() == orig(this.seriesVisibleList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.seriesVisibleInLegendList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.paintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.fillPaintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.outlinePaintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.strokeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.outlineStrokeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.shapeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.itemLabelsVisibleList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.itemLabelFontList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.itemLabelPaintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.positiveItemLabelPositionList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.negativeItemLabelPositionList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.createEntitiesList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.legendShapeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.legendTextFont.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.legendTextPaint.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.selectedItemAttributes.paintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.selectedItemAttributes.strokeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.selectedItemAttributes.shapeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.selectedItemAttributes.fillPaintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.selectedItemAttributes.outlinePaintList.objects.getClass().getName())
this.seriesVisibleList.objects[] == orig(this.seriesVisibleList.objects[])
this.seriesVisibleList.size == orig(this.seriesVisibleList.size)
this.seriesVisibleList.increment == orig(this.seriesVisibleList.increment)
this.baseSeriesVisible == orig(this.baseSeriesVisible)
this.seriesVisibleInLegendList == orig(this.seriesVisibleInLegendList)
this.seriesVisibleInLegendList.objects == orig(this.seriesVisibleInLegendList.objects)
this.seriesVisibleInLegendList.objects[] == orig(this.seriesVisibleInLegendList.objects[])
this.seriesVisibleInLegendList.size == orig(this.seriesVisibleInLegendList.size)
this.seriesVisibleInLegendList.increment == orig(this.seriesVisibleInLegendList.increment)
this.baseSeriesVisibleInLegend == orig(this.baseSeriesVisibleInLegend)
this.paintList == orig(this.paintList)
this.paintList.objects == orig(this.paintList.objects)
this.paintList.objects[] == orig(this.paintList.objects[])
this.paintList.size == orig(this.paintList.size)
this.paintList.increment == orig(this.paintList.increment)
this.autoPopulateSeriesPaint == orig(this.autoPopulateSeriesPaint)
this.basePaint == orig(this.basePaint)
this.fillPaintList == orig(this.fillPaintList)
this.fillPaintList.objects == orig(this.fillPaintList.objects)
this.fillPaintList.objects[] == orig(this.fillPaintList.objects[])
this.fillPaintList.size == orig(this.fillPaintList.size)
this.fillPaintList.increment == orig(this.fillPaintList.increment)
this.autoPopulateSeriesFillPaint == orig(this.autoPopulateSeriesFillPaint)
this.baseFillPaint == orig(this.baseFillPaint)
this.outlinePaintList == orig(this.outlinePaintList)
this.outlinePaintList.objects == orig(this.outlinePaintList.objects)
this.outlinePaintList.objects[] == orig(this.outlinePaintList.objects[])
this.outlinePaintList.size == orig(this.outlinePaintList.size)
this.outlinePaintList.increment == orig(this.outlinePaintList.increment)
this.autoPopulateSeriesOutlinePaint == orig(this.autoPopulateSeriesOutlinePaint)
this.baseOutlinePaint == orig(this.baseOutlinePaint)
this.strokeList == orig(this.strokeList)
this.strokeList.objects == orig(this.strokeList.objects)
this.strokeList.objects[] == orig(this.strokeList.objects[])
this.strokeList.size == orig(this.strokeList.size)
this.strokeList.increment == orig(this.strokeList.increment)
this.autoPopulateSeriesStroke == orig(this.autoPopulateSeriesStroke)
this.baseStroke == orig(this.baseStroke)
this.outlineStrokeList == orig(this.outlineStrokeList)
this.outlineStrokeList.objects == orig(this.outlineStrokeList.objects)
this.outlineStrokeList.objects[] == orig(this.outlineStrokeList.objects[])
this.outlineStrokeList.size == orig(this.outlineStrokeList.size)
this.outlineStrokeList.increment == orig(this.outlineStrokeList.increment)
this.baseOutlineStroke == orig(this.baseOutlineStroke)
this.autoPopulateSeriesOutlineStroke == orig(this.autoPopulateSeriesOutlineStroke)
this.shapeList == orig(this.shapeList)
this.shapeList.objects == orig(this.shapeList.objects)
this.shapeList.objects[] == orig(this.shapeList.objects[])
this.shapeList.size == orig(this.shapeList.size)
this.shapeList.increment == orig(this.shapeList.increment)
this.autoPopulateSeriesShape == orig(this.autoPopulateSeriesShape)
this.baseShape == orig(this.baseShape)
this.itemLabelsVisibleList == orig(this.itemLabelsVisibleList)
this.itemLabelsVisibleList.objects == orig(this.itemLabelsVisibleList.objects)
this.itemLabelsVisibleList.objects[] == orig(this.itemLabelsVisibleList.objects[])
this.itemLabelsVisibleList.size == orig(this.itemLabelsVisibleList.size)
this.itemLabelsVisibleList.increment == orig(this.itemLabelsVisibleList.increment)
this.baseItemLabelsVisible == orig(this.baseItemLabelsVisible)
this.itemLabelFontList == orig(this.itemLabelFontList)
this.itemLabelFontList.objects == orig(this.itemLabelFontList.objects)
this.itemLabelFontList.objects[] == orig(this.itemLabelFontList.objects[])
this.itemLabelFontList.size == orig(this.itemLabelFontList.size)
this.itemLabelFontList.increment == orig(this.itemLabelFontList.increment)
this.baseItemLabelFont == orig(this.baseItemLabelFont)
this.itemLabelPaintList == orig(this.itemLabelPaintList)
this.itemLabelPaintList.objects == orig(this.itemLabelPaintList.objects)
this.itemLabelPaintList.objects[] == orig(this.itemLabelPaintList.objects[])
this.itemLabelPaintList.size == orig(this.itemLabelPaintList.size)
this.itemLabelPaintList.increment == orig(this.itemLabelPaintList.increment)
this.baseItemLabelPaint == orig(this.baseItemLabelPaint)
this.positiveItemLabelPositionList == orig(this.positiveItemLabelPositionList)
this.positiveItemLabelPositionList.objects == orig(this.positiveItemLabelPositionList.objects)
this.positiveItemLabelPositionList.objects[] == orig(this.positiveItemLabelPositionList.objects[])
this.positiveItemLabelPositionList.size == orig(this.positiveItemLabelPositionList.size)
this.positiveItemLabelPositionList.increment == orig(this.positiveItemLabelPositionList.increment)
this.basePositiveItemLabelPosition == orig(this.basePositiveItemLabelPosition)
this.basePositiveItemLabelPosition.itemLabelAnchor == orig(this.basePositiveItemLabelPosition.itemLabelAnchor)
org.jfree.chart.labels.ItemLabelAnchor.CENTER == orig(org.jfree.chart.labels.ItemLabelAnchor.CENTER)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE1 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE1)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE2 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE2)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE3 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE3)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE4 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE4)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE5 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE5)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE6 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE6)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE7 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE7)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE8 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE8)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE9 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE9)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE10 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE10)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE11 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE11)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE12 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE12)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12)
this.basePositiveItemLabelPosition.itemLabelAnchor.name == orig(this.basePositiveItemLabelPosition.itemLabelAnchor.name)
this.basePositiveItemLabelPosition.itemLabelAnchor.name.toString == orig(this.basePositiveItemLabelPosition.itemLabelAnchor.name.toString)
this.basePositiveItemLabelPosition.textAnchor == orig(this.basePositiveItemLabelPosition.textAnchor)
org.jfree.chart.text.TextAnchor.TOP_LEFT == orig(org.jfree.chart.text.TextAnchor.TOP_LEFT)
org.jfree.chart.text.TextAnchor.TOP_CENTER == orig(org.jfree.chart.text.TextAnchor.TOP_CENTER)
org.jfree.chart.text.TextAnchor.TOP_RIGHT == orig(org.jfree.chart.text.TextAnchor.TOP_RIGHT)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT)
org.jfree.chart.text.TextAnchor.CENTER_LEFT == orig(org.jfree.chart.text.TextAnchor.CENTER_LEFT)
org.jfree.chart.text.TextAnchor.CENTER == orig(org.jfree.chart.text.TextAnchor.CENTER)
org.jfree.chart.text.TextAnchor.CENTER_RIGHT == orig(org.jfree.chart.text.TextAnchor.CENTER_RIGHT)
org.jfree.chart.text.TextAnchor.BASELINE_LEFT == orig(org.jfree.chart.text.TextAnchor.BASELINE_LEFT)
org.jfree.chart.text.TextAnchor.BASELINE_CENTER == orig(org.jfree.chart.text.TextAnchor.BASELINE_CENTER)
org.jfree.chart.text.TextAnchor.BASELINE_RIGHT == orig(org.jfree.chart.text.TextAnchor.BASELINE_RIGHT)
org.jfree.chart.text.TextAnchor.BOTTOM_LEFT == orig(org.jfree.chart.text.TextAnchor.BOTTOM_LEFT)
org.jfree.chart.text.TextAnchor.BOTTOM_CENTER == orig(org.jfree.chart.text.TextAnchor.BOTTOM_CENTER)
org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT == orig(org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT)
this.basePositiveItemLabelPosition.textAnchor.name == orig(this.basePositiveItemLabelPosition.textAnchor.name)
this.basePositiveItemLabelPosition.textAnchor.name.toString == orig(this.basePositiveItemLabelPosition.textAnchor.name.toString)
this.basePositiveItemLabelPosition.rotationAnchor == orig(this.basePositiveItemLabelPosition.rotationAnchor)
this.basePositiveItemLabelPosition.rotationAnchor.name == orig(this.basePositiveItemLabelPosition.rotationAnchor.name)
this.basePositiveItemLabelPosition.rotationAnchor.name.toString == orig(this.basePositiveItemLabelPosition.rotationAnchor.name.toString)
this.basePositiveItemLabelPosition.angle == orig(this.basePositiveItemLabelPosition.angle)
this.negativeItemLabelPositionList == orig(this.negativeItemLabelPositionList)
this.negativeItemLabelPositionList.objects == orig(this.negativeItemLabelPositionList.objects)
this.negativeItemLabelPositionList.objects[] == orig(this.negativeItemLabelPositionList.objects[])
this.negativeItemLabelPositionList.size == orig(this.negativeItemLabelPositionList.size)
this.negativeItemLabelPositionList.increment == orig(this.negativeItemLabelPositionList.increment)
this.baseNegativeItemLabelPosition == orig(this.baseNegativeItemLabelPosition)
this.baseNegativeItemLabelPosition.itemLabelAnchor == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor)
this.baseNegativeItemLabelPosition.itemLabelAnchor.name == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor.name)
this.baseNegativeItemLabelPosition.itemLabelAnchor.name.toString == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor.name.toString)
this.baseNegativeItemLabelPosition.textAnchor == orig(this.baseNegativeItemLabelPosition.textAnchor)
this.baseNegativeItemLabelPosition.textAnchor.name == orig(this.baseNegativeItemLabelPosition.textAnchor.name)
this.baseNegativeItemLabelPosition.textAnchor.name.toString == orig(this.baseNegativeItemLabelPosition.textAnchor.name.toString)
this.baseNegativeItemLabelPosition.rotationAnchor == orig(this.baseNegativeItemLabelPosition.rotationAnchor)
this.baseNegativeItemLabelPosition.rotationAnchor.name == orig(this.baseNegativeItemLabelPosition.rotationAnchor.name)
this.baseNegativeItemLabelPosition.rotationAnchor.name.toString == orig(this.baseNegativeItemLabelPosition.rotationAnchor.name.toString)
this.baseNegativeItemLabelPosition.angle == orig(this.baseNegativeItemLabelPosition.angle)
this.itemLabelAnchorOffset == orig(this.itemLabelAnchorOffset)
this.createEntitiesList == orig(this.createEntitiesList)
this.createEntitiesList.objects == orig(this.createEntitiesList.objects)
this.createEntitiesList.objects[] == orig(this.createEntitiesList.objects[])
this.createEntitiesList.size == orig(this.createEntitiesList.size)
this.createEntitiesList.increment == orig(this.createEntitiesList.increment)
this.baseCreateEntities == orig(this.baseCreateEntities)
this.legendShapeList == orig(this.legendShapeList)
this.legendShapeList.objects == orig(this.legendShapeList.objects)
this.legendShapeList.objects[] == orig(this.legendShapeList.objects[])
this.legendShapeList.size == orig(this.legendShapeList.size)
this.legendShapeList.increment == orig(this.legendShapeList.increment)
this.baseLegendShape == orig(this.baseLegendShape)
this.treatLegendShapeAsLine == orig(this.treatLegendShapeAsLine)
this.legendTextFont == orig(this.legendTextFont)
this.legendTextFont.objects == orig(this.legendTextFont.objects)
this.legendTextFont.objects[] == orig(this.legendTextFont.objects[])
this.legendTextFont.size == orig(this.legendTextFont.size)
this.legendTextFont.increment == orig(this.legendTextFont.increment)
this.baseLegendTextFont == orig(this.baseLegendTextFont)
this.legendTextPaint == orig(this.legendTextPaint)
this.legendTextPaint.objects == orig(this.legendTextPaint.objects)
this.legendTextPaint.objects[] == orig(this.legendTextPaint.objects[])
this.legendTextPaint.size == orig(this.legendTextPaint.size)
this.legendTextPaint.increment == orig(this.legendTextPaint.increment)
this.baseLegendTextPaint == orig(this.baseLegendTextPaint)
this.dataBoundsIncludesVisibleSeriesOnly == orig(this.dataBoundsIncludesVisibleSeriesOnly)
this.defaultEntityRadius == orig(this.defaultEntityRadius)
this.listenerList == orig(this.listenerList)
this.selectedItemAttributes == orig(this.selectedItemAttributes)
this.selectedItemAttributes.allowNull == orig(this.selectedItemAttributes.allowNull)
this.selectedItemAttributes.paintList == orig(this.selectedItemAttributes.paintList)
this.selectedItemAttributes.paintList.objects == orig(this.selectedItemAttributes.paintList.objects)
this.selectedItemAttributes.paintList.objects[] == orig(this.selectedItemAttributes.paintList.objects[])
this.selectedItemAttributes.paintList.size == orig(this.selectedItemAttributes.paintList.size)
this.selectedItemAttributes.paintList.increment == orig(this.selectedItemAttributes.paintList.increment)
this.selectedItemAttributes.defaultPaint == orig(this.selectedItemAttributes.defaultPaint)
this.selectedItemAttributes.strokeList == orig(this.selectedItemAttributes.strokeList)
this.selectedItemAttributes.strokeList.objects == orig(this.selectedItemAttributes.strokeList.objects)
this.selectedItemAttributes.strokeList.objects[] == orig(this.selectedItemAttributes.strokeList.objects[])
this.selectedItemAttributes.strokeList.size == orig(this.selectedItemAttributes.strokeList.size)
this.selectedItemAttributes.strokeList.increment == orig(this.selectedItemAttributes.strokeList.increment)
this.selectedItemAttributes.defaultStroke == orig(this.selectedItemAttributes.defaultStroke)
this.selectedItemAttributes.shapeList == orig(this.selectedItemAttributes.shapeList)
this.selectedItemAttributes.shapeList.objects == orig(this.selectedItemAttributes.shapeList.objects)
this.selectedItemAttributes.shapeList.objects[] == orig(this.selectedItemAttributes.shapeList.objects[])
this.selectedItemAttributes.shapeList.size == orig(this.selectedItemAttributes.shapeList.size)
this.selectedItemAttributes.shapeList.increment == orig(this.selectedItemAttributes.shapeList.increment)
this.selectedItemAttributes.defaultShape == orig(this.selectedItemAttributes.defaultShape)
this.selectedItemAttributes.fillPaintList == orig(this.selectedItemAttributes.fillPaintList)
this.selectedItemAttributes.fillPaintList.objects == orig(this.selectedItemAttributes.fillPaintList.objects)
this.selectedItemAttributes.fillPaintList.objects[] == orig(this.selectedItemAttributes.fillPaintList.objects[])
this.selectedItemAttributes.fillPaintList.size == orig(this.selectedItemAttributes.fillPaintList.size)
this.selectedItemAttributes.fillPaintList.increment == orig(this.selectedItemAttributes.fillPaintList.increment)
this.selectedItemAttributes.defaultFillPaint == orig(this.selectedItemAttributes.defaultFillPaint)
this.selectedItemAttributes.outlinePaintList == orig(this.selectedItemAttributes.outlinePaintList)
this.selectedItemAttributes.outlinePaintList.objects == orig(this.selectedItemAttributes.outlinePaintList.objects)
this.selectedItemAttributes.outlinePaintList.objects[] == orig(this.selectedItemAttributes.outlinePaintList.objects[])
this.selectedItemAttributes.outlinePaintList.size == orig(this.selectedItemAttributes.outlinePaintList.size)
this.selectedItemAttributes.outlinePaintList.increment == orig(this.selectedItemAttributes.outlinePaintList.increment)
this.selectedItemAttributes.defaultOutlinePaint == orig(this.selectedItemAttributes.defaultOutlinePaint)
this.selectedItemAttributes.outlineStrokeList == orig(this.selectedItemAttributes.outlineStrokeList)
this.selectedItemAttributes.defaultOutlineStroke == orig(this.selectedItemAttributes.defaultOutlineStroke)
this.selectedItemAttributes.labelsVisibleList == orig(this.selectedItemAttributes.labelsVisibleList)
this.selectedItemAttributes.defaultLabelVisible == orig(this.selectedItemAttributes.defaultLabelVisible)
this.selectedItemAttributes.labelFontList == orig(this.selectedItemAttributes.labelFontList)
this.selectedItemAttributes.defaultLabelFont == orig(this.selectedItemAttributes.defaultLabelFont)
this.selectedItemAttributes.labelPaintList == orig(this.selectedItemAttributes.labelPaintList)
this.selectedItemAttributes.defaultLabelPaint == orig(this.selectedItemAttributes.defaultLabelPaint)
this.selectedItemAttributes.positionItemLabelPositionList == orig(this.selectedItemAttributes.positionItemLabelPositionList)
this.selectedItemAttributes.defaultPositiveItemLabelPosition == orig(this.selectedItemAttributes.defaultPositiveItemLabelPosition)
this.selectedItemAttributes.negativeItemLabelPositionList == orig(this.selectedItemAttributes.negativeItemLabelPositionList)
this.selectedItemAttributes.defaultNegativeItemLabelPosition == orig(this.selectedItemAttributes.defaultNegativeItemLabelPosition)
this.selectedItemAttributes.createEntityList == orig(this.selectedItemAttributes.createEntityList)
this.selectedItemAttributes.defaultCreateEntity == orig(this.selectedItemAttributes.defaultCreateEntity)
org.jfree.chart.renderer.AbstractRenderer.ADJ == orig(org.jfree.chart.renderer.AbstractRenderer.ADJ)
org.jfree.chart.renderer.AbstractRenderer.OPP == orig(org.jfree.chart.renderer.AbstractRenderer.OPP)
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener == orig(org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener)
this.paintList.objects[] has only one value, of length 8
this.paintList.objects[].getClass().getName() == [java.awt.Color, null, null, null, null, null, null, null]
this.paintList.size == 1
this.strokeList.objects[] has only one value, of length 8
this.strokeList.objects[].getClass().getName() == [java.awt.BasicStroke, null, null, null, null, null, null, null]
this.strokeList.size == 1
this.shapeList.objects[] has only one value, of length 8
this.shapeList.objects[].getClass().getName() == [java.awt.geom.Rectangle2D.Double, null, null, null, null, null, null, null]
this.shapeList.size == 1
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener has only one value
return == null
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() in this.paintList.objects[].getClass().getName()
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() in this.strokeList.objects[].getClass().getName()
===========================================================================
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesOutlineStroke(int):::ENTER
this.paintList.objects[] has only one value, of length 8
this.paintList.objects[].getClass().getName() == [java.awt.Color, null, null, null, null, null, null, null]
this.paintList.size == 1
this.strokeList.objects[] contains only nulls and has only one value, of length 8
this.strokeList.objects[] elements == null
this.strokeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.strokeList.objects[].getClass().getName() elements == null
this.strokeList.size == 0
this.shapeList.objects[] has only one value, of length 8
this.shapeList.objects[].getClass().getName() == [java.awt.geom.Rectangle2D.Double, null, null, null, null, null, null, null]
this.shapeList.size == 1
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener has only one value
series == 0
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() in this.paintList.objects[].getClass().getName()
===========================================================================
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesOutlineStroke(int):::EXIT
org.jfree.chart.renderer.AbstractRenderer.ZERO == orig(org.jfree.chart.renderer.AbstractRenderer.ZERO)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(this.basePaint.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(this.baseFillPaint.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(this.baseOutlinePaint.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(this.baseItemLabelPaint.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(this.selectedItemAttributes.defaultFillPaint.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == return.getClass().getName()
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == orig(this.baseStroke.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == orig(this.baseOutlineStroke.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE.getClass().getName() == orig(this.baseShape.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_FONT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_FONT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT)
this.seriesVisibleList == orig(this.seriesVisibleList)
this.seriesVisibleList.objects == orig(this.seriesVisibleList.objects)
this.seriesVisibleList.objects.getClass().getName() == orig(this.seriesVisibleList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.seriesVisibleInLegendList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.paintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.fillPaintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.outlinePaintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.strokeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.outlineStrokeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.shapeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.itemLabelsVisibleList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.itemLabelFontList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.itemLabelPaintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.positiveItemLabelPositionList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.negativeItemLabelPositionList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.createEntitiesList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.legendShapeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.legendTextFont.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.legendTextPaint.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.selectedItemAttributes.paintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.selectedItemAttributes.strokeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.selectedItemAttributes.shapeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.selectedItemAttributes.fillPaintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.selectedItemAttributes.outlinePaintList.objects.getClass().getName())
this.seriesVisibleList.objects[] == orig(this.seriesVisibleList.objects[])
this.seriesVisibleList.size == orig(this.seriesVisibleList.size)
this.seriesVisibleList.increment == orig(this.seriesVisibleList.increment)
this.baseSeriesVisible == orig(this.baseSeriesVisible)
this.seriesVisibleInLegendList == orig(this.seriesVisibleInLegendList)
this.seriesVisibleInLegendList.objects == orig(this.seriesVisibleInLegendList.objects)
this.seriesVisibleInLegendList.objects[] == orig(this.seriesVisibleInLegendList.objects[])
this.seriesVisibleInLegendList.size == orig(this.seriesVisibleInLegendList.size)
this.seriesVisibleInLegendList.increment == orig(this.seriesVisibleInLegendList.increment)
this.baseSeriesVisibleInLegend == orig(this.baseSeriesVisibleInLegend)
this.paintList == orig(this.paintList)
this.paintList.objects == orig(this.paintList.objects)
this.paintList.objects[] == orig(this.paintList.objects[])
this.paintList.size == orig(this.paintList.size)
this.paintList.increment == orig(this.paintList.increment)
this.autoPopulateSeriesPaint == orig(this.autoPopulateSeriesPaint)
this.basePaint == orig(this.basePaint)
this.fillPaintList == orig(this.fillPaintList)
this.fillPaintList.objects == orig(this.fillPaintList.objects)
this.fillPaintList.objects[] == orig(this.fillPaintList.objects[])
this.fillPaintList.size == orig(this.fillPaintList.size)
this.fillPaintList.increment == orig(this.fillPaintList.increment)
this.autoPopulateSeriesFillPaint == orig(this.autoPopulateSeriesFillPaint)
this.baseFillPaint == orig(this.baseFillPaint)
this.outlinePaintList == orig(this.outlinePaintList)
this.outlinePaintList.objects == orig(this.outlinePaintList.objects)
this.outlinePaintList.objects[] == orig(this.outlinePaintList.objects[])
this.outlinePaintList.size == orig(this.outlinePaintList.size)
this.outlinePaintList.increment == orig(this.outlinePaintList.increment)
this.autoPopulateSeriesOutlinePaint == orig(this.autoPopulateSeriesOutlinePaint)
this.baseOutlinePaint == orig(this.baseOutlinePaint)
this.strokeList == orig(this.strokeList)
this.strokeList.objects == orig(this.strokeList.objects)
this.strokeList.objects[] == orig(this.strokeList.objects[])
this.strokeList.size == orig(this.strokeList.size)
this.strokeList.increment == orig(this.strokeList.increment)
this.autoPopulateSeriesStroke == orig(this.autoPopulateSeriesStroke)
this.baseStroke == orig(this.baseStroke)
this.outlineStrokeList == orig(this.outlineStrokeList)
this.outlineStrokeList.objects == orig(this.outlineStrokeList.objects)
this.outlineStrokeList.objects[] == orig(this.outlineStrokeList.objects[])
this.outlineStrokeList.size == orig(this.outlineStrokeList.size)
this.outlineStrokeList.increment == orig(this.outlineStrokeList.increment)
this.baseOutlineStroke == orig(this.baseOutlineStroke)
this.autoPopulateSeriesOutlineStroke == orig(this.autoPopulateSeriesOutlineStroke)
this.shapeList == orig(this.shapeList)
this.shapeList.objects == orig(this.shapeList.objects)
this.shapeList.objects[] == orig(this.shapeList.objects[])
this.shapeList.size == orig(this.shapeList.size)
this.shapeList.increment == orig(this.shapeList.increment)
this.autoPopulateSeriesShape == orig(this.autoPopulateSeriesShape)
this.baseShape == orig(this.baseShape)
this.itemLabelsVisibleList == orig(this.itemLabelsVisibleList)
this.itemLabelsVisibleList.objects == orig(this.itemLabelsVisibleList.objects)
this.itemLabelsVisibleList.objects[] == orig(this.itemLabelsVisibleList.objects[])
this.itemLabelsVisibleList.size == orig(this.itemLabelsVisibleList.size)
this.itemLabelsVisibleList.increment == orig(this.itemLabelsVisibleList.increment)
this.baseItemLabelsVisible == orig(this.baseItemLabelsVisible)
this.itemLabelFontList == orig(this.itemLabelFontList)
this.itemLabelFontList.objects == orig(this.itemLabelFontList.objects)
this.itemLabelFontList.objects[] == orig(this.itemLabelFontList.objects[])
this.itemLabelFontList.size == orig(this.itemLabelFontList.size)
this.itemLabelFontList.increment == orig(this.itemLabelFontList.increment)
this.baseItemLabelFont == orig(this.baseItemLabelFont)
this.itemLabelPaintList == orig(this.itemLabelPaintList)
this.itemLabelPaintList.objects == orig(this.itemLabelPaintList.objects)
this.itemLabelPaintList.objects[] == orig(this.itemLabelPaintList.objects[])
this.itemLabelPaintList.size == orig(this.itemLabelPaintList.size)
this.itemLabelPaintList.increment == orig(this.itemLabelPaintList.increment)
this.baseItemLabelPaint == orig(this.baseItemLabelPaint)
this.positiveItemLabelPositionList == orig(this.positiveItemLabelPositionList)
this.positiveItemLabelPositionList.objects == orig(this.positiveItemLabelPositionList.objects)
this.positiveItemLabelPositionList.objects[] == orig(this.positiveItemLabelPositionList.objects[])
this.positiveItemLabelPositionList.size == orig(this.positiveItemLabelPositionList.size)
this.positiveItemLabelPositionList.increment == orig(this.positiveItemLabelPositionList.increment)
this.basePositiveItemLabelPosition == orig(this.basePositiveItemLabelPosition)
this.basePositiveItemLabelPosition.itemLabelAnchor == orig(this.basePositiveItemLabelPosition.itemLabelAnchor)
org.jfree.chart.labels.ItemLabelAnchor.CENTER == orig(org.jfree.chart.labels.ItemLabelAnchor.CENTER)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE1 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE1)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE2 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE2)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE3 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE3)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE4 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE4)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE5 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE5)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE6 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE6)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE7 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE7)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE8 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE8)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE9 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE9)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE10 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE10)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE11 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE11)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE12 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE12)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12)
this.basePositiveItemLabelPosition.itemLabelAnchor.name == orig(this.basePositiveItemLabelPosition.itemLabelAnchor.name)
this.basePositiveItemLabelPosition.itemLabelAnchor.name.toString == orig(this.basePositiveItemLabelPosition.itemLabelAnchor.name.toString)
this.basePositiveItemLabelPosition.textAnchor == orig(this.basePositiveItemLabelPosition.textAnchor)
org.jfree.chart.text.TextAnchor.TOP_LEFT == orig(org.jfree.chart.text.TextAnchor.TOP_LEFT)
org.jfree.chart.text.TextAnchor.TOP_CENTER == orig(org.jfree.chart.text.TextAnchor.TOP_CENTER)
org.jfree.chart.text.TextAnchor.TOP_RIGHT == orig(org.jfree.chart.text.TextAnchor.TOP_RIGHT)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT)
org.jfree.chart.text.TextAnchor.CENTER_LEFT == orig(org.jfree.chart.text.TextAnchor.CENTER_LEFT)
org.jfree.chart.text.TextAnchor.CENTER == orig(org.jfree.chart.text.TextAnchor.CENTER)
org.jfree.chart.text.TextAnchor.CENTER_RIGHT == orig(org.jfree.chart.text.TextAnchor.CENTER_RIGHT)
org.jfree.chart.text.TextAnchor.BASELINE_LEFT == orig(org.jfree.chart.text.TextAnchor.BASELINE_LEFT)
org.jfree.chart.text.TextAnchor.BASELINE_CENTER == orig(org.jfree.chart.text.TextAnchor.BASELINE_CENTER)
org.jfree.chart.text.TextAnchor.BASELINE_RIGHT == orig(org.jfree.chart.text.TextAnchor.BASELINE_RIGHT)
org.jfree.chart.text.TextAnchor.BOTTOM_LEFT == orig(org.jfree.chart.text.TextAnchor.BOTTOM_LEFT)
org.jfree.chart.text.TextAnchor.BOTTOM_CENTER == orig(org.jfree.chart.text.TextAnchor.BOTTOM_CENTER)
org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT == orig(org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT)
this.basePositiveItemLabelPosition.textAnchor.name == orig(this.basePositiveItemLabelPosition.textAnchor.name)
this.basePositiveItemLabelPosition.textAnchor.name.toString == orig(this.basePositiveItemLabelPosition.textAnchor.name.toString)
this.basePositiveItemLabelPosition.rotationAnchor == orig(this.basePositiveItemLabelPosition.rotationAnchor)
this.basePositiveItemLabelPosition.rotationAnchor.name == orig(this.basePositiveItemLabelPosition.rotationAnchor.name)
this.basePositiveItemLabelPosition.rotationAnchor.name.toString == orig(this.basePositiveItemLabelPosition.rotationAnchor.name.toString)
this.basePositiveItemLabelPosition.angle == orig(this.basePositiveItemLabelPosition.angle)
this.negativeItemLabelPositionList == orig(this.negativeItemLabelPositionList)
this.negativeItemLabelPositionList.objects == orig(this.negativeItemLabelPositionList.objects)
this.negativeItemLabelPositionList.objects[] == orig(this.negativeItemLabelPositionList.objects[])
this.negativeItemLabelPositionList.size == orig(this.negativeItemLabelPositionList.size)
this.negativeItemLabelPositionList.increment == orig(this.negativeItemLabelPositionList.increment)
this.baseNegativeItemLabelPosition == orig(this.baseNegativeItemLabelPosition)
this.baseNegativeItemLabelPosition.itemLabelAnchor == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor)
this.baseNegativeItemLabelPosition.itemLabelAnchor.name == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor.name)
this.baseNegativeItemLabelPosition.itemLabelAnchor.name.toString == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor.name.toString)
this.baseNegativeItemLabelPosition.textAnchor == orig(this.baseNegativeItemLabelPosition.textAnchor)
this.baseNegativeItemLabelPosition.textAnchor.name == orig(this.baseNegativeItemLabelPosition.textAnchor.name)
this.baseNegativeItemLabelPosition.textAnchor.name.toString == orig(this.baseNegativeItemLabelPosition.textAnchor.name.toString)
this.baseNegativeItemLabelPosition.rotationAnchor == orig(this.baseNegativeItemLabelPosition.rotationAnchor)
this.baseNegativeItemLabelPosition.rotationAnchor.name == orig(this.baseNegativeItemLabelPosition.rotationAnchor.name)
this.baseNegativeItemLabelPosition.rotationAnchor.name.toString == orig(this.baseNegativeItemLabelPosition.rotationAnchor.name.toString)
this.baseNegativeItemLabelPosition.angle == orig(this.baseNegativeItemLabelPosition.angle)
this.itemLabelAnchorOffset == orig(this.itemLabelAnchorOffset)
this.createEntitiesList == orig(this.createEntitiesList)
this.createEntitiesList.objects == orig(this.createEntitiesList.objects)
this.createEntitiesList.objects[] == orig(this.createEntitiesList.objects[])
this.createEntitiesList.size == orig(this.createEntitiesList.size)
this.createEntitiesList.increment == orig(this.createEntitiesList.increment)
this.baseCreateEntities == orig(this.baseCreateEntities)
this.legendShapeList == orig(this.legendShapeList)
this.legendShapeList.objects == orig(this.legendShapeList.objects)
this.legendShapeList.objects[] == orig(this.legendShapeList.objects[])
this.legendShapeList.size == orig(this.legendShapeList.size)
this.legendShapeList.increment == orig(this.legendShapeList.increment)
this.baseLegendShape == orig(this.baseLegendShape)
this.treatLegendShapeAsLine == orig(this.treatLegendShapeAsLine)
this.legendTextFont == orig(this.legendTextFont)
this.legendTextFont.objects == orig(this.legendTextFont.objects)
this.legendTextFont.objects[] == orig(this.legendTextFont.objects[])
this.legendTextFont.size == orig(this.legendTextFont.size)
this.legendTextFont.increment == orig(this.legendTextFont.increment)
this.baseLegendTextFont == orig(this.baseLegendTextFont)
this.legendTextPaint == orig(this.legendTextPaint)
this.legendTextPaint.objects == orig(this.legendTextPaint.objects)
this.legendTextPaint.objects[] == orig(this.legendTextPaint.objects[])
this.legendTextPaint.size == orig(this.legendTextPaint.size)
this.legendTextPaint.increment == orig(this.legendTextPaint.increment)
this.baseLegendTextPaint == orig(this.baseLegendTextPaint)
this.dataBoundsIncludesVisibleSeriesOnly == orig(this.dataBoundsIncludesVisibleSeriesOnly)
this.defaultEntityRadius == orig(this.defaultEntityRadius)
this.listenerList == orig(this.listenerList)
this.selectedItemAttributes == orig(this.selectedItemAttributes)
this.selectedItemAttributes.allowNull == orig(this.selectedItemAttributes.allowNull)
this.selectedItemAttributes.paintList == orig(this.selectedItemAttributes.paintList)
this.selectedItemAttributes.paintList.objects == orig(this.selectedItemAttributes.paintList.objects)
this.selectedItemAttributes.paintList.objects[] == orig(this.selectedItemAttributes.paintList.objects[])
this.selectedItemAttributes.paintList.size == orig(this.selectedItemAttributes.paintList.size)
this.selectedItemAttributes.paintList.increment == orig(this.selectedItemAttributes.paintList.increment)
this.selectedItemAttributes.defaultPaint == orig(this.selectedItemAttributes.defaultPaint)
this.selectedItemAttributes.strokeList == orig(this.selectedItemAttributes.strokeList)
this.selectedItemAttributes.strokeList.objects == orig(this.selectedItemAttributes.strokeList.objects)
this.selectedItemAttributes.strokeList.objects[] == orig(this.selectedItemAttributes.strokeList.objects[])
this.selectedItemAttributes.strokeList.size == orig(this.selectedItemAttributes.strokeList.size)
this.selectedItemAttributes.strokeList.increment == orig(this.selectedItemAttributes.strokeList.increment)
this.selectedItemAttributes.defaultStroke == orig(this.selectedItemAttributes.defaultStroke)
this.selectedItemAttributes.shapeList == orig(this.selectedItemAttributes.shapeList)
this.selectedItemAttributes.shapeList.objects == orig(this.selectedItemAttributes.shapeList.objects)
this.selectedItemAttributes.shapeList.objects[] == orig(this.selectedItemAttributes.shapeList.objects[])
this.selectedItemAttributes.shapeList.size == orig(this.selectedItemAttributes.shapeList.size)
this.selectedItemAttributes.shapeList.increment == orig(this.selectedItemAttributes.shapeList.increment)
this.selectedItemAttributes.defaultShape == orig(this.selectedItemAttributes.defaultShape)
this.selectedItemAttributes.fillPaintList == orig(this.selectedItemAttributes.fillPaintList)
this.selectedItemAttributes.fillPaintList.objects == orig(this.selectedItemAttributes.fillPaintList.objects)
this.selectedItemAttributes.fillPaintList.objects[] == orig(this.selectedItemAttributes.fillPaintList.objects[])
this.selectedItemAttributes.fillPaintList.size == orig(this.selectedItemAttributes.fillPaintList.size)
this.selectedItemAttributes.fillPaintList.increment == orig(this.selectedItemAttributes.fillPaintList.increment)
this.selectedItemAttributes.defaultFillPaint == orig(this.selectedItemAttributes.defaultFillPaint)
this.selectedItemAttributes.outlinePaintList == orig(this.selectedItemAttributes.outlinePaintList)
this.selectedItemAttributes.outlinePaintList.objects == orig(this.selectedItemAttributes.outlinePaintList.objects)
this.selectedItemAttributes.outlinePaintList.objects[] == orig(this.selectedItemAttributes.outlinePaintList.objects[])
this.selectedItemAttributes.outlinePaintList.size == orig(this.selectedItemAttributes.outlinePaintList.size)
this.selectedItemAttributes.outlinePaintList.increment == orig(this.selectedItemAttributes.outlinePaintList.increment)
this.selectedItemAttributes.defaultOutlinePaint == orig(this.selectedItemAttributes.defaultOutlinePaint)
this.selectedItemAttributes.outlineStrokeList == orig(this.selectedItemAttributes.outlineStrokeList)
this.selectedItemAttributes.defaultOutlineStroke == orig(this.selectedItemAttributes.defaultOutlineStroke)
this.selectedItemAttributes.labelsVisibleList == orig(this.selectedItemAttributes.labelsVisibleList)
this.selectedItemAttributes.defaultLabelVisible == orig(this.selectedItemAttributes.defaultLabelVisible)
this.selectedItemAttributes.labelFontList == orig(this.selectedItemAttributes.labelFontList)
this.selectedItemAttributes.defaultLabelFont == orig(this.selectedItemAttributes.defaultLabelFont)
this.selectedItemAttributes.labelPaintList == orig(this.selectedItemAttributes.labelPaintList)
this.selectedItemAttributes.defaultLabelPaint == orig(this.selectedItemAttributes.defaultLabelPaint)
this.selectedItemAttributes.positionItemLabelPositionList == orig(this.selectedItemAttributes.positionItemLabelPositionList)
this.selectedItemAttributes.defaultPositiveItemLabelPosition == orig(this.selectedItemAttributes.defaultPositiveItemLabelPosition)
this.selectedItemAttributes.negativeItemLabelPositionList == orig(this.selectedItemAttributes.negativeItemLabelPositionList)
this.selectedItemAttributes.defaultNegativeItemLabelPosition == orig(this.selectedItemAttributes.defaultNegativeItemLabelPosition)
this.selectedItemAttributes.createEntityList == orig(this.selectedItemAttributes.createEntityList)
this.selectedItemAttributes.defaultCreateEntity == orig(this.selectedItemAttributes.defaultCreateEntity)
org.jfree.chart.renderer.AbstractRenderer.ADJ == orig(org.jfree.chart.renderer.AbstractRenderer.ADJ)
org.jfree.chart.renderer.AbstractRenderer.OPP == orig(org.jfree.chart.renderer.AbstractRenderer.OPP)
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener == orig(org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener)
this.paintList.objects[] has only one value, of length 8
this.paintList.objects[].getClass().getName() == [java.awt.Color, null, null, null, null, null, null, null]
this.paintList.size == 1
this.strokeList.objects[] contains only nulls and has only one value, of length 8
this.strokeList.objects[] elements == null
this.strokeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.strokeList.objects[].getClass().getName() elements == null
this.strokeList.size == 0
this.shapeList.objects[] has only one value, of length 8
this.shapeList.objects[].getClass().getName() == [java.awt.geom.Rectangle2D.Double, null, null, null, null, null, null, null]
this.shapeList.size == 1
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener has only one value
return has only one value
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() in this.paintList.objects[].getClass().getName()
===========================================================================
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesPaint(int):::ENTER
this.shapeList.objects[] has only one value, of length 8
this.shapeList.objects[].getClass().getName() == [java.awt.geom.Rectangle2D.Double, null, null, null, null, null, null, null]
this.shapeList.size == 1
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener has only one value
series == 0
===========================================================================
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesPaint(int):::EXIT
org.jfree.chart.renderer.AbstractRenderer.ZERO == orig(org.jfree.chart.renderer.AbstractRenderer.ZERO)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == return.getClass().getName()
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(this.basePaint.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(this.baseFillPaint.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(this.baseOutlinePaint.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(this.baseItemLabelPaint.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(this.selectedItemAttributes.defaultFillPaint.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == orig(this.baseStroke.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == orig(this.baseOutlineStroke.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE.getClass().getName() == orig(this.baseShape.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_FONT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_FONT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT)
this.seriesVisibleList == orig(this.seriesVisibleList)
this.seriesVisibleList.objects == orig(this.seriesVisibleList.objects)
this.seriesVisibleList.objects.getClass().getName() == orig(this.seriesVisibleList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.seriesVisibleInLegendList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.paintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.fillPaintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.outlinePaintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.strokeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.outlineStrokeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.shapeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.itemLabelsVisibleList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.itemLabelFontList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.itemLabelPaintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.positiveItemLabelPositionList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.negativeItemLabelPositionList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.createEntitiesList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.legendShapeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.legendTextFont.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.legendTextPaint.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.selectedItemAttributes.paintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.selectedItemAttributes.strokeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.selectedItemAttributes.shapeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.selectedItemAttributes.fillPaintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.selectedItemAttributes.outlinePaintList.objects.getClass().getName())
this.seriesVisibleList.objects[] == orig(this.seriesVisibleList.objects[])
this.seriesVisibleList.size == orig(this.seriesVisibleList.size)
this.seriesVisibleList.increment == orig(this.seriesVisibleList.increment)
this.baseSeriesVisible == orig(this.baseSeriesVisible)
this.seriesVisibleInLegendList == orig(this.seriesVisibleInLegendList)
this.seriesVisibleInLegendList.objects == orig(this.seriesVisibleInLegendList.objects)
this.seriesVisibleInLegendList.objects[] == orig(this.seriesVisibleInLegendList.objects[])
this.seriesVisibleInLegendList.size == orig(this.seriesVisibleInLegendList.size)
this.seriesVisibleInLegendList.increment == orig(this.seriesVisibleInLegendList.increment)
this.baseSeriesVisibleInLegend == orig(this.baseSeriesVisibleInLegend)
this.paintList == orig(this.paintList)
this.paintList.objects == orig(this.paintList.objects)
this.paintList.increment == orig(this.paintList.increment)
this.autoPopulateSeriesPaint == orig(this.autoPopulateSeriesPaint)
this.basePaint == orig(this.basePaint)
this.fillPaintList == orig(this.fillPaintList)
this.fillPaintList.objects == orig(this.fillPaintList.objects)
this.fillPaintList.objects[] == orig(this.fillPaintList.objects[])
this.fillPaintList.size == orig(this.fillPaintList.size)
this.fillPaintList.increment == orig(this.fillPaintList.increment)
this.autoPopulateSeriesFillPaint == orig(this.autoPopulateSeriesFillPaint)
this.baseFillPaint == orig(this.baseFillPaint)
this.outlinePaintList == orig(this.outlinePaintList)
this.outlinePaintList.objects == orig(this.outlinePaintList.objects)
this.outlinePaintList.objects[] == orig(this.outlinePaintList.objects[])
this.outlinePaintList.size == orig(this.outlinePaintList.size)
this.outlinePaintList.increment == orig(this.outlinePaintList.increment)
this.autoPopulateSeriesOutlinePaint == orig(this.autoPopulateSeriesOutlinePaint)
this.baseOutlinePaint == orig(this.baseOutlinePaint)
this.strokeList == orig(this.strokeList)
this.strokeList.objects == orig(this.strokeList.objects)
this.strokeList.objects[] == orig(this.strokeList.objects[])
this.strokeList.size == orig(this.strokeList.size)
this.strokeList.increment == orig(this.strokeList.increment)
this.autoPopulateSeriesStroke == orig(this.autoPopulateSeriesStroke)
this.baseStroke == orig(this.baseStroke)
this.outlineStrokeList == orig(this.outlineStrokeList)
this.outlineStrokeList.objects == orig(this.outlineStrokeList.objects)
this.outlineStrokeList.objects[] == orig(this.outlineStrokeList.objects[])
this.outlineStrokeList.size == orig(this.outlineStrokeList.size)
this.outlineStrokeList.increment == orig(this.outlineStrokeList.increment)
this.baseOutlineStroke == orig(this.baseOutlineStroke)
this.autoPopulateSeriesOutlineStroke == orig(this.autoPopulateSeriesOutlineStroke)
this.shapeList == orig(this.shapeList)
this.shapeList.objects == orig(this.shapeList.objects)
this.shapeList.objects[] == orig(this.shapeList.objects[])
this.shapeList.size == orig(this.shapeList.size)
this.shapeList.increment == orig(this.shapeList.increment)
this.autoPopulateSeriesShape == orig(this.autoPopulateSeriesShape)
this.baseShape == orig(this.baseShape)
this.itemLabelsVisibleList == orig(this.itemLabelsVisibleList)
this.itemLabelsVisibleList.objects == orig(this.itemLabelsVisibleList.objects)
this.itemLabelsVisibleList.objects[] == orig(this.itemLabelsVisibleList.objects[])
this.itemLabelsVisibleList.size == orig(this.itemLabelsVisibleList.size)
this.itemLabelsVisibleList.increment == orig(this.itemLabelsVisibleList.increment)
this.baseItemLabelsVisible == orig(this.baseItemLabelsVisible)
this.itemLabelFontList == orig(this.itemLabelFontList)
this.itemLabelFontList.objects == orig(this.itemLabelFontList.objects)
this.itemLabelFontList.objects[] == orig(this.itemLabelFontList.objects[])
this.itemLabelFontList.size == orig(this.itemLabelFontList.size)
this.itemLabelFontList.increment == orig(this.itemLabelFontList.increment)
this.baseItemLabelFont == orig(this.baseItemLabelFont)
this.itemLabelPaintList == orig(this.itemLabelPaintList)
this.itemLabelPaintList.objects == orig(this.itemLabelPaintList.objects)
this.itemLabelPaintList.objects[] == orig(this.itemLabelPaintList.objects[])
this.itemLabelPaintList.size == orig(this.itemLabelPaintList.size)
this.itemLabelPaintList.increment == orig(this.itemLabelPaintList.increment)
this.baseItemLabelPaint == orig(this.baseItemLabelPaint)
this.positiveItemLabelPositionList == orig(this.positiveItemLabelPositionList)
this.positiveItemLabelPositionList.objects == orig(this.positiveItemLabelPositionList.objects)
this.positiveItemLabelPositionList.objects[] == orig(this.positiveItemLabelPositionList.objects[])
this.positiveItemLabelPositionList.size == orig(this.positiveItemLabelPositionList.size)
this.positiveItemLabelPositionList.increment == orig(this.positiveItemLabelPositionList.increment)
this.basePositiveItemLabelPosition == orig(this.basePositiveItemLabelPosition)
this.basePositiveItemLabelPosition.itemLabelAnchor == orig(this.basePositiveItemLabelPosition.itemLabelAnchor)
org.jfree.chart.labels.ItemLabelAnchor.CENTER == orig(org.jfree.chart.labels.ItemLabelAnchor.CENTER)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE1 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE1)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE2 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE2)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE3 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE3)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE4 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE4)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE5 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE5)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE6 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE6)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE7 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE7)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE8 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE8)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE9 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE9)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE10 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE10)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE11 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE11)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE12 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE12)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12)
this.basePositiveItemLabelPosition.itemLabelAnchor.name == orig(this.basePositiveItemLabelPosition.itemLabelAnchor.name)
this.basePositiveItemLabelPosition.itemLabelAnchor.name.toString == orig(this.basePositiveItemLabelPosition.itemLabelAnchor.name.toString)
this.basePositiveItemLabelPosition.textAnchor == orig(this.basePositiveItemLabelPosition.textAnchor)
org.jfree.chart.text.TextAnchor.TOP_LEFT == orig(org.jfree.chart.text.TextAnchor.TOP_LEFT)
org.jfree.chart.text.TextAnchor.TOP_CENTER == orig(org.jfree.chart.text.TextAnchor.TOP_CENTER)
org.jfree.chart.text.TextAnchor.TOP_RIGHT == orig(org.jfree.chart.text.TextAnchor.TOP_RIGHT)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT)
org.jfree.chart.text.TextAnchor.CENTER_LEFT == orig(org.jfree.chart.text.TextAnchor.CENTER_LEFT)
org.jfree.chart.text.TextAnchor.CENTER == orig(org.jfree.chart.text.TextAnchor.CENTER)
org.jfree.chart.text.TextAnchor.CENTER_RIGHT == orig(org.jfree.chart.text.TextAnchor.CENTER_RIGHT)
org.jfree.chart.text.TextAnchor.BASELINE_LEFT == orig(org.jfree.chart.text.TextAnchor.BASELINE_LEFT)
org.jfree.chart.text.TextAnchor.BASELINE_CENTER == orig(org.jfree.chart.text.TextAnchor.BASELINE_CENTER)
org.jfree.chart.text.TextAnchor.BASELINE_RIGHT == orig(org.jfree.chart.text.TextAnchor.BASELINE_RIGHT)
org.jfree.chart.text.TextAnchor.BOTTOM_LEFT == orig(org.jfree.chart.text.TextAnchor.BOTTOM_LEFT)
org.jfree.chart.text.TextAnchor.BOTTOM_CENTER == orig(org.jfree.chart.text.TextAnchor.BOTTOM_CENTER)
org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT == orig(org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT)
this.basePositiveItemLabelPosition.textAnchor.name == orig(this.basePositiveItemLabelPosition.textAnchor.name)
this.basePositiveItemLabelPosition.textAnchor.name.toString == orig(this.basePositiveItemLabelPosition.textAnchor.name.toString)
this.basePositiveItemLabelPosition.rotationAnchor == orig(this.basePositiveItemLabelPosition.rotationAnchor)
this.basePositiveItemLabelPosition.rotationAnchor.name == orig(this.basePositiveItemLabelPosition.rotationAnchor.name)
this.basePositiveItemLabelPosition.rotationAnchor.name.toString == orig(this.basePositiveItemLabelPosition.rotationAnchor.name.toString)
this.basePositiveItemLabelPosition.angle == orig(this.basePositiveItemLabelPosition.angle)
this.negativeItemLabelPositionList == orig(this.negativeItemLabelPositionList)
this.negativeItemLabelPositionList.objects == orig(this.negativeItemLabelPositionList.objects)
this.negativeItemLabelPositionList.objects[] == orig(this.negativeItemLabelPositionList.objects[])
this.negativeItemLabelPositionList.size == orig(this.negativeItemLabelPositionList.size)
this.negativeItemLabelPositionList.increment == orig(this.negativeItemLabelPositionList.increment)
this.baseNegativeItemLabelPosition == orig(this.baseNegativeItemLabelPosition)
this.baseNegativeItemLabelPosition.itemLabelAnchor == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor)
this.baseNegativeItemLabelPosition.itemLabelAnchor.name == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor.name)
this.baseNegativeItemLabelPosition.itemLabelAnchor.name.toString == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor.name.toString)
this.baseNegativeItemLabelPosition.textAnchor == orig(this.baseNegativeItemLabelPosition.textAnchor)
this.baseNegativeItemLabelPosition.textAnchor.name == orig(this.baseNegativeItemLabelPosition.textAnchor.name)
this.baseNegativeItemLabelPosition.textAnchor.name.toString == orig(this.baseNegativeItemLabelPosition.textAnchor.name.toString)
this.baseNegativeItemLabelPosition.rotationAnchor == orig(this.baseNegativeItemLabelPosition.rotationAnchor)
this.baseNegativeItemLabelPosition.rotationAnchor.name == orig(this.baseNegativeItemLabelPosition.rotationAnchor.name)
this.baseNegativeItemLabelPosition.rotationAnchor.name.toString == orig(this.baseNegativeItemLabelPosition.rotationAnchor.name.toString)
this.baseNegativeItemLabelPosition.angle == orig(this.baseNegativeItemLabelPosition.angle)
this.itemLabelAnchorOffset == orig(this.itemLabelAnchorOffset)
this.createEntitiesList == orig(this.createEntitiesList)
this.createEntitiesList.objects == orig(this.createEntitiesList.objects)
this.createEntitiesList.objects[] == orig(this.createEntitiesList.objects[])
this.createEntitiesList.size == orig(this.createEntitiesList.size)
this.createEntitiesList.increment == orig(this.createEntitiesList.increment)
this.baseCreateEntities == orig(this.baseCreateEntities)
this.legendShapeList == orig(this.legendShapeList)
this.legendShapeList.objects == orig(this.legendShapeList.objects)
this.legendShapeList.objects[] == orig(this.legendShapeList.objects[])
this.legendShapeList.size == orig(this.legendShapeList.size)
this.legendShapeList.increment == orig(this.legendShapeList.increment)
this.baseLegendShape == orig(this.baseLegendShape)
this.treatLegendShapeAsLine == orig(this.treatLegendShapeAsLine)
this.legendTextFont == orig(this.legendTextFont)
this.legendTextFont.objects == orig(this.legendTextFont.objects)
this.legendTextFont.objects[] == orig(this.legendTextFont.objects[])
this.legendTextFont.size == orig(this.legendTextFont.size)
this.legendTextFont.increment == orig(this.legendTextFont.increment)
this.baseLegendTextFont == orig(this.baseLegendTextFont)
this.legendTextPaint == orig(this.legendTextPaint)
this.legendTextPaint.objects == orig(this.legendTextPaint.objects)
this.legendTextPaint.objects[] == orig(this.legendTextPaint.objects[])
this.legendTextPaint.size == orig(this.legendTextPaint.size)
this.legendTextPaint.increment == orig(this.legendTextPaint.increment)
this.baseLegendTextPaint == orig(this.baseLegendTextPaint)
this.dataBoundsIncludesVisibleSeriesOnly == orig(this.dataBoundsIncludesVisibleSeriesOnly)
this.defaultEntityRadius == orig(this.defaultEntityRadius)
this.listenerList == orig(this.listenerList)
this.selectedItemAttributes == orig(this.selectedItemAttributes)
this.selectedItemAttributes.allowNull == orig(this.selectedItemAttributes.allowNull)
this.selectedItemAttributes.paintList == orig(this.selectedItemAttributes.paintList)
this.selectedItemAttributes.paintList.objects == orig(this.selectedItemAttributes.paintList.objects)
this.selectedItemAttributes.paintList.objects[] == orig(this.selectedItemAttributes.paintList.objects[])
this.selectedItemAttributes.paintList.size == orig(this.selectedItemAttributes.paintList.size)
this.selectedItemAttributes.paintList.increment == orig(this.selectedItemAttributes.paintList.increment)
this.selectedItemAttributes.defaultPaint == orig(this.selectedItemAttributes.defaultPaint)
this.selectedItemAttributes.strokeList == orig(this.selectedItemAttributes.strokeList)
this.selectedItemAttributes.strokeList.objects == orig(this.selectedItemAttributes.strokeList.objects)
this.selectedItemAttributes.strokeList.objects[] == orig(this.selectedItemAttributes.strokeList.objects[])
this.selectedItemAttributes.strokeList.size == orig(this.selectedItemAttributes.strokeList.size)
this.selectedItemAttributes.strokeList.increment == orig(this.selectedItemAttributes.strokeList.increment)
this.selectedItemAttributes.defaultStroke == orig(this.selectedItemAttributes.defaultStroke)
this.selectedItemAttributes.shapeList == orig(this.selectedItemAttributes.shapeList)
this.selectedItemAttributes.shapeList.objects == orig(this.selectedItemAttributes.shapeList.objects)
this.selectedItemAttributes.shapeList.objects[] == orig(this.selectedItemAttributes.shapeList.objects[])
this.selectedItemAttributes.shapeList.size == orig(this.selectedItemAttributes.shapeList.size)
this.selectedItemAttributes.shapeList.increment == orig(this.selectedItemAttributes.shapeList.increment)
this.selectedItemAttributes.defaultShape == orig(this.selectedItemAttributes.defaultShape)
this.selectedItemAttributes.fillPaintList == orig(this.selectedItemAttributes.fillPaintList)
this.selectedItemAttributes.fillPaintList.objects == orig(this.selectedItemAttributes.fillPaintList.objects)
this.selectedItemAttributes.fillPaintList.objects[] == orig(this.selectedItemAttributes.fillPaintList.objects[])
this.selectedItemAttributes.fillPaintList.size == orig(this.selectedItemAttributes.fillPaintList.size)
this.selectedItemAttributes.fillPaintList.increment == orig(this.selectedItemAttributes.fillPaintList.increment)
this.selectedItemAttributes.defaultFillPaint == orig(this.selectedItemAttributes.defaultFillPaint)
this.selectedItemAttributes.outlinePaintList == orig(this.selectedItemAttributes.outlinePaintList)
this.selectedItemAttributes.outlinePaintList.objects == orig(this.selectedItemAttributes.outlinePaintList.objects)
this.selectedItemAttributes.outlinePaintList.objects[] == orig(this.selectedItemAttributes.outlinePaintList.objects[])
this.selectedItemAttributes.outlinePaintList.size == orig(this.selectedItemAttributes.outlinePaintList.size)
this.selectedItemAttributes.outlinePaintList.increment == orig(this.selectedItemAttributes.outlinePaintList.increment)
this.selectedItemAttributes.defaultOutlinePaint == orig(this.selectedItemAttributes.defaultOutlinePaint)
this.selectedItemAttributes.outlineStrokeList == orig(this.selectedItemAttributes.outlineStrokeList)
this.selectedItemAttributes.defaultOutlineStroke == orig(this.selectedItemAttributes.defaultOutlineStroke)
this.selectedItemAttributes.labelsVisibleList == orig(this.selectedItemAttributes.labelsVisibleList)
this.selectedItemAttributes.defaultLabelVisible == orig(this.selectedItemAttributes.defaultLabelVisible)
this.selectedItemAttributes.labelFontList == orig(this.selectedItemAttributes.labelFontList)
this.selectedItemAttributes.defaultLabelFont == orig(this.selectedItemAttributes.defaultLabelFont)
this.selectedItemAttributes.labelPaintList == orig(this.selectedItemAttributes.labelPaintList)
this.selectedItemAttributes.defaultLabelPaint == orig(this.selectedItemAttributes.defaultLabelPaint)
this.selectedItemAttributes.positionItemLabelPositionList == orig(this.selectedItemAttributes.positionItemLabelPositionList)
this.selectedItemAttributes.defaultPositiveItemLabelPosition == orig(this.selectedItemAttributes.defaultPositiveItemLabelPosition)
this.selectedItemAttributes.negativeItemLabelPositionList == orig(this.selectedItemAttributes.negativeItemLabelPositionList)
this.selectedItemAttributes.defaultNegativeItemLabelPosition == orig(this.selectedItemAttributes.defaultNegativeItemLabelPosition)
this.selectedItemAttributes.createEntityList == orig(this.selectedItemAttributes.createEntityList)
this.selectedItemAttributes.defaultCreateEntity == orig(this.selectedItemAttributes.defaultCreateEntity)
org.jfree.chart.renderer.AbstractRenderer.ADJ == orig(org.jfree.chart.renderer.AbstractRenderer.ADJ)
org.jfree.chart.renderer.AbstractRenderer.OPP == orig(org.jfree.chart.renderer.AbstractRenderer.OPP)
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener == orig(org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener)
size(this.paintList.objects[]) == orig(size(this.paintList.objects[]))
this.paintList.objects[] has only one value, of length 8
this.paintList.objects[].getClass().getName() == [java.awt.Color, null, null, null, null, null, null, null]
this.paintList.size == 1
this.shapeList.objects[] has only one value, of length 8
this.shapeList.objects[].getClass().getName() == [java.awt.geom.Rectangle2D.Double, null, null, null, null, null, null, null]
this.shapeList.size == 1
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener has only one value
return has only one value
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() in this.paintList.objects[].getClass().getName()
===========================================================================
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesShape(int):::ENTER
this.paintList.objects[] contains only nulls and has only one value, of length 8
this.paintList.objects[] elements == null
this.paintList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.paintList.objects[].getClass().getName() elements == null
this.paintList.size == 0
this.strokeList.objects[] contains only nulls and has only one value, of length 8
this.strokeList.objects[] elements == null
this.strokeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.strokeList.objects[].getClass().getName() elements == null
this.strokeList.size == 0
this.shapeList.objects[] contains only nulls and has only one value, of length 8
this.shapeList.objects[] elements == null
this.shapeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.shapeList.objects[].getClass().getName() elements == null
this.shapeList.size == 0
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener has only one value
series == 0
===========================================================================
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesShape(int):::EXIT
org.jfree.chart.renderer.AbstractRenderer.ZERO == orig(org.jfree.chart.renderer.AbstractRenderer.ZERO)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(this.basePaint.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(this.baseFillPaint.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(this.baseOutlinePaint.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(this.baseItemLabelPaint.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(this.selectedItemAttributes.defaultFillPaint.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == orig(this.baseStroke.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == orig(this.baseOutlineStroke.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE.getClass().getName() == return.getClass().getName()
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE.getClass().getName() == orig(this.baseShape.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_FONT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_FONT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT)
this.seriesVisibleList == orig(this.seriesVisibleList)
this.seriesVisibleList.objects == orig(this.seriesVisibleList.objects)
this.seriesVisibleList.objects.getClass().getName() == orig(this.seriesVisibleList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.seriesVisibleInLegendList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.paintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.fillPaintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.outlinePaintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.strokeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.outlineStrokeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.shapeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.itemLabelsVisibleList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.itemLabelFontList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.itemLabelPaintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.positiveItemLabelPositionList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.negativeItemLabelPositionList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.createEntitiesList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.legendShapeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.legendTextFont.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.legendTextPaint.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.selectedItemAttributes.paintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.selectedItemAttributes.strokeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.selectedItemAttributes.shapeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.selectedItemAttributes.fillPaintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.selectedItemAttributes.outlinePaintList.objects.getClass().getName())
this.seriesVisibleList.objects[] == orig(this.seriesVisibleList.objects[])
this.seriesVisibleList.size == orig(this.seriesVisibleList.size)
this.seriesVisibleList.increment == orig(this.seriesVisibleList.increment)
this.baseSeriesVisible == orig(this.baseSeriesVisible)
this.seriesVisibleInLegendList == orig(this.seriesVisibleInLegendList)
this.seriesVisibleInLegendList.objects == orig(this.seriesVisibleInLegendList.objects)
this.seriesVisibleInLegendList.objects[] == orig(this.seriesVisibleInLegendList.objects[])
this.seriesVisibleInLegendList.size == orig(this.seriesVisibleInLegendList.size)
this.seriesVisibleInLegendList.increment == orig(this.seriesVisibleInLegendList.increment)
this.baseSeriesVisibleInLegend == orig(this.baseSeriesVisibleInLegend)
this.paintList == orig(this.paintList)
this.paintList.objects == orig(this.paintList.objects)
this.paintList.objects[] == orig(this.paintList.objects[])
this.paintList.size == orig(this.paintList.size)
this.paintList.increment == orig(this.paintList.increment)
this.autoPopulateSeriesPaint == orig(this.autoPopulateSeriesPaint)
this.basePaint == orig(this.basePaint)
this.fillPaintList == orig(this.fillPaintList)
this.fillPaintList.objects == orig(this.fillPaintList.objects)
this.fillPaintList.objects[] == orig(this.fillPaintList.objects[])
this.fillPaintList.size == orig(this.fillPaintList.size)
this.fillPaintList.increment == orig(this.fillPaintList.increment)
this.autoPopulateSeriesFillPaint == orig(this.autoPopulateSeriesFillPaint)
this.baseFillPaint == orig(this.baseFillPaint)
this.outlinePaintList == orig(this.outlinePaintList)
this.outlinePaintList.objects == orig(this.outlinePaintList.objects)
this.outlinePaintList.objects[] == orig(this.outlinePaintList.objects[])
this.outlinePaintList.size == orig(this.outlinePaintList.size)
this.outlinePaintList.increment == orig(this.outlinePaintList.increment)
this.autoPopulateSeriesOutlinePaint == orig(this.autoPopulateSeriesOutlinePaint)
this.baseOutlinePaint == orig(this.baseOutlinePaint)
this.strokeList == orig(this.strokeList)
this.strokeList.objects == orig(this.strokeList.objects)
this.strokeList.objects[] == orig(this.strokeList.objects[])
this.strokeList.size == orig(this.strokeList.size)
this.strokeList.increment == orig(this.strokeList.increment)
this.autoPopulateSeriesStroke == orig(this.autoPopulateSeriesStroke)
this.baseStroke == orig(this.baseStroke)
this.outlineStrokeList == orig(this.outlineStrokeList)
this.outlineStrokeList.objects == orig(this.outlineStrokeList.objects)
this.outlineStrokeList.objects[] == orig(this.outlineStrokeList.objects[])
this.outlineStrokeList.size == orig(this.outlineStrokeList.size)
this.outlineStrokeList.increment == orig(this.outlineStrokeList.increment)
this.baseOutlineStroke == orig(this.baseOutlineStroke)
this.autoPopulateSeriesOutlineStroke == orig(this.autoPopulateSeriesOutlineStroke)
this.shapeList == orig(this.shapeList)
this.shapeList.objects == orig(this.shapeList.objects)
this.shapeList.increment == orig(this.shapeList.increment)
this.autoPopulateSeriesShape == orig(this.autoPopulateSeriesShape)
this.baseShape == orig(this.baseShape)
this.itemLabelsVisibleList == orig(this.itemLabelsVisibleList)
this.itemLabelsVisibleList.objects == orig(this.itemLabelsVisibleList.objects)
this.itemLabelsVisibleList.objects[] == orig(this.itemLabelsVisibleList.objects[])
this.itemLabelsVisibleList.size == orig(this.itemLabelsVisibleList.size)
this.itemLabelsVisibleList.increment == orig(this.itemLabelsVisibleList.increment)
this.baseItemLabelsVisible == orig(this.baseItemLabelsVisible)
this.itemLabelFontList == orig(this.itemLabelFontList)
this.itemLabelFontList.objects == orig(this.itemLabelFontList.objects)
this.itemLabelFontList.objects[] == orig(this.itemLabelFontList.objects[])
this.itemLabelFontList.size == orig(this.itemLabelFontList.size)
this.itemLabelFontList.increment == orig(this.itemLabelFontList.increment)
this.baseItemLabelFont == orig(this.baseItemLabelFont)
this.itemLabelPaintList == orig(this.itemLabelPaintList)
this.itemLabelPaintList.objects == orig(this.itemLabelPaintList.objects)
this.itemLabelPaintList.objects[] == orig(this.itemLabelPaintList.objects[])
this.itemLabelPaintList.size == orig(this.itemLabelPaintList.size)
this.itemLabelPaintList.increment == orig(this.itemLabelPaintList.increment)
this.baseItemLabelPaint == orig(this.baseItemLabelPaint)
this.positiveItemLabelPositionList == orig(this.positiveItemLabelPositionList)
this.positiveItemLabelPositionList.objects == orig(this.positiveItemLabelPositionList.objects)
this.positiveItemLabelPositionList.objects[] == orig(this.positiveItemLabelPositionList.objects[])
this.positiveItemLabelPositionList.size == orig(this.positiveItemLabelPositionList.size)
this.positiveItemLabelPositionList.increment == orig(this.positiveItemLabelPositionList.increment)
this.basePositiveItemLabelPosition == orig(this.basePositiveItemLabelPosition)
this.basePositiveItemLabelPosition.itemLabelAnchor == orig(this.basePositiveItemLabelPosition.itemLabelAnchor)
org.jfree.chart.labels.ItemLabelAnchor.CENTER == orig(org.jfree.chart.labels.ItemLabelAnchor.CENTER)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE1 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE1)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE2 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE2)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE3 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE3)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE4 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE4)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE5 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE5)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE6 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE6)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE7 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE7)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE8 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE8)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE9 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE9)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE10 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE10)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE11 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE11)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE12 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE12)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12)
this.basePositiveItemLabelPosition.itemLabelAnchor.name == orig(this.basePositiveItemLabelPosition.itemLabelAnchor.name)
this.basePositiveItemLabelPosition.itemLabelAnchor.name.toString == orig(this.basePositiveItemLabelPosition.itemLabelAnchor.name.toString)
this.basePositiveItemLabelPosition.textAnchor == orig(this.basePositiveItemLabelPosition.textAnchor)
org.jfree.chart.text.TextAnchor.TOP_LEFT == orig(org.jfree.chart.text.TextAnchor.TOP_LEFT)
org.jfree.chart.text.TextAnchor.TOP_CENTER == orig(org.jfree.chart.text.TextAnchor.TOP_CENTER)
org.jfree.chart.text.TextAnchor.TOP_RIGHT == orig(org.jfree.chart.text.TextAnchor.TOP_RIGHT)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT)
org.jfree.chart.text.TextAnchor.CENTER_LEFT == orig(org.jfree.chart.text.TextAnchor.CENTER_LEFT)
org.jfree.chart.text.TextAnchor.CENTER == orig(org.jfree.chart.text.TextAnchor.CENTER)
org.jfree.chart.text.TextAnchor.CENTER_RIGHT == orig(org.jfree.chart.text.TextAnchor.CENTER_RIGHT)
org.jfree.chart.text.TextAnchor.BASELINE_LEFT == orig(org.jfree.chart.text.TextAnchor.BASELINE_LEFT)
org.jfree.chart.text.TextAnchor.BASELINE_CENTER == orig(org.jfree.chart.text.TextAnchor.BASELINE_CENTER)
org.jfree.chart.text.TextAnchor.BASELINE_RIGHT == orig(org.jfree.chart.text.TextAnchor.BASELINE_RIGHT)
org.jfree.chart.text.TextAnchor.BOTTOM_LEFT == orig(org.jfree.chart.text.TextAnchor.BOTTOM_LEFT)
org.jfree.chart.text.TextAnchor.BOTTOM_CENTER == orig(org.jfree.chart.text.TextAnchor.BOTTOM_CENTER)
org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT == orig(org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT)
this.basePositiveItemLabelPosition.textAnchor.name == orig(this.basePositiveItemLabelPosition.textAnchor.name)
this.basePositiveItemLabelPosition.textAnchor.name.toString == orig(this.basePositiveItemLabelPosition.textAnchor.name.toString)
this.basePositiveItemLabelPosition.rotationAnchor == orig(this.basePositiveItemLabelPosition.rotationAnchor)
this.basePositiveItemLabelPosition.rotationAnchor.name == orig(this.basePositiveItemLabelPosition.rotationAnchor.name)
this.basePositiveItemLabelPosition.rotationAnchor.name.toString == orig(this.basePositiveItemLabelPosition.rotationAnchor.name.toString)
this.basePositiveItemLabelPosition.angle == orig(this.basePositiveItemLabelPosition.angle)
this.negativeItemLabelPositionList == orig(this.negativeItemLabelPositionList)
this.negativeItemLabelPositionList.objects == orig(this.negativeItemLabelPositionList.objects)
this.negativeItemLabelPositionList.objects[] == orig(this.negativeItemLabelPositionList.objects[])
this.negativeItemLabelPositionList.size == orig(this.negativeItemLabelPositionList.size)
this.negativeItemLabelPositionList.increment == orig(this.negativeItemLabelPositionList.increment)
this.baseNegativeItemLabelPosition == orig(this.baseNegativeItemLabelPosition)
this.baseNegativeItemLabelPosition.itemLabelAnchor == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor)
this.baseNegativeItemLabelPosition.itemLabelAnchor.name == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor.name)
this.baseNegativeItemLabelPosition.itemLabelAnchor.name.toString == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor.name.toString)
this.baseNegativeItemLabelPosition.textAnchor == orig(this.baseNegativeItemLabelPosition.textAnchor)
this.baseNegativeItemLabelPosition.textAnchor.name == orig(this.baseNegativeItemLabelPosition.textAnchor.name)
this.baseNegativeItemLabelPosition.textAnchor.name.toString == orig(this.baseNegativeItemLabelPosition.textAnchor.name.toString)
this.baseNegativeItemLabelPosition.rotationAnchor == orig(this.baseNegativeItemLabelPosition.rotationAnchor)
this.baseNegativeItemLabelPosition.rotationAnchor.name == orig(this.baseNegativeItemLabelPosition.rotationAnchor.name)
this.baseNegativeItemLabelPosition.rotationAnchor.name.toString == orig(this.baseNegativeItemLabelPosition.rotationAnchor.name.toString)
this.baseNegativeItemLabelPosition.angle == orig(this.baseNegativeItemLabelPosition.angle)
this.itemLabelAnchorOffset == orig(this.itemLabelAnchorOffset)
this.createEntitiesList == orig(this.createEntitiesList)
this.createEntitiesList.objects == orig(this.createEntitiesList.objects)
this.createEntitiesList.objects[] == orig(this.createEntitiesList.objects[])
this.createEntitiesList.size == orig(this.createEntitiesList.size)
this.createEntitiesList.increment == orig(this.createEntitiesList.increment)
this.baseCreateEntities == orig(this.baseCreateEntities)
this.legendShapeList == orig(this.legendShapeList)
this.legendShapeList.objects == orig(this.legendShapeList.objects)
this.legendShapeList.objects[] == orig(this.legendShapeList.objects[])
this.legendShapeList.size == orig(this.legendShapeList.size)
this.legendShapeList.increment == orig(this.legendShapeList.increment)
this.baseLegendShape == orig(this.baseLegendShape)
this.treatLegendShapeAsLine == orig(this.treatLegendShapeAsLine)
this.legendTextFont == orig(this.legendTextFont)
this.legendTextFont.objects == orig(this.legendTextFont.objects)
this.legendTextFont.objects[] == orig(this.legendTextFont.objects[])
this.legendTextFont.size == orig(this.legendTextFont.size)
this.legendTextFont.increment == orig(this.legendTextFont.increment)
this.baseLegendTextFont == orig(this.baseLegendTextFont)
this.legendTextPaint == orig(this.legendTextPaint)
this.legendTextPaint.objects == orig(this.legendTextPaint.objects)
this.legendTextPaint.objects[] == orig(this.legendTextPaint.objects[])
this.legendTextPaint.size == orig(this.legendTextPaint.size)
this.legendTextPaint.increment == orig(this.legendTextPaint.increment)
this.baseLegendTextPaint == orig(this.baseLegendTextPaint)
this.dataBoundsIncludesVisibleSeriesOnly == orig(this.dataBoundsIncludesVisibleSeriesOnly)
this.defaultEntityRadius == orig(this.defaultEntityRadius)
this.listenerList == orig(this.listenerList)
this.selectedItemAttributes == orig(this.selectedItemAttributes)
this.selectedItemAttributes.allowNull == orig(this.selectedItemAttributes.allowNull)
this.selectedItemAttributes.paintList == orig(this.selectedItemAttributes.paintList)
this.selectedItemAttributes.paintList.objects == orig(this.selectedItemAttributes.paintList.objects)
this.selectedItemAttributes.paintList.objects[] == orig(this.selectedItemAttributes.paintList.objects[])
this.selectedItemAttributes.paintList.size == orig(this.selectedItemAttributes.paintList.size)
this.selectedItemAttributes.paintList.increment == orig(this.selectedItemAttributes.paintList.increment)
this.selectedItemAttributes.defaultPaint == orig(this.selectedItemAttributes.defaultPaint)
this.selectedItemAttributes.strokeList == orig(this.selectedItemAttributes.strokeList)
this.selectedItemAttributes.strokeList.objects == orig(this.selectedItemAttributes.strokeList.objects)
this.selectedItemAttributes.strokeList.objects[] == orig(this.selectedItemAttributes.strokeList.objects[])
this.selectedItemAttributes.strokeList.size == orig(this.selectedItemAttributes.strokeList.size)
this.selectedItemAttributes.strokeList.increment == orig(this.selectedItemAttributes.strokeList.increment)
this.selectedItemAttributes.defaultStroke == orig(this.selectedItemAttributes.defaultStroke)
this.selectedItemAttributes.shapeList == orig(this.selectedItemAttributes.shapeList)
this.selectedItemAttributes.shapeList.objects == orig(this.selectedItemAttributes.shapeList.objects)
this.selectedItemAttributes.shapeList.objects[] == orig(this.selectedItemAttributes.shapeList.objects[])
this.selectedItemAttributes.shapeList.size == orig(this.selectedItemAttributes.shapeList.size)
this.selectedItemAttributes.shapeList.increment == orig(this.selectedItemAttributes.shapeList.increment)
this.selectedItemAttributes.defaultShape == orig(this.selectedItemAttributes.defaultShape)
this.selectedItemAttributes.fillPaintList == orig(this.selectedItemAttributes.fillPaintList)
this.selectedItemAttributes.fillPaintList.objects == orig(this.selectedItemAttributes.fillPaintList.objects)
this.selectedItemAttributes.fillPaintList.objects[] == orig(this.selectedItemAttributes.fillPaintList.objects[])
this.selectedItemAttributes.fillPaintList.size == orig(this.selectedItemAttributes.fillPaintList.size)
this.selectedItemAttributes.fillPaintList.increment == orig(this.selectedItemAttributes.fillPaintList.increment)
this.selectedItemAttributes.defaultFillPaint == orig(this.selectedItemAttributes.defaultFillPaint)
this.selectedItemAttributes.outlinePaintList == orig(this.selectedItemAttributes.outlinePaintList)
this.selectedItemAttributes.outlinePaintList.objects == orig(this.selectedItemAttributes.outlinePaintList.objects)
this.selectedItemAttributes.outlinePaintList.objects[] == orig(this.selectedItemAttributes.outlinePaintList.objects[])
this.selectedItemAttributes.outlinePaintList.size == orig(this.selectedItemAttributes.outlinePaintList.size)
this.selectedItemAttributes.outlinePaintList.increment == orig(this.selectedItemAttributes.outlinePaintList.increment)
this.selectedItemAttributes.defaultOutlinePaint == orig(this.selectedItemAttributes.defaultOutlinePaint)
this.selectedItemAttributes.outlineStrokeList == orig(this.selectedItemAttributes.outlineStrokeList)
this.selectedItemAttributes.defaultOutlineStroke == orig(this.selectedItemAttributes.defaultOutlineStroke)
this.selectedItemAttributes.labelsVisibleList == orig(this.selectedItemAttributes.labelsVisibleList)
this.selectedItemAttributes.defaultLabelVisible == orig(this.selectedItemAttributes.defaultLabelVisible)
this.selectedItemAttributes.labelFontList == orig(this.selectedItemAttributes.labelFontList)
this.selectedItemAttributes.defaultLabelFont == orig(this.selectedItemAttributes.defaultLabelFont)
this.selectedItemAttributes.labelPaintList == orig(this.selectedItemAttributes.labelPaintList)
this.selectedItemAttributes.defaultLabelPaint == orig(this.selectedItemAttributes.defaultLabelPaint)
this.selectedItemAttributes.positionItemLabelPositionList == orig(this.selectedItemAttributes.positionItemLabelPositionList)
this.selectedItemAttributes.defaultPositiveItemLabelPosition == orig(this.selectedItemAttributes.defaultPositiveItemLabelPosition)
this.selectedItemAttributes.negativeItemLabelPositionList == orig(this.selectedItemAttributes.negativeItemLabelPositionList)
this.selectedItemAttributes.defaultNegativeItemLabelPosition == orig(this.selectedItemAttributes.defaultNegativeItemLabelPosition)
this.selectedItemAttributes.createEntityList == orig(this.selectedItemAttributes.createEntityList)
this.selectedItemAttributes.defaultCreateEntity == orig(this.selectedItemAttributes.defaultCreateEntity)
org.jfree.chart.renderer.AbstractRenderer.ADJ == orig(org.jfree.chart.renderer.AbstractRenderer.ADJ)
org.jfree.chart.renderer.AbstractRenderer.OPP == orig(org.jfree.chart.renderer.AbstractRenderer.OPP)
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener == orig(org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener)
size(this.shapeList.objects[]) == orig(size(this.shapeList.objects[]))
this.paintList.objects[] contains only nulls and has only one value, of length 8
this.paintList.objects[] elements == null
this.paintList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.paintList.objects[].getClass().getName() elements == null
this.paintList.size == 0
this.strokeList.objects[] contains only nulls and has only one value, of length 8
this.strokeList.objects[] elements == null
this.strokeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.strokeList.objects[].getClass().getName() elements == null
this.strokeList.size == 0
this.shapeList.objects[] has only one value, of length 8
this.shapeList.objects[].getClass().getName() == [java.awt.geom.Rectangle2D.Double, null, null, null, null, null, null, null]
this.shapeList.size == 1
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener has only one value
return has only one value
===========================================================================
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke(int):::ENTER
this.paintList.objects[] has only one value, of length 8
this.paintList.objects[].getClass().getName() == [java.awt.Color, null, null, null, null, null, null, null]
this.paintList.size == 1
this.strokeList.objects[] contains only nulls and has only one value, of length 8
this.strokeList.objects[] elements == null
this.strokeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.strokeList.objects[].getClass().getName() elements == null
this.strokeList.size == 0
this.shapeList.objects[] has only one value, of length 8
this.shapeList.objects[].getClass().getName() == [java.awt.geom.Rectangle2D.Double, null, null, null, null, null, null, null]
this.shapeList.size == 1
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener has only one value
series == 0
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() in this.paintList.objects[].getClass().getName()
===========================================================================
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke(int):::EXIT
org.jfree.chart.renderer.AbstractRenderer.ZERO == orig(org.jfree.chart.renderer.AbstractRenderer.ZERO)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(this.basePaint.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(this.baseFillPaint.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(this.baseOutlinePaint.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(this.baseItemLabelPaint.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(this.selectedItemAttributes.defaultFillPaint.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == return.getClass().getName()
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == orig(this.baseStroke.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == orig(this.baseOutlineStroke.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE.getClass().getName() == orig(this.baseShape.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_FONT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_FONT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT)
this.seriesVisibleList == orig(this.seriesVisibleList)
this.seriesVisibleList.objects == orig(this.seriesVisibleList.objects)
this.seriesVisibleList.objects.getClass().getName() == orig(this.seriesVisibleList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.seriesVisibleInLegendList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.paintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.fillPaintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.outlinePaintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.strokeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.outlineStrokeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.shapeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.itemLabelsVisibleList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.itemLabelFontList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.itemLabelPaintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.positiveItemLabelPositionList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.negativeItemLabelPositionList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.createEntitiesList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.legendShapeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.legendTextFont.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.legendTextPaint.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.selectedItemAttributes.paintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.selectedItemAttributes.strokeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.selectedItemAttributes.shapeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.selectedItemAttributes.fillPaintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.selectedItemAttributes.outlinePaintList.objects.getClass().getName())
this.seriesVisibleList.objects[] == orig(this.seriesVisibleList.objects[])
this.seriesVisibleList.size == orig(this.seriesVisibleList.size)
this.seriesVisibleList.increment == orig(this.seriesVisibleList.increment)
this.baseSeriesVisible == orig(this.baseSeriesVisible)
this.seriesVisibleInLegendList == orig(this.seriesVisibleInLegendList)
this.seriesVisibleInLegendList.objects == orig(this.seriesVisibleInLegendList.objects)
this.seriesVisibleInLegendList.objects[] == orig(this.seriesVisibleInLegendList.objects[])
this.seriesVisibleInLegendList.size == orig(this.seriesVisibleInLegendList.size)
this.seriesVisibleInLegendList.increment == orig(this.seriesVisibleInLegendList.increment)
this.baseSeriesVisibleInLegend == orig(this.baseSeriesVisibleInLegend)
this.paintList == orig(this.paintList)
this.paintList.objects == orig(this.paintList.objects)
this.paintList.objects[] == orig(this.paintList.objects[])
this.paintList.size == orig(this.paintList.size)
this.paintList.increment == orig(this.paintList.increment)
this.autoPopulateSeriesPaint == orig(this.autoPopulateSeriesPaint)
this.basePaint == orig(this.basePaint)
this.fillPaintList == orig(this.fillPaintList)
this.fillPaintList.objects == orig(this.fillPaintList.objects)
this.fillPaintList.objects[] == orig(this.fillPaintList.objects[])
this.fillPaintList.size == orig(this.fillPaintList.size)
this.fillPaintList.increment == orig(this.fillPaintList.increment)
this.autoPopulateSeriesFillPaint == orig(this.autoPopulateSeriesFillPaint)
this.baseFillPaint == orig(this.baseFillPaint)
this.outlinePaintList == orig(this.outlinePaintList)
this.outlinePaintList.objects == orig(this.outlinePaintList.objects)
this.outlinePaintList.objects[] == orig(this.outlinePaintList.objects[])
this.outlinePaintList.size == orig(this.outlinePaintList.size)
this.outlinePaintList.increment == orig(this.outlinePaintList.increment)
this.autoPopulateSeriesOutlinePaint == orig(this.autoPopulateSeriesOutlinePaint)
this.baseOutlinePaint == orig(this.baseOutlinePaint)
this.strokeList == orig(this.strokeList)
this.strokeList.objects == orig(this.strokeList.objects)
this.strokeList.increment == orig(this.strokeList.increment)
this.autoPopulateSeriesStroke == orig(this.autoPopulateSeriesStroke)
this.baseStroke == orig(this.baseStroke)
this.outlineStrokeList == orig(this.outlineStrokeList)
this.outlineStrokeList.objects == orig(this.outlineStrokeList.objects)
this.outlineStrokeList.objects[] == orig(this.outlineStrokeList.objects[])
this.outlineStrokeList.size == orig(this.outlineStrokeList.size)
this.outlineStrokeList.increment == orig(this.outlineStrokeList.increment)
this.baseOutlineStroke == orig(this.baseOutlineStroke)
this.autoPopulateSeriesOutlineStroke == orig(this.autoPopulateSeriesOutlineStroke)
this.shapeList == orig(this.shapeList)
this.shapeList.objects == orig(this.shapeList.objects)
this.shapeList.objects[] == orig(this.shapeList.objects[])
this.shapeList.size == orig(this.shapeList.size)
this.shapeList.increment == orig(this.shapeList.increment)
this.autoPopulateSeriesShape == orig(this.autoPopulateSeriesShape)
this.baseShape == orig(this.baseShape)
this.itemLabelsVisibleList == orig(this.itemLabelsVisibleList)
this.itemLabelsVisibleList.objects == orig(this.itemLabelsVisibleList.objects)
this.itemLabelsVisibleList.objects[] == orig(this.itemLabelsVisibleList.objects[])
this.itemLabelsVisibleList.size == orig(this.itemLabelsVisibleList.size)
this.itemLabelsVisibleList.increment == orig(this.itemLabelsVisibleList.increment)
this.baseItemLabelsVisible == orig(this.baseItemLabelsVisible)
this.itemLabelFontList == orig(this.itemLabelFontList)
this.itemLabelFontList.objects == orig(this.itemLabelFontList.objects)
this.itemLabelFontList.objects[] == orig(this.itemLabelFontList.objects[])
this.itemLabelFontList.size == orig(this.itemLabelFontList.size)
this.itemLabelFontList.increment == orig(this.itemLabelFontList.increment)
this.baseItemLabelFont == orig(this.baseItemLabelFont)
this.itemLabelPaintList == orig(this.itemLabelPaintList)
this.itemLabelPaintList.objects == orig(this.itemLabelPaintList.objects)
this.itemLabelPaintList.objects[] == orig(this.itemLabelPaintList.objects[])
this.itemLabelPaintList.size == orig(this.itemLabelPaintList.size)
this.itemLabelPaintList.increment == orig(this.itemLabelPaintList.increment)
this.baseItemLabelPaint == orig(this.baseItemLabelPaint)
this.positiveItemLabelPositionList == orig(this.positiveItemLabelPositionList)
this.positiveItemLabelPositionList.objects == orig(this.positiveItemLabelPositionList.objects)
this.positiveItemLabelPositionList.objects[] == orig(this.positiveItemLabelPositionList.objects[])
this.positiveItemLabelPositionList.size == orig(this.positiveItemLabelPositionList.size)
this.positiveItemLabelPositionList.increment == orig(this.positiveItemLabelPositionList.increment)
this.basePositiveItemLabelPosition == orig(this.basePositiveItemLabelPosition)
this.basePositiveItemLabelPosition.itemLabelAnchor == orig(this.basePositiveItemLabelPosition.itemLabelAnchor)
org.jfree.chart.labels.ItemLabelAnchor.CENTER == orig(org.jfree.chart.labels.ItemLabelAnchor.CENTER)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE1 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE1)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE2 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE2)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE3 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE3)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE4 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE4)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE5 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE5)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE6 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE6)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE7 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE7)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE8 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE8)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE9 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE9)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE10 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE10)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE11 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE11)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE12 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE12)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12)
this.basePositiveItemLabelPosition.itemLabelAnchor.name == orig(this.basePositiveItemLabelPosition.itemLabelAnchor.name)
this.basePositiveItemLabelPosition.itemLabelAnchor.name.toString == orig(this.basePositiveItemLabelPosition.itemLabelAnchor.name.toString)
this.basePositiveItemLabelPosition.textAnchor == orig(this.basePositiveItemLabelPosition.textAnchor)
org.jfree.chart.text.TextAnchor.TOP_LEFT == orig(org.jfree.chart.text.TextAnchor.TOP_LEFT)
org.jfree.chart.text.TextAnchor.TOP_CENTER == orig(org.jfree.chart.text.TextAnchor.TOP_CENTER)
org.jfree.chart.text.TextAnchor.TOP_RIGHT == orig(org.jfree.chart.text.TextAnchor.TOP_RIGHT)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT)
org.jfree.chart.text.TextAnchor.CENTER_LEFT == orig(org.jfree.chart.text.TextAnchor.CENTER_LEFT)
org.jfree.chart.text.TextAnchor.CENTER == orig(org.jfree.chart.text.TextAnchor.CENTER)
org.jfree.chart.text.TextAnchor.CENTER_RIGHT == orig(org.jfree.chart.text.TextAnchor.CENTER_RIGHT)
org.jfree.chart.text.TextAnchor.BASELINE_LEFT == orig(org.jfree.chart.text.TextAnchor.BASELINE_LEFT)
org.jfree.chart.text.TextAnchor.BASELINE_CENTER == orig(org.jfree.chart.text.TextAnchor.BASELINE_CENTER)
org.jfree.chart.text.TextAnchor.BASELINE_RIGHT == orig(org.jfree.chart.text.TextAnchor.BASELINE_RIGHT)
org.jfree.chart.text.TextAnchor.BOTTOM_LEFT == orig(org.jfree.chart.text.TextAnchor.BOTTOM_LEFT)
org.jfree.chart.text.TextAnchor.BOTTOM_CENTER == orig(org.jfree.chart.text.TextAnchor.BOTTOM_CENTER)
org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT == orig(org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT)
this.basePositiveItemLabelPosition.textAnchor.name == orig(this.basePositiveItemLabelPosition.textAnchor.name)
this.basePositiveItemLabelPosition.textAnchor.name.toString == orig(this.basePositiveItemLabelPosition.textAnchor.name.toString)
this.basePositiveItemLabelPosition.rotationAnchor == orig(this.basePositiveItemLabelPosition.rotationAnchor)
this.basePositiveItemLabelPosition.rotationAnchor.name == orig(this.basePositiveItemLabelPosition.rotationAnchor.name)
this.basePositiveItemLabelPosition.rotationAnchor.name.toString == orig(this.basePositiveItemLabelPosition.rotationAnchor.name.toString)
this.basePositiveItemLabelPosition.angle == orig(this.basePositiveItemLabelPosition.angle)
this.negativeItemLabelPositionList == orig(this.negativeItemLabelPositionList)
this.negativeItemLabelPositionList.objects == orig(this.negativeItemLabelPositionList.objects)
this.negativeItemLabelPositionList.objects[] == orig(this.negativeItemLabelPositionList.objects[])
this.negativeItemLabelPositionList.size == orig(this.negativeItemLabelPositionList.size)
this.negativeItemLabelPositionList.increment == orig(this.negativeItemLabelPositionList.increment)
this.baseNegativeItemLabelPosition == orig(this.baseNegativeItemLabelPosition)
this.baseNegativeItemLabelPosition.itemLabelAnchor == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor)
this.baseNegativeItemLabelPosition.itemLabelAnchor.name == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor.name)
this.baseNegativeItemLabelPosition.itemLabelAnchor.name.toString == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor.name.toString)
this.baseNegativeItemLabelPosition.textAnchor == orig(this.baseNegativeItemLabelPosition.textAnchor)
this.baseNegativeItemLabelPosition.textAnchor.name == orig(this.baseNegativeItemLabelPosition.textAnchor.name)
this.baseNegativeItemLabelPosition.textAnchor.name.toString == orig(this.baseNegativeItemLabelPosition.textAnchor.name.toString)
this.baseNegativeItemLabelPosition.rotationAnchor == orig(this.baseNegativeItemLabelPosition.rotationAnchor)
this.baseNegativeItemLabelPosition.rotationAnchor.name == orig(this.baseNegativeItemLabelPosition.rotationAnchor.name)
this.baseNegativeItemLabelPosition.rotationAnchor.name.toString == orig(this.baseNegativeItemLabelPosition.rotationAnchor.name.toString)
this.baseNegativeItemLabelPosition.angle == orig(this.baseNegativeItemLabelPosition.angle)
this.itemLabelAnchorOffset == orig(this.itemLabelAnchorOffset)
this.createEntitiesList == orig(this.createEntitiesList)
this.createEntitiesList.objects == orig(this.createEntitiesList.objects)
this.createEntitiesList.objects[] == orig(this.createEntitiesList.objects[])
this.createEntitiesList.size == orig(this.createEntitiesList.size)
this.createEntitiesList.increment == orig(this.createEntitiesList.increment)
this.baseCreateEntities == orig(this.baseCreateEntities)
this.legendShapeList == orig(this.legendShapeList)
this.legendShapeList.objects == orig(this.legendShapeList.objects)
this.legendShapeList.objects[] == orig(this.legendShapeList.objects[])
this.legendShapeList.size == orig(this.legendShapeList.size)
this.legendShapeList.increment == orig(this.legendShapeList.increment)
this.baseLegendShape == orig(this.baseLegendShape)
this.treatLegendShapeAsLine == orig(this.treatLegendShapeAsLine)
this.legendTextFont == orig(this.legendTextFont)
this.legendTextFont.objects == orig(this.legendTextFont.objects)
this.legendTextFont.objects[] == orig(this.legendTextFont.objects[])
this.legendTextFont.size == orig(this.legendTextFont.size)
this.legendTextFont.increment == orig(this.legendTextFont.increment)
this.baseLegendTextFont == orig(this.baseLegendTextFont)
this.legendTextPaint == orig(this.legendTextPaint)
this.legendTextPaint.objects == orig(this.legendTextPaint.objects)
this.legendTextPaint.objects[] == orig(this.legendTextPaint.objects[])
this.legendTextPaint.size == orig(this.legendTextPaint.size)
this.legendTextPaint.increment == orig(this.legendTextPaint.increment)
this.baseLegendTextPaint == orig(this.baseLegendTextPaint)
this.dataBoundsIncludesVisibleSeriesOnly == orig(this.dataBoundsIncludesVisibleSeriesOnly)
this.defaultEntityRadius == orig(this.defaultEntityRadius)
this.listenerList == orig(this.listenerList)
this.selectedItemAttributes == orig(this.selectedItemAttributes)
this.selectedItemAttributes.allowNull == orig(this.selectedItemAttributes.allowNull)
this.selectedItemAttributes.paintList == orig(this.selectedItemAttributes.paintList)
this.selectedItemAttributes.paintList.objects == orig(this.selectedItemAttributes.paintList.objects)
this.selectedItemAttributes.paintList.objects[] == orig(this.selectedItemAttributes.paintList.objects[])
this.selectedItemAttributes.paintList.size == orig(this.selectedItemAttributes.paintList.size)
this.selectedItemAttributes.paintList.increment == orig(this.selectedItemAttributes.paintList.increment)
this.selectedItemAttributes.defaultPaint == orig(this.selectedItemAttributes.defaultPaint)
this.selectedItemAttributes.strokeList == orig(this.selectedItemAttributes.strokeList)
this.selectedItemAttributes.strokeList.objects == orig(this.selectedItemAttributes.strokeList.objects)
this.selectedItemAttributes.strokeList.objects[] == orig(this.selectedItemAttributes.strokeList.objects[])
this.selectedItemAttributes.strokeList.size == orig(this.selectedItemAttributes.strokeList.size)
this.selectedItemAttributes.strokeList.increment == orig(this.selectedItemAttributes.strokeList.increment)
this.selectedItemAttributes.defaultStroke == orig(this.selectedItemAttributes.defaultStroke)
this.selectedItemAttributes.shapeList == orig(this.selectedItemAttributes.shapeList)
this.selectedItemAttributes.shapeList.objects == orig(this.selectedItemAttributes.shapeList.objects)
this.selectedItemAttributes.shapeList.objects[] == orig(this.selectedItemAttributes.shapeList.objects[])
this.selectedItemAttributes.shapeList.size == orig(this.selectedItemAttributes.shapeList.size)
this.selectedItemAttributes.shapeList.increment == orig(this.selectedItemAttributes.shapeList.increment)
this.selectedItemAttributes.defaultShape == orig(this.selectedItemAttributes.defaultShape)
this.selectedItemAttributes.fillPaintList == orig(this.selectedItemAttributes.fillPaintList)
this.selectedItemAttributes.fillPaintList.objects == orig(this.selectedItemAttributes.fillPaintList.objects)
this.selectedItemAttributes.fillPaintList.objects[] == orig(this.selectedItemAttributes.fillPaintList.objects[])
this.selectedItemAttributes.fillPaintList.size == orig(this.selectedItemAttributes.fillPaintList.size)
this.selectedItemAttributes.fillPaintList.increment == orig(this.selectedItemAttributes.fillPaintList.increment)
this.selectedItemAttributes.defaultFillPaint == orig(this.selectedItemAttributes.defaultFillPaint)
this.selectedItemAttributes.outlinePaintList == orig(this.selectedItemAttributes.outlinePaintList)
this.selectedItemAttributes.outlinePaintList.objects == orig(this.selectedItemAttributes.outlinePaintList.objects)
this.selectedItemAttributes.outlinePaintList.objects[] == orig(this.selectedItemAttributes.outlinePaintList.objects[])
this.selectedItemAttributes.outlinePaintList.size == orig(this.selectedItemAttributes.outlinePaintList.size)
this.selectedItemAttributes.outlinePaintList.increment == orig(this.selectedItemAttributes.outlinePaintList.increment)
this.selectedItemAttributes.defaultOutlinePaint == orig(this.selectedItemAttributes.defaultOutlinePaint)
this.selectedItemAttributes.outlineStrokeList == orig(this.selectedItemAttributes.outlineStrokeList)
this.selectedItemAttributes.defaultOutlineStroke == orig(this.selectedItemAttributes.defaultOutlineStroke)
this.selectedItemAttributes.labelsVisibleList == orig(this.selectedItemAttributes.labelsVisibleList)
this.selectedItemAttributes.defaultLabelVisible == orig(this.selectedItemAttributes.defaultLabelVisible)
this.selectedItemAttributes.labelFontList == orig(this.selectedItemAttributes.labelFontList)
this.selectedItemAttributes.defaultLabelFont == orig(this.selectedItemAttributes.defaultLabelFont)
this.selectedItemAttributes.labelPaintList == orig(this.selectedItemAttributes.labelPaintList)
this.selectedItemAttributes.defaultLabelPaint == orig(this.selectedItemAttributes.defaultLabelPaint)
this.selectedItemAttributes.positionItemLabelPositionList == orig(this.selectedItemAttributes.positionItemLabelPositionList)
this.selectedItemAttributes.defaultPositiveItemLabelPosition == orig(this.selectedItemAttributes.defaultPositiveItemLabelPosition)
this.selectedItemAttributes.negativeItemLabelPositionList == orig(this.selectedItemAttributes.negativeItemLabelPositionList)
this.selectedItemAttributes.defaultNegativeItemLabelPosition == orig(this.selectedItemAttributes.defaultNegativeItemLabelPosition)
this.selectedItemAttributes.createEntityList == orig(this.selectedItemAttributes.createEntityList)
this.selectedItemAttributes.defaultCreateEntity == orig(this.selectedItemAttributes.defaultCreateEntity)
org.jfree.chart.renderer.AbstractRenderer.ADJ == orig(org.jfree.chart.renderer.AbstractRenderer.ADJ)
org.jfree.chart.renderer.AbstractRenderer.OPP == orig(org.jfree.chart.renderer.AbstractRenderer.OPP)
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener == orig(org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener)
size(this.strokeList.objects[]) == orig(size(this.strokeList.objects[]))
this.paintList.objects[] has only one value, of length 8
this.paintList.objects[].getClass().getName() == [java.awt.Color, null, null, null, null, null, null, null]
this.paintList.size == 1
this.strokeList.objects[] has only one value, of length 8
this.strokeList.objects[].getClass().getName() == [java.awt.BasicStroke, null, null, null, null, null, null, null]
this.strokeList.size == 1
this.shapeList.objects[] has only one value, of length 8
this.shapeList.objects[].getClass().getName() == [java.awt.geom.Rectangle2D.Double, null, null, null, null, null, null, null]
this.shapeList.size == 1
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener has only one value
return has only one value
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() in this.paintList.objects[].getClass().getName()
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() in this.strokeList.objects[].getClass().getName()
===========================================================================
org.jfree.chart.renderer.AbstractRenderer.setSeriesPaint(int, java.awt.Paint, boolean):::ENTER
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == paint.getClass().getName()
this.paintList.objects[] contains only nulls and has only one value, of length 8
this.paintList.objects[] elements == null
this.paintList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.paintList.objects[].getClass().getName() elements == null
this.paintList.size == 0
this.strokeList.objects[] contains only nulls and has only one value, of length 8
this.strokeList.objects[] elements == null
this.strokeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.strokeList.objects[].getClass().getName() elements == null
this.strokeList.size == 0
this.shapeList.objects[] has only one value, of length 8
this.shapeList.objects[].getClass().getName() == [java.awt.geom.Rectangle2D.Double, null, null, null, null, null, null, null]
this.shapeList.size == 1
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener has only one value
series == 0
paint has only one value
notify == false
===========================================================================
org.jfree.chart.renderer.AbstractRenderer.setSeriesPaint(int, java.awt.Paint, boolean):::EXIT
org.jfree.chart.renderer.AbstractRenderer.ZERO == orig(org.jfree.chart.renderer.AbstractRenderer.ZERO)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(this.basePaint.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(this.baseFillPaint.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(this.baseOutlinePaint.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(this.baseItemLabelPaint.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(this.selectedItemAttributes.defaultFillPaint.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(paint.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == orig(this.baseStroke.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == orig(this.baseOutlineStroke.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE.getClass().getName() == orig(this.baseShape.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_FONT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_FONT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT)
this.seriesVisibleList == orig(this.seriesVisibleList)
this.seriesVisibleList.objects == orig(this.seriesVisibleList.objects)
this.seriesVisibleList.objects.getClass().getName() == orig(this.seriesVisibleList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.seriesVisibleInLegendList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.paintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.fillPaintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.outlinePaintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.strokeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.outlineStrokeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.shapeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.itemLabelsVisibleList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.itemLabelFontList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.itemLabelPaintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.positiveItemLabelPositionList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.negativeItemLabelPositionList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.createEntitiesList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.legendShapeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.legendTextFont.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.legendTextPaint.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.selectedItemAttributes.paintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.selectedItemAttributes.strokeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.selectedItemAttributes.shapeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.selectedItemAttributes.fillPaintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.selectedItemAttributes.outlinePaintList.objects.getClass().getName())
this.seriesVisibleList.objects[] == orig(this.seriesVisibleList.objects[])
this.seriesVisibleList.size == orig(this.seriesVisibleList.size)
this.seriesVisibleList.increment == orig(this.seriesVisibleList.increment)
this.baseSeriesVisible == orig(this.baseSeriesVisible)
this.seriesVisibleInLegendList == orig(this.seriesVisibleInLegendList)
this.seriesVisibleInLegendList.objects == orig(this.seriesVisibleInLegendList.objects)
this.seriesVisibleInLegendList.objects[] == orig(this.seriesVisibleInLegendList.objects[])
this.seriesVisibleInLegendList.size == orig(this.seriesVisibleInLegendList.size)
this.seriesVisibleInLegendList.increment == orig(this.seriesVisibleInLegendList.increment)
this.baseSeriesVisibleInLegend == orig(this.baseSeriesVisibleInLegend)
this.paintList == orig(this.paintList)
this.paintList.objects == orig(this.paintList.objects)
this.paintList.increment == orig(this.paintList.increment)
this.autoPopulateSeriesPaint == orig(this.autoPopulateSeriesPaint)
this.basePaint == orig(this.basePaint)
this.fillPaintList == orig(this.fillPaintList)
this.fillPaintList.objects == orig(this.fillPaintList.objects)
this.fillPaintList.objects[] == orig(this.fillPaintList.objects[])
this.fillPaintList.size == orig(this.fillPaintList.size)
this.fillPaintList.increment == orig(this.fillPaintList.increment)
this.autoPopulateSeriesFillPaint == orig(this.autoPopulateSeriesFillPaint)
this.baseFillPaint == orig(this.baseFillPaint)
this.outlinePaintList == orig(this.outlinePaintList)
this.outlinePaintList.objects == orig(this.outlinePaintList.objects)
this.outlinePaintList.objects[] == orig(this.outlinePaintList.objects[])
this.outlinePaintList.size == orig(this.outlinePaintList.size)
this.outlinePaintList.increment == orig(this.outlinePaintList.increment)
this.autoPopulateSeriesOutlinePaint == orig(this.autoPopulateSeriesOutlinePaint)
this.baseOutlinePaint == orig(this.baseOutlinePaint)
this.strokeList == orig(this.strokeList)
this.strokeList.objects == orig(this.strokeList.objects)
this.strokeList.objects[] == orig(this.strokeList.objects[])
this.strokeList.size == orig(this.strokeList.size)
this.strokeList.increment == orig(this.strokeList.increment)
this.autoPopulateSeriesStroke == orig(this.autoPopulateSeriesStroke)
this.baseStroke == orig(this.baseStroke)
this.outlineStrokeList == orig(this.outlineStrokeList)
this.outlineStrokeList.objects == orig(this.outlineStrokeList.objects)
this.outlineStrokeList.objects[] == orig(this.outlineStrokeList.objects[])
this.outlineStrokeList.size == orig(this.outlineStrokeList.size)
this.outlineStrokeList.increment == orig(this.outlineStrokeList.increment)
this.baseOutlineStroke == orig(this.baseOutlineStroke)
this.autoPopulateSeriesOutlineStroke == orig(this.autoPopulateSeriesOutlineStroke)
this.shapeList == orig(this.shapeList)
this.shapeList.objects == orig(this.shapeList.objects)
this.shapeList.objects[] == orig(this.shapeList.objects[])
this.shapeList.size == orig(this.shapeList.size)
this.shapeList.increment == orig(this.shapeList.increment)
this.autoPopulateSeriesShape == orig(this.autoPopulateSeriesShape)
this.baseShape == orig(this.baseShape)
this.itemLabelsVisibleList == orig(this.itemLabelsVisibleList)
this.itemLabelsVisibleList.objects == orig(this.itemLabelsVisibleList.objects)
this.itemLabelsVisibleList.objects[] == orig(this.itemLabelsVisibleList.objects[])
this.itemLabelsVisibleList.size == orig(this.itemLabelsVisibleList.size)
this.itemLabelsVisibleList.increment == orig(this.itemLabelsVisibleList.increment)
this.baseItemLabelsVisible == orig(this.baseItemLabelsVisible)
this.itemLabelFontList == orig(this.itemLabelFontList)
this.itemLabelFontList.objects == orig(this.itemLabelFontList.objects)
this.itemLabelFontList.objects[] == orig(this.itemLabelFontList.objects[])
this.itemLabelFontList.size == orig(this.itemLabelFontList.size)
this.itemLabelFontList.increment == orig(this.itemLabelFontList.increment)
this.baseItemLabelFont == orig(this.baseItemLabelFont)
this.itemLabelPaintList == orig(this.itemLabelPaintList)
this.itemLabelPaintList.objects == orig(this.itemLabelPaintList.objects)
this.itemLabelPaintList.objects[] == orig(this.itemLabelPaintList.objects[])
this.itemLabelPaintList.size == orig(this.itemLabelPaintList.size)
this.itemLabelPaintList.increment == orig(this.itemLabelPaintList.increment)
this.baseItemLabelPaint == orig(this.baseItemLabelPaint)
this.positiveItemLabelPositionList == orig(this.positiveItemLabelPositionList)
this.positiveItemLabelPositionList.objects == orig(this.positiveItemLabelPositionList.objects)
this.positiveItemLabelPositionList.objects[] == orig(this.positiveItemLabelPositionList.objects[])
this.positiveItemLabelPositionList.size == orig(this.positiveItemLabelPositionList.size)
this.positiveItemLabelPositionList.increment == orig(this.positiveItemLabelPositionList.increment)
this.basePositiveItemLabelPosition == orig(this.basePositiveItemLabelPosition)
this.basePositiveItemLabelPosition.itemLabelAnchor == orig(this.basePositiveItemLabelPosition.itemLabelAnchor)
org.jfree.chart.labels.ItemLabelAnchor.CENTER == orig(org.jfree.chart.labels.ItemLabelAnchor.CENTER)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE1 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE1)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE2 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE2)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE3 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE3)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE4 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE4)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE5 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE5)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE6 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE6)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE7 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE7)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE8 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE8)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE9 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE9)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE10 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE10)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE11 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE11)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE12 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE12)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12)
this.basePositiveItemLabelPosition.itemLabelAnchor.name == orig(this.basePositiveItemLabelPosition.itemLabelAnchor.name)
this.basePositiveItemLabelPosition.itemLabelAnchor.name.toString == orig(this.basePositiveItemLabelPosition.itemLabelAnchor.name.toString)
this.basePositiveItemLabelPosition.textAnchor == orig(this.basePositiveItemLabelPosition.textAnchor)
org.jfree.chart.text.TextAnchor.TOP_LEFT == orig(org.jfree.chart.text.TextAnchor.TOP_LEFT)
org.jfree.chart.text.TextAnchor.TOP_CENTER == orig(org.jfree.chart.text.TextAnchor.TOP_CENTER)
org.jfree.chart.text.TextAnchor.TOP_RIGHT == orig(org.jfree.chart.text.TextAnchor.TOP_RIGHT)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT)
org.jfree.chart.text.TextAnchor.CENTER_LEFT == orig(org.jfree.chart.text.TextAnchor.CENTER_LEFT)
org.jfree.chart.text.TextAnchor.CENTER == orig(org.jfree.chart.text.TextAnchor.CENTER)
org.jfree.chart.text.TextAnchor.CENTER_RIGHT == orig(org.jfree.chart.text.TextAnchor.CENTER_RIGHT)
org.jfree.chart.text.TextAnchor.BASELINE_LEFT == orig(org.jfree.chart.text.TextAnchor.BASELINE_LEFT)
org.jfree.chart.text.TextAnchor.BASELINE_CENTER == orig(org.jfree.chart.text.TextAnchor.BASELINE_CENTER)
org.jfree.chart.text.TextAnchor.BASELINE_RIGHT == orig(org.jfree.chart.text.TextAnchor.BASELINE_RIGHT)
org.jfree.chart.text.TextAnchor.BOTTOM_LEFT == orig(org.jfree.chart.text.TextAnchor.BOTTOM_LEFT)
org.jfree.chart.text.TextAnchor.BOTTOM_CENTER == orig(org.jfree.chart.text.TextAnchor.BOTTOM_CENTER)
org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT == orig(org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT)
this.basePositiveItemLabelPosition.textAnchor.name == orig(this.basePositiveItemLabelPosition.textAnchor.name)
this.basePositiveItemLabelPosition.textAnchor.name.toString == orig(this.basePositiveItemLabelPosition.textAnchor.name.toString)
this.basePositiveItemLabelPosition.rotationAnchor == orig(this.basePositiveItemLabelPosition.rotationAnchor)
this.basePositiveItemLabelPosition.rotationAnchor.name == orig(this.basePositiveItemLabelPosition.rotationAnchor.name)
this.basePositiveItemLabelPosition.rotationAnchor.name.toString == orig(this.basePositiveItemLabelPosition.rotationAnchor.name.toString)
this.basePositiveItemLabelPosition.angle == orig(this.basePositiveItemLabelPosition.angle)
this.negativeItemLabelPositionList == orig(this.negativeItemLabelPositionList)
this.negativeItemLabelPositionList.objects == orig(this.negativeItemLabelPositionList.objects)
this.negativeItemLabelPositionList.objects[] == orig(this.negativeItemLabelPositionList.objects[])
this.negativeItemLabelPositionList.size == orig(this.negativeItemLabelPositionList.size)
this.negativeItemLabelPositionList.increment == orig(this.negativeItemLabelPositionList.increment)
this.baseNegativeItemLabelPosition == orig(this.baseNegativeItemLabelPosition)
this.baseNegativeItemLabelPosition.itemLabelAnchor == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor)
this.baseNegativeItemLabelPosition.itemLabelAnchor.name == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor.name)
this.baseNegativeItemLabelPosition.itemLabelAnchor.name.toString == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor.name.toString)
this.baseNegativeItemLabelPosition.textAnchor == orig(this.baseNegativeItemLabelPosition.textAnchor)
this.baseNegativeItemLabelPosition.textAnchor.name == orig(this.baseNegativeItemLabelPosition.textAnchor.name)
this.baseNegativeItemLabelPosition.textAnchor.name.toString == orig(this.baseNegativeItemLabelPosition.textAnchor.name.toString)
this.baseNegativeItemLabelPosition.rotationAnchor == orig(this.baseNegativeItemLabelPosition.rotationAnchor)
this.baseNegativeItemLabelPosition.rotationAnchor.name == orig(this.baseNegativeItemLabelPosition.rotationAnchor.name)
this.baseNegativeItemLabelPosition.rotationAnchor.name.toString == orig(this.baseNegativeItemLabelPosition.rotationAnchor.name.toString)
this.baseNegativeItemLabelPosition.angle == orig(this.baseNegativeItemLabelPosition.angle)
this.itemLabelAnchorOffset == orig(this.itemLabelAnchorOffset)
this.createEntitiesList == orig(this.createEntitiesList)
this.createEntitiesList.objects == orig(this.createEntitiesList.objects)
this.createEntitiesList.objects[] == orig(this.createEntitiesList.objects[])
this.createEntitiesList.size == orig(this.createEntitiesList.size)
this.createEntitiesList.increment == orig(this.createEntitiesList.increment)
this.baseCreateEntities == orig(this.baseCreateEntities)
this.legendShapeList == orig(this.legendShapeList)
this.legendShapeList.objects == orig(this.legendShapeList.objects)
this.legendShapeList.objects[] == orig(this.legendShapeList.objects[])
this.legendShapeList.size == orig(this.legendShapeList.size)
this.legendShapeList.increment == orig(this.legendShapeList.increment)
this.baseLegendShape == orig(this.baseLegendShape)
this.treatLegendShapeAsLine == orig(this.treatLegendShapeAsLine)
this.legendTextFont == orig(this.legendTextFont)
this.legendTextFont.objects == orig(this.legendTextFont.objects)
this.legendTextFont.objects[] == orig(this.legendTextFont.objects[])
this.legendTextFont.size == orig(this.legendTextFont.size)
this.legendTextFont.increment == orig(this.legendTextFont.increment)
this.baseLegendTextFont == orig(this.baseLegendTextFont)
this.legendTextPaint == orig(this.legendTextPaint)
this.legendTextPaint.objects == orig(this.legendTextPaint.objects)
this.legendTextPaint.objects[] == orig(this.legendTextPaint.objects[])
this.legendTextPaint.size == orig(this.legendTextPaint.size)
this.legendTextPaint.increment == orig(this.legendTextPaint.increment)
this.baseLegendTextPaint == orig(this.baseLegendTextPaint)
this.dataBoundsIncludesVisibleSeriesOnly == orig(this.dataBoundsIncludesVisibleSeriesOnly)
this.defaultEntityRadius == orig(this.defaultEntityRadius)
this.listenerList == orig(this.listenerList)
this.selectedItemAttributes == orig(this.selectedItemAttributes)
this.selectedItemAttributes.allowNull == orig(this.selectedItemAttributes.allowNull)
this.selectedItemAttributes.paintList == orig(this.selectedItemAttributes.paintList)
this.selectedItemAttributes.paintList.objects == orig(this.selectedItemAttributes.paintList.objects)
this.selectedItemAttributes.paintList.objects[] == orig(this.selectedItemAttributes.paintList.objects[])
this.selectedItemAttributes.paintList.size == orig(this.selectedItemAttributes.paintList.size)
this.selectedItemAttributes.paintList.increment == orig(this.selectedItemAttributes.paintList.increment)
this.selectedItemAttributes.defaultPaint == orig(this.selectedItemAttributes.defaultPaint)
this.selectedItemAttributes.strokeList == orig(this.selectedItemAttributes.strokeList)
this.selectedItemAttributes.strokeList.objects == orig(this.selectedItemAttributes.strokeList.objects)
this.selectedItemAttributes.strokeList.objects[] == orig(this.selectedItemAttributes.strokeList.objects[])
this.selectedItemAttributes.strokeList.size == orig(this.selectedItemAttributes.strokeList.size)
this.selectedItemAttributes.strokeList.increment == orig(this.selectedItemAttributes.strokeList.increment)
this.selectedItemAttributes.defaultStroke == orig(this.selectedItemAttributes.defaultStroke)
this.selectedItemAttributes.shapeList == orig(this.selectedItemAttributes.shapeList)
this.selectedItemAttributes.shapeList.objects == orig(this.selectedItemAttributes.shapeList.objects)
this.selectedItemAttributes.shapeList.objects[] == orig(this.selectedItemAttributes.shapeList.objects[])
this.selectedItemAttributes.shapeList.size == orig(this.selectedItemAttributes.shapeList.size)
this.selectedItemAttributes.shapeList.increment == orig(this.selectedItemAttributes.shapeList.increment)
this.selectedItemAttributes.defaultShape == orig(this.selectedItemAttributes.defaultShape)
this.selectedItemAttributes.fillPaintList == orig(this.selectedItemAttributes.fillPaintList)
this.selectedItemAttributes.fillPaintList.objects == orig(this.selectedItemAttributes.fillPaintList.objects)
this.selectedItemAttributes.fillPaintList.objects[] == orig(this.selectedItemAttributes.fillPaintList.objects[])
this.selectedItemAttributes.fillPaintList.size == orig(this.selectedItemAttributes.fillPaintList.size)
this.selectedItemAttributes.fillPaintList.increment == orig(this.selectedItemAttributes.fillPaintList.increment)
this.selectedItemAttributes.defaultFillPaint == orig(this.selectedItemAttributes.defaultFillPaint)
this.selectedItemAttributes.outlinePaintList == orig(this.selectedItemAttributes.outlinePaintList)
this.selectedItemAttributes.outlinePaintList.objects == orig(this.selectedItemAttributes.outlinePaintList.objects)
this.selectedItemAttributes.outlinePaintList.objects[] == orig(this.selectedItemAttributes.outlinePaintList.objects[])
this.selectedItemAttributes.outlinePaintList.size == orig(this.selectedItemAttributes.outlinePaintList.size)
this.selectedItemAttributes.outlinePaintList.increment == orig(this.selectedItemAttributes.outlinePaintList.increment)
this.selectedItemAttributes.defaultOutlinePaint == orig(this.selectedItemAttributes.defaultOutlinePaint)
this.selectedItemAttributes.outlineStrokeList == orig(this.selectedItemAttributes.outlineStrokeList)
this.selectedItemAttributes.defaultOutlineStroke == orig(this.selectedItemAttributes.defaultOutlineStroke)
this.selectedItemAttributes.labelsVisibleList == orig(this.selectedItemAttributes.labelsVisibleList)
this.selectedItemAttributes.defaultLabelVisible == orig(this.selectedItemAttributes.defaultLabelVisible)
this.selectedItemAttributes.labelFontList == orig(this.selectedItemAttributes.labelFontList)
this.selectedItemAttributes.defaultLabelFont == orig(this.selectedItemAttributes.defaultLabelFont)
this.selectedItemAttributes.labelPaintList == orig(this.selectedItemAttributes.labelPaintList)
this.selectedItemAttributes.defaultLabelPaint == orig(this.selectedItemAttributes.defaultLabelPaint)
this.selectedItemAttributes.positionItemLabelPositionList == orig(this.selectedItemAttributes.positionItemLabelPositionList)
this.selectedItemAttributes.defaultPositiveItemLabelPosition == orig(this.selectedItemAttributes.defaultPositiveItemLabelPosition)
this.selectedItemAttributes.negativeItemLabelPositionList == orig(this.selectedItemAttributes.negativeItemLabelPositionList)
this.selectedItemAttributes.defaultNegativeItemLabelPosition == orig(this.selectedItemAttributes.defaultNegativeItemLabelPosition)
this.selectedItemAttributes.createEntityList == orig(this.selectedItemAttributes.createEntityList)
this.selectedItemAttributes.defaultCreateEntity == orig(this.selectedItemAttributes.defaultCreateEntity)
org.jfree.chart.renderer.AbstractRenderer.ADJ == orig(org.jfree.chart.renderer.AbstractRenderer.ADJ)
org.jfree.chart.renderer.AbstractRenderer.OPP == orig(org.jfree.chart.renderer.AbstractRenderer.OPP)
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener == orig(org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener)
size(this.paintList.objects[]) == orig(size(this.paintList.objects[]))
this.paintList.objects[] has only one value, of length 8
this.paintList.objects[].getClass().getName() == [java.awt.Color, null, null, null, null, null, null, null]
this.paintList.size == 1
this.strokeList.objects[] contains only nulls and has only one value, of length 8
this.strokeList.objects[] elements == null
this.strokeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.strokeList.objects[].getClass().getName() elements == null
this.strokeList.size == 0
this.shapeList.objects[] has only one value, of length 8
this.shapeList.objects[].getClass().getName() == [java.awt.geom.Rectangle2D.Double, null, null, null, null, null, null, null]
this.shapeList.size == 1
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener has only one value
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() in this.paintList.objects[].getClass().getName()
===========================================================================
org.jfree.chart.renderer.AbstractRenderer.setSeriesShape(int, java.awt.Shape, boolean):::ENTER
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE.getClass().getName() == shape.getClass().getName()
this.paintList.objects[] contains only nulls and has only one value, of length 8
this.paintList.objects[] elements == null
this.paintList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.paintList.objects[].getClass().getName() elements == null
this.paintList.size == 0
this.strokeList.objects[] contains only nulls and has only one value, of length 8
this.strokeList.objects[] elements == null
this.strokeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.strokeList.objects[].getClass().getName() elements == null
this.strokeList.size == 0
this.shapeList.objects[] contains only nulls and has only one value, of length 8
this.shapeList.objects[] elements == null
this.shapeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.shapeList.objects[].getClass().getName() elements == null
this.shapeList.size == 0
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener has only one value
series == 0
shape has only one value
notify == false
===========================================================================
org.jfree.chart.renderer.AbstractRenderer.setSeriesShape(int, java.awt.Shape, boolean):::EXIT
org.jfree.chart.renderer.AbstractRenderer.ZERO == orig(org.jfree.chart.renderer.AbstractRenderer.ZERO)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(this.basePaint.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(this.baseFillPaint.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(this.baseOutlinePaint.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(this.baseItemLabelPaint.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(this.selectedItemAttributes.defaultFillPaint.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == orig(this.baseStroke.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == orig(this.baseOutlineStroke.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE.getClass().getName() == orig(this.baseShape.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE.getClass().getName() == orig(shape.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_FONT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_FONT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT)
this.seriesVisibleList == orig(this.seriesVisibleList)
this.seriesVisibleList.objects == orig(this.seriesVisibleList.objects)
this.seriesVisibleList.objects.getClass().getName() == orig(this.seriesVisibleList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.seriesVisibleInLegendList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.paintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.fillPaintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.outlinePaintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.strokeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.outlineStrokeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.shapeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.itemLabelsVisibleList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.itemLabelFontList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.itemLabelPaintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.positiveItemLabelPositionList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.negativeItemLabelPositionList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.createEntitiesList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.legendShapeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.legendTextFont.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.legendTextPaint.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.selectedItemAttributes.paintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.selectedItemAttributes.strokeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.selectedItemAttributes.shapeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.selectedItemAttributes.fillPaintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.selectedItemAttributes.outlinePaintList.objects.getClass().getName())
this.seriesVisibleList.objects[] == orig(this.seriesVisibleList.objects[])
this.seriesVisibleList.size == orig(this.seriesVisibleList.size)
this.seriesVisibleList.increment == orig(this.seriesVisibleList.increment)
this.baseSeriesVisible == orig(this.baseSeriesVisible)
this.seriesVisibleInLegendList == orig(this.seriesVisibleInLegendList)
this.seriesVisibleInLegendList.objects == orig(this.seriesVisibleInLegendList.objects)
this.seriesVisibleInLegendList.objects[] == orig(this.seriesVisibleInLegendList.objects[])
this.seriesVisibleInLegendList.size == orig(this.seriesVisibleInLegendList.size)
this.seriesVisibleInLegendList.increment == orig(this.seriesVisibleInLegendList.increment)
this.baseSeriesVisibleInLegend == orig(this.baseSeriesVisibleInLegend)
this.paintList == orig(this.paintList)
this.paintList.objects == orig(this.paintList.objects)
this.paintList.objects[] == orig(this.paintList.objects[])
this.paintList.size == orig(this.paintList.size)
this.paintList.increment == orig(this.paintList.increment)
this.autoPopulateSeriesPaint == orig(this.autoPopulateSeriesPaint)
this.basePaint == orig(this.basePaint)
this.fillPaintList == orig(this.fillPaintList)
this.fillPaintList.objects == orig(this.fillPaintList.objects)
this.fillPaintList.objects[] == orig(this.fillPaintList.objects[])
this.fillPaintList.size == orig(this.fillPaintList.size)
this.fillPaintList.increment == orig(this.fillPaintList.increment)
this.autoPopulateSeriesFillPaint == orig(this.autoPopulateSeriesFillPaint)
this.baseFillPaint == orig(this.baseFillPaint)
this.outlinePaintList == orig(this.outlinePaintList)
this.outlinePaintList.objects == orig(this.outlinePaintList.objects)
this.outlinePaintList.objects[] == orig(this.outlinePaintList.objects[])
this.outlinePaintList.size == orig(this.outlinePaintList.size)
this.outlinePaintList.increment == orig(this.outlinePaintList.increment)
this.autoPopulateSeriesOutlinePaint == orig(this.autoPopulateSeriesOutlinePaint)
this.baseOutlinePaint == orig(this.baseOutlinePaint)
this.strokeList == orig(this.strokeList)
this.strokeList.objects == orig(this.strokeList.objects)
this.strokeList.objects[] == orig(this.strokeList.objects[])
this.strokeList.size == orig(this.strokeList.size)
this.strokeList.increment == orig(this.strokeList.increment)
this.autoPopulateSeriesStroke == orig(this.autoPopulateSeriesStroke)
this.baseStroke == orig(this.baseStroke)
this.outlineStrokeList == orig(this.outlineStrokeList)
this.outlineStrokeList.objects == orig(this.outlineStrokeList.objects)
this.outlineStrokeList.objects[] == orig(this.outlineStrokeList.objects[])
this.outlineStrokeList.size == orig(this.outlineStrokeList.size)
this.outlineStrokeList.increment == orig(this.outlineStrokeList.increment)
this.baseOutlineStroke == orig(this.baseOutlineStroke)
this.autoPopulateSeriesOutlineStroke == orig(this.autoPopulateSeriesOutlineStroke)
this.shapeList == orig(this.shapeList)
this.shapeList.objects == orig(this.shapeList.objects)
this.shapeList.increment == orig(this.shapeList.increment)
this.autoPopulateSeriesShape == orig(this.autoPopulateSeriesShape)
this.baseShape == orig(this.baseShape)
this.itemLabelsVisibleList == orig(this.itemLabelsVisibleList)
this.itemLabelsVisibleList.objects == orig(this.itemLabelsVisibleList.objects)
this.itemLabelsVisibleList.objects[] == orig(this.itemLabelsVisibleList.objects[])
this.itemLabelsVisibleList.size == orig(this.itemLabelsVisibleList.size)
this.itemLabelsVisibleList.increment == orig(this.itemLabelsVisibleList.increment)
this.baseItemLabelsVisible == orig(this.baseItemLabelsVisible)
this.itemLabelFontList == orig(this.itemLabelFontList)
this.itemLabelFontList.objects == orig(this.itemLabelFontList.objects)
this.itemLabelFontList.objects[] == orig(this.itemLabelFontList.objects[])
this.itemLabelFontList.size == orig(this.itemLabelFontList.size)
this.itemLabelFontList.increment == orig(this.itemLabelFontList.increment)
this.baseItemLabelFont == orig(this.baseItemLabelFont)
this.itemLabelPaintList == orig(this.itemLabelPaintList)
this.itemLabelPaintList.objects == orig(this.itemLabelPaintList.objects)
this.itemLabelPaintList.objects[] == orig(this.itemLabelPaintList.objects[])
this.itemLabelPaintList.size == orig(this.itemLabelPaintList.size)
this.itemLabelPaintList.increment == orig(this.itemLabelPaintList.increment)
this.baseItemLabelPaint == orig(this.baseItemLabelPaint)
this.positiveItemLabelPositionList == orig(this.positiveItemLabelPositionList)
this.positiveItemLabelPositionList.objects == orig(this.positiveItemLabelPositionList.objects)
this.positiveItemLabelPositionList.objects[] == orig(this.positiveItemLabelPositionList.objects[])
this.positiveItemLabelPositionList.size == orig(this.positiveItemLabelPositionList.size)
this.positiveItemLabelPositionList.increment == orig(this.positiveItemLabelPositionList.increment)
this.basePositiveItemLabelPosition == orig(this.basePositiveItemLabelPosition)
this.basePositiveItemLabelPosition.itemLabelAnchor == orig(this.basePositiveItemLabelPosition.itemLabelAnchor)
org.jfree.chart.labels.ItemLabelAnchor.CENTER == orig(org.jfree.chart.labels.ItemLabelAnchor.CENTER)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE1 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE1)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE2 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE2)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE3 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE3)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE4 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE4)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE5 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE5)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE6 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE6)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE7 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE7)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE8 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE8)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE9 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE9)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE10 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE10)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE11 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE11)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE12 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE12)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12)
this.basePositiveItemLabelPosition.itemLabelAnchor.name == orig(this.basePositiveItemLabelPosition.itemLabelAnchor.name)
this.basePositiveItemLabelPosition.itemLabelAnchor.name.toString == orig(this.basePositiveItemLabelPosition.itemLabelAnchor.name.toString)
this.basePositiveItemLabelPosition.textAnchor == orig(this.basePositiveItemLabelPosition.textAnchor)
org.jfree.chart.text.TextAnchor.TOP_LEFT == orig(org.jfree.chart.text.TextAnchor.TOP_LEFT)
org.jfree.chart.text.TextAnchor.TOP_CENTER == orig(org.jfree.chart.text.TextAnchor.TOP_CENTER)
org.jfree.chart.text.TextAnchor.TOP_RIGHT == orig(org.jfree.chart.text.TextAnchor.TOP_RIGHT)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT)
org.jfree.chart.text.TextAnchor.CENTER_LEFT == orig(org.jfree.chart.text.TextAnchor.CENTER_LEFT)
org.jfree.chart.text.TextAnchor.CENTER == orig(org.jfree.chart.text.TextAnchor.CENTER)
org.jfree.chart.text.TextAnchor.CENTER_RIGHT == orig(org.jfree.chart.text.TextAnchor.CENTER_RIGHT)
org.jfree.chart.text.TextAnchor.BASELINE_LEFT == orig(org.jfree.chart.text.TextAnchor.BASELINE_LEFT)
org.jfree.chart.text.TextAnchor.BASELINE_CENTER == orig(org.jfree.chart.text.TextAnchor.BASELINE_CENTER)
org.jfree.chart.text.TextAnchor.BASELINE_RIGHT == orig(org.jfree.chart.text.TextAnchor.BASELINE_RIGHT)
org.jfree.chart.text.TextAnchor.BOTTOM_LEFT == orig(org.jfree.chart.text.TextAnchor.BOTTOM_LEFT)
org.jfree.chart.text.TextAnchor.BOTTOM_CENTER == orig(org.jfree.chart.text.TextAnchor.BOTTOM_CENTER)
org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT == orig(org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT)
this.basePositiveItemLabelPosition.textAnchor.name == orig(this.basePositiveItemLabelPosition.textAnchor.name)
this.basePositiveItemLabelPosition.textAnchor.name.toString == orig(this.basePositiveItemLabelPosition.textAnchor.name.toString)
this.basePositiveItemLabelPosition.rotationAnchor == orig(this.basePositiveItemLabelPosition.rotationAnchor)
this.basePositiveItemLabelPosition.rotationAnchor.name == orig(this.basePositiveItemLabelPosition.rotationAnchor.name)
this.basePositiveItemLabelPosition.rotationAnchor.name.toString == orig(this.basePositiveItemLabelPosition.rotationAnchor.name.toString)
this.basePositiveItemLabelPosition.angle == orig(this.basePositiveItemLabelPosition.angle)
this.negativeItemLabelPositionList == orig(this.negativeItemLabelPositionList)
this.negativeItemLabelPositionList.objects == orig(this.negativeItemLabelPositionList.objects)
this.negativeItemLabelPositionList.objects[] == orig(this.negativeItemLabelPositionList.objects[])
this.negativeItemLabelPositionList.size == orig(this.negativeItemLabelPositionList.size)
this.negativeItemLabelPositionList.increment == orig(this.negativeItemLabelPositionList.increment)
this.baseNegativeItemLabelPosition == orig(this.baseNegativeItemLabelPosition)
this.baseNegativeItemLabelPosition.itemLabelAnchor == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor)
this.baseNegativeItemLabelPosition.itemLabelAnchor.name == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor.name)
this.baseNegativeItemLabelPosition.itemLabelAnchor.name.toString == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor.name.toString)
this.baseNegativeItemLabelPosition.textAnchor == orig(this.baseNegativeItemLabelPosition.textAnchor)
this.baseNegativeItemLabelPosition.textAnchor.name == orig(this.baseNegativeItemLabelPosition.textAnchor.name)
this.baseNegativeItemLabelPosition.textAnchor.name.toString == orig(this.baseNegativeItemLabelPosition.textAnchor.name.toString)
this.baseNegativeItemLabelPosition.rotationAnchor == orig(this.baseNegativeItemLabelPosition.rotationAnchor)
this.baseNegativeItemLabelPosition.rotationAnchor.name == orig(this.baseNegativeItemLabelPosition.rotationAnchor.name)
this.baseNegativeItemLabelPosition.rotationAnchor.name.toString == orig(this.baseNegativeItemLabelPosition.rotationAnchor.name.toString)
this.baseNegativeItemLabelPosition.angle == orig(this.baseNegativeItemLabelPosition.angle)
this.itemLabelAnchorOffset == orig(this.itemLabelAnchorOffset)
this.createEntitiesList == orig(this.createEntitiesList)
this.createEntitiesList.objects == orig(this.createEntitiesList.objects)
this.createEntitiesList.objects[] == orig(this.createEntitiesList.objects[])
this.createEntitiesList.size == orig(this.createEntitiesList.size)
this.createEntitiesList.increment == orig(this.createEntitiesList.increment)
this.baseCreateEntities == orig(this.baseCreateEntities)
this.legendShapeList == orig(this.legendShapeList)
this.legendShapeList.objects == orig(this.legendShapeList.objects)
this.legendShapeList.objects[] == orig(this.legendShapeList.objects[])
this.legendShapeList.size == orig(this.legendShapeList.size)
this.legendShapeList.increment == orig(this.legendShapeList.increment)
this.baseLegendShape == orig(this.baseLegendShape)
this.treatLegendShapeAsLine == orig(this.treatLegendShapeAsLine)
this.legendTextFont == orig(this.legendTextFont)
this.legendTextFont.objects == orig(this.legendTextFont.objects)
this.legendTextFont.objects[] == orig(this.legendTextFont.objects[])
this.legendTextFont.size == orig(this.legendTextFont.size)
this.legendTextFont.increment == orig(this.legendTextFont.increment)
this.baseLegendTextFont == orig(this.baseLegendTextFont)
this.legendTextPaint == orig(this.legendTextPaint)
this.legendTextPaint.objects == orig(this.legendTextPaint.objects)
this.legendTextPaint.objects[] == orig(this.legendTextPaint.objects[])
this.legendTextPaint.size == orig(this.legendTextPaint.size)
this.legendTextPaint.increment == orig(this.legendTextPaint.increment)
this.baseLegendTextPaint == orig(this.baseLegendTextPaint)
this.dataBoundsIncludesVisibleSeriesOnly == orig(this.dataBoundsIncludesVisibleSeriesOnly)
this.defaultEntityRadius == orig(this.defaultEntityRadius)
this.listenerList == orig(this.listenerList)
this.selectedItemAttributes == orig(this.selectedItemAttributes)
this.selectedItemAttributes.allowNull == orig(this.selectedItemAttributes.allowNull)
this.selectedItemAttributes.paintList == orig(this.selectedItemAttributes.paintList)
this.selectedItemAttributes.paintList.objects == orig(this.selectedItemAttributes.paintList.objects)
this.selectedItemAttributes.paintList.objects[] == orig(this.selectedItemAttributes.paintList.objects[])
this.selectedItemAttributes.paintList.size == orig(this.selectedItemAttributes.paintList.size)
this.selectedItemAttributes.paintList.increment == orig(this.selectedItemAttributes.paintList.increment)
this.selectedItemAttributes.defaultPaint == orig(this.selectedItemAttributes.defaultPaint)
this.selectedItemAttributes.strokeList == orig(this.selectedItemAttributes.strokeList)
this.selectedItemAttributes.strokeList.objects == orig(this.selectedItemAttributes.strokeList.objects)
this.selectedItemAttributes.strokeList.objects[] == orig(this.selectedItemAttributes.strokeList.objects[])
this.selectedItemAttributes.strokeList.size == orig(this.selectedItemAttributes.strokeList.size)
this.selectedItemAttributes.strokeList.increment == orig(this.selectedItemAttributes.strokeList.increment)
this.selectedItemAttributes.defaultStroke == orig(this.selectedItemAttributes.defaultStroke)
this.selectedItemAttributes.shapeList == orig(this.selectedItemAttributes.shapeList)
this.selectedItemAttributes.shapeList.objects == orig(this.selectedItemAttributes.shapeList.objects)
this.selectedItemAttributes.shapeList.objects[] == orig(this.selectedItemAttributes.shapeList.objects[])
this.selectedItemAttributes.shapeList.size == orig(this.selectedItemAttributes.shapeList.size)
this.selectedItemAttributes.shapeList.increment == orig(this.selectedItemAttributes.shapeList.increment)
this.selectedItemAttributes.defaultShape == orig(this.selectedItemAttributes.defaultShape)
this.selectedItemAttributes.fillPaintList == orig(this.selectedItemAttributes.fillPaintList)
this.selectedItemAttributes.fillPaintList.objects == orig(this.selectedItemAttributes.fillPaintList.objects)
this.selectedItemAttributes.fillPaintList.objects[] == orig(this.selectedItemAttributes.fillPaintList.objects[])
this.selectedItemAttributes.fillPaintList.size == orig(this.selectedItemAttributes.fillPaintList.size)
this.selectedItemAttributes.fillPaintList.increment == orig(this.selectedItemAttributes.fillPaintList.increment)
this.selectedItemAttributes.defaultFillPaint == orig(this.selectedItemAttributes.defaultFillPaint)
this.selectedItemAttributes.outlinePaintList == orig(this.selectedItemAttributes.outlinePaintList)
this.selectedItemAttributes.outlinePaintList.objects == orig(this.selectedItemAttributes.outlinePaintList.objects)
this.selectedItemAttributes.outlinePaintList.objects[] == orig(this.selectedItemAttributes.outlinePaintList.objects[])
this.selectedItemAttributes.outlinePaintList.size == orig(this.selectedItemAttributes.outlinePaintList.size)
this.selectedItemAttributes.outlinePaintList.increment == orig(this.selectedItemAttributes.outlinePaintList.increment)
this.selectedItemAttributes.defaultOutlinePaint == orig(this.selectedItemAttributes.defaultOutlinePaint)
this.selectedItemAttributes.outlineStrokeList == orig(this.selectedItemAttributes.outlineStrokeList)
this.selectedItemAttributes.defaultOutlineStroke == orig(this.selectedItemAttributes.defaultOutlineStroke)
this.selectedItemAttributes.labelsVisibleList == orig(this.selectedItemAttributes.labelsVisibleList)
this.selectedItemAttributes.defaultLabelVisible == orig(this.selectedItemAttributes.defaultLabelVisible)
this.selectedItemAttributes.labelFontList == orig(this.selectedItemAttributes.labelFontList)
this.selectedItemAttributes.defaultLabelFont == orig(this.selectedItemAttributes.defaultLabelFont)
this.selectedItemAttributes.labelPaintList == orig(this.selectedItemAttributes.labelPaintList)
this.selectedItemAttributes.defaultLabelPaint == orig(this.selectedItemAttributes.defaultLabelPaint)
this.selectedItemAttributes.positionItemLabelPositionList == orig(this.selectedItemAttributes.positionItemLabelPositionList)
this.selectedItemAttributes.defaultPositiveItemLabelPosition == orig(this.selectedItemAttributes.defaultPositiveItemLabelPosition)
this.selectedItemAttributes.negativeItemLabelPositionList == orig(this.selectedItemAttributes.negativeItemLabelPositionList)
this.selectedItemAttributes.defaultNegativeItemLabelPosition == orig(this.selectedItemAttributes.defaultNegativeItemLabelPosition)
this.selectedItemAttributes.createEntityList == orig(this.selectedItemAttributes.createEntityList)
this.selectedItemAttributes.defaultCreateEntity == orig(this.selectedItemAttributes.defaultCreateEntity)
org.jfree.chart.renderer.AbstractRenderer.ADJ == orig(org.jfree.chart.renderer.AbstractRenderer.ADJ)
org.jfree.chart.renderer.AbstractRenderer.OPP == orig(org.jfree.chart.renderer.AbstractRenderer.OPP)
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener == orig(org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener)
size(this.shapeList.objects[]) == orig(size(this.shapeList.objects[]))
this.paintList.objects[] contains only nulls and has only one value, of length 8
this.paintList.objects[] elements == null
this.paintList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.paintList.objects[].getClass().getName() elements == null
this.paintList.size == 0
this.strokeList.objects[] contains only nulls and has only one value, of length 8
this.strokeList.objects[] elements == null
this.strokeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.strokeList.objects[].getClass().getName() elements == null
this.strokeList.size == 0
this.shapeList.objects[] has only one value, of length 8
this.shapeList.objects[].getClass().getName() == [java.awt.geom.Rectangle2D.Double, null, null, null, null, null, null, null]
this.shapeList.size == 1
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener has only one value
===========================================================================
org.jfree.chart.renderer.AbstractRenderer.setSeriesStroke(int, java.awt.Stroke, boolean):::ENTER
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == stroke.getClass().getName()
this.paintList.objects[] has only one value, of length 8
this.paintList.objects[].getClass().getName() == [java.awt.Color, null, null, null, null, null, null, null]
this.paintList.size == 1
this.strokeList.objects[] contains only nulls and has only one value, of length 8
this.strokeList.objects[] elements == null
this.strokeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.strokeList.objects[].getClass().getName() elements == null
this.strokeList.size == 0
this.shapeList.objects[] has only one value, of length 8
this.shapeList.objects[].getClass().getName() == [java.awt.geom.Rectangle2D.Double, null, null, null, null, null, null, null]
this.shapeList.size == 1
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener has only one value
series == 0
stroke has only one value
notify == false
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() in this.paintList.objects[].getClass().getName()
===========================================================================
org.jfree.chart.renderer.AbstractRenderer.setSeriesStroke(int, java.awt.Stroke, boolean):::EXIT
org.jfree.chart.renderer.AbstractRenderer.ZERO == orig(org.jfree.chart.renderer.AbstractRenderer.ZERO)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(this.basePaint.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(this.baseFillPaint.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(this.baseOutlinePaint.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(this.baseItemLabelPaint.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(this.selectedItemAttributes.defaultFillPaint.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == orig(this.baseStroke.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == orig(this.baseOutlineStroke.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == orig(stroke.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE.getClass().getName() == orig(this.baseShape.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_FONT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_FONT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT)
this.seriesVisibleList == orig(this.seriesVisibleList)
this.seriesVisibleList.objects == orig(this.seriesVisibleList.objects)
this.seriesVisibleList.objects.getClass().getName() == orig(this.seriesVisibleList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.seriesVisibleInLegendList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.paintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.fillPaintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.outlinePaintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.strokeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.outlineStrokeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.shapeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.itemLabelsVisibleList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.itemLabelFontList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.itemLabelPaintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.positiveItemLabelPositionList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.negativeItemLabelPositionList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.createEntitiesList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.legendShapeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.legendTextFont.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.legendTextPaint.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.selectedItemAttributes.paintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.selectedItemAttributes.strokeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.selectedItemAttributes.shapeList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.selectedItemAttributes.fillPaintList.objects.getClass().getName())
this.seriesVisibleList.objects.getClass().getName() == orig(this.selectedItemAttributes.outlinePaintList.objects.getClass().getName())
this.seriesVisibleList.objects[] == orig(this.seriesVisibleList.objects[])
this.seriesVisibleList.size == orig(this.seriesVisibleList.size)
this.seriesVisibleList.increment == orig(this.seriesVisibleList.increment)
this.baseSeriesVisible == orig(this.baseSeriesVisible)
this.seriesVisibleInLegendList == orig(this.seriesVisibleInLegendList)
this.seriesVisibleInLegendList.objects == orig(this.seriesVisibleInLegendList.objects)
this.seriesVisibleInLegendList.objects[] == orig(this.seriesVisibleInLegendList.objects[])
this.seriesVisibleInLegendList.size == orig(this.seriesVisibleInLegendList.size)
this.seriesVisibleInLegendList.increment == orig(this.seriesVisibleInLegendList.increment)
this.baseSeriesVisibleInLegend == orig(this.baseSeriesVisibleInLegend)
this.paintList == orig(this.paintList)
this.paintList.objects == orig(this.paintList.objects)
this.paintList.objects[] == orig(this.paintList.objects[])
this.paintList.size == orig(this.paintList.size)
this.paintList.increment == orig(this.paintList.increment)
this.autoPopulateSeriesPaint == orig(this.autoPopulateSeriesPaint)
this.basePaint == orig(this.basePaint)
this.fillPaintList == orig(this.fillPaintList)
this.fillPaintList.objects == orig(this.fillPaintList.objects)
this.fillPaintList.objects[] == orig(this.fillPaintList.objects[])
this.fillPaintList.size == orig(this.fillPaintList.size)
this.fillPaintList.increment == orig(this.fillPaintList.increment)
this.autoPopulateSeriesFillPaint == orig(this.autoPopulateSeriesFillPaint)
this.baseFillPaint == orig(this.baseFillPaint)
this.outlinePaintList == orig(this.outlinePaintList)
this.outlinePaintList.objects == orig(this.outlinePaintList.objects)
this.outlinePaintList.objects[] == orig(this.outlinePaintList.objects[])
this.outlinePaintList.size == orig(this.outlinePaintList.size)
this.outlinePaintList.increment == orig(this.outlinePaintList.increment)
this.autoPopulateSeriesOutlinePaint == orig(this.autoPopulateSeriesOutlinePaint)
this.baseOutlinePaint == orig(this.baseOutlinePaint)
this.strokeList == orig(this.strokeList)
this.strokeList.objects == orig(this.strokeList.objects)
this.strokeList.increment == orig(this.strokeList.increment)
this.autoPopulateSeriesStroke == orig(this.autoPopulateSeriesStroke)
this.baseStroke == orig(this.baseStroke)
this.outlineStrokeList == orig(this.outlineStrokeList)
this.outlineStrokeList.objects == orig(this.outlineStrokeList.objects)
this.outlineStrokeList.objects[] == orig(this.outlineStrokeList.objects[])
this.outlineStrokeList.size == orig(this.outlineStrokeList.size)
this.outlineStrokeList.increment == orig(this.outlineStrokeList.increment)
this.baseOutlineStroke == orig(this.baseOutlineStroke)
this.autoPopulateSeriesOutlineStroke == orig(this.autoPopulateSeriesOutlineStroke)
this.shapeList == orig(this.shapeList)
this.shapeList.objects == orig(this.shapeList.objects)
this.shapeList.objects[] == orig(this.shapeList.objects[])
this.shapeList.size == orig(this.shapeList.size)
this.shapeList.increment == orig(this.shapeList.increment)
this.autoPopulateSeriesShape == orig(this.autoPopulateSeriesShape)
this.baseShape == orig(this.baseShape)
this.itemLabelsVisibleList == orig(this.itemLabelsVisibleList)
this.itemLabelsVisibleList.objects == orig(this.itemLabelsVisibleList.objects)
this.itemLabelsVisibleList.objects[] == orig(this.itemLabelsVisibleList.objects[])
this.itemLabelsVisibleList.size == orig(this.itemLabelsVisibleList.size)
this.itemLabelsVisibleList.increment == orig(this.itemLabelsVisibleList.increment)
this.baseItemLabelsVisible == orig(this.baseItemLabelsVisible)
this.itemLabelFontList == orig(this.itemLabelFontList)
this.itemLabelFontList.objects == orig(this.itemLabelFontList.objects)
this.itemLabelFontList.objects[] == orig(this.itemLabelFontList.objects[])
this.itemLabelFontList.size == orig(this.itemLabelFontList.size)
this.itemLabelFontList.increment == orig(this.itemLabelFontList.increment)
this.baseItemLabelFont == orig(this.baseItemLabelFont)
this.itemLabelPaintList == orig(this.itemLabelPaintList)
this.itemLabelPaintList.objects == orig(this.itemLabelPaintList.objects)
this.itemLabelPaintList.objects[] == orig(this.itemLabelPaintList.objects[])
this.itemLabelPaintList.size == orig(this.itemLabelPaintList.size)
this.itemLabelPaintList.increment == orig(this.itemLabelPaintList.increment)
this.baseItemLabelPaint == orig(this.baseItemLabelPaint)
this.positiveItemLabelPositionList == orig(this.positiveItemLabelPositionList)
this.positiveItemLabelPositionList.objects == orig(this.positiveItemLabelPositionList.objects)
this.positiveItemLabelPositionList.objects[] == orig(this.positiveItemLabelPositionList.objects[])
this.positiveItemLabelPositionList.size == orig(this.positiveItemLabelPositionList.size)
this.positiveItemLabelPositionList.increment == orig(this.positiveItemLabelPositionList.increment)
this.basePositiveItemLabelPosition == orig(this.basePositiveItemLabelPosition)
this.basePositiveItemLabelPosition.itemLabelAnchor == orig(this.basePositiveItemLabelPosition.itemLabelAnchor)
org.jfree.chart.labels.ItemLabelAnchor.CENTER == orig(org.jfree.chart.labels.ItemLabelAnchor.CENTER)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE1 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE1)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE2 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE2)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE3 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE3)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE4 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE4)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE5 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE5)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE6 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE6)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE7 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE7)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE8 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE8)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE9 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE9)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE10 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE10)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE11 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE11)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE12 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE12)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12)
this.basePositiveItemLabelPosition.itemLabelAnchor.name == orig(this.basePositiveItemLabelPosition.itemLabelAnchor.name)
this.basePositiveItemLabelPosition.itemLabelAnchor.name.toString == orig(this.basePositiveItemLabelPosition.itemLabelAnchor.name.toString)
this.basePositiveItemLabelPosition.textAnchor == orig(this.basePositiveItemLabelPosition.textAnchor)
org.jfree.chart.text.TextAnchor.TOP_LEFT == orig(org.jfree.chart.text.TextAnchor.TOP_LEFT)
org.jfree.chart.text.TextAnchor.TOP_CENTER == orig(org.jfree.chart.text.TextAnchor.TOP_CENTER)
org.jfree.chart.text.TextAnchor.TOP_RIGHT == orig(org.jfree.chart.text.TextAnchor.TOP_RIGHT)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT)
org.jfree.chart.text.TextAnchor.CENTER_LEFT == orig(org.jfree.chart.text.TextAnchor.CENTER_LEFT)
org.jfree.chart.text.TextAnchor.CENTER == orig(org.jfree.chart.text.TextAnchor.CENTER)
org.jfree.chart.text.TextAnchor.CENTER_RIGHT == orig(org.jfree.chart.text.TextAnchor.CENTER_RIGHT)
org.jfree.chart.text.TextAnchor.BASELINE_LEFT == orig(org.jfree.chart.text.TextAnchor.BASELINE_LEFT)
org.jfree.chart.text.TextAnchor.BASELINE_CENTER == orig(org.jfree.chart.text.TextAnchor.BASELINE_CENTER)
org.jfree.chart.text.TextAnchor.BASELINE_RIGHT == orig(org.jfree.chart.text.TextAnchor.BASELINE_RIGHT)
org.jfree.chart.text.TextAnchor.BOTTOM_LEFT == orig(org.jfree.chart.text.TextAnchor.BOTTOM_LEFT)
org.jfree.chart.text.TextAnchor.BOTTOM_CENTER == orig(org.jfree.chart.text.TextAnchor.BOTTOM_CENTER)
org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT == orig(org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT)
this.basePositiveItemLabelPosition.textAnchor.name == orig(this.basePositiveItemLabelPosition.textAnchor.name)
this.basePositiveItemLabelPosition.textAnchor.name.toString == orig(this.basePositiveItemLabelPosition.textAnchor.name.toString)
this.basePositiveItemLabelPosition.rotationAnchor == orig(this.basePositiveItemLabelPosition.rotationAnchor)
this.basePositiveItemLabelPosition.rotationAnchor.name == orig(this.basePositiveItemLabelPosition.rotationAnchor.name)
this.basePositiveItemLabelPosition.rotationAnchor.name.toString == orig(this.basePositiveItemLabelPosition.rotationAnchor.name.toString)
this.basePositiveItemLabelPosition.angle == orig(this.basePositiveItemLabelPosition.angle)
this.negativeItemLabelPositionList == orig(this.negativeItemLabelPositionList)
this.negativeItemLabelPositionList.objects == orig(this.negativeItemLabelPositionList.objects)
this.negativeItemLabelPositionList.objects[] == orig(this.negativeItemLabelPositionList.objects[])
this.negativeItemLabelPositionList.size == orig(this.negativeItemLabelPositionList.size)
this.negativeItemLabelPositionList.increment == orig(this.negativeItemLabelPositionList.increment)
this.baseNegativeItemLabelPosition == orig(this.baseNegativeItemLabelPosition)
this.baseNegativeItemLabelPosition.itemLabelAnchor == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor)
this.baseNegativeItemLabelPosition.itemLabelAnchor.name == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor.name)
this.baseNegativeItemLabelPosition.itemLabelAnchor.name.toString == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor.name.toString)
this.baseNegativeItemLabelPosition.textAnchor == orig(this.baseNegativeItemLabelPosition.textAnchor)
this.baseNegativeItemLabelPosition.textAnchor.name == orig(this.baseNegativeItemLabelPosition.textAnchor.name)
this.baseNegativeItemLabelPosition.textAnchor.name.toString == orig(this.baseNegativeItemLabelPosition.textAnchor.name.toString)
this.baseNegativeItemLabelPosition.rotationAnchor == orig(this.baseNegativeItemLabelPosition.rotationAnchor)
this.baseNegativeItemLabelPosition.rotationAnchor.name == orig(this.baseNegativeItemLabelPosition.rotationAnchor.name)
this.baseNegativeItemLabelPosition.rotationAnchor.name.toString == orig(this.baseNegativeItemLabelPosition.rotationAnchor.name.toString)
this.baseNegativeItemLabelPosition.angle == orig(this.baseNegativeItemLabelPosition.angle)
this.itemLabelAnchorOffset == orig(this.itemLabelAnchorOffset)
this.createEntitiesList == orig(this.createEntitiesList)
this.createEntitiesList.objects == orig(this.createEntitiesList.objects)
this.createEntitiesList.objects[] == orig(this.createEntitiesList.objects[])
this.createEntitiesList.size == orig(this.createEntitiesList.size)
this.createEntitiesList.increment == orig(this.createEntitiesList.increment)
this.baseCreateEntities == orig(this.baseCreateEntities)
this.legendShapeList == orig(this.legendShapeList)
this.legendShapeList.objects == orig(this.legendShapeList.objects)
this.legendShapeList.objects[] == orig(this.legendShapeList.objects[])
this.legendShapeList.size == orig(this.legendShapeList.size)
this.legendShapeList.increment == orig(this.legendShapeList.increment)
this.baseLegendShape == orig(this.baseLegendShape)
this.treatLegendShapeAsLine == orig(this.treatLegendShapeAsLine)
this.legendTextFont == orig(this.legendTextFont)
this.legendTextFont.objects == orig(this.legendTextFont.objects)
this.legendTextFont.objects[] == orig(this.legendTextFont.objects[])
this.legendTextFont.size == orig(this.legendTextFont.size)
this.legendTextFont.increment == orig(this.legendTextFont.increment)
this.baseLegendTextFont == orig(this.baseLegendTextFont)
this.legendTextPaint == orig(this.legendTextPaint)
this.legendTextPaint.objects == orig(this.legendTextPaint.objects)
this.legendTextPaint.objects[] == orig(this.legendTextPaint.objects[])
this.legendTextPaint.size == orig(this.legendTextPaint.size)
this.legendTextPaint.increment == orig(this.legendTextPaint.increment)
this.baseLegendTextPaint == orig(this.baseLegendTextPaint)
this.dataBoundsIncludesVisibleSeriesOnly == orig(this.dataBoundsIncludesVisibleSeriesOnly)
this.defaultEntityRadius == orig(this.defaultEntityRadius)
this.listenerList == orig(this.listenerList)
this.selectedItemAttributes == orig(this.selectedItemAttributes)
this.selectedItemAttributes.allowNull == orig(this.selectedItemAttributes.allowNull)
this.selectedItemAttributes.paintList == orig(this.selectedItemAttributes.paintList)
this.selectedItemAttributes.paintList.objects == orig(this.selectedItemAttributes.paintList.objects)
this.selectedItemAttributes.paintList.objects[] == orig(this.selectedItemAttributes.paintList.objects[])
this.selectedItemAttributes.paintList.size == orig(this.selectedItemAttributes.paintList.size)
this.selectedItemAttributes.paintList.increment == orig(this.selectedItemAttributes.paintList.increment)
this.selectedItemAttributes.defaultPaint == orig(this.selectedItemAttributes.defaultPaint)
this.selectedItemAttributes.strokeList == orig(this.selectedItemAttributes.strokeList)
this.selectedItemAttributes.strokeList.objects == orig(this.selectedItemAttributes.strokeList.objects)
this.selectedItemAttributes.strokeList.objects[] == orig(this.selectedItemAttributes.strokeList.objects[])
this.selectedItemAttributes.strokeList.size == orig(this.selectedItemAttributes.strokeList.size)
this.selectedItemAttributes.strokeList.increment == orig(this.selectedItemAttributes.strokeList.increment)
this.selectedItemAttributes.defaultStroke == orig(this.selectedItemAttributes.defaultStroke)
this.selectedItemAttributes.shapeList == orig(this.selectedItemAttributes.shapeList)
this.selectedItemAttributes.shapeList.objects == orig(this.selectedItemAttributes.shapeList.objects)
this.selectedItemAttributes.shapeList.objects[] == orig(this.selectedItemAttributes.shapeList.objects[])
this.selectedItemAttributes.shapeList.size == orig(this.selectedItemAttributes.shapeList.size)
this.selectedItemAttributes.shapeList.increment == orig(this.selectedItemAttributes.shapeList.increment)
this.selectedItemAttributes.defaultShape == orig(this.selectedItemAttributes.defaultShape)
this.selectedItemAttributes.fillPaintList == orig(this.selectedItemAttributes.fillPaintList)
this.selectedItemAttributes.fillPaintList.objects == orig(this.selectedItemAttributes.fillPaintList.objects)
this.selectedItemAttributes.fillPaintList.objects[] == orig(this.selectedItemAttributes.fillPaintList.objects[])
this.selectedItemAttributes.fillPaintList.size == orig(this.selectedItemAttributes.fillPaintList.size)
this.selectedItemAttributes.fillPaintList.increment == orig(this.selectedItemAttributes.fillPaintList.increment)
this.selectedItemAttributes.defaultFillPaint == orig(this.selectedItemAttributes.defaultFillPaint)
this.selectedItemAttributes.outlinePaintList == orig(this.selectedItemAttributes.outlinePaintList)
this.selectedItemAttributes.outlinePaintList.objects == orig(this.selectedItemAttributes.outlinePaintList.objects)
this.selectedItemAttributes.outlinePaintList.objects[] == orig(this.selectedItemAttributes.outlinePaintList.objects[])
this.selectedItemAttributes.outlinePaintList.size == orig(this.selectedItemAttributes.outlinePaintList.size)
this.selectedItemAttributes.outlinePaintList.increment == orig(this.selectedItemAttributes.outlinePaintList.increment)
this.selectedItemAttributes.defaultOutlinePaint == orig(this.selectedItemAttributes.defaultOutlinePaint)
this.selectedItemAttributes.outlineStrokeList == orig(this.selectedItemAttributes.outlineStrokeList)
this.selectedItemAttributes.defaultOutlineStroke == orig(this.selectedItemAttributes.defaultOutlineStroke)
this.selectedItemAttributes.labelsVisibleList == orig(this.selectedItemAttributes.labelsVisibleList)
this.selectedItemAttributes.defaultLabelVisible == orig(this.selectedItemAttributes.defaultLabelVisible)
this.selectedItemAttributes.labelFontList == orig(this.selectedItemAttributes.labelFontList)
this.selectedItemAttributes.defaultLabelFont == orig(this.selectedItemAttributes.defaultLabelFont)
this.selectedItemAttributes.labelPaintList == orig(this.selectedItemAttributes.labelPaintList)
this.selectedItemAttributes.defaultLabelPaint == orig(this.selectedItemAttributes.defaultLabelPaint)
this.selectedItemAttributes.positionItemLabelPositionList == orig(this.selectedItemAttributes.positionItemLabelPositionList)
this.selectedItemAttributes.defaultPositiveItemLabelPosition == orig(this.selectedItemAttributes.defaultPositiveItemLabelPosition)
this.selectedItemAttributes.negativeItemLabelPositionList == orig(this.selectedItemAttributes.negativeItemLabelPositionList)
this.selectedItemAttributes.defaultNegativeItemLabelPosition == orig(this.selectedItemAttributes.defaultNegativeItemLabelPosition)
this.selectedItemAttributes.createEntityList == orig(this.selectedItemAttributes.createEntityList)
this.selectedItemAttributes.defaultCreateEntity == orig(this.selectedItemAttributes.defaultCreateEntity)
org.jfree.chart.renderer.AbstractRenderer.ADJ == orig(org.jfree.chart.renderer.AbstractRenderer.ADJ)
org.jfree.chart.renderer.AbstractRenderer.OPP == orig(org.jfree.chart.renderer.AbstractRenderer.OPP)
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener == orig(org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener)
size(this.strokeList.objects[]) == orig(size(this.strokeList.objects[]))
this.paintList.objects[] has only one value, of length 8
this.paintList.objects[].getClass().getName() == [java.awt.Color, null, null, null, null, null, null, null]
this.paintList.size == 1
this.strokeList.objects[] has only one value, of length 8
this.strokeList.objects[].getClass().getName() == [java.awt.BasicStroke, null, null, null, null, null, null, null]
this.strokeList.size == 1
this.shapeList.objects[] has only one value, of length 8
this.shapeList.objects[].getClass().getName() == [java.awt.geom.Rectangle2D.Double, null, null, null, null, null, null, null]
this.shapeList.size == 1
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener has only one value
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() in this.paintList.objects[].getClass().getName()
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() in this.strokeList.objects[].getClass().getName()
===========================================================================
org.jfree.chart.renderer.RenderAttributes:::OBJECT
this has only one value
this.allowNull == false
this.paintList has only one value
this.paintList.objects has only one value
this.paintList.objects.getClass().getName() == java.lang.Object[].class
this.paintList.objects[] contains only nulls and has only one value, of length 8
this.paintList.objects[] elements == null
this.paintList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.paintList.objects[].getClass().getName() elements == null
this.paintList.size == 0
this.paintList.increment == 8
this.defaultPaint == null
this.strokeList has only one value
this.strokeList.objects has only one value
this.strokeList.objects.getClass().getName() == java.lang.Object[].class
this.strokeList.objects[] contains only nulls and has only one value, of length 8
this.strokeList.objects[] elements == null
this.strokeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.strokeList.objects[].getClass().getName() elements == null
this.strokeList.size == 0
this.strokeList.increment == 8
this.defaultStroke == null
this.shapeList has only one value
this.shapeList.objects has only one value
this.shapeList.objects.getClass().getName() == java.lang.Object[].class
this.shapeList.objects[] contains only nulls and has only one value, of length 8
this.shapeList.objects[] elements == null
this.shapeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.shapeList.objects[].getClass().getName() elements == null
this.shapeList.size == 0
this.shapeList.increment == 8
this.defaultShape == null
this.fillPaintList has only one value
this.fillPaintList.objects has only one value
this.fillPaintList.objects.getClass().getName() == java.lang.Object[].class
this.fillPaintList.objects[] contains only nulls and has only one value, of length 8
this.fillPaintList.objects[] elements == null
this.fillPaintList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.fillPaintList.objects[].getClass().getName() elements == null
this.fillPaintList.size == 0
this.fillPaintList.increment == 8
this.defaultFillPaint.getClass().getName() == java.awt.Color.class
this.outlinePaintList has only one value
this.outlinePaintList.objects has only one value
this.outlinePaintList.objects.getClass().getName() == java.lang.Object[].class
this.outlinePaintList.objects[] contains only nulls and has only one value, of length 8
this.outlinePaintList.objects[] elements == null
this.outlinePaintList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.outlinePaintList.objects[].getClass().getName() elements == null
this.outlinePaintList.size == 0
this.outlinePaintList.increment == 8
this.defaultOutlinePaint == null
this.outlineStrokeList == null
this.defaultOutlineStroke == null
this.labelsVisibleList == null
this.defaultLabelVisible == null
this.labelFontList == null
this.defaultLabelFont == null
this.labelPaintList == null
this.defaultLabelPaint == null
this.positionItemLabelPositionList == null
this.defaultPositiveItemLabelPosition == null
org.jfree.chart.labels.ItemLabelAnchor.CENTER has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE1 has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE2 has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE3 has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE4 has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE5 has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE6 has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE7 has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE8 has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE9 has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE10 has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE11 has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE12 has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1 has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2 has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3 has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4 has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5 has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6 has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7 has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8 has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9 has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10 has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11 has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12 has only one value
org.jfree.chart.text.TextAnchor.TOP_LEFT has only one value
org.jfree.chart.text.TextAnchor.TOP_CENTER has only one value
org.jfree.chart.text.TextAnchor.TOP_RIGHT has only one value
org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT has only one value
org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER has only one value
org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT has only one value
org.jfree.chart.text.TextAnchor.CENTER_LEFT has only one value
org.jfree.chart.text.TextAnchor.CENTER has only one value
org.jfree.chart.text.TextAnchor.CENTER_RIGHT has only one value
org.jfree.chart.text.TextAnchor.BASELINE_LEFT has only one value
org.jfree.chart.text.TextAnchor.BASELINE_CENTER has only one value
org.jfree.chart.text.TextAnchor.BASELINE_RIGHT has only one value
org.jfree.chart.text.TextAnchor.BOTTOM_LEFT has only one value
org.jfree.chart.text.TextAnchor.BOTTOM_CENTER has only one value
org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT has only one value
this.negativeItemLabelPositionList == null
this.defaultNegativeItemLabelPosition == null
this.createEntityList == null
this.defaultCreateEntity == null
size(this.paintList.objects[]) == 8
size(this.strokeList.objects[]) == 8
size(this.shapeList.objects[]) == 8
size(this.fillPaintList.objects[]) == 8
size(this.outlinePaintList.objects[]) == 8
===========================================================================
org.jfree.chart.renderer.RenderAttributes.RenderAttributes():::EXIT
this.defaultFillPaint == null
===========================================================================
org.jfree.chart.renderer.RenderAttributes.RenderAttributes(boolean):::ENTER
allowNull == true
===========================================================================
org.jfree.chart.renderer.RenderAttributes.RenderAttributes(boolean):::EXIT
this.defaultFillPaint == null
===========================================================================
org.jfree.chart.renderer.RenderAttributes.setDefaultFillPaint(java.awt.Paint):::ENTER
this.defaultFillPaint == null
paint has only one value
paint.getClass().getName() == java.awt.Color.class
===========================================================================
org.jfree.chart.renderer.RenderAttributes.setDefaultFillPaint(java.awt.Paint):::EXIT
this.allowNull == orig(this.allowNull)
this.paintList == orig(this.paintList)
this.paintList.objects == orig(this.paintList.objects)
this.paintList.objects.getClass().getName() == orig(this.paintList.objects.getClass().getName())
this.paintList.objects[] == orig(this.paintList.objects[])
this.paintList.size == orig(this.paintList.size)
this.paintList.increment == orig(this.paintList.increment)
this.defaultPaint == orig(this.defaultPaint)
this.strokeList == orig(this.strokeList)
this.strokeList.objects == orig(this.strokeList.objects)
this.strokeList.objects.getClass().getName() == orig(this.strokeList.objects.getClass().getName())
this.strokeList.objects[] == orig(this.strokeList.objects[])
this.strokeList.size == orig(this.strokeList.size)
this.strokeList.increment == orig(this.strokeList.increment)
this.defaultStroke == orig(this.defaultStroke)
this.shapeList == orig(this.shapeList)
this.shapeList.objects == orig(this.shapeList.objects)
this.shapeList.objects.getClass().getName() == orig(this.shapeList.objects.getClass().getName())
this.shapeList.objects[] == orig(this.shapeList.objects[])
this.shapeList.size == orig(this.shapeList.size)
this.shapeList.increment == orig(this.shapeList.increment)
this.defaultShape == orig(this.defaultShape)
this.fillPaintList == orig(this.fillPaintList)
this.fillPaintList.objects == orig(this.fillPaintList.objects)
this.fillPaintList.objects.getClass().getName() == orig(this.fillPaintList.objects.getClass().getName())
this.fillPaintList.objects[] == orig(this.fillPaintList.objects[])
this.fillPaintList.size == orig(this.fillPaintList.size)
this.fillPaintList.increment == orig(this.fillPaintList.increment)
this.outlinePaintList == orig(this.outlinePaintList)
this.outlinePaintList.objects == orig(this.outlinePaintList.objects)
this.outlinePaintList.objects.getClass().getName() == orig(this.outlinePaintList.objects.getClass().getName())
this.outlinePaintList.objects[] == orig(this.outlinePaintList.objects[])
this.outlinePaintList.size == orig(this.outlinePaintList.size)
this.outlinePaintList.increment == orig(this.outlinePaintList.increment)
this.defaultOutlinePaint == orig(this.defaultOutlinePaint)
this.outlineStrokeList == orig(this.outlineStrokeList)
this.defaultOutlineStroke == orig(this.defaultOutlineStroke)
this.labelsVisibleList == orig(this.labelsVisibleList)
this.defaultLabelVisible == orig(this.defaultLabelVisible)
this.labelFontList == orig(this.labelFontList)
this.defaultLabelFont == orig(this.defaultLabelFont)
this.labelPaintList == orig(this.labelPaintList)
this.defaultLabelPaint == orig(this.defaultLabelPaint)
this.positionItemLabelPositionList == orig(this.positionItemLabelPositionList)
this.defaultPositiveItemLabelPosition == orig(this.defaultPositiveItemLabelPosition)
org.jfree.chart.labels.ItemLabelAnchor.CENTER == orig(org.jfree.chart.labels.ItemLabelAnchor.CENTER)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE1 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE1)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE2 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE2)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE3 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE3)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE4 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE4)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE5 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE5)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE6 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE6)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE7 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE7)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE8 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE8)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE9 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE9)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE10 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE10)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE11 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE11)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE12 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE12)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12)
org.jfree.chart.text.TextAnchor.TOP_LEFT == orig(org.jfree.chart.text.TextAnchor.TOP_LEFT)
org.jfree.chart.text.TextAnchor.TOP_CENTER == orig(org.jfree.chart.text.TextAnchor.TOP_CENTER)
org.jfree.chart.text.TextAnchor.TOP_RIGHT == orig(org.jfree.chart.text.TextAnchor.TOP_RIGHT)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT)
org.jfree.chart.text.TextAnchor.CENTER_LEFT == orig(org.jfree.chart.text.TextAnchor.CENTER_LEFT)
org.jfree.chart.text.TextAnchor.CENTER == orig(org.jfree.chart.text.TextAnchor.CENTER)
org.jfree.chart.text.TextAnchor.CENTER_RIGHT == orig(org.jfree.chart.text.TextAnchor.CENTER_RIGHT)
org.jfree.chart.text.TextAnchor.BASELINE_LEFT == orig(org.jfree.chart.text.TextAnchor.BASELINE_LEFT)
org.jfree.chart.text.TextAnchor.BASELINE_CENTER == orig(org.jfree.chart.text.TextAnchor.BASELINE_CENTER)
org.jfree.chart.text.TextAnchor.BASELINE_RIGHT == orig(org.jfree.chart.text.TextAnchor.BASELINE_RIGHT)
org.jfree.chart.text.TextAnchor.BOTTOM_LEFT == orig(org.jfree.chart.text.TextAnchor.BOTTOM_LEFT)
org.jfree.chart.text.TextAnchor.BOTTOM_CENTER == orig(org.jfree.chart.text.TextAnchor.BOTTOM_CENTER)
org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT == orig(org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT)
this.negativeItemLabelPositionList == orig(this.negativeItemLabelPositionList)
this.defaultNegativeItemLabelPosition == orig(this.defaultNegativeItemLabelPosition)
this.createEntityList == orig(this.createEntityList)
this.defaultCreateEntity == orig(this.defaultCreateEntity)
this.defaultFillPaint has only one value
===========================================================================
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:::CLASS
org.jfree.chart.renderer.AbstractRenderer.ZERO has only one value
org.jfree.chart.renderer.AbstractRenderer.ZERO != null
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT has only one value
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT != null
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == java.awt.Color.class
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT has only one value
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT != null
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT.getClass().getName() == java.awt.Color.class
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE has only one value
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE != null
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == java.awt.BasicStroke.class
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE has only one value
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE != null
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE.getClass().getName() == java.awt.BasicStroke.class
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE has only one value
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE != null
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE.getClass().getName() == java.awt.geom.Rectangle2D$Double.class
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_FONT has only one value
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_FONT != null
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT has only one value
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT != null
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT.getClass().getName() == java.awt.Color.class
org.jfree.chart.renderer.AbstractRenderer.ADJ == 0.8660254037844387
org.jfree.chart.renderer.AbstractRenderer.OPP == 0.49999999999999994
===========================================================================
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:::OBJECT
this has only one value
this.getClass().getName() == org.jfree.chart.renderer.category.LineAndShapeRenderer.class
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE has only one value
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE != null
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName() == java.awt.BasicStroke.class
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT has only one value
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT != null
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == java.awt.Color.class
org.jfree.chart.plot.CategoryPlot.DEFAULT_VALUE_LABEL_FONT has only one value
org.jfree.chart.plot.CategoryPlot.DEFAULT_VALUE_LABEL_FONT != null
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE has only one value
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE != null
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE.getClass().getName() == java.awt.BasicStroke.class
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT has only one value
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT != null
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT.getClass().getName() == java.awt.Color.class
org.jfree.chart.plot.CategoryPlot.localizationResources has only one value
org.jfree.chart.plot.CategoryPlot.localizationResources != null
org.jfree.chart.plot.CategoryPlot.localizationResources.getClass().getName() == java.util.PropertyResourceBundle.class
this.plot.orientation has only one value
this.plot.orientation != null
org.jfree.chart.plot.PlotOrientation.HORIZONTAL has only one value
org.jfree.chart.plot.PlotOrientation.HORIZONTAL != null
org.jfree.chart.plot.PlotOrientation.VERTICAL has only one value
org.jfree.chart.plot.PlotOrientation.VERTICAL != null
this.plot.orientation.name has only one value
this.plot.orientation.name != null
this.plot.orientation.name.toString == "PlotOrientation.VERTICAL"
this.plot.axisOffset has only one value
this.plot.axisOffset != null
org.jfree.chart.util.RectangleInsets.ZERO_INSETS has only one value
org.jfree.chart.util.RectangleInsets.ZERO_INSETS != null
this.plot.axisOffset.unitType has only one value
this.plot.axisOffset.unitType != null
this.plot.axisOffset.top == 4.0
this.plot.axisOffset.left == 4.0
this.plot.axisOffset.bottom == 4.0
this.plot.axisOffset.right == 4.0
this.plot.domainAxes has only one value
this.plot.domainAxes != null
this.plot.domainAxes.objects has only one value
this.plot.domainAxes.objects != null
this.plot.domainAxes.objects.getClass().getName() == java.lang.Object[].class
this.plot.domainAxes.objects[] contains only nulls and has only one value, of length 8
this.plot.domainAxes.objects[] elements == null
this.plot.domainAxes.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.plot.domainAxes.objects[].getClass().getName() elements == null
this.plot.domainAxes.size == 1
this.plot.domainAxes.increment == 8
this.plot.domainAxisLocations has only one value
this.plot.domainAxisLocations != null
this.plot.domainAxisLocations.objects has only one value
this.plot.domainAxisLocations.objects != null
this.plot.domainAxisLocations.objects.getClass().getName() == java.lang.Object[].class
this.plot.domainAxisLocations.objects[] has only one value, of length 8
this.plot.domainAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.plot.domainAxisLocations.size == 1
this.plot.domainAxisLocations.increment == 8
this.plot.drawSharedDomainAxis == false
this.plot.rangeAxes has only one value
this.plot.rangeAxes != null
this.plot.rangeAxes.objects has only one value
this.plot.rangeAxes.objects != null
this.plot.rangeAxes.objects.getClass().getName() == java.lang.Object[].class
this.plot.rangeAxes.objects[] contains only nulls and has only one value, of length 8
this.plot.rangeAxes.objects[] elements == null
this.plot.rangeAxes.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.plot.rangeAxes.objects[].getClass().getName() elements == null
this.plot.rangeAxes.size == 1
this.plot.rangeAxes.increment == 8
this.plot.rangeAxisLocations has only one value
this.plot.rangeAxisLocations != null
this.plot.rangeAxisLocations.objects has only one value
this.plot.rangeAxisLocations.objects != null
this.plot.rangeAxisLocations.objects.getClass().getName() == java.lang.Object[].class
this.plot.rangeAxisLocations.objects[] has only one value, of length 8
this.plot.rangeAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.plot.rangeAxisLocations.size == 1
this.plot.rangeAxisLocations.increment == 8
this.plot.datasets has only one value
this.plot.datasets != null
this.plot.datasets.objects has only one value
this.plot.datasets.objects != null
this.plot.datasets.objects.getClass().getName() == java.lang.Object[].class
this.plot.datasets.objects[] has only one value, of length 8
this.plot.datasets.objects[].getClass().getName() == [org.jfree.data.category.DefaultCategoryDataset, null, null, null, null, null, null, null]
this.plot.datasets.size == 1
this.plot.datasets.increment == 8
this.plot.datasetToDomainAxesMap has only one value
this.plot.datasetToDomainAxesMap != null
this.plot.datasetToRangeAxesMap has only one value
this.plot.datasetToRangeAxesMap != null
this.plot.renderers has only one value
this.plot.renderers != null
this.plot.renderers.objects has only one value
this.plot.renderers.objects != null
this.plot.renderers.objects.getClass().getName() == java.lang.Object[].class
this.plot.renderers.objects[] has only one value, of length 8
this.plot.renderers.objects[].getClass().getName() == [org.jfree.chart.renderer.category.LineAndShapeRenderer, null, null, null, null, null, null, null]
this.plot.renderers.size == 1
this.plot.renderers.increment == 8
this.plot.renderingOrder has only one value
this.plot.renderingOrder != null
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD has only one value
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD != null
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE has only one value
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE != null
this.plot.renderingOrder.name has only one value
this.plot.renderingOrder.name != null
this.plot.renderingOrder.name.toString == "DatasetRenderingOrder.REVERSE"
this.plot.columnRenderingOrder has only one value
this.plot.columnRenderingOrder != null
org.jfree.chart.util.SortOrder.ASCENDING has only one value
org.jfree.chart.util.SortOrder.ASCENDING != null
org.jfree.chart.util.SortOrder.DESCENDING has only one value
org.jfree.chart.util.SortOrder.DESCENDING != null
this.plot.columnRenderingOrder.name has only one value
this.plot.columnRenderingOrder.name != null
this.plot.columnRenderingOrder.name.toString == "SortOrder.ASCENDING"
this.plot.rowRenderingOrder has only one value
this.plot.rowRenderingOrder != null
this.plot.rowRenderingOrder.name has only one value
this.plot.rowRenderingOrder.name != null
this.plot.rowRenderingOrder.name.toString == "SortOrder.ASCENDING"
this.plot.domainGridlinesVisible == false
this.plot.domainGridlinePosition has only one value
this.plot.domainGridlinePosition != null
org.jfree.chart.axis.CategoryAnchor.START has only one value
org.jfree.chart.axis.CategoryAnchor.START != null
org.jfree.chart.axis.CategoryAnchor.MIDDLE has only one value
org.jfree.chart.axis.CategoryAnchor.MIDDLE != null
org.jfree.chart.axis.CategoryAnchor.END has only one value
org.jfree.chart.axis.CategoryAnchor.END != null
this.plot.domainGridlinePosition.name has only one value
this.plot.domainGridlinePosition.name != null
this.plot.domainGridlinePosition.name.toString == "CategoryAnchor.MIDDLE"
this.plot.domainGridlineStroke has only one value
this.plot.domainGridlineStroke != null
this.plot.domainGridlineStroke.getClass().getName() == java.awt.BasicStroke.class
this.plot.domainGridlinePaint has only one value
this.plot.domainGridlinePaint != null
this.plot.domainGridlinePaint.getClass().getName() == java.awt.Color.class
this.plot.rangeZeroBaselineVisible == false
this.plot.rangeZeroBaselineStroke has only one value
this.plot.rangeZeroBaselineStroke != null
this.plot.rangeZeroBaselineStroke.getClass().getName() == java.awt.BasicStroke.class
this.plot.rangeZeroBaselinePaint has only one value
this.plot.rangeZeroBaselinePaint != null
this.plot.rangeZeroBaselinePaint.getClass().getName() == java.awt.Color.class
this.plot.rangeGridlinesVisible == true
this.plot.rangeGridlineStroke has only one value
this.plot.rangeGridlineStroke != null
this.plot.rangeGridlineStroke.getClass().getName() == java.awt.BasicStroke.class
this.plot.rangeGridlinePaint has only one value
this.plot.rangeGridlinePaint != null
this.plot.rangeGridlinePaint.getClass().getName() == java.awt.Color.class
this.plot.rangeMinorGridlinesVisible == false
this.plot.rangeMinorGridlineStroke has only one value
this.plot.rangeMinorGridlineStroke != null
this.plot.rangeMinorGridlineStroke.getClass().getName() == java.awt.BasicStroke.class
this.plot.rangeMinorGridlinePaint has only one value
this.plot.rangeMinorGridlinePaint != null
this.plot.rangeMinorGridlinePaint.getClass().getName() == java.awt.Color.class
this.plot.anchorValue == 0.0
this.plot.crosshairDatasetIndex == 0
this.plot.domainCrosshairVisible == false
this.plot.domainCrosshairRowKey == null
this.plot.domainCrosshairColumnKey == null
this.plot.domainCrosshairStroke has only one value
this.plot.domainCrosshairStroke != null
this.plot.domainCrosshairStroke.getClass().getName() == java.awt.BasicStroke.class
this.plot.domainCrosshairPaint has only one value
this.plot.domainCrosshairPaint != null
this.plot.domainCrosshairPaint.getClass().getName() == java.awt.Color.class
this.plot.rangeCrosshairVisible == false
this.plot.rangeCrosshairValue == 0.0
this.plot.rangeCrosshairStroke has only one value
this.plot.rangeCrosshairStroke != null
this.plot.rangeCrosshairStroke.getClass().getName() == java.awt.BasicStroke.class
this.plot.rangeCrosshairPaint has only one value
this.plot.rangeCrosshairPaint != null
this.plot.rangeCrosshairPaint.getClass().getName() == java.awt.Color.class
this.plot.rangeCrosshairLockedOnData == true
this.plot.foregroundDomainMarkers has only one value
this.plot.foregroundDomainMarkers != null
this.plot.foregroundDomainMarkers.getClass().getName() == java.util.HashMap.class
this.plot.backgroundDomainMarkers has only one value
this.plot.backgroundDomainMarkers != null
this.plot.backgroundDomainMarkers.getClass().getName() == java.util.HashMap.class
this.plot.foregroundRangeMarkers has only one value
this.plot.foregroundRangeMarkers != null
this.plot.foregroundRangeMarkers.getClass().getName() == java.util.HashMap.class
this.plot.backgroundRangeMarkers has only one value
this.plot.backgroundRangeMarkers != null
this.plot.backgroundRangeMarkers.getClass().getName() == java.util.HashMap.class
this.plot.annotations has only one value
this.plot.annotations != null
this.plot.annotations[] == []
this.plot.annotations[].getClass().getName() == []
this.plot.annotations.getClass().getName() == java.util.ArrayList.class
this.plot.weight == 0
this.plot.fixedDomainAxisSpace == null
this.plot.fixedRangeAxisSpace == null
this.plot.fixedLegendItems == null
this.plot.rangePannable == false
this.plot.shadowGenerator has only one value
this.plot.shadowGenerator != null
this.plot.shadowGenerator.getClass().getName() == org.jfree.chart.util.DefaultShadowGenerator.class
org.jfree.chart.plot.Plot.ZERO has only one value
org.jfree.chart.plot.Plot.ZERO != null
org.jfree.chart.plot.Plot.ZERO.getClass().getName() == java.lang.Integer.class
org.jfree.chart.plot.Plot.DEFAULT_INSETS has only one value
org.jfree.chart.plot.Plot.DEFAULT_INSETS != null
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType has only one value
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType != null
org.jfree.chart.plot.Plot.DEFAULT_INSETS.top == 4.0
org.jfree.chart.plot.Plot.DEFAULT_INSETS.left == 8.0
org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom == 4.0
org.jfree.chart.plot.Plot.DEFAULT_INSETS.right == 8.0
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE has only one value
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE != null
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName() == java.awt.BasicStroke.class
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT has only one value
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT != null
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() == java.awt.Color.class
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT has only one value
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT != null
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName() == java.awt.Color.class
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX has only one value
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX != null
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName() == java.awt.geom.Rectangle2D$Double.class
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE has only one value
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE != null
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName() == java.awt.geom.Ellipse2D$Double.class
this.plot.parent == null
org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener == null
this.plot.datasetGroup == null
this.plot.noDataMessage == null
this.plot.noDataMessageFont has only one value
this.plot.noDataMessageFont != null
this.plot.noDataMessagePaint has only one value
this.plot.noDataMessagePaint != null
this.plot.noDataMessagePaint.getClass().getName() == java.awt.Color.class
this.plot.insets has only one value
this.plot.insets != null
this.plot.insets.unitType has only one value
this.plot.insets.unitType != null
this.plot.insets.top == 4.0
this.plot.insets.left == 8.0
this.plot.insets.bottom == 4.0
this.plot.insets.right == 8.0
this.plot.outlineVisible == true
this.plot.outlineStroke has only one value
this.plot.outlineStroke != null
this.plot.outlineStroke.getClass().getName() == java.awt.BasicStroke.class
this.plot.outlinePaint has only one value
this.plot.outlinePaint != null
this.plot.outlinePaint.getClass().getName() == java.awt.Color.class
this.plot.backgroundPaint has only one value
this.plot.backgroundPaint != null
this.plot.backgroundPaint.getClass().getName() == java.awt.Color.class
this.plot.backgroundImage == null
this.plot.backgroundImageAlignment == 15
this.plot.backgroundImageAlpha == 0.5
this.plot.foregroundAlpha == 1.0
this.plot.backgroundAlpha == 1.0
this.plot.drawingSupplier has only one value
this.plot.drawingSupplier != null
this.plot.drawingSupplier.getClass().getName() == org.jfree.chart.plot.DefaultDrawingSupplier.class
this.plot.listenerList has only one value
this.plot.listenerList != null
this.plot.notify == true
this.itemLabelGeneratorList has only one value
this.itemLabelGeneratorList != null
this.itemLabelGeneratorList.objects has only one value
this.itemLabelGeneratorList.objects != null
this.itemLabelGeneratorList.objects.getClass().getName() == java.lang.Object[].class
this.itemLabelGeneratorList.objects[] contains only nulls and has only one value, of length 8
this.itemLabelGeneratorList.objects[] elements == null
this.itemLabelGeneratorList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.itemLabelGeneratorList.objects[].getClass().getName() elements == null
this.itemLabelGeneratorList.size == 0
this.itemLabelGeneratorList.increment == 8
this.baseItemLabelGenerator == null
this.toolTipGeneratorList has only one value
this.toolTipGeneratorList != null
this.toolTipGeneratorList.objects has only one value
this.toolTipGeneratorList.objects != null
this.toolTipGeneratorList.objects.getClass().getName() == java.lang.Object[].class
this.toolTipGeneratorList.objects[] contains only nulls and has only one value, of length 8
this.toolTipGeneratorList.objects[] elements == null
this.toolTipGeneratorList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.toolTipGeneratorList.objects[].getClass().getName() elements == null
this.toolTipGeneratorList.size == 0
this.toolTipGeneratorList.increment == 8
this.baseToolTipGenerator == null
this.urlGeneratorList has only one value
this.urlGeneratorList != null
this.urlGeneratorList.objects has only one value
this.urlGeneratorList.objects != null
this.urlGeneratorList.objects.getClass().getName() == java.lang.Object[].class
this.urlGeneratorList.objects[] contains only nulls and has only one value, of length 8
this.urlGeneratorList.objects[] elements == null
this.urlGeneratorList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.urlGeneratorList.objects[].getClass().getName() elements == null
this.urlGeneratorList.size == 0
this.urlGeneratorList.increment == 8
this.baseURLGenerator == null
this.legendItemLabelGenerator has only one value
this.legendItemLabelGenerator != null
this.legendItemLabelGenerator.getClass().getName() == org.jfree.chart.labels.StandardCategorySeriesLabelGenerator.class
this.legendItemToolTipGenerator == null
this.legendItemURLGenerator == null
this.backgroundAnnotations has only one value
this.backgroundAnnotations != null
this.backgroundAnnotations[] == []
this.backgroundAnnotations[].getClass().getName() == []
this.backgroundAnnotations.getClass().getName() == java.util.ArrayList.class
this.foregroundAnnotations has only one value
this.foregroundAnnotations != null
this.foregroundAnnotations[] == []
this.foregroundAnnotations[].getClass().getName() == []
this.foregroundAnnotations.getClass().getName() == java.util.ArrayList.class
this.rowCount == 0
this.columnCount == 0
this.seriesVisibleList has only one value
this.seriesVisibleList != null
this.seriesVisibleList.objects has only one value
this.seriesVisibleList.objects != null
this.seriesVisibleList.objects.getClass().getName() == java.lang.Object[].class
this.seriesVisibleList.objects[] contains only nulls and has only one value, of length 8
this.seriesVisibleList.objects[] elements == null
this.seriesVisibleList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.seriesVisibleList.objects[].getClass().getName() elements == null
this.seriesVisibleList.size == 0
this.seriesVisibleList.increment == 8
this.baseSeriesVisible == true
this.seriesVisibleInLegendList has only one value
this.seriesVisibleInLegendList != null
this.seriesVisibleInLegendList.objects has only one value
this.seriesVisibleInLegendList.objects != null
this.seriesVisibleInLegendList.objects.getClass().getName() == java.lang.Object[].class
this.seriesVisibleInLegendList.objects[] contains only nulls and has only one value, of length 8
this.seriesVisibleInLegendList.objects[] elements == null
this.seriesVisibleInLegendList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.seriesVisibleInLegendList.objects[].getClass().getName() elements == null
this.seriesVisibleInLegendList.size == 0
this.seriesVisibleInLegendList.increment == 8
this.baseSeriesVisibleInLegend == true
this.paintList has only one value
this.paintList != null
this.paintList.objects has only one value
this.paintList.objects != null
this.paintList.objects.getClass().getName() == java.lang.Object[].class
this.paintList.objects[].getClass().getName() one of { [null, null, null, null, null, null, null, null], [java.awt.Color, null, null, null, null, null, null, null] }
this.paintList.size one of { 0, 1 }
this.paintList.increment == 8
this.autoPopulateSeriesPaint == true
this.basePaint has only one value
this.basePaint != null
this.basePaint.getClass().getName() == java.awt.Color.class
this.fillPaintList has only one value
this.fillPaintList != null
this.fillPaintList.objects has only one value
this.fillPaintList.objects != null
this.fillPaintList.objects.getClass().getName() == java.lang.Object[].class
this.fillPaintList.objects[] contains only nulls and has only one value, of length 8
this.fillPaintList.objects[] elements == null
this.fillPaintList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.fillPaintList.objects[].getClass().getName() elements == null
this.fillPaintList.size == 0
this.fillPaintList.increment == 8
this.autoPopulateSeriesFillPaint == false
this.baseFillPaint has only one value
this.baseFillPaint != null
this.baseFillPaint.getClass().getName() == java.awt.Color.class
this.outlinePaintList has only one value
this.outlinePaintList != null
this.outlinePaintList.objects has only one value
this.outlinePaintList.objects != null
this.outlinePaintList.objects.getClass().getName() == java.lang.Object[].class
this.outlinePaintList.objects[] contains only nulls and has only one value, of length 8
this.outlinePaintList.objects[] elements == null
this.outlinePaintList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.outlinePaintList.objects[].getClass().getName() elements == null
this.outlinePaintList.size == 0
this.outlinePaintList.increment == 8
this.autoPopulateSeriesOutlinePaint == false
this.baseOutlinePaint has only one value
this.baseOutlinePaint != null
this.baseOutlinePaint.getClass().getName() == java.awt.Color.class
this.strokeList has only one value
this.strokeList != null
this.strokeList.objects has only one value
this.strokeList.objects != null
this.strokeList.objects.getClass().getName() == java.lang.Object[].class
this.strokeList.objects[].getClass().getName() one of { [null, null, null, null, null, null, null, null], [java.awt.BasicStroke, null, null, null, null, null, null, null] }
this.strokeList.size one of { 0, 1 }
this.strokeList.increment == 8
this.autoPopulateSeriesStroke == true
this.baseStroke has only one value
this.baseStroke != null
this.baseStroke.getClass().getName() == java.awt.BasicStroke.class
this.outlineStrokeList has only one value
this.outlineStrokeList != null
this.outlineStrokeList.objects has only one value
this.outlineStrokeList.objects != null
this.outlineStrokeList.objects.getClass().getName() == java.lang.Object[].class
this.outlineStrokeList.objects[] contains only nulls and has only one value, of length 8
this.outlineStrokeList.objects[] elements == null
this.outlineStrokeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.outlineStrokeList.objects[].getClass().getName() elements == null
this.outlineStrokeList.size == 0
this.outlineStrokeList.increment == 8
this.baseOutlineStroke has only one value
this.baseOutlineStroke != null
this.baseOutlineStroke.getClass().getName() == java.awt.BasicStroke.class
this.autoPopulateSeriesOutlineStroke == false
this.shapeList has only one value
this.shapeList != null
this.shapeList.objects has only one value
this.shapeList.objects != null
this.shapeList.objects.getClass().getName() == java.lang.Object[].class
this.shapeList.objects[].getClass().getName() one of { [null, null, null, null, null, null, null, null], [java.awt.geom.Rectangle2D.Double, null, null, null, null, null, null, null] }
this.shapeList.size one of { 0, 1 }
this.shapeList.increment == 8
this.autoPopulateSeriesShape == true
this.baseShape has only one value
this.baseShape != null
this.baseShape.getClass().getName() == java.awt.geom.Rectangle2D$Double.class
this.itemLabelsVisibleList has only one value
this.itemLabelsVisibleList != null
this.itemLabelsVisibleList.objects has only one value
this.itemLabelsVisibleList.objects != null
this.itemLabelsVisibleList.objects.getClass().getName() == java.lang.Object[].class
this.itemLabelsVisibleList.objects[] contains only nulls and has only one value, of length 8
this.itemLabelsVisibleList.objects[] elements == null
this.itemLabelsVisibleList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.itemLabelsVisibleList.objects[].getClass().getName() elements == null
this.itemLabelsVisibleList.size == 0
this.itemLabelsVisibleList.increment == 8
this.baseItemLabelsVisible == false
this.itemLabelFontList has only one value
this.itemLabelFontList != null
this.itemLabelFontList.objects has only one value
this.itemLabelFontList.objects != null
this.itemLabelFontList.objects.getClass().getName() == java.lang.Object[].class
this.itemLabelFontList.objects[] contains only nulls and has only one value, of length 8
this.itemLabelFontList.objects[] elements == null
this.itemLabelFontList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.itemLabelFontList.objects[].getClass().getName() elements == null
this.itemLabelFontList.size == 0
this.itemLabelFontList.increment == 8
this.baseItemLabelFont has only one value
this.baseItemLabelFont != null
this.itemLabelPaintList has only one value
this.itemLabelPaintList != null
this.itemLabelPaintList.objects has only one value
this.itemLabelPaintList.objects != null
this.itemLabelPaintList.objects.getClass().getName() == java.lang.Object[].class
this.itemLabelPaintList.objects[] contains only nulls and has only one value, of length 8
this.itemLabelPaintList.objects[] elements == null
this.itemLabelPaintList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.itemLabelPaintList.objects[].getClass().getName() elements == null
this.itemLabelPaintList.size == 0
this.itemLabelPaintList.increment == 8
this.baseItemLabelPaint has only one value
this.baseItemLabelPaint != null
this.baseItemLabelPaint.getClass().getName() == java.awt.Color.class
this.positiveItemLabelPositionList has only one value
this.positiveItemLabelPositionList != null
this.positiveItemLabelPositionList.objects has only one value
this.positiveItemLabelPositionList.objects != null
this.positiveItemLabelPositionList.objects.getClass().getName() == java.lang.Object[].class
this.positiveItemLabelPositionList.objects[] contains only nulls and has only one value, of length 8
this.positiveItemLabelPositionList.objects[] elements == null
this.positiveItemLabelPositionList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.positiveItemLabelPositionList.objects[].getClass().getName() elements == null
this.positiveItemLabelPositionList.size == 0
this.positiveItemLabelPositionList.increment == 8
this.basePositiveItemLabelPosition has only one value
this.basePositiveItemLabelPosition != null
this.basePositiveItemLabelPosition.itemLabelAnchor has only one value
this.basePositiveItemLabelPosition.itemLabelAnchor != null
org.jfree.chart.labels.ItemLabelAnchor.CENTER has only one value
org.jfree.chart.labels.ItemLabelAnchor.CENTER != null
org.jfree.chart.labels.ItemLabelAnchor.INSIDE1 has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE1 != null
org.jfree.chart.labels.ItemLabelAnchor.INSIDE2 has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE2 != null
org.jfree.chart.labels.ItemLabelAnchor.INSIDE3 has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE3 != null
org.jfree.chart.labels.ItemLabelAnchor.INSIDE4 has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE4 != null
org.jfree.chart.labels.ItemLabelAnchor.INSIDE5 has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE5 != null
org.jfree.chart.labels.ItemLabelAnchor.INSIDE6 has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE6 != null
org.jfree.chart.labels.ItemLabelAnchor.INSIDE7 has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE7 != null
org.jfree.chart.labels.ItemLabelAnchor.INSIDE8 has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE8 != null
org.jfree.chart.labels.ItemLabelAnchor.INSIDE9 has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE9 != null
org.jfree.chart.labels.ItemLabelAnchor.INSIDE10 has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE10 != null
org.jfree.chart.labels.ItemLabelAnchor.INSIDE11 has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE11 != null
org.jfree.chart.labels.ItemLabelAnchor.INSIDE12 has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE12 != null
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1 has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1 != null
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2 has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2 != null
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3 has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3 != null
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4 has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4 != null
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5 has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5 != null
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6 has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6 != null
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7 has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7 != null
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8 has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8 != null
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9 has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9 != null
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10 has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10 != null
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11 has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11 != null
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12 has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12 != null
this.basePositiveItemLabelPosition.itemLabelAnchor.name has only one value
this.basePositiveItemLabelPosition.itemLabelAnchor.name != null
this.basePositiveItemLabelPosition.itemLabelAnchor.name.toString == "ItemLabelAnchor.OUTSIDE12"
this.basePositiveItemLabelPosition.textAnchor has only one value
this.basePositiveItemLabelPosition.textAnchor != null
org.jfree.chart.text.TextAnchor.TOP_LEFT has only one value
org.jfree.chart.text.TextAnchor.TOP_LEFT != null
org.jfree.chart.text.TextAnchor.TOP_CENTER has only one value
org.jfree.chart.text.TextAnchor.TOP_CENTER != null
org.jfree.chart.text.TextAnchor.TOP_RIGHT has only one value
org.jfree.chart.text.TextAnchor.TOP_RIGHT != null
org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT has only one value
org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT != null
org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER has only one value
org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER != null
org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT has only one value
org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT != null
org.jfree.chart.text.TextAnchor.CENTER_LEFT has only one value
org.jfree.chart.text.TextAnchor.CENTER_LEFT != null
org.jfree.chart.text.TextAnchor.CENTER has only one value
org.jfree.chart.text.TextAnchor.CENTER != null
org.jfree.chart.text.TextAnchor.CENTER_RIGHT has only one value
org.jfree.chart.text.TextAnchor.CENTER_RIGHT != null
org.jfree.chart.text.TextAnchor.BASELINE_LEFT has only one value
org.jfree.chart.text.TextAnchor.BASELINE_LEFT != null
org.jfree.chart.text.TextAnchor.BASELINE_CENTER has only one value
org.jfree.chart.text.TextAnchor.BASELINE_CENTER != null
org.jfree.chart.text.TextAnchor.BASELINE_RIGHT has only one value
org.jfree.chart.text.TextAnchor.BASELINE_RIGHT != null
org.jfree.chart.text.TextAnchor.BOTTOM_LEFT has only one value
org.jfree.chart.text.TextAnchor.BOTTOM_LEFT != null
org.jfree.chart.text.TextAnchor.BOTTOM_CENTER has only one value
org.jfree.chart.text.TextAnchor.BOTTOM_CENTER != null
org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT has only one value
org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT != null
this.basePositiveItemLabelPosition.textAnchor.name has only one value
this.basePositiveItemLabelPosition.textAnchor.name != null
this.basePositiveItemLabelPosition.textAnchor.name.toString == "TextAnchor.BOTTOM_CENTER"
this.basePositiveItemLabelPosition.rotationAnchor has only one value
this.basePositiveItemLabelPosition.rotationAnchor != null
this.basePositiveItemLabelPosition.rotationAnchor.name has only one value
this.basePositiveItemLabelPosition.rotationAnchor.name != null
this.basePositiveItemLabelPosition.rotationAnchor.name.toString == "TextAnchor.CENTER"
this.basePositiveItemLabelPosition.angle == 0.0
this.negativeItemLabelPositionList has only one value
this.negativeItemLabelPositionList != null
this.negativeItemLabelPositionList.objects has only one value
this.negativeItemLabelPositionList.objects != null
this.negativeItemLabelPositionList.objects.getClass().getName() == java.lang.Object[].class
this.negativeItemLabelPositionList.objects[] contains only nulls and has only one value, of length 8
this.negativeItemLabelPositionList.objects[] elements == null
this.negativeItemLabelPositionList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.negativeItemLabelPositionList.objects[].getClass().getName() elements == null
this.negativeItemLabelPositionList.size == 0
this.negativeItemLabelPositionList.increment == 8
this.baseNegativeItemLabelPosition has only one value
this.baseNegativeItemLabelPosition != null
this.baseNegativeItemLabelPosition.itemLabelAnchor has only one value
this.baseNegativeItemLabelPosition.itemLabelAnchor != null
this.baseNegativeItemLabelPosition.itemLabelAnchor.name has only one value
this.baseNegativeItemLabelPosition.itemLabelAnchor.name != null
this.baseNegativeItemLabelPosition.itemLabelAnchor.name.toString == "ItemLabelAnchor.OUTSIDE6"
this.baseNegativeItemLabelPosition.textAnchor has only one value
this.baseNegativeItemLabelPosition.textAnchor != null
this.baseNegativeItemLabelPosition.textAnchor.name has only one value
this.baseNegativeItemLabelPosition.textAnchor.name != null
this.baseNegativeItemLabelPosition.textAnchor.name.toString == "TextAnchor.TOP_CENTER"
this.baseNegativeItemLabelPosition.rotationAnchor has only one value
this.baseNegativeItemLabelPosition.rotationAnchor != null
this.baseNegativeItemLabelPosition.rotationAnchor.name has only one value
this.baseNegativeItemLabelPosition.rotationAnchor.name != null
this.baseNegativeItemLabelPosition.rotationAnchor.name.toString == "TextAnchor.CENTER"
this.baseNegativeItemLabelPosition.angle == 0.0
this.itemLabelAnchorOffset == 2.0
this.createEntitiesList has only one value
this.createEntitiesList != null
this.createEntitiesList.objects has only one value
this.createEntitiesList.objects != null
this.createEntitiesList.objects.getClass().getName() == java.lang.Object[].class
this.createEntitiesList.objects[] contains only nulls and has only one value, of length 8
this.createEntitiesList.objects[] elements == null
this.createEntitiesList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.createEntitiesList.objects[].getClass().getName() elements == null
this.createEntitiesList.size == 0
this.createEntitiesList.increment == 8
this.baseCreateEntities == true
this.legendShapeList has only one value
this.legendShapeList != null
this.legendShapeList.objects has only one value
this.legendShapeList.objects != null
this.legendShapeList.objects.getClass().getName() == java.lang.Object[].class
this.legendShapeList.objects[] contains only nulls and has only one value, of length 8
this.legendShapeList.objects[] elements == null
this.legendShapeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.legendShapeList.objects[].getClass().getName() elements == null
this.legendShapeList.size == 0
this.legendShapeList.increment == 8
this.baseLegendShape == null
this.treatLegendShapeAsLine == false
this.legendTextFont has only one value
this.legendTextFont != null
this.legendTextFont.objects has only one value
this.legendTextFont.objects != null
this.legendTextFont.objects.getClass().getName() == java.lang.Object[].class
this.legendTextFont.objects[] contains only nulls and has only one value, of length 8
this.legendTextFont.objects[] elements == null
this.legendTextFont.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.legendTextFont.objects[].getClass().getName() elements == null
this.legendTextFont.size == 0
this.legendTextFont.increment == 8
this.baseLegendTextFont == null
this.legendTextPaint has only one value
this.legendTextPaint != null
this.legendTextPaint.objects has only one value
this.legendTextPaint.objects != null
this.legendTextPaint.objects.getClass().getName() == java.lang.Object[].class
this.legendTextPaint.objects[] contains only nulls and has only one value, of length 8
this.legendTextPaint.objects[] elements == null
this.legendTextPaint.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.legendTextPaint.objects[].getClass().getName() elements == null
this.legendTextPaint.size == 0
this.legendTextPaint.increment == 8
this.baseLegendTextPaint == null
this.dataBoundsIncludesVisibleSeriesOnly == true
this.defaultEntityRadius == 3
this.listenerList has only one value
this.listenerList != null
this.selectedItemAttributes has only one value
this.selectedItemAttributes != null
this.selectedItemAttributes.allowNull == false
this.selectedItemAttributes.paintList has only one value
this.selectedItemAttributes.paintList != null
this.selectedItemAttributes.paintList.objects has only one value
this.selectedItemAttributes.paintList.objects != null
this.selectedItemAttributes.paintList.objects.getClass().getName() == java.lang.Object[].class
this.selectedItemAttributes.paintList.objects[] contains only nulls and has only one value, of length 8
this.selectedItemAttributes.paintList.objects[] elements == null
this.selectedItemAttributes.paintList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.selectedItemAttributes.paintList.objects[].getClass().getName() elements == null
this.selectedItemAttributes.paintList.size == 0
this.selectedItemAttributes.paintList.increment == 8
this.selectedItemAttributes.defaultPaint == null
this.selectedItemAttributes.strokeList has only one value
this.selectedItemAttributes.strokeList != null
this.selectedItemAttributes.strokeList.objects has only one value
this.selectedItemAttributes.strokeList.objects != null
this.selectedItemAttributes.strokeList.objects.getClass().getName() == java.lang.Object[].class
this.selectedItemAttributes.strokeList.objects[] contains only nulls and has only one value, of length 8
this.selectedItemAttributes.strokeList.objects[] elements == null
this.selectedItemAttributes.strokeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.selectedItemAttributes.strokeList.objects[].getClass().getName() elements == null
this.selectedItemAttributes.strokeList.size == 0
this.selectedItemAttributes.strokeList.increment == 8
this.selectedItemAttributes.defaultStroke == null
this.selectedItemAttributes.shapeList has only one value
this.selectedItemAttributes.shapeList != null
this.selectedItemAttributes.shapeList.objects has only one value
this.selectedItemAttributes.shapeList.objects != null
this.selectedItemAttributes.shapeList.objects.getClass().getName() == java.lang.Object[].class
this.selectedItemAttributes.shapeList.objects[] contains only nulls and has only one value, of length 8
this.selectedItemAttributes.shapeList.objects[] elements == null
this.selectedItemAttributes.shapeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.selectedItemAttributes.shapeList.objects[].getClass().getName() elements == null
this.selectedItemAttributes.shapeList.size == 0
this.selectedItemAttributes.shapeList.increment == 8
this.selectedItemAttributes.defaultShape == null
this.selectedItemAttributes.fillPaintList has only one value
this.selectedItemAttributes.fillPaintList != null
this.selectedItemAttributes.fillPaintList.objects has only one value
this.selectedItemAttributes.fillPaintList.objects != null
this.selectedItemAttributes.fillPaintList.objects.getClass().getName() == java.lang.Object[].class
this.selectedItemAttributes.fillPaintList.objects[] contains only nulls and has only one value, of length 8
this.selectedItemAttributes.fillPaintList.objects[] elements == null
this.selectedItemAttributes.fillPaintList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.selectedItemAttributes.fillPaintList.objects[].getClass().getName() elements == null
this.selectedItemAttributes.fillPaintList.size == 0
this.selectedItemAttributes.fillPaintList.increment == 8
this.selectedItemAttributes.defaultFillPaint has only one value
this.selectedItemAttributes.defaultFillPaint != null
this.selectedItemAttributes.defaultFillPaint.getClass().getName() == java.awt.Color.class
this.selectedItemAttributes.outlinePaintList has only one value
this.selectedItemAttributes.outlinePaintList != null
this.selectedItemAttributes.outlinePaintList.objects has only one value
this.selectedItemAttributes.outlinePaintList.objects != null
this.selectedItemAttributes.outlinePaintList.objects.getClass().getName() == java.lang.Object[].class
this.selectedItemAttributes.outlinePaintList.objects[] contains only nulls and has only one value, of length 8
this.selectedItemAttributes.outlinePaintList.objects[] elements == null
this.selectedItemAttributes.outlinePaintList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.selectedItemAttributes.outlinePaintList.objects[].getClass().getName() elements == null
this.selectedItemAttributes.outlinePaintList.size == 0
this.selectedItemAttributes.outlinePaintList.increment == 8
this.selectedItemAttributes.defaultOutlinePaint == null
this.selectedItemAttributes.outlineStrokeList == null
this.selectedItemAttributes.defaultOutlineStroke == null
this.selectedItemAttributes.labelsVisibleList == null
this.selectedItemAttributes.defaultLabelVisible == null
this.selectedItemAttributes.labelFontList == null
this.selectedItemAttributes.defaultLabelFont == null
this.selectedItemAttributes.labelPaintList == null
this.selectedItemAttributes.defaultLabelPaint == null
this.selectedItemAttributes.positionItemLabelPositionList == null
this.selectedItemAttributes.defaultPositiveItemLabelPosition == null
this.selectedItemAttributes.negativeItemLabelPositionList == null
this.selectedItemAttributes.defaultNegativeItemLabelPosition == null
this.selectedItemAttributes.createEntityList == null
this.selectedItemAttributes.defaultCreateEntity == null
size(this.plot.domainAxes.objects[]) == 8
size(this.plot.domainAxisLocations.objects[]) == 8
size(this.plot.rangeAxes.objects[]) == 8
size(this.plot.rangeAxisLocations.objects[]) == 8
size(this.plot.datasets.objects[]) == 8
size(this.plot.renderers.objects[]) == 8
size(this.itemLabelGeneratorList.objects[]) == 8
size(this.toolTipGeneratorList.objects[]) == 8
size(this.urlGeneratorList.objects[]) == 8
size(this.seriesVisibleList.objects[]) == 8
size(this.seriesVisibleInLegendList.objects[]) == 8
size(this.paintList.objects[]) == 8
size(this.fillPaintList.objects[]) == 8
size(this.outlinePaintList.objects[]) == 8
size(this.strokeList.objects[]) == 8
size(this.outlineStrokeList.objects[]) == 8
size(this.shapeList.objects[]) == 8
size(this.itemLabelsVisibleList.objects[]) == 8
size(this.itemLabelFontList.objects[]) == 8
size(this.itemLabelPaintList.objects[]) == 8
size(this.positiveItemLabelPositionList.objects[]) == 8
size(this.negativeItemLabelPositionList.objects[]) == 8
size(this.createEntitiesList.objects[]) == 8
size(this.legendShapeList.objects[]) == 8
size(this.legendTextFont.objects[]) == 8
size(this.legendTextPaint.objects[]) == 8
size(this.selectedItemAttributes.paintList.objects[]) == 8
size(this.selectedItemAttributes.strokeList.objects[]) == 8
size(this.selectedItemAttributes.shapeList.objects[]) == 8
size(this.selectedItemAttributes.fillPaintList.objects[]) == 8
size(this.selectedItemAttributes.outlinePaintList.objects[]) == 8
===========================================================================
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.AbstractCategoryItemRenderer():::EXIT
this.plot == null
this.paintList.objects[] contains only nulls and has only one value, of length 8
this.paintList.objects[] elements == null
this.paintList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.paintList.objects[].getClass().getName() elements == null
this.paintList.size == 0
this.strokeList.objects[] contains only nulls and has only one value, of length 8
this.strokeList.objects[] elements == null
this.strokeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.strokeList.objects[].getClass().getName() elements == null
this.strokeList.size == 0
this.shapeList.objects[] contains only nulls and has only one value, of length 8
this.shapeList.objects[] elements == null
this.shapeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.shapeList.objects[].getClass().getName() elements == null
this.shapeList.size == 0
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener == null
===========================================================================
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getDrawingSupplier():::ENTER
this.plot has only one value
this.strokeList.objects[] contains only nulls and has only one value, of length 8
this.strokeList.objects[] elements == null
this.strokeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.strokeList.objects[].getClass().getName() elements == null
this.strokeList.size == 0
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener has only one value
===========================================================================
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getDrawingSupplier():::EXIT
this.plot == orig(this.plot)
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE)
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_VALUE_LABEL_FONT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_VALUE_LABEL_FONT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT.getClass().getName())
org.jfree.chart.plot.CategoryPlot.localizationResources == orig(org.jfree.chart.plot.CategoryPlot.localizationResources)
org.jfree.chart.plot.CategoryPlot.localizationResources.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.localizationResources.getClass().getName())
this.plot.orientation == orig(this.plot.orientation)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL)
org.jfree.chart.plot.PlotOrientation.VERTICAL == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL)
this.plot.orientation.name == orig(this.plot.orientation.name)
this.plot.orientation.name.toString == orig(this.plot.orientation.name.toString)
this.plot.axisOffset == orig(this.plot.axisOffset)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS)
this.plot.axisOffset.unitType == orig(this.plot.axisOffset.unitType)
this.plot.axisOffset.top == orig(this.plot.axisOffset.top)
this.plot.axisOffset.left == orig(this.plot.axisOffset.left)
this.plot.axisOffset.bottom == orig(this.plot.axisOffset.bottom)
this.plot.axisOffset.right == orig(this.plot.axisOffset.right)
this.plot.domainAxes == orig(this.plot.domainAxes)
this.plot.domainAxes.objects == orig(this.plot.domainAxes.objects)
this.plot.domainAxes.objects.getClass().getName() == orig(this.plot.domainAxes.objects.getClass().getName())
this.plot.domainAxes.objects[] == orig(this.plot.domainAxes.objects[])
this.plot.domainAxes.size == orig(this.plot.domainAxes.size)
this.plot.domainAxes.increment == orig(this.plot.domainAxes.increment)
this.plot.domainAxisLocations == orig(this.plot.domainAxisLocations)
this.plot.domainAxisLocations.objects == orig(this.plot.domainAxisLocations.objects)
this.plot.domainAxisLocations.objects.getClass().getName() == orig(this.plot.domainAxisLocations.objects.getClass().getName())
this.plot.domainAxisLocations.objects[] == orig(this.plot.domainAxisLocations.objects[])
this.plot.domainAxisLocations.size == orig(this.plot.domainAxisLocations.size)
this.plot.domainAxisLocations.increment == orig(this.plot.domainAxisLocations.increment)
this.plot.drawSharedDomainAxis == orig(this.plot.drawSharedDomainAxis)
this.plot.rangeAxes == orig(this.plot.rangeAxes)
this.plot.rangeAxes.objects == orig(this.plot.rangeAxes.objects)
this.plot.rangeAxes.objects.getClass().getName() == orig(this.plot.rangeAxes.objects.getClass().getName())
this.plot.rangeAxes.objects[] == orig(this.plot.rangeAxes.objects[])
this.plot.rangeAxes.size == orig(this.plot.rangeAxes.size)
this.plot.rangeAxes.increment == orig(this.plot.rangeAxes.increment)
this.plot.rangeAxisLocations == orig(this.plot.rangeAxisLocations)
this.plot.rangeAxisLocations.objects == orig(this.plot.rangeAxisLocations.objects)
this.plot.rangeAxisLocations.objects.getClass().getName() == orig(this.plot.rangeAxisLocations.objects.getClass().getName())
this.plot.rangeAxisLocations.objects[] == orig(this.plot.rangeAxisLocations.objects[])
this.plot.rangeAxisLocations.size == orig(this.plot.rangeAxisLocations.size)
this.plot.rangeAxisLocations.increment == orig(this.plot.rangeAxisLocations.increment)
this.plot.datasets == orig(this.plot.datasets)
this.plot.datasets.objects == orig(this.plot.datasets.objects)
this.plot.datasets.objects.getClass().getName() == orig(this.plot.datasets.objects.getClass().getName())
this.plot.datasets.objects[] == orig(this.plot.datasets.objects[])
this.plot.datasets.size == orig(this.plot.datasets.size)
this.plot.datasets.increment == orig(this.plot.datasets.increment)
this.plot.datasetToDomainAxesMap == orig(this.plot.datasetToDomainAxesMap)
this.plot.datasetToRangeAxesMap == orig(this.plot.datasetToRangeAxesMap)
this.plot.renderers == orig(this.plot.renderers)
this.plot.renderers.objects == orig(this.plot.renderers.objects)
this.plot.renderers.objects.getClass().getName() == orig(this.plot.renderers.objects.getClass().getName())
this.plot.renderers.objects[] == orig(this.plot.renderers.objects[])
this.plot.renderers.size == orig(this.plot.renderers.size)
this.plot.renderers.increment == orig(this.plot.renderers.increment)
this.plot.renderingOrder == orig(this.plot.renderingOrder)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE)
this.plot.renderingOrder.name == orig(this.plot.renderingOrder.name)
this.plot.renderingOrder.name.toString == orig(this.plot.renderingOrder.name.toString)
this.plot.columnRenderingOrder == orig(this.plot.columnRenderingOrder)
org.jfree.chart.util.SortOrder.ASCENDING == orig(org.jfree.chart.util.SortOrder.ASCENDING)
org.jfree.chart.util.SortOrder.DESCENDING == orig(org.jfree.chart.util.SortOrder.DESCENDING)
this.plot.columnRenderingOrder.name == orig(this.plot.columnRenderingOrder.name)
this.plot.columnRenderingOrder.name.toString == orig(this.plot.columnRenderingOrder.name.toString)
this.plot.rowRenderingOrder == orig(this.plot.rowRenderingOrder)
this.plot.rowRenderingOrder.name == orig(this.plot.rowRenderingOrder.name)
this.plot.rowRenderingOrder.name.toString == orig(this.plot.rowRenderingOrder.name.toString)
this.plot.domainGridlinesVisible == orig(this.plot.domainGridlinesVisible)
this.plot.domainGridlinePosition == orig(this.plot.domainGridlinePosition)
org.jfree.chart.axis.CategoryAnchor.START == orig(org.jfree.chart.axis.CategoryAnchor.START)
org.jfree.chart.axis.CategoryAnchor.MIDDLE == orig(org.jfree.chart.axis.CategoryAnchor.MIDDLE)
org.jfree.chart.axis.CategoryAnchor.END == orig(org.jfree.chart.axis.CategoryAnchor.END)
this.plot.domainGridlinePosition.name == orig(this.plot.domainGridlinePosition.name)
this.plot.domainGridlinePosition.name.toString == orig(this.plot.domainGridlinePosition.name.toString)
this.plot.domainGridlineStroke == orig(this.plot.domainGridlineStroke)
this.plot.domainGridlineStroke.getClass().getName() == orig(this.plot.domainGridlineStroke.getClass().getName())
this.plot.domainGridlinePaint == orig(this.plot.domainGridlinePaint)
this.plot.domainGridlinePaint.getClass().getName() == orig(this.plot.domainGridlinePaint.getClass().getName())
this.plot.rangeZeroBaselineVisible == orig(this.plot.rangeZeroBaselineVisible)
this.plot.rangeZeroBaselineStroke == orig(this.plot.rangeZeroBaselineStroke)
this.plot.rangeZeroBaselineStroke.getClass().getName() == orig(this.plot.rangeZeroBaselineStroke.getClass().getName())
this.plot.rangeZeroBaselinePaint == orig(this.plot.rangeZeroBaselinePaint)
this.plot.rangeZeroBaselinePaint.getClass().getName() == orig(this.plot.rangeZeroBaselinePaint.getClass().getName())
this.plot.rangeGridlinesVisible == orig(this.plot.rangeGridlinesVisible)
this.plot.rangeGridlineStroke == orig(this.plot.rangeGridlineStroke)
this.plot.rangeGridlineStroke.getClass().getName() == orig(this.plot.rangeGridlineStroke.getClass().getName())
this.plot.rangeGridlinePaint == orig(this.plot.rangeGridlinePaint)
this.plot.rangeGridlinePaint.getClass().getName() == orig(this.plot.rangeGridlinePaint.getClass().getName())
this.plot.rangeMinorGridlinesVisible == orig(this.plot.rangeMinorGridlinesVisible)
this.plot.rangeMinorGridlineStroke == orig(this.plot.rangeMinorGridlineStroke)
this.plot.rangeMinorGridlineStroke.getClass().getName() == orig(this.plot.rangeMinorGridlineStroke.getClass().getName())
this.plot.rangeMinorGridlinePaint == orig(this.plot.rangeMinorGridlinePaint)
this.plot.rangeMinorGridlinePaint.getClass().getName() == orig(this.plot.rangeMinorGridlinePaint.getClass().getName())
this.plot.anchorValue == orig(this.plot.anchorValue)
this.plot.crosshairDatasetIndex == orig(this.plot.crosshairDatasetIndex)
this.plot.domainCrosshairVisible == orig(this.plot.domainCrosshairVisible)
this.plot.domainCrosshairRowKey == orig(this.plot.domainCrosshairRowKey)
this.plot.domainCrosshairColumnKey == orig(this.plot.domainCrosshairColumnKey)
this.plot.domainCrosshairStroke == orig(this.plot.domainCrosshairStroke)
this.plot.domainCrosshairStroke.getClass().getName() == orig(this.plot.domainCrosshairStroke.getClass().getName())
this.plot.domainCrosshairPaint == orig(this.plot.domainCrosshairPaint)
this.plot.domainCrosshairPaint.getClass().getName() == orig(this.plot.domainCrosshairPaint.getClass().getName())
this.plot.rangeCrosshairVisible == orig(this.plot.rangeCrosshairVisible)
this.plot.rangeCrosshairValue == orig(this.plot.rangeCrosshairValue)
this.plot.rangeCrosshairStroke == orig(this.plot.rangeCrosshairStroke)
this.plot.rangeCrosshairStroke.getClass().getName() == orig(this.plot.rangeCrosshairStroke.getClass().getName())
this.plot.rangeCrosshairPaint == orig(this.plot.rangeCrosshairPaint)
this.plot.rangeCrosshairPaint.getClass().getName() == orig(this.plot.rangeCrosshairPaint.getClass().getName())
this.plot.rangeCrosshairLockedOnData == orig(this.plot.rangeCrosshairLockedOnData)
this.plot.foregroundDomainMarkers == orig(this.plot.foregroundDomainMarkers)
this.plot.foregroundDomainMarkers.getClass().getName() == orig(this.plot.foregroundDomainMarkers.getClass().getName())
this.plot.backgroundDomainMarkers == orig(this.plot.backgroundDomainMarkers)
this.plot.backgroundDomainMarkers.getClass().getName() == orig(this.plot.backgroundDomainMarkers.getClass().getName())
this.plot.foregroundRangeMarkers == orig(this.plot.foregroundRangeMarkers)
this.plot.foregroundRangeMarkers.getClass().getName() == orig(this.plot.foregroundRangeMarkers.getClass().getName())
this.plot.backgroundRangeMarkers == orig(this.plot.backgroundRangeMarkers)
this.plot.backgroundRangeMarkers.getClass().getName() == orig(this.plot.backgroundRangeMarkers.getClass().getName())
this.plot.annotations == orig(this.plot.annotations)
this.plot.annotations[] == orig(this.plot.annotations[])
this.plot.annotations.getClass().getName() == orig(this.plot.annotations.getClass().getName())
this.plot.weight == orig(this.plot.weight)
this.plot.fixedDomainAxisSpace == orig(this.plot.fixedDomainAxisSpace)
this.plot.fixedRangeAxisSpace == orig(this.plot.fixedRangeAxisSpace)
this.plot.fixedLegendItems == orig(this.plot.fixedLegendItems)
this.plot.rangePannable == orig(this.plot.rangePannable)
this.plot.shadowGenerator == orig(this.plot.shadowGenerator)
this.plot.shadowGenerator.getClass().getName() == orig(this.plot.shadowGenerator.getClass().getName())
org.jfree.chart.plot.Plot.ZERO == orig(org.jfree.chart.plot.Plot.ZERO)
org.jfree.chart.plot.Plot.ZERO.getClass().getName() == orig(org.jfree.chart.plot.Plot.ZERO.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_INSETS == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.top == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.top)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.left == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.left)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.right == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.right)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName())
this.plot.parent == orig(this.plot.parent)
org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener == orig(org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener)
this.plot.datasetGroup == orig(this.plot.datasetGroup)
this.plot.noDataMessage == orig(this.plot.noDataMessage)
this.plot.noDataMessageFont == orig(this.plot.noDataMessageFont)
this.plot.noDataMessagePaint == orig(this.plot.noDataMessagePaint)
this.plot.noDataMessagePaint.getClass().getName() == orig(this.plot.noDataMessagePaint.getClass().getName())
this.plot.insets == orig(this.plot.insets)
this.plot.insets.unitType == orig(this.plot.insets.unitType)
this.plot.insets.top == orig(this.plot.insets.top)
this.plot.insets.left == orig(this.plot.insets.left)
this.plot.insets.bottom == orig(this.plot.insets.bottom)
this.plot.insets.right == orig(this.plot.insets.right)
this.plot.outlineVisible == orig(this.plot.outlineVisible)
this.plot.outlineStroke == orig(this.plot.outlineStroke)
this.plot.outlineStroke.getClass().getName() == orig(this.plot.outlineStroke.getClass().getName())
this.plot.outlinePaint == orig(this.plot.outlinePaint)
this.plot.outlinePaint.getClass().getName() == orig(this.plot.outlinePaint.getClass().getName())
this.plot.backgroundPaint == orig(this.plot.backgroundPaint)
this.plot.backgroundPaint.getClass().getName() == orig(this.plot.backgroundPaint.getClass().getName())
this.plot.backgroundImage == orig(this.plot.backgroundImage)
this.plot.backgroundImageAlignment == orig(this.plot.backgroundImageAlignment)
this.plot.backgroundImageAlpha == orig(this.plot.backgroundImageAlpha)
this.plot.foregroundAlpha == orig(this.plot.foregroundAlpha)
this.plot.backgroundAlpha == orig(this.plot.backgroundAlpha)
this.plot.drawingSupplier == orig(this.plot.drawingSupplier)
this.plot.drawingSupplier.getClass().getName() == orig(this.plot.drawingSupplier.getClass().getName())
this.plot.listenerList == orig(this.plot.listenerList)
this.plot.notify == orig(this.plot.notify)
this.itemLabelGeneratorList == orig(this.itemLabelGeneratorList)
this.itemLabelGeneratorList.objects == orig(this.itemLabelGeneratorList.objects)
this.itemLabelGeneratorList.objects.getClass().getName() == orig(this.itemLabelGeneratorList.objects.getClass().getName())
this.itemLabelGeneratorList.objects[] == orig(this.itemLabelGeneratorList.objects[])
this.itemLabelGeneratorList.size == orig(this.itemLabelGeneratorList.size)
this.itemLabelGeneratorList.increment == orig(this.itemLabelGeneratorList.increment)
this.baseItemLabelGenerator == orig(this.baseItemLabelGenerator)
this.toolTipGeneratorList == orig(this.toolTipGeneratorList)
this.toolTipGeneratorList.objects == orig(this.toolTipGeneratorList.objects)
this.toolTipGeneratorList.objects.getClass().getName() == orig(this.toolTipGeneratorList.objects.getClass().getName())
this.toolTipGeneratorList.objects[] == orig(this.toolTipGeneratorList.objects[])
this.toolTipGeneratorList.size == orig(this.toolTipGeneratorList.size)
this.toolTipGeneratorList.increment == orig(this.toolTipGeneratorList.increment)
this.baseToolTipGenerator == orig(this.baseToolTipGenerator)
this.urlGeneratorList == orig(this.urlGeneratorList)
this.urlGeneratorList.objects == orig(this.urlGeneratorList.objects)
this.urlGeneratorList.objects.getClass().getName() == orig(this.urlGeneratorList.objects.getClass().getName())
this.urlGeneratorList.objects[] == orig(this.urlGeneratorList.objects[])
this.urlGeneratorList.size == orig(this.urlGeneratorList.size)
this.urlGeneratorList.increment == orig(this.urlGeneratorList.increment)
this.baseURLGenerator == orig(this.baseURLGenerator)
this.legendItemLabelGenerator == orig(this.legendItemLabelGenerator)
this.legendItemLabelGenerator.getClass().getName() == orig(this.legendItemLabelGenerator.getClass().getName())
this.legendItemToolTipGenerator == orig(this.legendItemToolTipGenerator)
this.legendItemURLGenerator == orig(this.legendItemURLGenerator)
this.backgroundAnnotations == orig(this.backgroundAnnotations)
this.backgroundAnnotations[] == orig(this.backgroundAnnotations[])
this.backgroundAnnotations.getClass().getName() == orig(this.backgroundAnnotations.getClass().getName())
this.foregroundAnnotations == orig(this.foregroundAnnotations)
this.foregroundAnnotations[] == orig(this.foregroundAnnotations[])
this.foregroundAnnotations.getClass().getName() == orig(this.foregroundAnnotations.getClass().getName())
this.rowCount == orig(this.rowCount)
this.columnCount == orig(this.columnCount)
org.jfree.chart.renderer.AbstractRenderer.ZERO == orig(org.jfree.chart.renderer.AbstractRenderer.ZERO)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_FONT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_FONT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT.getClass().getName())
this.seriesVisibleList == orig(this.seriesVisibleList)
this.seriesVisibleList.objects == orig(this.seriesVisibleList.objects)
this.seriesVisibleList.objects.getClass().getName() == orig(this.seriesVisibleList.objects.getClass().getName())
this.seriesVisibleList.objects[] == orig(this.seriesVisibleList.objects[])
this.seriesVisibleList.size == orig(this.seriesVisibleList.size)
this.seriesVisibleList.increment == orig(this.seriesVisibleList.increment)
this.baseSeriesVisible == orig(this.baseSeriesVisible)
this.seriesVisibleInLegendList == orig(this.seriesVisibleInLegendList)
this.seriesVisibleInLegendList.objects == orig(this.seriesVisibleInLegendList.objects)
this.seriesVisibleInLegendList.objects.getClass().getName() == orig(this.seriesVisibleInLegendList.objects.getClass().getName())
this.seriesVisibleInLegendList.objects[] == orig(this.seriesVisibleInLegendList.objects[])
this.seriesVisibleInLegendList.size == orig(this.seriesVisibleInLegendList.size)
this.seriesVisibleInLegendList.increment == orig(this.seriesVisibleInLegendList.increment)
this.baseSeriesVisibleInLegend == orig(this.baseSeriesVisibleInLegend)
this.paintList == orig(this.paintList)
this.paintList.objects == orig(this.paintList.objects)
this.paintList.objects.getClass().getName() == orig(this.paintList.objects.getClass().getName())
this.paintList.objects[] == orig(this.paintList.objects[])
this.paintList.size == orig(this.paintList.size)
this.paintList.increment == orig(this.paintList.increment)
this.autoPopulateSeriesPaint == orig(this.autoPopulateSeriesPaint)
this.basePaint == orig(this.basePaint)
this.basePaint.getClass().getName() == orig(this.basePaint.getClass().getName())
this.fillPaintList == orig(this.fillPaintList)
this.fillPaintList.objects == orig(this.fillPaintList.objects)
this.fillPaintList.objects.getClass().getName() == orig(this.fillPaintList.objects.getClass().getName())
this.fillPaintList.objects[] == orig(this.fillPaintList.objects[])
this.fillPaintList.size == orig(this.fillPaintList.size)
this.fillPaintList.increment == orig(this.fillPaintList.increment)
this.autoPopulateSeriesFillPaint == orig(this.autoPopulateSeriesFillPaint)
this.baseFillPaint == orig(this.baseFillPaint)
this.baseFillPaint.getClass().getName() == orig(this.baseFillPaint.getClass().getName())
this.outlinePaintList == orig(this.outlinePaintList)
this.outlinePaintList.objects == orig(this.outlinePaintList.objects)
this.outlinePaintList.objects.getClass().getName() == orig(this.outlinePaintList.objects.getClass().getName())
this.outlinePaintList.objects[] == orig(this.outlinePaintList.objects[])
this.outlinePaintList.size == orig(this.outlinePaintList.size)
this.outlinePaintList.increment == orig(this.outlinePaintList.increment)
this.autoPopulateSeriesOutlinePaint == orig(this.autoPopulateSeriesOutlinePaint)
this.baseOutlinePaint == orig(this.baseOutlinePaint)
this.baseOutlinePaint.getClass().getName() == orig(this.baseOutlinePaint.getClass().getName())
this.strokeList == orig(this.strokeList)
this.strokeList.objects == orig(this.strokeList.objects)
this.strokeList.objects.getClass().getName() == orig(this.strokeList.objects.getClass().getName())
this.strokeList.objects[] == orig(this.strokeList.objects[])
this.strokeList.size == orig(this.strokeList.size)
this.strokeList.increment == orig(this.strokeList.increment)
this.autoPopulateSeriesStroke == orig(this.autoPopulateSeriesStroke)
this.baseStroke == orig(this.baseStroke)
this.baseStroke.getClass().getName() == orig(this.baseStroke.getClass().getName())
this.outlineStrokeList == orig(this.outlineStrokeList)
this.outlineStrokeList.objects == orig(this.outlineStrokeList.objects)
this.outlineStrokeList.objects.getClass().getName() == orig(this.outlineStrokeList.objects.getClass().getName())
this.outlineStrokeList.objects[] == orig(this.outlineStrokeList.objects[])
this.outlineStrokeList.size == orig(this.outlineStrokeList.size)
this.outlineStrokeList.increment == orig(this.outlineStrokeList.increment)
this.baseOutlineStroke == orig(this.baseOutlineStroke)
this.baseOutlineStroke.getClass().getName() == orig(this.baseOutlineStroke.getClass().getName())
this.autoPopulateSeriesOutlineStroke == orig(this.autoPopulateSeriesOutlineStroke)
this.shapeList == orig(this.shapeList)
this.shapeList.objects == orig(this.shapeList.objects)
this.shapeList.objects.getClass().getName() == orig(this.shapeList.objects.getClass().getName())
this.shapeList.objects[] == orig(this.shapeList.objects[])
this.shapeList.size == orig(this.shapeList.size)
this.shapeList.increment == orig(this.shapeList.increment)
this.autoPopulateSeriesShape == orig(this.autoPopulateSeriesShape)
this.baseShape == orig(this.baseShape)
this.baseShape.getClass().getName() == orig(this.baseShape.getClass().getName())
this.itemLabelsVisibleList == orig(this.itemLabelsVisibleList)
this.itemLabelsVisibleList.objects == orig(this.itemLabelsVisibleList.objects)
this.itemLabelsVisibleList.objects.getClass().getName() == orig(this.itemLabelsVisibleList.objects.getClass().getName())
this.itemLabelsVisibleList.objects[] == orig(this.itemLabelsVisibleList.objects[])
this.itemLabelsVisibleList.size == orig(this.itemLabelsVisibleList.size)
this.itemLabelsVisibleList.increment == orig(this.itemLabelsVisibleList.increment)
this.baseItemLabelsVisible == orig(this.baseItemLabelsVisible)
this.itemLabelFontList == orig(this.itemLabelFontList)
this.itemLabelFontList.objects == orig(this.itemLabelFontList.objects)
this.itemLabelFontList.objects.getClass().getName() == orig(this.itemLabelFontList.objects.getClass().getName())
this.itemLabelFontList.objects[] == orig(this.itemLabelFontList.objects[])
this.itemLabelFontList.size == orig(this.itemLabelFontList.size)
this.itemLabelFontList.increment == orig(this.itemLabelFontList.increment)
this.baseItemLabelFont == orig(this.baseItemLabelFont)
this.itemLabelPaintList == orig(this.itemLabelPaintList)
this.itemLabelPaintList.objects == orig(this.itemLabelPaintList.objects)
this.itemLabelPaintList.objects.getClass().getName() == orig(this.itemLabelPaintList.objects.getClass().getName())
this.itemLabelPaintList.objects[] == orig(this.itemLabelPaintList.objects[])
this.itemLabelPaintList.size == orig(this.itemLabelPaintList.size)
this.itemLabelPaintList.increment == orig(this.itemLabelPaintList.increment)
this.baseItemLabelPaint == orig(this.baseItemLabelPaint)
this.baseItemLabelPaint.getClass().getName() == orig(this.baseItemLabelPaint.getClass().getName())
this.positiveItemLabelPositionList == orig(this.positiveItemLabelPositionList)
this.positiveItemLabelPositionList.objects == orig(this.positiveItemLabelPositionList.objects)
this.positiveItemLabelPositionList.objects.getClass().getName() == orig(this.positiveItemLabelPositionList.objects.getClass().getName())
this.positiveItemLabelPositionList.objects[] == orig(this.positiveItemLabelPositionList.objects[])
this.positiveItemLabelPositionList.size == orig(this.positiveItemLabelPositionList.size)
this.positiveItemLabelPositionList.increment == orig(this.positiveItemLabelPositionList.increment)
this.basePositiveItemLabelPosition == orig(this.basePositiveItemLabelPosition)
this.basePositiveItemLabelPosition.itemLabelAnchor == orig(this.basePositiveItemLabelPosition.itemLabelAnchor)
org.jfree.chart.labels.ItemLabelAnchor.CENTER == orig(org.jfree.chart.labels.ItemLabelAnchor.CENTER)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE1 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE1)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE2 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE2)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE3 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE3)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE4 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE4)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE5 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE5)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE6 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE6)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE7 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE7)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE8 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE8)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE9 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE9)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE10 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE10)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE11 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE11)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE12 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE12)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12)
this.basePositiveItemLabelPosition.itemLabelAnchor.name == orig(this.basePositiveItemLabelPosition.itemLabelAnchor.name)
this.basePositiveItemLabelPosition.itemLabelAnchor.name.toString == orig(this.basePositiveItemLabelPosition.itemLabelAnchor.name.toString)
this.basePositiveItemLabelPosition.textAnchor == orig(this.basePositiveItemLabelPosition.textAnchor)
org.jfree.chart.text.TextAnchor.TOP_LEFT == orig(org.jfree.chart.text.TextAnchor.TOP_LEFT)
org.jfree.chart.text.TextAnchor.TOP_CENTER == orig(org.jfree.chart.text.TextAnchor.TOP_CENTER)
org.jfree.chart.text.TextAnchor.TOP_RIGHT == orig(org.jfree.chart.text.TextAnchor.TOP_RIGHT)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT)
org.jfree.chart.text.TextAnchor.CENTER_LEFT == orig(org.jfree.chart.text.TextAnchor.CENTER_LEFT)
org.jfree.chart.text.TextAnchor.CENTER == orig(org.jfree.chart.text.TextAnchor.CENTER)
org.jfree.chart.text.TextAnchor.CENTER_RIGHT == orig(org.jfree.chart.text.TextAnchor.CENTER_RIGHT)
org.jfree.chart.text.TextAnchor.BASELINE_LEFT == orig(org.jfree.chart.text.TextAnchor.BASELINE_LEFT)
org.jfree.chart.text.TextAnchor.BASELINE_CENTER == orig(org.jfree.chart.text.TextAnchor.BASELINE_CENTER)
org.jfree.chart.text.TextAnchor.BASELINE_RIGHT == orig(org.jfree.chart.text.TextAnchor.BASELINE_RIGHT)
org.jfree.chart.text.TextAnchor.BOTTOM_LEFT == orig(org.jfree.chart.text.TextAnchor.BOTTOM_LEFT)
org.jfree.chart.text.TextAnchor.BOTTOM_CENTER == orig(org.jfree.chart.text.TextAnchor.BOTTOM_CENTER)
org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT == orig(org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT)
this.basePositiveItemLabelPosition.textAnchor.name == orig(this.basePositiveItemLabelPosition.textAnchor.name)
this.basePositiveItemLabelPosition.textAnchor.name.toString == orig(this.basePositiveItemLabelPosition.textAnchor.name.toString)
this.basePositiveItemLabelPosition.rotationAnchor == orig(this.basePositiveItemLabelPosition.rotationAnchor)
this.basePositiveItemLabelPosition.rotationAnchor.name == orig(this.basePositiveItemLabelPosition.rotationAnchor.name)
this.basePositiveItemLabelPosition.rotationAnchor.name.toString == orig(this.basePositiveItemLabelPosition.rotationAnchor.name.toString)
this.basePositiveItemLabelPosition.angle == orig(this.basePositiveItemLabelPosition.angle)
this.negativeItemLabelPositionList == orig(this.negativeItemLabelPositionList)
this.negativeItemLabelPositionList.objects == orig(this.negativeItemLabelPositionList.objects)
this.negativeItemLabelPositionList.objects.getClass().getName() == orig(this.negativeItemLabelPositionList.objects.getClass().getName())
this.negativeItemLabelPositionList.objects[] == orig(this.negativeItemLabelPositionList.objects[])
this.negativeItemLabelPositionList.size == orig(this.negativeItemLabelPositionList.size)
this.negativeItemLabelPositionList.increment == orig(this.negativeItemLabelPositionList.increment)
this.baseNegativeItemLabelPosition == orig(this.baseNegativeItemLabelPosition)
this.baseNegativeItemLabelPosition.itemLabelAnchor == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor)
this.baseNegativeItemLabelPosition.itemLabelAnchor.name == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor.name)
this.baseNegativeItemLabelPosition.itemLabelAnchor.name.toString == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor.name.toString)
this.baseNegativeItemLabelPosition.textAnchor == orig(this.baseNegativeItemLabelPosition.textAnchor)
this.baseNegativeItemLabelPosition.textAnchor.name == orig(this.baseNegativeItemLabelPosition.textAnchor.name)
this.baseNegativeItemLabelPosition.textAnchor.name.toString == orig(this.baseNegativeItemLabelPosition.textAnchor.name.toString)
this.baseNegativeItemLabelPosition.rotationAnchor == orig(this.baseNegativeItemLabelPosition.rotationAnchor)
this.baseNegativeItemLabelPosition.rotationAnchor.name == orig(this.baseNegativeItemLabelPosition.rotationAnchor.name)
this.baseNegativeItemLabelPosition.rotationAnchor.name.toString == orig(this.baseNegativeItemLabelPosition.rotationAnchor.name.toString)
this.baseNegativeItemLabelPosition.angle == orig(this.baseNegativeItemLabelPosition.angle)
this.itemLabelAnchorOffset == orig(this.itemLabelAnchorOffset)
this.createEntitiesList == orig(this.createEntitiesList)
this.createEntitiesList.objects == orig(this.createEntitiesList.objects)
this.createEntitiesList.objects.getClass().getName() == orig(this.createEntitiesList.objects.getClass().getName())
this.createEntitiesList.objects[] == orig(this.createEntitiesList.objects[])
this.createEntitiesList.size == orig(this.createEntitiesList.size)
this.createEntitiesList.increment == orig(this.createEntitiesList.increment)
this.baseCreateEntities == orig(this.baseCreateEntities)
this.legendShapeList == orig(this.legendShapeList)
this.legendShapeList.objects == orig(this.legendShapeList.objects)
this.legendShapeList.objects.getClass().getName() == orig(this.legendShapeList.objects.getClass().getName())
this.legendShapeList.objects[] == orig(this.legendShapeList.objects[])
this.legendShapeList.size == orig(this.legendShapeList.size)
this.legendShapeList.increment == orig(this.legendShapeList.increment)
this.baseLegendShape == orig(this.baseLegendShape)
this.treatLegendShapeAsLine == orig(this.treatLegendShapeAsLine)
this.legendTextFont == orig(this.legendTextFont)
this.legendTextFont.objects == orig(this.legendTextFont.objects)
this.legendTextFont.objects.getClass().getName() == orig(this.legendTextFont.objects.getClass().getName())
this.legendTextFont.objects[] == orig(this.legendTextFont.objects[])
this.legendTextFont.size == orig(this.legendTextFont.size)
this.legendTextFont.increment == orig(this.legendTextFont.increment)
this.baseLegendTextFont == orig(this.baseLegendTextFont)
this.legendTextPaint == orig(this.legendTextPaint)
this.legendTextPaint.objects == orig(this.legendTextPaint.objects)
this.legendTextPaint.objects.getClass().getName() == orig(this.legendTextPaint.objects.getClass().getName())
this.legendTextPaint.objects[] == orig(this.legendTextPaint.objects[])
this.legendTextPaint.size == orig(this.legendTextPaint.size)
this.legendTextPaint.increment == orig(this.legendTextPaint.increment)
this.baseLegendTextPaint == orig(this.baseLegendTextPaint)
this.dataBoundsIncludesVisibleSeriesOnly == orig(this.dataBoundsIncludesVisibleSeriesOnly)
this.defaultEntityRadius == orig(this.defaultEntityRadius)
this.listenerList == orig(this.listenerList)
this.selectedItemAttributes == orig(this.selectedItemAttributes)
this.selectedItemAttributes.allowNull == orig(this.selectedItemAttributes.allowNull)
this.selectedItemAttributes.paintList == orig(this.selectedItemAttributes.paintList)
this.selectedItemAttributes.paintList.objects == orig(this.selectedItemAttributes.paintList.objects)
this.selectedItemAttributes.paintList.objects.getClass().getName() == orig(this.selectedItemAttributes.paintList.objects.getClass().getName())
this.selectedItemAttributes.paintList.objects[] == orig(this.selectedItemAttributes.paintList.objects[])
this.selectedItemAttributes.paintList.size == orig(this.selectedItemAttributes.paintList.size)
this.selectedItemAttributes.paintList.increment == orig(this.selectedItemAttributes.paintList.increment)
this.selectedItemAttributes.defaultPaint == orig(this.selectedItemAttributes.defaultPaint)
this.selectedItemAttributes.strokeList == orig(this.selectedItemAttributes.strokeList)
this.selectedItemAttributes.strokeList.objects == orig(this.selectedItemAttributes.strokeList.objects)
this.selectedItemAttributes.strokeList.objects.getClass().getName() == orig(this.selectedItemAttributes.strokeList.objects.getClass().getName())
this.selectedItemAttributes.strokeList.objects[] == orig(this.selectedItemAttributes.strokeList.objects[])
this.selectedItemAttributes.strokeList.size == orig(this.selectedItemAttributes.strokeList.size)
this.selectedItemAttributes.strokeList.increment == orig(this.selectedItemAttributes.strokeList.increment)
this.selectedItemAttributes.defaultStroke == orig(this.selectedItemAttributes.defaultStroke)
this.selectedItemAttributes.shapeList == orig(this.selectedItemAttributes.shapeList)
this.selectedItemAttributes.shapeList.objects == orig(this.selectedItemAttributes.shapeList.objects)
this.selectedItemAttributes.shapeList.objects.getClass().getName() == orig(this.selectedItemAttributes.shapeList.objects.getClass().getName())
this.selectedItemAttributes.shapeList.objects[] == orig(this.selectedItemAttributes.shapeList.objects[])
this.selectedItemAttributes.shapeList.size == orig(this.selectedItemAttributes.shapeList.size)
this.selectedItemAttributes.shapeList.increment == orig(this.selectedItemAttributes.shapeList.increment)
this.selectedItemAttributes.defaultShape == orig(this.selectedItemAttributes.defaultShape)
this.selectedItemAttributes.fillPaintList == orig(this.selectedItemAttributes.fillPaintList)
this.selectedItemAttributes.fillPaintList.objects == orig(this.selectedItemAttributes.fillPaintList.objects)
this.selectedItemAttributes.fillPaintList.objects.getClass().getName() == orig(this.selectedItemAttributes.fillPaintList.objects.getClass().getName())
this.selectedItemAttributes.fillPaintList.objects[] == orig(this.selectedItemAttributes.fillPaintList.objects[])
this.selectedItemAttributes.fillPaintList.size == orig(this.selectedItemAttributes.fillPaintList.size)
this.selectedItemAttributes.fillPaintList.increment == orig(this.selectedItemAttributes.fillPaintList.increment)
this.selectedItemAttributes.defaultFillPaint == orig(this.selectedItemAttributes.defaultFillPaint)
this.selectedItemAttributes.defaultFillPaint.getClass().getName() == orig(this.selectedItemAttributes.defaultFillPaint.getClass().getName())
this.selectedItemAttributes.outlinePaintList == orig(this.selectedItemAttributes.outlinePaintList)
this.selectedItemAttributes.outlinePaintList.objects == orig(this.selectedItemAttributes.outlinePaintList.objects)
this.selectedItemAttributes.outlinePaintList.objects.getClass().getName() == orig(this.selectedItemAttributes.outlinePaintList.objects.getClass().getName())
this.selectedItemAttributes.outlinePaintList.objects[] == orig(this.selectedItemAttributes.outlinePaintList.objects[])
this.selectedItemAttributes.outlinePaintList.size == orig(this.selectedItemAttributes.outlinePaintList.size)
this.selectedItemAttributes.outlinePaintList.increment == orig(this.selectedItemAttributes.outlinePaintList.increment)
this.selectedItemAttributes.defaultOutlinePaint == orig(this.selectedItemAttributes.defaultOutlinePaint)
this.selectedItemAttributes.outlineStrokeList == orig(this.selectedItemAttributes.outlineStrokeList)
this.selectedItemAttributes.defaultOutlineStroke == orig(this.selectedItemAttributes.defaultOutlineStroke)
this.selectedItemAttributes.labelsVisibleList == orig(this.selectedItemAttributes.labelsVisibleList)
this.selectedItemAttributes.defaultLabelVisible == orig(this.selectedItemAttributes.defaultLabelVisible)
this.selectedItemAttributes.labelFontList == orig(this.selectedItemAttributes.labelFontList)
this.selectedItemAttributes.defaultLabelFont == orig(this.selectedItemAttributes.defaultLabelFont)
this.selectedItemAttributes.labelPaintList == orig(this.selectedItemAttributes.labelPaintList)
this.selectedItemAttributes.defaultLabelPaint == orig(this.selectedItemAttributes.defaultLabelPaint)
this.selectedItemAttributes.positionItemLabelPositionList == orig(this.selectedItemAttributes.positionItemLabelPositionList)
this.selectedItemAttributes.defaultPositiveItemLabelPosition == orig(this.selectedItemAttributes.defaultPositiveItemLabelPosition)
this.selectedItemAttributes.negativeItemLabelPositionList == orig(this.selectedItemAttributes.negativeItemLabelPositionList)
this.selectedItemAttributes.defaultNegativeItemLabelPosition == orig(this.selectedItemAttributes.defaultNegativeItemLabelPosition)
this.selectedItemAttributes.createEntityList == orig(this.selectedItemAttributes.createEntityList)
this.selectedItemAttributes.defaultCreateEntity == orig(this.selectedItemAttributes.defaultCreateEntity)
org.jfree.chart.renderer.AbstractRenderer.ADJ == orig(org.jfree.chart.renderer.AbstractRenderer.ADJ)
org.jfree.chart.renderer.AbstractRenderer.OPP == orig(org.jfree.chart.renderer.AbstractRenderer.OPP)
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener == orig(org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener)
this.plot has only one value
this.strokeList.objects[] contains only nulls and has only one value, of length 8
this.strokeList.objects[] elements == null
this.strokeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.strokeList.objects[].getClass().getName() elements == null
this.strokeList.size == 0
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener has only one value
return has only one value
return.getClass().getName() == org.jfree.chart.plot.DefaultDrawingSupplier.class
===========================================================================
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItemLabelGenerator():::ENTER
this.plot has only one value
this.paintList.objects[] contains only nulls and has only one value, of length 8
this.paintList.objects[] elements == null
this.paintList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.paintList.objects[].getClass().getName() elements == null
this.paintList.size == 0
this.strokeList.objects[] contains only nulls and has only one value, of length 8
this.strokeList.objects[] elements == null
this.strokeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.strokeList.objects[].getClass().getName() elements == null
this.strokeList.size == 0
this.shapeList.objects[] contains only nulls and has only one value, of length 8
this.shapeList.objects[] elements == null
this.shapeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.shapeList.objects[].getClass().getName() elements == null
this.shapeList.size == 0
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener has only one value
===========================================================================
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItemLabelGenerator():::EXIT
this.plot == orig(this.plot)
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE)
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_VALUE_LABEL_FONT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_VALUE_LABEL_FONT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT.getClass().getName())
org.jfree.chart.plot.CategoryPlot.localizationResources == orig(org.jfree.chart.plot.CategoryPlot.localizationResources)
org.jfree.chart.plot.CategoryPlot.localizationResources.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.localizationResources.getClass().getName())
this.plot.orientation == orig(this.plot.orientation)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL)
org.jfree.chart.plot.PlotOrientation.VERTICAL == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL)
this.plot.orientation.name == orig(this.plot.orientation.name)
this.plot.orientation.name.toString == orig(this.plot.orientation.name.toString)
this.plot.axisOffset == orig(this.plot.axisOffset)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS)
this.plot.axisOffset.unitType == orig(this.plot.axisOffset.unitType)
this.plot.axisOffset.top == orig(this.plot.axisOffset.top)
this.plot.axisOffset.left == orig(this.plot.axisOffset.left)
this.plot.axisOffset.bottom == orig(this.plot.axisOffset.bottom)
this.plot.axisOffset.right == orig(this.plot.axisOffset.right)
this.plot.domainAxes == orig(this.plot.domainAxes)
this.plot.domainAxes.objects == orig(this.plot.domainAxes.objects)
this.plot.domainAxes.objects.getClass().getName() == orig(this.plot.domainAxes.objects.getClass().getName())
this.plot.domainAxes.objects[] == orig(this.plot.domainAxes.objects[])
this.plot.domainAxes.size == orig(this.plot.domainAxes.size)
this.plot.domainAxes.increment == orig(this.plot.domainAxes.increment)
this.plot.domainAxisLocations == orig(this.plot.domainAxisLocations)
this.plot.domainAxisLocations.objects == orig(this.plot.domainAxisLocations.objects)
this.plot.domainAxisLocations.objects.getClass().getName() == orig(this.plot.domainAxisLocations.objects.getClass().getName())
this.plot.domainAxisLocations.objects[] == orig(this.plot.domainAxisLocations.objects[])
this.plot.domainAxisLocations.size == orig(this.plot.domainAxisLocations.size)
this.plot.domainAxisLocations.increment == orig(this.plot.domainAxisLocations.increment)
this.plot.drawSharedDomainAxis == orig(this.plot.drawSharedDomainAxis)
this.plot.rangeAxes == orig(this.plot.rangeAxes)
this.plot.rangeAxes.objects == orig(this.plot.rangeAxes.objects)
this.plot.rangeAxes.objects.getClass().getName() == orig(this.plot.rangeAxes.objects.getClass().getName())
this.plot.rangeAxes.objects[] == orig(this.plot.rangeAxes.objects[])
this.plot.rangeAxes.size == orig(this.plot.rangeAxes.size)
this.plot.rangeAxes.increment == orig(this.plot.rangeAxes.increment)
this.plot.rangeAxisLocations == orig(this.plot.rangeAxisLocations)
this.plot.rangeAxisLocations.objects == orig(this.plot.rangeAxisLocations.objects)
this.plot.rangeAxisLocations.objects.getClass().getName() == orig(this.plot.rangeAxisLocations.objects.getClass().getName())
this.plot.rangeAxisLocations.objects[] == orig(this.plot.rangeAxisLocations.objects[])
this.plot.rangeAxisLocations.size == orig(this.plot.rangeAxisLocations.size)
this.plot.rangeAxisLocations.increment == orig(this.plot.rangeAxisLocations.increment)
this.plot.datasets == orig(this.plot.datasets)
this.plot.datasets.objects == orig(this.plot.datasets.objects)
this.plot.datasets.objects.getClass().getName() == orig(this.plot.datasets.objects.getClass().getName())
this.plot.datasets.objects[] == orig(this.plot.datasets.objects[])
this.plot.datasets.size == orig(this.plot.datasets.size)
this.plot.datasets.increment == orig(this.plot.datasets.increment)
this.plot.datasetToDomainAxesMap == orig(this.plot.datasetToDomainAxesMap)
this.plot.datasetToRangeAxesMap == orig(this.plot.datasetToRangeAxesMap)
this.plot.renderers == orig(this.plot.renderers)
this.plot.renderers.objects == orig(this.plot.renderers.objects)
this.plot.renderers.objects.getClass().getName() == orig(this.plot.renderers.objects.getClass().getName())
this.plot.renderers.objects[] == orig(this.plot.renderers.objects[])
this.plot.renderers.size == orig(this.plot.renderers.size)
this.plot.renderers.increment == orig(this.plot.renderers.increment)
this.plot.renderingOrder == orig(this.plot.renderingOrder)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE)
this.plot.renderingOrder.name == orig(this.plot.renderingOrder.name)
this.plot.renderingOrder.name.toString == orig(this.plot.renderingOrder.name.toString)
this.plot.columnRenderingOrder == orig(this.plot.columnRenderingOrder)
org.jfree.chart.util.SortOrder.ASCENDING == orig(org.jfree.chart.util.SortOrder.ASCENDING)
org.jfree.chart.util.SortOrder.DESCENDING == orig(org.jfree.chart.util.SortOrder.DESCENDING)
this.plot.columnRenderingOrder.name == orig(this.plot.columnRenderingOrder.name)
this.plot.columnRenderingOrder.name.toString == orig(this.plot.columnRenderingOrder.name.toString)
this.plot.rowRenderingOrder == orig(this.plot.rowRenderingOrder)
this.plot.rowRenderingOrder.name == orig(this.plot.rowRenderingOrder.name)
this.plot.rowRenderingOrder.name.toString == orig(this.plot.rowRenderingOrder.name.toString)
this.plot.domainGridlinesVisible == orig(this.plot.domainGridlinesVisible)
this.plot.domainGridlinePosition == orig(this.plot.domainGridlinePosition)
org.jfree.chart.axis.CategoryAnchor.START == orig(org.jfree.chart.axis.CategoryAnchor.START)
org.jfree.chart.axis.CategoryAnchor.MIDDLE == orig(org.jfree.chart.axis.CategoryAnchor.MIDDLE)
org.jfree.chart.axis.CategoryAnchor.END == orig(org.jfree.chart.axis.CategoryAnchor.END)
this.plot.domainGridlinePosition.name == orig(this.plot.domainGridlinePosition.name)
this.plot.domainGridlinePosition.name.toString == orig(this.plot.domainGridlinePosition.name.toString)
this.plot.domainGridlineStroke == orig(this.plot.domainGridlineStroke)
this.plot.domainGridlineStroke.getClass().getName() == orig(this.plot.domainGridlineStroke.getClass().getName())
this.plot.domainGridlinePaint == orig(this.plot.domainGridlinePaint)
this.plot.domainGridlinePaint.getClass().getName() == orig(this.plot.domainGridlinePaint.getClass().getName())
this.plot.rangeZeroBaselineVisible == orig(this.plot.rangeZeroBaselineVisible)
this.plot.rangeZeroBaselineStroke == orig(this.plot.rangeZeroBaselineStroke)
this.plot.rangeZeroBaselineStroke.getClass().getName() == orig(this.plot.rangeZeroBaselineStroke.getClass().getName())
this.plot.rangeZeroBaselinePaint == orig(this.plot.rangeZeroBaselinePaint)
this.plot.rangeZeroBaselinePaint.getClass().getName() == orig(this.plot.rangeZeroBaselinePaint.getClass().getName())
this.plot.rangeGridlinesVisible == orig(this.plot.rangeGridlinesVisible)
this.plot.rangeGridlineStroke == orig(this.plot.rangeGridlineStroke)
this.plot.rangeGridlineStroke.getClass().getName() == orig(this.plot.rangeGridlineStroke.getClass().getName())
this.plot.rangeGridlinePaint == orig(this.plot.rangeGridlinePaint)
this.plot.rangeGridlinePaint.getClass().getName() == orig(this.plot.rangeGridlinePaint.getClass().getName())
this.plot.rangeMinorGridlinesVisible == orig(this.plot.rangeMinorGridlinesVisible)
this.plot.rangeMinorGridlineStroke == orig(this.plot.rangeMinorGridlineStroke)
this.plot.rangeMinorGridlineStroke.getClass().getName() == orig(this.plot.rangeMinorGridlineStroke.getClass().getName())
this.plot.rangeMinorGridlinePaint == orig(this.plot.rangeMinorGridlinePaint)
this.plot.rangeMinorGridlinePaint.getClass().getName() == orig(this.plot.rangeMinorGridlinePaint.getClass().getName())
this.plot.anchorValue == orig(this.plot.anchorValue)
this.plot.crosshairDatasetIndex == orig(this.plot.crosshairDatasetIndex)
this.plot.domainCrosshairVisible == orig(this.plot.domainCrosshairVisible)
this.plot.domainCrosshairRowKey == orig(this.plot.domainCrosshairRowKey)
this.plot.domainCrosshairColumnKey == orig(this.plot.domainCrosshairColumnKey)
this.plot.domainCrosshairStroke == orig(this.plot.domainCrosshairStroke)
this.plot.domainCrosshairStroke.getClass().getName() == orig(this.plot.domainCrosshairStroke.getClass().getName())
this.plot.domainCrosshairPaint == orig(this.plot.domainCrosshairPaint)
this.plot.domainCrosshairPaint.getClass().getName() == orig(this.plot.domainCrosshairPaint.getClass().getName())
this.plot.rangeCrosshairVisible == orig(this.plot.rangeCrosshairVisible)
this.plot.rangeCrosshairValue == orig(this.plot.rangeCrosshairValue)
this.plot.rangeCrosshairStroke == orig(this.plot.rangeCrosshairStroke)
this.plot.rangeCrosshairStroke.getClass().getName() == orig(this.plot.rangeCrosshairStroke.getClass().getName())
this.plot.rangeCrosshairPaint == orig(this.plot.rangeCrosshairPaint)
this.plot.rangeCrosshairPaint.getClass().getName() == orig(this.plot.rangeCrosshairPaint.getClass().getName())
this.plot.rangeCrosshairLockedOnData == orig(this.plot.rangeCrosshairLockedOnData)
this.plot.foregroundDomainMarkers == orig(this.plot.foregroundDomainMarkers)
this.plot.foregroundDomainMarkers.getClass().getName() == orig(this.plot.foregroundDomainMarkers.getClass().getName())
this.plot.backgroundDomainMarkers == orig(this.plot.backgroundDomainMarkers)
this.plot.backgroundDomainMarkers.getClass().getName() == orig(this.plot.backgroundDomainMarkers.getClass().getName())
this.plot.foregroundRangeMarkers == orig(this.plot.foregroundRangeMarkers)
this.plot.foregroundRangeMarkers.getClass().getName() == orig(this.plot.foregroundRangeMarkers.getClass().getName())
this.plot.backgroundRangeMarkers == orig(this.plot.backgroundRangeMarkers)
this.plot.backgroundRangeMarkers.getClass().getName() == orig(this.plot.backgroundRangeMarkers.getClass().getName())
this.plot.annotations == orig(this.plot.annotations)
this.plot.annotations[] == orig(this.plot.annotations[])
this.plot.annotations.getClass().getName() == orig(this.plot.annotations.getClass().getName())
this.plot.weight == orig(this.plot.weight)
this.plot.fixedDomainAxisSpace == orig(this.plot.fixedDomainAxisSpace)
this.plot.fixedRangeAxisSpace == orig(this.plot.fixedRangeAxisSpace)
this.plot.fixedLegendItems == orig(this.plot.fixedLegendItems)
this.plot.rangePannable == orig(this.plot.rangePannable)
this.plot.shadowGenerator == orig(this.plot.shadowGenerator)
this.plot.shadowGenerator.getClass().getName() == orig(this.plot.shadowGenerator.getClass().getName())
org.jfree.chart.plot.Plot.ZERO == orig(org.jfree.chart.plot.Plot.ZERO)
org.jfree.chart.plot.Plot.ZERO.getClass().getName() == orig(org.jfree.chart.plot.Plot.ZERO.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_INSETS == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.top == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.top)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.left == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.left)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.right == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.right)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName())
this.plot.parent == orig(this.plot.parent)
org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener == orig(org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener)
this.plot.datasetGroup == orig(this.plot.datasetGroup)
this.plot.noDataMessage == orig(this.plot.noDataMessage)
this.plot.noDataMessageFont == orig(this.plot.noDataMessageFont)
this.plot.noDataMessagePaint == orig(this.plot.noDataMessagePaint)
this.plot.noDataMessagePaint.getClass().getName() == orig(this.plot.noDataMessagePaint.getClass().getName())
this.plot.insets == orig(this.plot.insets)
this.plot.insets.unitType == orig(this.plot.insets.unitType)
this.plot.insets.top == orig(this.plot.insets.top)
this.plot.insets.left == orig(this.plot.insets.left)
this.plot.insets.bottom == orig(this.plot.insets.bottom)
this.plot.insets.right == orig(this.plot.insets.right)
this.plot.outlineVisible == orig(this.plot.outlineVisible)
this.plot.outlineStroke == orig(this.plot.outlineStroke)
this.plot.outlineStroke.getClass().getName() == orig(this.plot.outlineStroke.getClass().getName())
this.plot.outlinePaint == orig(this.plot.outlinePaint)
this.plot.outlinePaint.getClass().getName() == orig(this.plot.outlinePaint.getClass().getName())
this.plot.backgroundPaint == orig(this.plot.backgroundPaint)
this.plot.backgroundPaint.getClass().getName() == orig(this.plot.backgroundPaint.getClass().getName())
this.plot.backgroundImage == orig(this.plot.backgroundImage)
this.plot.backgroundImageAlignment == orig(this.plot.backgroundImageAlignment)
this.plot.backgroundImageAlpha == orig(this.plot.backgroundImageAlpha)
this.plot.foregroundAlpha == orig(this.plot.foregroundAlpha)
this.plot.backgroundAlpha == orig(this.plot.backgroundAlpha)
this.plot.drawingSupplier == orig(this.plot.drawingSupplier)
this.plot.drawingSupplier.getClass().getName() == orig(this.plot.drawingSupplier.getClass().getName())
this.plot.listenerList == orig(this.plot.listenerList)
this.plot.notify == orig(this.plot.notify)
this.itemLabelGeneratorList == orig(this.itemLabelGeneratorList)
this.itemLabelGeneratorList.objects == orig(this.itemLabelGeneratorList.objects)
this.itemLabelGeneratorList.objects.getClass().getName() == orig(this.itemLabelGeneratorList.objects.getClass().getName())
this.itemLabelGeneratorList.objects[] == orig(this.itemLabelGeneratorList.objects[])
this.itemLabelGeneratorList.size == orig(this.itemLabelGeneratorList.size)
this.itemLabelGeneratorList.increment == orig(this.itemLabelGeneratorList.increment)
this.baseItemLabelGenerator == orig(this.baseItemLabelGenerator)
this.toolTipGeneratorList == orig(this.toolTipGeneratorList)
this.toolTipGeneratorList.objects == orig(this.toolTipGeneratorList.objects)
this.toolTipGeneratorList.objects.getClass().getName() == orig(this.toolTipGeneratorList.objects.getClass().getName())
this.toolTipGeneratorList.objects[] == orig(this.toolTipGeneratorList.objects[])
this.toolTipGeneratorList.size == orig(this.toolTipGeneratorList.size)
this.toolTipGeneratorList.increment == orig(this.toolTipGeneratorList.increment)
this.baseToolTipGenerator == orig(this.baseToolTipGenerator)
this.urlGeneratorList == orig(this.urlGeneratorList)
this.urlGeneratorList.objects == orig(this.urlGeneratorList.objects)
this.urlGeneratorList.objects.getClass().getName() == orig(this.urlGeneratorList.objects.getClass().getName())
this.urlGeneratorList.objects[] == orig(this.urlGeneratorList.objects[])
this.urlGeneratorList.size == orig(this.urlGeneratorList.size)
this.urlGeneratorList.increment == orig(this.urlGeneratorList.increment)
this.baseURLGenerator == orig(this.baseURLGenerator)
this.legendItemLabelGenerator == orig(this.legendItemLabelGenerator)
this.legendItemLabelGenerator.getClass().getName() == orig(this.legendItemLabelGenerator.getClass().getName())
this.legendItemToolTipGenerator == orig(this.legendItemToolTipGenerator)
this.legendItemURLGenerator == orig(this.legendItemURLGenerator)
this.backgroundAnnotations == orig(this.backgroundAnnotations)
this.backgroundAnnotations[] == orig(this.backgroundAnnotations[])
this.backgroundAnnotations.getClass().getName() == orig(this.backgroundAnnotations.getClass().getName())
this.foregroundAnnotations == orig(this.foregroundAnnotations)
this.foregroundAnnotations[] == orig(this.foregroundAnnotations[])
this.foregroundAnnotations.getClass().getName() == orig(this.foregroundAnnotations.getClass().getName())
this.rowCount == orig(this.rowCount)
this.columnCount == orig(this.columnCount)
org.jfree.chart.renderer.AbstractRenderer.ZERO == orig(org.jfree.chart.renderer.AbstractRenderer.ZERO)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_FONT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_FONT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT.getClass().getName())
this.seriesVisibleList == orig(this.seriesVisibleList)
this.seriesVisibleList.objects == orig(this.seriesVisibleList.objects)
this.seriesVisibleList.objects.getClass().getName() == orig(this.seriesVisibleList.objects.getClass().getName())
this.seriesVisibleList.objects[] == orig(this.seriesVisibleList.objects[])
this.seriesVisibleList.size == orig(this.seriesVisibleList.size)
this.seriesVisibleList.increment == orig(this.seriesVisibleList.increment)
this.baseSeriesVisible == orig(this.baseSeriesVisible)
this.seriesVisibleInLegendList == orig(this.seriesVisibleInLegendList)
this.seriesVisibleInLegendList.objects == orig(this.seriesVisibleInLegendList.objects)
this.seriesVisibleInLegendList.objects.getClass().getName() == orig(this.seriesVisibleInLegendList.objects.getClass().getName())
this.seriesVisibleInLegendList.objects[] == orig(this.seriesVisibleInLegendList.objects[])
this.seriesVisibleInLegendList.size == orig(this.seriesVisibleInLegendList.size)
this.seriesVisibleInLegendList.increment == orig(this.seriesVisibleInLegendList.increment)
this.baseSeriesVisibleInLegend == orig(this.baseSeriesVisibleInLegend)
this.paintList == orig(this.paintList)
this.paintList.objects == orig(this.paintList.objects)
this.paintList.objects.getClass().getName() == orig(this.paintList.objects.getClass().getName())
this.paintList.objects[] == orig(this.paintList.objects[])
this.paintList.size == orig(this.paintList.size)
this.paintList.increment == orig(this.paintList.increment)
this.autoPopulateSeriesPaint == orig(this.autoPopulateSeriesPaint)
this.basePaint == orig(this.basePaint)
this.basePaint.getClass().getName() == orig(this.basePaint.getClass().getName())
this.fillPaintList == orig(this.fillPaintList)
this.fillPaintList.objects == orig(this.fillPaintList.objects)
this.fillPaintList.objects.getClass().getName() == orig(this.fillPaintList.objects.getClass().getName())
this.fillPaintList.objects[] == orig(this.fillPaintList.objects[])
this.fillPaintList.size == orig(this.fillPaintList.size)
this.fillPaintList.increment == orig(this.fillPaintList.increment)
this.autoPopulateSeriesFillPaint == orig(this.autoPopulateSeriesFillPaint)
this.baseFillPaint == orig(this.baseFillPaint)
this.baseFillPaint.getClass().getName() == orig(this.baseFillPaint.getClass().getName())
this.outlinePaintList == orig(this.outlinePaintList)
this.outlinePaintList.objects == orig(this.outlinePaintList.objects)
this.outlinePaintList.objects.getClass().getName() == orig(this.outlinePaintList.objects.getClass().getName())
this.outlinePaintList.objects[] == orig(this.outlinePaintList.objects[])
this.outlinePaintList.size == orig(this.outlinePaintList.size)
this.outlinePaintList.increment == orig(this.outlinePaintList.increment)
this.autoPopulateSeriesOutlinePaint == orig(this.autoPopulateSeriesOutlinePaint)
this.baseOutlinePaint == orig(this.baseOutlinePaint)
this.baseOutlinePaint.getClass().getName() == orig(this.baseOutlinePaint.getClass().getName())
this.strokeList == orig(this.strokeList)
this.strokeList.objects == orig(this.strokeList.objects)
this.strokeList.objects.getClass().getName() == orig(this.strokeList.objects.getClass().getName())
this.strokeList.objects[] == orig(this.strokeList.objects[])
this.strokeList.size == orig(this.strokeList.size)
this.strokeList.increment == orig(this.strokeList.increment)
this.autoPopulateSeriesStroke == orig(this.autoPopulateSeriesStroke)
this.baseStroke == orig(this.baseStroke)
this.baseStroke.getClass().getName() == orig(this.baseStroke.getClass().getName())
this.outlineStrokeList == orig(this.outlineStrokeList)
this.outlineStrokeList.objects == orig(this.outlineStrokeList.objects)
this.outlineStrokeList.objects.getClass().getName() == orig(this.outlineStrokeList.objects.getClass().getName())
this.outlineStrokeList.objects[] == orig(this.outlineStrokeList.objects[])
this.outlineStrokeList.size == orig(this.outlineStrokeList.size)
this.outlineStrokeList.increment == orig(this.outlineStrokeList.increment)
this.baseOutlineStroke == orig(this.baseOutlineStroke)
this.baseOutlineStroke.getClass().getName() == orig(this.baseOutlineStroke.getClass().getName())
this.autoPopulateSeriesOutlineStroke == orig(this.autoPopulateSeriesOutlineStroke)
this.shapeList == orig(this.shapeList)
this.shapeList.objects == orig(this.shapeList.objects)
this.shapeList.objects.getClass().getName() == orig(this.shapeList.objects.getClass().getName())
this.shapeList.objects[] == orig(this.shapeList.objects[])
this.shapeList.size == orig(this.shapeList.size)
this.shapeList.increment == orig(this.shapeList.increment)
this.autoPopulateSeriesShape == orig(this.autoPopulateSeriesShape)
this.baseShape == orig(this.baseShape)
this.baseShape.getClass().getName() == orig(this.baseShape.getClass().getName())
this.itemLabelsVisibleList == orig(this.itemLabelsVisibleList)
this.itemLabelsVisibleList.objects == orig(this.itemLabelsVisibleList.objects)
this.itemLabelsVisibleList.objects.getClass().getName() == orig(this.itemLabelsVisibleList.objects.getClass().getName())
this.itemLabelsVisibleList.objects[] == orig(this.itemLabelsVisibleList.objects[])
this.itemLabelsVisibleList.size == orig(this.itemLabelsVisibleList.size)
this.itemLabelsVisibleList.increment == orig(this.itemLabelsVisibleList.increment)
this.baseItemLabelsVisible == orig(this.baseItemLabelsVisible)
this.itemLabelFontList == orig(this.itemLabelFontList)
this.itemLabelFontList.objects == orig(this.itemLabelFontList.objects)
this.itemLabelFontList.objects.getClass().getName() == orig(this.itemLabelFontList.objects.getClass().getName())
this.itemLabelFontList.objects[] == orig(this.itemLabelFontList.objects[])
this.itemLabelFontList.size == orig(this.itemLabelFontList.size)
this.itemLabelFontList.increment == orig(this.itemLabelFontList.increment)
this.baseItemLabelFont == orig(this.baseItemLabelFont)
this.itemLabelPaintList == orig(this.itemLabelPaintList)
this.itemLabelPaintList.objects == orig(this.itemLabelPaintList.objects)
this.itemLabelPaintList.objects.getClass().getName() == orig(this.itemLabelPaintList.objects.getClass().getName())
this.itemLabelPaintList.objects[] == orig(this.itemLabelPaintList.objects[])
this.itemLabelPaintList.size == orig(this.itemLabelPaintList.size)
this.itemLabelPaintList.increment == orig(this.itemLabelPaintList.increment)
this.baseItemLabelPaint == orig(this.baseItemLabelPaint)
this.baseItemLabelPaint.getClass().getName() == orig(this.baseItemLabelPaint.getClass().getName())
this.positiveItemLabelPositionList == orig(this.positiveItemLabelPositionList)
this.positiveItemLabelPositionList.objects == orig(this.positiveItemLabelPositionList.objects)
this.positiveItemLabelPositionList.objects.getClass().getName() == orig(this.positiveItemLabelPositionList.objects.getClass().getName())
this.positiveItemLabelPositionList.objects[] == orig(this.positiveItemLabelPositionList.objects[])
this.positiveItemLabelPositionList.size == orig(this.positiveItemLabelPositionList.size)
this.positiveItemLabelPositionList.increment == orig(this.positiveItemLabelPositionList.increment)
this.basePositiveItemLabelPosition == orig(this.basePositiveItemLabelPosition)
this.basePositiveItemLabelPosition.itemLabelAnchor == orig(this.basePositiveItemLabelPosition.itemLabelAnchor)
org.jfree.chart.labels.ItemLabelAnchor.CENTER == orig(org.jfree.chart.labels.ItemLabelAnchor.CENTER)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE1 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE1)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE2 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE2)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE3 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE3)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE4 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE4)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE5 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE5)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE6 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE6)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE7 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE7)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE8 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE8)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE9 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE9)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE10 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE10)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE11 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE11)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE12 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE12)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12)
this.basePositiveItemLabelPosition.itemLabelAnchor.name == orig(this.basePositiveItemLabelPosition.itemLabelAnchor.name)
this.basePositiveItemLabelPosition.itemLabelAnchor.name.toString == orig(this.basePositiveItemLabelPosition.itemLabelAnchor.name.toString)
this.basePositiveItemLabelPosition.textAnchor == orig(this.basePositiveItemLabelPosition.textAnchor)
org.jfree.chart.text.TextAnchor.TOP_LEFT == orig(org.jfree.chart.text.TextAnchor.TOP_LEFT)
org.jfree.chart.text.TextAnchor.TOP_CENTER == orig(org.jfree.chart.text.TextAnchor.TOP_CENTER)
org.jfree.chart.text.TextAnchor.TOP_RIGHT == orig(org.jfree.chart.text.TextAnchor.TOP_RIGHT)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT)
org.jfree.chart.text.TextAnchor.CENTER_LEFT == orig(org.jfree.chart.text.TextAnchor.CENTER_LEFT)
org.jfree.chart.text.TextAnchor.CENTER == orig(org.jfree.chart.text.TextAnchor.CENTER)
org.jfree.chart.text.TextAnchor.CENTER_RIGHT == orig(org.jfree.chart.text.TextAnchor.CENTER_RIGHT)
org.jfree.chart.text.TextAnchor.BASELINE_LEFT == orig(org.jfree.chart.text.TextAnchor.BASELINE_LEFT)
org.jfree.chart.text.TextAnchor.BASELINE_CENTER == orig(org.jfree.chart.text.TextAnchor.BASELINE_CENTER)
org.jfree.chart.text.TextAnchor.BASELINE_RIGHT == orig(org.jfree.chart.text.TextAnchor.BASELINE_RIGHT)
org.jfree.chart.text.TextAnchor.BOTTOM_LEFT == orig(org.jfree.chart.text.TextAnchor.BOTTOM_LEFT)
org.jfree.chart.text.TextAnchor.BOTTOM_CENTER == orig(org.jfree.chart.text.TextAnchor.BOTTOM_CENTER)
org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT == orig(org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT)
this.basePositiveItemLabelPosition.textAnchor.name == orig(this.basePositiveItemLabelPosition.textAnchor.name)
this.basePositiveItemLabelPosition.textAnchor.name.toString == orig(this.basePositiveItemLabelPosition.textAnchor.name.toString)
this.basePositiveItemLabelPosition.rotationAnchor == orig(this.basePositiveItemLabelPosition.rotationAnchor)
this.basePositiveItemLabelPosition.rotationAnchor.name == orig(this.basePositiveItemLabelPosition.rotationAnchor.name)
this.basePositiveItemLabelPosition.rotationAnchor.name.toString == orig(this.basePositiveItemLabelPosition.rotationAnchor.name.toString)
this.basePositiveItemLabelPosition.angle == orig(this.basePositiveItemLabelPosition.angle)
this.negativeItemLabelPositionList == orig(this.negativeItemLabelPositionList)
this.negativeItemLabelPositionList.objects == orig(this.negativeItemLabelPositionList.objects)
this.negativeItemLabelPositionList.objects.getClass().getName() == orig(this.negativeItemLabelPositionList.objects.getClass().getName())
this.negativeItemLabelPositionList.objects[] == orig(this.negativeItemLabelPositionList.objects[])
this.negativeItemLabelPositionList.size == orig(this.negativeItemLabelPositionList.size)
this.negativeItemLabelPositionList.increment == orig(this.negativeItemLabelPositionList.increment)
this.baseNegativeItemLabelPosition == orig(this.baseNegativeItemLabelPosition)
this.baseNegativeItemLabelPosition.itemLabelAnchor == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor)
this.baseNegativeItemLabelPosition.itemLabelAnchor.name == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor.name)
this.baseNegativeItemLabelPosition.itemLabelAnchor.name.toString == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor.name.toString)
this.baseNegativeItemLabelPosition.textAnchor == orig(this.baseNegativeItemLabelPosition.textAnchor)
this.baseNegativeItemLabelPosition.textAnchor.name == orig(this.baseNegativeItemLabelPosition.textAnchor.name)
this.baseNegativeItemLabelPosition.textAnchor.name.toString == orig(this.baseNegativeItemLabelPosition.textAnchor.name.toString)
this.baseNegativeItemLabelPosition.rotationAnchor == orig(this.baseNegativeItemLabelPosition.rotationAnchor)
this.baseNegativeItemLabelPosition.rotationAnchor.name == orig(this.baseNegativeItemLabelPosition.rotationAnchor.name)
this.baseNegativeItemLabelPosition.rotationAnchor.name.toString == orig(this.baseNegativeItemLabelPosition.rotationAnchor.name.toString)
this.baseNegativeItemLabelPosition.angle == orig(this.baseNegativeItemLabelPosition.angle)
this.itemLabelAnchorOffset == orig(this.itemLabelAnchorOffset)
this.createEntitiesList == orig(this.createEntitiesList)
this.createEntitiesList.objects == orig(this.createEntitiesList.objects)
this.createEntitiesList.objects.getClass().getName() == orig(this.createEntitiesList.objects.getClass().getName())
this.createEntitiesList.objects[] == orig(this.createEntitiesList.objects[])
this.createEntitiesList.size == orig(this.createEntitiesList.size)
this.createEntitiesList.increment == orig(this.createEntitiesList.increment)
this.baseCreateEntities == orig(this.baseCreateEntities)
this.legendShapeList == orig(this.legendShapeList)
this.legendShapeList.objects == orig(this.legendShapeList.objects)
this.legendShapeList.objects.getClass().getName() == orig(this.legendShapeList.objects.getClass().getName())
this.legendShapeList.objects[] == orig(this.legendShapeList.objects[])
this.legendShapeList.size == orig(this.legendShapeList.size)
this.legendShapeList.increment == orig(this.legendShapeList.increment)
this.baseLegendShape == orig(this.baseLegendShape)
this.treatLegendShapeAsLine == orig(this.treatLegendShapeAsLine)
this.legendTextFont == orig(this.legendTextFont)
this.legendTextFont.objects == orig(this.legendTextFont.objects)
this.legendTextFont.objects.getClass().getName() == orig(this.legendTextFont.objects.getClass().getName())
this.legendTextFont.objects[] == orig(this.legendTextFont.objects[])
this.legendTextFont.size == orig(this.legendTextFont.size)
this.legendTextFont.increment == orig(this.legendTextFont.increment)
this.baseLegendTextFont == orig(this.baseLegendTextFont)
this.legendTextPaint == orig(this.legendTextPaint)
this.legendTextPaint.objects == orig(this.legendTextPaint.objects)
this.legendTextPaint.objects.getClass().getName() == orig(this.legendTextPaint.objects.getClass().getName())
this.legendTextPaint.objects[] == orig(this.legendTextPaint.objects[])
this.legendTextPaint.size == orig(this.legendTextPaint.size)
this.legendTextPaint.increment == orig(this.legendTextPaint.increment)
this.baseLegendTextPaint == orig(this.baseLegendTextPaint)
this.dataBoundsIncludesVisibleSeriesOnly == orig(this.dataBoundsIncludesVisibleSeriesOnly)
this.defaultEntityRadius == orig(this.defaultEntityRadius)
this.listenerList == orig(this.listenerList)
this.selectedItemAttributes == orig(this.selectedItemAttributes)
this.selectedItemAttributes.allowNull == orig(this.selectedItemAttributes.allowNull)
this.selectedItemAttributes.paintList == orig(this.selectedItemAttributes.paintList)
this.selectedItemAttributes.paintList.objects == orig(this.selectedItemAttributes.paintList.objects)
this.selectedItemAttributes.paintList.objects.getClass().getName() == orig(this.selectedItemAttributes.paintList.objects.getClass().getName())
this.selectedItemAttributes.paintList.objects[] == orig(this.selectedItemAttributes.paintList.objects[])
this.selectedItemAttributes.paintList.size == orig(this.selectedItemAttributes.paintList.size)
this.selectedItemAttributes.paintList.increment == orig(this.selectedItemAttributes.paintList.increment)
this.selectedItemAttributes.defaultPaint == orig(this.selectedItemAttributes.defaultPaint)
this.selectedItemAttributes.strokeList == orig(this.selectedItemAttributes.strokeList)
this.selectedItemAttributes.strokeList.objects == orig(this.selectedItemAttributes.strokeList.objects)
this.selectedItemAttributes.strokeList.objects.getClass().getName() == orig(this.selectedItemAttributes.strokeList.objects.getClass().getName())
this.selectedItemAttributes.strokeList.objects[] == orig(this.selectedItemAttributes.strokeList.objects[])
this.selectedItemAttributes.strokeList.size == orig(this.selectedItemAttributes.strokeList.size)
this.selectedItemAttributes.strokeList.increment == orig(this.selectedItemAttributes.strokeList.increment)
this.selectedItemAttributes.defaultStroke == orig(this.selectedItemAttributes.defaultStroke)
this.selectedItemAttributes.shapeList == orig(this.selectedItemAttributes.shapeList)
this.selectedItemAttributes.shapeList.objects == orig(this.selectedItemAttributes.shapeList.objects)
this.selectedItemAttributes.shapeList.objects.getClass().getName() == orig(this.selectedItemAttributes.shapeList.objects.getClass().getName())
this.selectedItemAttributes.shapeList.objects[] == orig(this.selectedItemAttributes.shapeList.objects[])
this.selectedItemAttributes.shapeList.size == orig(this.selectedItemAttributes.shapeList.size)
this.selectedItemAttributes.shapeList.increment == orig(this.selectedItemAttributes.shapeList.increment)
this.selectedItemAttributes.defaultShape == orig(this.selectedItemAttributes.defaultShape)
this.selectedItemAttributes.fillPaintList == orig(this.selectedItemAttributes.fillPaintList)
this.selectedItemAttributes.fillPaintList.objects == orig(this.selectedItemAttributes.fillPaintList.objects)
this.selectedItemAttributes.fillPaintList.objects.getClass().getName() == orig(this.selectedItemAttributes.fillPaintList.objects.getClass().getName())
this.selectedItemAttributes.fillPaintList.objects[] == orig(this.selectedItemAttributes.fillPaintList.objects[])
this.selectedItemAttributes.fillPaintList.size == orig(this.selectedItemAttributes.fillPaintList.size)
this.selectedItemAttributes.fillPaintList.increment == orig(this.selectedItemAttributes.fillPaintList.increment)
this.selectedItemAttributes.defaultFillPaint == orig(this.selectedItemAttributes.defaultFillPaint)
this.selectedItemAttributes.defaultFillPaint.getClass().getName() == orig(this.selectedItemAttributes.defaultFillPaint.getClass().getName())
this.selectedItemAttributes.outlinePaintList == orig(this.selectedItemAttributes.outlinePaintList)
this.selectedItemAttributes.outlinePaintList.objects == orig(this.selectedItemAttributes.outlinePaintList.objects)
this.selectedItemAttributes.outlinePaintList.objects.getClass().getName() == orig(this.selectedItemAttributes.outlinePaintList.objects.getClass().getName())
this.selectedItemAttributes.outlinePaintList.objects[] == orig(this.selectedItemAttributes.outlinePaintList.objects[])
this.selectedItemAttributes.outlinePaintList.size == orig(this.selectedItemAttributes.outlinePaintList.size)
this.selectedItemAttributes.outlinePaintList.increment == orig(this.selectedItemAttributes.outlinePaintList.increment)
this.selectedItemAttributes.defaultOutlinePaint == orig(this.selectedItemAttributes.defaultOutlinePaint)
this.selectedItemAttributes.outlineStrokeList == orig(this.selectedItemAttributes.outlineStrokeList)
this.selectedItemAttributes.defaultOutlineStroke == orig(this.selectedItemAttributes.defaultOutlineStroke)
this.selectedItemAttributes.labelsVisibleList == orig(this.selectedItemAttributes.labelsVisibleList)
this.selectedItemAttributes.defaultLabelVisible == orig(this.selectedItemAttributes.defaultLabelVisible)
this.selectedItemAttributes.labelFontList == orig(this.selectedItemAttributes.labelFontList)
this.selectedItemAttributes.defaultLabelFont == orig(this.selectedItemAttributes.defaultLabelFont)
this.selectedItemAttributes.labelPaintList == orig(this.selectedItemAttributes.labelPaintList)
this.selectedItemAttributes.defaultLabelPaint == orig(this.selectedItemAttributes.defaultLabelPaint)
this.selectedItemAttributes.positionItemLabelPositionList == orig(this.selectedItemAttributes.positionItemLabelPositionList)
this.selectedItemAttributes.defaultPositiveItemLabelPosition == orig(this.selectedItemAttributes.defaultPositiveItemLabelPosition)
this.selectedItemAttributes.negativeItemLabelPositionList == orig(this.selectedItemAttributes.negativeItemLabelPositionList)
this.selectedItemAttributes.defaultNegativeItemLabelPosition == orig(this.selectedItemAttributes.defaultNegativeItemLabelPosition)
this.selectedItemAttributes.createEntityList == orig(this.selectedItemAttributes.createEntityList)
this.selectedItemAttributes.defaultCreateEntity == orig(this.selectedItemAttributes.defaultCreateEntity)
org.jfree.chart.renderer.AbstractRenderer.ADJ == orig(org.jfree.chart.renderer.AbstractRenderer.ADJ)
org.jfree.chart.renderer.AbstractRenderer.OPP == orig(org.jfree.chart.renderer.AbstractRenderer.OPP)
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener == orig(org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener)
this.plot has only one value
this.paintList.objects[] contains only nulls and has only one value, of length 8
this.paintList.objects[] elements == null
this.paintList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.paintList.objects[].getClass().getName() elements == null
this.paintList.size == 0
this.strokeList.objects[] contains only nulls and has only one value, of length 8
this.strokeList.objects[] elements == null
this.strokeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.strokeList.objects[].getClass().getName() elements == null
this.strokeList.size == 0
this.shapeList.objects[] contains only nulls and has only one value, of length 8
this.shapeList.objects[] elements == null
this.shapeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.shapeList.objects[].getClass().getName() elements == null
this.shapeList.size == 0
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener has only one value
return has only one value
return.getClass().getName() == org.jfree.chart.labels.StandardCategorySeriesLabelGenerator.class
===========================================================================
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItemToolTipGenerator():::ENTER
this.plot has only one value
this.paintList.objects[] contains only nulls and has only one value, of length 8
this.paintList.objects[] elements == null
this.paintList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.paintList.objects[].getClass().getName() elements == null
this.paintList.size == 0
this.strokeList.objects[] contains only nulls and has only one value, of length 8
this.strokeList.objects[] elements == null
this.strokeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.strokeList.objects[].getClass().getName() elements == null
this.strokeList.size == 0
this.shapeList.objects[] contains only nulls and has only one value, of length 8
this.shapeList.objects[] elements == null
this.shapeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.shapeList.objects[].getClass().getName() elements == null
this.shapeList.size == 0
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener has only one value
===========================================================================
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItemToolTipGenerator():::EXIT
this.plot == orig(this.plot)
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE)
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_VALUE_LABEL_FONT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_VALUE_LABEL_FONT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT.getClass().getName())
org.jfree.chart.plot.CategoryPlot.localizationResources == orig(org.jfree.chart.plot.CategoryPlot.localizationResources)
org.jfree.chart.plot.CategoryPlot.localizationResources.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.localizationResources.getClass().getName())
this.plot.orientation == orig(this.plot.orientation)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL)
org.jfree.chart.plot.PlotOrientation.VERTICAL == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL)
this.plot.orientation.name == orig(this.plot.orientation.name)
this.plot.orientation.name.toString == orig(this.plot.orientation.name.toString)
this.plot.axisOffset == orig(this.plot.axisOffset)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS)
this.plot.axisOffset.unitType == orig(this.plot.axisOffset.unitType)
this.plot.axisOffset.top == orig(this.plot.axisOffset.top)
this.plot.axisOffset.left == orig(this.plot.axisOffset.left)
this.plot.axisOffset.bottom == orig(this.plot.axisOffset.bottom)
this.plot.axisOffset.right == orig(this.plot.axisOffset.right)
this.plot.domainAxes == orig(this.plot.domainAxes)
this.plot.domainAxes.objects == orig(this.plot.domainAxes.objects)
this.plot.domainAxes.objects.getClass().getName() == orig(this.plot.domainAxes.objects.getClass().getName())
this.plot.domainAxes.objects[] == orig(this.plot.domainAxes.objects[])
this.plot.domainAxes.size == orig(this.plot.domainAxes.size)
this.plot.domainAxes.increment == orig(this.plot.domainAxes.increment)
this.plot.domainAxisLocations == orig(this.plot.domainAxisLocations)
this.plot.domainAxisLocations.objects == orig(this.plot.domainAxisLocations.objects)
this.plot.domainAxisLocations.objects.getClass().getName() == orig(this.plot.domainAxisLocations.objects.getClass().getName())
this.plot.domainAxisLocations.objects[] == orig(this.plot.domainAxisLocations.objects[])
this.plot.domainAxisLocations.size == orig(this.plot.domainAxisLocations.size)
this.plot.domainAxisLocations.increment == orig(this.plot.domainAxisLocations.increment)
this.plot.drawSharedDomainAxis == orig(this.plot.drawSharedDomainAxis)
this.plot.rangeAxes == orig(this.plot.rangeAxes)
this.plot.rangeAxes.objects == orig(this.plot.rangeAxes.objects)
this.plot.rangeAxes.objects.getClass().getName() == orig(this.plot.rangeAxes.objects.getClass().getName())
this.plot.rangeAxes.objects[] == orig(this.plot.rangeAxes.objects[])
this.plot.rangeAxes.size == orig(this.plot.rangeAxes.size)
this.plot.rangeAxes.increment == orig(this.plot.rangeAxes.increment)
this.plot.rangeAxisLocations == orig(this.plot.rangeAxisLocations)
this.plot.rangeAxisLocations.objects == orig(this.plot.rangeAxisLocations.objects)
this.plot.rangeAxisLocations.objects.getClass().getName() == orig(this.plot.rangeAxisLocations.objects.getClass().getName())
this.plot.rangeAxisLocations.objects[] == orig(this.plot.rangeAxisLocations.objects[])
this.plot.rangeAxisLocations.size == orig(this.plot.rangeAxisLocations.size)
this.plot.rangeAxisLocations.increment == orig(this.plot.rangeAxisLocations.increment)
this.plot.datasets == orig(this.plot.datasets)
this.plot.datasets.objects == orig(this.plot.datasets.objects)
this.plot.datasets.objects.getClass().getName() == orig(this.plot.datasets.objects.getClass().getName())
this.plot.datasets.objects[] == orig(this.plot.datasets.objects[])
this.plot.datasets.size == orig(this.plot.datasets.size)
this.plot.datasets.increment == orig(this.plot.datasets.increment)
this.plot.datasetToDomainAxesMap == orig(this.plot.datasetToDomainAxesMap)
this.plot.datasetToRangeAxesMap == orig(this.plot.datasetToRangeAxesMap)
this.plot.renderers == orig(this.plot.renderers)
this.plot.renderers.objects == orig(this.plot.renderers.objects)
this.plot.renderers.objects.getClass().getName() == orig(this.plot.renderers.objects.getClass().getName())
this.plot.renderers.objects[] == orig(this.plot.renderers.objects[])
this.plot.renderers.size == orig(this.plot.renderers.size)
this.plot.renderers.increment == orig(this.plot.renderers.increment)
this.plot.renderingOrder == orig(this.plot.renderingOrder)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE)
this.plot.renderingOrder.name == orig(this.plot.renderingOrder.name)
this.plot.renderingOrder.name.toString == orig(this.plot.renderingOrder.name.toString)
this.plot.columnRenderingOrder == orig(this.plot.columnRenderingOrder)
org.jfree.chart.util.SortOrder.ASCENDING == orig(org.jfree.chart.util.SortOrder.ASCENDING)
org.jfree.chart.util.SortOrder.DESCENDING == orig(org.jfree.chart.util.SortOrder.DESCENDING)
this.plot.columnRenderingOrder.name == orig(this.plot.columnRenderingOrder.name)
this.plot.columnRenderingOrder.name.toString == orig(this.plot.columnRenderingOrder.name.toString)
this.plot.rowRenderingOrder == orig(this.plot.rowRenderingOrder)
this.plot.rowRenderingOrder.name == orig(this.plot.rowRenderingOrder.name)
this.plot.rowRenderingOrder.name.toString == orig(this.plot.rowRenderingOrder.name.toString)
this.plot.domainGridlinesVisible == orig(this.plot.domainGridlinesVisible)
this.plot.domainGridlinePosition == orig(this.plot.domainGridlinePosition)
org.jfree.chart.axis.CategoryAnchor.START == orig(org.jfree.chart.axis.CategoryAnchor.START)
org.jfree.chart.axis.CategoryAnchor.MIDDLE == orig(org.jfree.chart.axis.CategoryAnchor.MIDDLE)
org.jfree.chart.axis.CategoryAnchor.END == orig(org.jfree.chart.axis.CategoryAnchor.END)
this.plot.domainGridlinePosition.name == orig(this.plot.domainGridlinePosition.name)
this.plot.domainGridlinePosition.name.toString == orig(this.plot.domainGridlinePosition.name.toString)
this.plot.domainGridlineStroke == orig(this.plot.domainGridlineStroke)
this.plot.domainGridlineStroke.getClass().getName() == orig(this.plot.domainGridlineStroke.getClass().getName())
this.plot.domainGridlinePaint == orig(this.plot.domainGridlinePaint)
this.plot.domainGridlinePaint.getClass().getName() == orig(this.plot.domainGridlinePaint.getClass().getName())
this.plot.rangeZeroBaselineVisible == orig(this.plot.rangeZeroBaselineVisible)
this.plot.rangeZeroBaselineStroke == orig(this.plot.rangeZeroBaselineStroke)
this.plot.rangeZeroBaselineStroke.getClass().getName() == orig(this.plot.rangeZeroBaselineStroke.getClass().getName())
this.plot.rangeZeroBaselinePaint == orig(this.plot.rangeZeroBaselinePaint)
this.plot.rangeZeroBaselinePaint.getClass().getName() == orig(this.plot.rangeZeroBaselinePaint.getClass().getName())
this.plot.rangeGridlinesVisible == orig(this.plot.rangeGridlinesVisible)
this.plot.rangeGridlineStroke == orig(this.plot.rangeGridlineStroke)
this.plot.rangeGridlineStroke.getClass().getName() == orig(this.plot.rangeGridlineStroke.getClass().getName())
this.plot.rangeGridlinePaint == orig(this.plot.rangeGridlinePaint)
this.plot.rangeGridlinePaint.getClass().getName() == orig(this.plot.rangeGridlinePaint.getClass().getName())
this.plot.rangeMinorGridlinesVisible == orig(this.plot.rangeMinorGridlinesVisible)
this.plot.rangeMinorGridlineStroke == orig(this.plot.rangeMinorGridlineStroke)
this.plot.rangeMinorGridlineStroke.getClass().getName() == orig(this.plot.rangeMinorGridlineStroke.getClass().getName())
this.plot.rangeMinorGridlinePaint == orig(this.plot.rangeMinorGridlinePaint)
this.plot.rangeMinorGridlinePaint.getClass().getName() == orig(this.plot.rangeMinorGridlinePaint.getClass().getName())
this.plot.anchorValue == orig(this.plot.anchorValue)
this.plot.crosshairDatasetIndex == orig(this.plot.crosshairDatasetIndex)
this.plot.domainCrosshairVisible == orig(this.plot.domainCrosshairVisible)
this.plot.domainCrosshairRowKey == orig(this.plot.domainCrosshairRowKey)
this.plot.domainCrosshairColumnKey == orig(this.plot.domainCrosshairColumnKey)
this.plot.domainCrosshairStroke == orig(this.plot.domainCrosshairStroke)
this.plot.domainCrosshairStroke.getClass().getName() == orig(this.plot.domainCrosshairStroke.getClass().getName())
this.plot.domainCrosshairPaint == orig(this.plot.domainCrosshairPaint)
this.plot.domainCrosshairPaint.getClass().getName() == orig(this.plot.domainCrosshairPaint.getClass().getName())
this.plot.rangeCrosshairVisible == orig(this.plot.rangeCrosshairVisible)
this.plot.rangeCrosshairValue == orig(this.plot.rangeCrosshairValue)
this.plot.rangeCrosshairStroke == orig(this.plot.rangeCrosshairStroke)
this.plot.rangeCrosshairStroke.getClass().getName() == orig(this.plot.rangeCrosshairStroke.getClass().getName())
this.plot.rangeCrosshairPaint == orig(this.plot.rangeCrosshairPaint)
this.plot.rangeCrosshairPaint.getClass().getName() == orig(this.plot.rangeCrosshairPaint.getClass().getName())
this.plot.rangeCrosshairLockedOnData == orig(this.plot.rangeCrosshairLockedOnData)
this.plot.foregroundDomainMarkers == orig(this.plot.foregroundDomainMarkers)
this.plot.foregroundDomainMarkers.getClass().getName() == orig(this.plot.foregroundDomainMarkers.getClass().getName())
this.plot.backgroundDomainMarkers == orig(this.plot.backgroundDomainMarkers)
this.plot.backgroundDomainMarkers.getClass().getName() == orig(this.plot.backgroundDomainMarkers.getClass().getName())
this.plot.foregroundRangeMarkers == orig(this.plot.foregroundRangeMarkers)
this.plot.foregroundRangeMarkers.getClass().getName() == orig(this.plot.foregroundRangeMarkers.getClass().getName())
this.plot.backgroundRangeMarkers == orig(this.plot.backgroundRangeMarkers)
this.plot.backgroundRangeMarkers.getClass().getName() == orig(this.plot.backgroundRangeMarkers.getClass().getName())
this.plot.annotations == orig(this.plot.annotations)
this.plot.annotations[] == orig(this.plot.annotations[])
this.plot.annotations.getClass().getName() == orig(this.plot.annotations.getClass().getName())
this.plot.weight == orig(this.plot.weight)
this.plot.fixedDomainAxisSpace == orig(this.plot.fixedDomainAxisSpace)
this.plot.fixedRangeAxisSpace == orig(this.plot.fixedRangeAxisSpace)
this.plot.fixedLegendItems == orig(this.plot.fixedLegendItems)
this.plot.rangePannable == orig(this.plot.rangePannable)
this.plot.shadowGenerator == orig(this.plot.shadowGenerator)
this.plot.shadowGenerator.getClass().getName() == orig(this.plot.shadowGenerator.getClass().getName())
org.jfree.chart.plot.Plot.ZERO == orig(org.jfree.chart.plot.Plot.ZERO)
org.jfree.chart.plot.Plot.ZERO.getClass().getName() == orig(org.jfree.chart.plot.Plot.ZERO.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_INSETS == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.top == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.top)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.left == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.left)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.right == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.right)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName())
this.plot.parent == orig(this.plot.parent)
org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener == orig(org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener)
this.plot.datasetGroup == orig(this.plot.datasetGroup)
this.plot.noDataMessage == orig(this.plot.noDataMessage)
this.plot.noDataMessageFont == orig(this.plot.noDataMessageFont)
this.plot.noDataMessagePaint == orig(this.plot.noDataMessagePaint)
this.plot.noDataMessagePaint.getClass().getName() == orig(this.plot.noDataMessagePaint.getClass().getName())
this.plot.insets == orig(this.plot.insets)
this.plot.insets.unitType == orig(this.plot.insets.unitType)
this.plot.insets.top == orig(this.plot.insets.top)
this.plot.insets.left == orig(this.plot.insets.left)
this.plot.insets.bottom == orig(this.plot.insets.bottom)
this.plot.insets.right == orig(this.plot.insets.right)
this.plot.outlineVisible == orig(this.plot.outlineVisible)
this.plot.outlineStroke == orig(this.plot.outlineStroke)
this.plot.outlineStroke.getClass().getName() == orig(this.plot.outlineStroke.getClass().getName())
this.plot.outlinePaint == orig(this.plot.outlinePaint)
this.plot.outlinePaint.getClass().getName() == orig(this.plot.outlinePaint.getClass().getName())
this.plot.backgroundPaint == orig(this.plot.backgroundPaint)
this.plot.backgroundPaint.getClass().getName() == orig(this.plot.backgroundPaint.getClass().getName())
this.plot.backgroundImage == orig(this.plot.backgroundImage)
this.plot.backgroundImageAlignment == orig(this.plot.backgroundImageAlignment)
this.plot.backgroundImageAlpha == orig(this.plot.backgroundImageAlpha)
this.plot.foregroundAlpha == orig(this.plot.foregroundAlpha)
this.plot.backgroundAlpha == orig(this.plot.backgroundAlpha)
this.plot.drawingSupplier == orig(this.plot.drawingSupplier)
this.plot.drawingSupplier.getClass().getName() == orig(this.plot.drawingSupplier.getClass().getName())
this.plot.listenerList == orig(this.plot.listenerList)
this.plot.notify == orig(this.plot.notify)
this.itemLabelGeneratorList == orig(this.itemLabelGeneratorList)
this.itemLabelGeneratorList.objects == orig(this.itemLabelGeneratorList.objects)
this.itemLabelGeneratorList.objects.getClass().getName() == orig(this.itemLabelGeneratorList.objects.getClass().getName())
this.itemLabelGeneratorList.objects[] == orig(this.itemLabelGeneratorList.objects[])
this.itemLabelGeneratorList.size == orig(this.itemLabelGeneratorList.size)
this.itemLabelGeneratorList.increment == orig(this.itemLabelGeneratorList.increment)
this.baseItemLabelGenerator == orig(this.baseItemLabelGenerator)
this.toolTipGeneratorList == orig(this.toolTipGeneratorList)
this.toolTipGeneratorList.objects == orig(this.toolTipGeneratorList.objects)
this.toolTipGeneratorList.objects.getClass().getName() == orig(this.toolTipGeneratorList.objects.getClass().getName())
this.toolTipGeneratorList.objects[] == orig(this.toolTipGeneratorList.objects[])
this.toolTipGeneratorList.size == orig(this.toolTipGeneratorList.size)
this.toolTipGeneratorList.increment == orig(this.toolTipGeneratorList.increment)
this.baseToolTipGenerator == orig(this.baseToolTipGenerator)
this.urlGeneratorList == orig(this.urlGeneratorList)
this.urlGeneratorList.objects == orig(this.urlGeneratorList.objects)
this.urlGeneratorList.objects.getClass().getName() == orig(this.urlGeneratorList.objects.getClass().getName())
this.urlGeneratorList.objects[] == orig(this.urlGeneratorList.objects[])
this.urlGeneratorList.size == orig(this.urlGeneratorList.size)
this.urlGeneratorList.increment == orig(this.urlGeneratorList.increment)
this.baseURLGenerator == orig(this.baseURLGenerator)
this.legendItemLabelGenerator == orig(this.legendItemLabelGenerator)
this.legendItemLabelGenerator.getClass().getName() == orig(this.legendItemLabelGenerator.getClass().getName())
this.legendItemToolTipGenerator == orig(this.legendItemToolTipGenerator)
this.legendItemURLGenerator == orig(this.legendItemURLGenerator)
this.backgroundAnnotations == orig(this.backgroundAnnotations)
this.backgroundAnnotations[] == orig(this.backgroundAnnotations[])
this.backgroundAnnotations.getClass().getName() == orig(this.backgroundAnnotations.getClass().getName())
this.foregroundAnnotations == orig(this.foregroundAnnotations)
this.foregroundAnnotations[] == orig(this.foregroundAnnotations[])
this.foregroundAnnotations.getClass().getName() == orig(this.foregroundAnnotations.getClass().getName())
this.rowCount == orig(this.rowCount)
this.columnCount == orig(this.columnCount)
org.jfree.chart.renderer.AbstractRenderer.ZERO == orig(org.jfree.chart.renderer.AbstractRenderer.ZERO)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_FONT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_FONT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT.getClass().getName())
this.seriesVisibleList == orig(this.seriesVisibleList)
this.seriesVisibleList.objects == orig(this.seriesVisibleList.objects)
this.seriesVisibleList.objects.getClass().getName() == orig(this.seriesVisibleList.objects.getClass().getName())
this.seriesVisibleList.objects[] == orig(this.seriesVisibleList.objects[])
this.seriesVisibleList.size == orig(this.seriesVisibleList.size)
this.seriesVisibleList.increment == orig(this.seriesVisibleList.increment)
this.baseSeriesVisible == orig(this.baseSeriesVisible)
this.seriesVisibleInLegendList == orig(this.seriesVisibleInLegendList)
this.seriesVisibleInLegendList.objects == orig(this.seriesVisibleInLegendList.objects)
this.seriesVisibleInLegendList.objects.getClass().getName() == orig(this.seriesVisibleInLegendList.objects.getClass().getName())
this.seriesVisibleInLegendList.objects[] == orig(this.seriesVisibleInLegendList.objects[])
this.seriesVisibleInLegendList.size == orig(this.seriesVisibleInLegendList.size)
this.seriesVisibleInLegendList.increment == orig(this.seriesVisibleInLegendList.increment)
this.baseSeriesVisibleInLegend == orig(this.baseSeriesVisibleInLegend)
this.paintList == orig(this.paintList)
this.paintList.objects == orig(this.paintList.objects)
this.paintList.objects.getClass().getName() == orig(this.paintList.objects.getClass().getName())
this.paintList.objects[] == orig(this.paintList.objects[])
this.paintList.size == orig(this.paintList.size)
this.paintList.increment == orig(this.paintList.increment)
this.autoPopulateSeriesPaint == orig(this.autoPopulateSeriesPaint)
this.basePaint == orig(this.basePaint)
this.basePaint.getClass().getName() == orig(this.basePaint.getClass().getName())
this.fillPaintList == orig(this.fillPaintList)
this.fillPaintList.objects == orig(this.fillPaintList.objects)
this.fillPaintList.objects.getClass().getName() == orig(this.fillPaintList.objects.getClass().getName())
this.fillPaintList.objects[] == orig(this.fillPaintList.objects[])
this.fillPaintList.size == orig(this.fillPaintList.size)
this.fillPaintList.increment == orig(this.fillPaintList.increment)
this.autoPopulateSeriesFillPaint == orig(this.autoPopulateSeriesFillPaint)
this.baseFillPaint == orig(this.baseFillPaint)
this.baseFillPaint.getClass().getName() == orig(this.baseFillPaint.getClass().getName())
this.outlinePaintList == orig(this.outlinePaintList)
this.outlinePaintList.objects == orig(this.outlinePaintList.objects)
this.outlinePaintList.objects.getClass().getName() == orig(this.outlinePaintList.objects.getClass().getName())
this.outlinePaintList.objects[] == orig(this.outlinePaintList.objects[])
this.outlinePaintList.size == orig(this.outlinePaintList.size)
this.outlinePaintList.increment == orig(this.outlinePaintList.increment)
this.autoPopulateSeriesOutlinePaint == orig(this.autoPopulateSeriesOutlinePaint)
this.baseOutlinePaint == orig(this.baseOutlinePaint)
this.baseOutlinePaint.getClass().getName() == orig(this.baseOutlinePaint.getClass().getName())
this.strokeList == orig(this.strokeList)
this.strokeList.objects == orig(this.strokeList.objects)
this.strokeList.objects.getClass().getName() == orig(this.strokeList.objects.getClass().getName())
this.strokeList.objects[] == orig(this.strokeList.objects[])
this.strokeList.size == orig(this.strokeList.size)
this.strokeList.increment == orig(this.strokeList.increment)
this.autoPopulateSeriesStroke == orig(this.autoPopulateSeriesStroke)
this.baseStroke == orig(this.baseStroke)
this.baseStroke.getClass().getName() == orig(this.baseStroke.getClass().getName())
this.outlineStrokeList == orig(this.outlineStrokeList)
this.outlineStrokeList.objects == orig(this.outlineStrokeList.objects)
this.outlineStrokeList.objects.getClass().getName() == orig(this.outlineStrokeList.objects.getClass().getName())
this.outlineStrokeList.objects[] == orig(this.outlineStrokeList.objects[])
this.outlineStrokeList.size == orig(this.outlineStrokeList.size)
this.outlineStrokeList.increment == orig(this.outlineStrokeList.increment)
this.baseOutlineStroke == orig(this.baseOutlineStroke)
this.baseOutlineStroke.getClass().getName() == orig(this.baseOutlineStroke.getClass().getName())
this.autoPopulateSeriesOutlineStroke == orig(this.autoPopulateSeriesOutlineStroke)
this.shapeList == orig(this.shapeList)
this.shapeList.objects == orig(this.shapeList.objects)
this.shapeList.objects.getClass().getName() == orig(this.shapeList.objects.getClass().getName())
this.shapeList.objects[] == orig(this.shapeList.objects[])
this.shapeList.size == orig(this.shapeList.size)
this.shapeList.increment == orig(this.shapeList.increment)
this.autoPopulateSeriesShape == orig(this.autoPopulateSeriesShape)
this.baseShape == orig(this.baseShape)
this.baseShape.getClass().getName() == orig(this.baseShape.getClass().getName())
this.itemLabelsVisibleList == orig(this.itemLabelsVisibleList)
this.itemLabelsVisibleList.objects == orig(this.itemLabelsVisibleList.objects)
this.itemLabelsVisibleList.objects.getClass().getName() == orig(this.itemLabelsVisibleList.objects.getClass().getName())
this.itemLabelsVisibleList.objects[] == orig(this.itemLabelsVisibleList.objects[])
this.itemLabelsVisibleList.size == orig(this.itemLabelsVisibleList.size)
this.itemLabelsVisibleList.increment == orig(this.itemLabelsVisibleList.increment)
this.baseItemLabelsVisible == orig(this.baseItemLabelsVisible)
this.itemLabelFontList == orig(this.itemLabelFontList)
this.itemLabelFontList.objects == orig(this.itemLabelFontList.objects)
this.itemLabelFontList.objects.getClass().getName() == orig(this.itemLabelFontList.objects.getClass().getName())
this.itemLabelFontList.objects[] == orig(this.itemLabelFontList.objects[])
this.itemLabelFontList.size == orig(this.itemLabelFontList.size)
this.itemLabelFontList.increment == orig(this.itemLabelFontList.increment)
this.baseItemLabelFont == orig(this.baseItemLabelFont)
this.itemLabelPaintList == orig(this.itemLabelPaintList)
this.itemLabelPaintList.objects == orig(this.itemLabelPaintList.objects)
this.itemLabelPaintList.objects.getClass().getName() == orig(this.itemLabelPaintList.objects.getClass().getName())
this.itemLabelPaintList.objects[] == orig(this.itemLabelPaintList.objects[])
this.itemLabelPaintList.size == orig(this.itemLabelPaintList.size)
this.itemLabelPaintList.increment == orig(this.itemLabelPaintList.increment)
this.baseItemLabelPaint == orig(this.baseItemLabelPaint)
this.baseItemLabelPaint.getClass().getName() == orig(this.baseItemLabelPaint.getClass().getName())
this.positiveItemLabelPositionList == orig(this.positiveItemLabelPositionList)
this.positiveItemLabelPositionList.objects == orig(this.positiveItemLabelPositionList.objects)
this.positiveItemLabelPositionList.objects.getClass().getName() == orig(this.positiveItemLabelPositionList.objects.getClass().getName())
this.positiveItemLabelPositionList.objects[] == orig(this.positiveItemLabelPositionList.objects[])
this.positiveItemLabelPositionList.size == orig(this.positiveItemLabelPositionList.size)
this.positiveItemLabelPositionList.increment == orig(this.positiveItemLabelPositionList.increment)
this.basePositiveItemLabelPosition == orig(this.basePositiveItemLabelPosition)
this.basePositiveItemLabelPosition.itemLabelAnchor == orig(this.basePositiveItemLabelPosition.itemLabelAnchor)
org.jfree.chart.labels.ItemLabelAnchor.CENTER == orig(org.jfree.chart.labels.ItemLabelAnchor.CENTER)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE1 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE1)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE2 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE2)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE3 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE3)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE4 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE4)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE5 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE5)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE6 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE6)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE7 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE7)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE8 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE8)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE9 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE9)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE10 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE10)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE11 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE11)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE12 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE12)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12)
this.basePositiveItemLabelPosition.itemLabelAnchor.name == orig(this.basePositiveItemLabelPosition.itemLabelAnchor.name)
this.basePositiveItemLabelPosition.itemLabelAnchor.name.toString == orig(this.basePositiveItemLabelPosition.itemLabelAnchor.name.toString)
this.basePositiveItemLabelPosition.textAnchor == orig(this.basePositiveItemLabelPosition.textAnchor)
org.jfree.chart.text.TextAnchor.TOP_LEFT == orig(org.jfree.chart.text.TextAnchor.TOP_LEFT)
org.jfree.chart.text.TextAnchor.TOP_CENTER == orig(org.jfree.chart.text.TextAnchor.TOP_CENTER)
org.jfree.chart.text.TextAnchor.TOP_RIGHT == orig(org.jfree.chart.text.TextAnchor.TOP_RIGHT)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT)
org.jfree.chart.text.TextAnchor.CENTER_LEFT == orig(org.jfree.chart.text.TextAnchor.CENTER_LEFT)
org.jfree.chart.text.TextAnchor.CENTER == orig(org.jfree.chart.text.TextAnchor.CENTER)
org.jfree.chart.text.TextAnchor.CENTER_RIGHT == orig(org.jfree.chart.text.TextAnchor.CENTER_RIGHT)
org.jfree.chart.text.TextAnchor.BASELINE_LEFT == orig(org.jfree.chart.text.TextAnchor.BASELINE_LEFT)
org.jfree.chart.text.TextAnchor.BASELINE_CENTER == orig(org.jfree.chart.text.TextAnchor.BASELINE_CENTER)
org.jfree.chart.text.TextAnchor.BASELINE_RIGHT == orig(org.jfree.chart.text.TextAnchor.BASELINE_RIGHT)
org.jfree.chart.text.TextAnchor.BOTTOM_LEFT == orig(org.jfree.chart.text.TextAnchor.BOTTOM_LEFT)
org.jfree.chart.text.TextAnchor.BOTTOM_CENTER == orig(org.jfree.chart.text.TextAnchor.BOTTOM_CENTER)
org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT == orig(org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT)
this.basePositiveItemLabelPosition.textAnchor.name == orig(this.basePositiveItemLabelPosition.textAnchor.name)
this.basePositiveItemLabelPosition.textAnchor.name.toString == orig(this.basePositiveItemLabelPosition.textAnchor.name.toString)
this.basePositiveItemLabelPosition.rotationAnchor == orig(this.basePositiveItemLabelPosition.rotationAnchor)
this.basePositiveItemLabelPosition.rotationAnchor.name == orig(this.basePositiveItemLabelPosition.rotationAnchor.name)
this.basePositiveItemLabelPosition.rotationAnchor.name.toString == orig(this.basePositiveItemLabelPosition.rotationAnchor.name.toString)
this.basePositiveItemLabelPosition.angle == orig(this.basePositiveItemLabelPosition.angle)
this.negativeItemLabelPositionList == orig(this.negativeItemLabelPositionList)
this.negativeItemLabelPositionList.objects == orig(this.negativeItemLabelPositionList.objects)
this.negativeItemLabelPositionList.objects.getClass().getName() == orig(this.negativeItemLabelPositionList.objects.getClass().getName())
this.negativeItemLabelPositionList.objects[] == orig(this.negativeItemLabelPositionList.objects[])
this.negativeItemLabelPositionList.size == orig(this.negativeItemLabelPositionList.size)
this.negativeItemLabelPositionList.increment == orig(this.negativeItemLabelPositionList.increment)
this.baseNegativeItemLabelPosition == orig(this.baseNegativeItemLabelPosition)
this.baseNegativeItemLabelPosition.itemLabelAnchor == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor)
this.baseNegativeItemLabelPosition.itemLabelAnchor.name == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor.name)
this.baseNegativeItemLabelPosition.itemLabelAnchor.name.toString == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor.name.toString)
this.baseNegativeItemLabelPosition.textAnchor == orig(this.baseNegativeItemLabelPosition.textAnchor)
this.baseNegativeItemLabelPosition.textAnchor.name == orig(this.baseNegativeItemLabelPosition.textAnchor.name)
this.baseNegativeItemLabelPosition.textAnchor.name.toString == orig(this.baseNegativeItemLabelPosition.textAnchor.name.toString)
this.baseNegativeItemLabelPosition.rotationAnchor == orig(this.baseNegativeItemLabelPosition.rotationAnchor)
this.baseNegativeItemLabelPosition.rotationAnchor.name == orig(this.baseNegativeItemLabelPosition.rotationAnchor.name)
this.baseNegativeItemLabelPosition.rotationAnchor.name.toString == orig(this.baseNegativeItemLabelPosition.rotationAnchor.name.toString)
this.baseNegativeItemLabelPosition.angle == orig(this.baseNegativeItemLabelPosition.angle)
this.itemLabelAnchorOffset == orig(this.itemLabelAnchorOffset)
this.createEntitiesList == orig(this.createEntitiesList)
this.createEntitiesList.objects == orig(this.createEntitiesList.objects)
this.createEntitiesList.objects.getClass().getName() == orig(this.createEntitiesList.objects.getClass().getName())
this.createEntitiesList.objects[] == orig(this.createEntitiesList.objects[])
this.createEntitiesList.size == orig(this.createEntitiesList.size)
this.createEntitiesList.increment == orig(this.createEntitiesList.increment)
this.baseCreateEntities == orig(this.baseCreateEntities)
this.legendShapeList == orig(this.legendShapeList)
this.legendShapeList.objects == orig(this.legendShapeList.objects)
this.legendShapeList.objects.getClass().getName() == orig(this.legendShapeList.objects.getClass().getName())
this.legendShapeList.objects[] == orig(this.legendShapeList.objects[])
this.legendShapeList.size == orig(this.legendShapeList.size)
this.legendShapeList.increment == orig(this.legendShapeList.increment)
this.baseLegendShape == orig(this.baseLegendShape)
this.treatLegendShapeAsLine == orig(this.treatLegendShapeAsLine)
this.legendTextFont == orig(this.legendTextFont)
this.legendTextFont.objects == orig(this.legendTextFont.objects)
this.legendTextFont.objects.getClass().getName() == orig(this.legendTextFont.objects.getClass().getName())
this.legendTextFont.objects[] == orig(this.legendTextFont.objects[])
this.legendTextFont.size == orig(this.legendTextFont.size)
this.legendTextFont.increment == orig(this.legendTextFont.increment)
this.baseLegendTextFont == orig(this.baseLegendTextFont)
this.legendTextPaint == orig(this.legendTextPaint)
this.legendTextPaint.objects == orig(this.legendTextPaint.objects)
this.legendTextPaint.objects.getClass().getName() == orig(this.legendTextPaint.objects.getClass().getName())
this.legendTextPaint.objects[] == orig(this.legendTextPaint.objects[])
this.legendTextPaint.size == orig(this.legendTextPaint.size)
this.legendTextPaint.increment == orig(this.legendTextPaint.increment)
this.baseLegendTextPaint == orig(this.baseLegendTextPaint)
this.dataBoundsIncludesVisibleSeriesOnly == orig(this.dataBoundsIncludesVisibleSeriesOnly)
this.defaultEntityRadius == orig(this.defaultEntityRadius)
this.listenerList == orig(this.listenerList)
this.selectedItemAttributes == orig(this.selectedItemAttributes)
this.selectedItemAttributes.allowNull == orig(this.selectedItemAttributes.allowNull)
this.selectedItemAttributes.paintList == orig(this.selectedItemAttributes.paintList)
this.selectedItemAttributes.paintList.objects == orig(this.selectedItemAttributes.paintList.objects)
this.selectedItemAttributes.paintList.objects.getClass().getName() == orig(this.selectedItemAttributes.paintList.objects.getClass().getName())
this.selectedItemAttributes.paintList.objects[] == orig(this.selectedItemAttributes.paintList.objects[])
this.selectedItemAttributes.paintList.size == orig(this.selectedItemAttributes.paintList.size)
this.selectedItemAttributes.paintList.increment == orig(this.selectedItemAttributes.paintList.increment)
this.selectedItemAttributes.defaultPaint == orig(this.selectedItemAttributes.defaultPaint)
this.selectedItemAttributes.strokeList == orig(this.selectedItemAttributes.strokeList)
this.selectedItemAttributes.strokeList.objects == orig(this.selectedItemAttributes.strokeList.objects)
this.selectedItemAttributes.strokeList.objects.getClass().getName() == orig(this.selectedItemAttributes.strokeList.objects.getClass().getName())
this.selectedItemAttributes.strokeList.objects[] == orig(this.selectedItemAttributes.strokeList.objects[])
this.selectedItemAttributes.strokeList.size == orig(this.selectedItemAttributes.strokeList.size)
this.selectedItemAttributes.strokeList.increment == orig(this.selectedItemAttributes.strokeList.increment)
this.selectedItemAttributes.defaultStroke == orig(this.selectedItemAttributes.defaultStroke)
this.selectedItemAttributes.shapeList == orig(this.selectedItemAttributes.shapeList)
this.selectedItemAttributes.shapeList.objects == orig(this.selectedItemAttributes.shapeList.objects)
this.selectedItemAttributes.shapeList.objects.getClass().getName() == orig(this.selectedItemAttributes.shapeList.objects.getClass().getName())
this.selectedItemAttributes.shapeList.objects[] == orig(this.selectedItemAttributes.shapeList.objects[])
this.selectedItemAttributes.shapeList.size == orig(this.selectedItemAttributes.shapeList.size)
this.selectedItemAttributes.shapeList.increment == orig(this.selectedItemAttributes.shapeList.increment)
this.selectedItemAttributes.defaultShape == orig(this.selectedItemAttributes.defaultShape)
this.selectedItemAttributes.fillPaintList == orig(this.selectedItemAttributes.fillPaintList)
this.selectedItemAttributes.fillPaintList.objects == orig(this.selectedItemAttributes.fillPaintList.objects)
this.selectedItemAttributes.fillPaintList.objects.getClass().getName() == orig(this.selectedItemAttributes.fillPaintList.objects.getClass().getName())
this.selectedItemAttributes.fillPaintList.objects[] == orig(this.selectedItemAttributes.fillPaintList.objects[])
this.selectedItemAttributes.fillPaintList.size == orig(this.selectedItemAttributes.fillPaintList.size)
this.selectedItemAttributes.fillPaintList.increment == orig(this.selectedItemAttributes.fillPaintList.increment)
this.selectedItemAttributes.defaultFillPaint == orig(this.selectedItemAttributes.defaultFillPaint)
this.selectedItemAttributes.defaultFillPaint.getClass().getName() == orig(this.selectedItemAttributes.defaultFillPaint.getClass().getName())
this.selectedItemAttributes.outlinePaintList == orig(this.selectedItemAttributes.outlinePaintList)
this.selectedItemAttributes.outlinePaintList.objects == orig(this.selectedItemAttributes.outlinePaintList.objects)
this.selectedItemAttributes.outlinePaintList.objects.getClass().getName() == orig(this.selectedItemAttributes.outlinePaintList.objects.getClass().getName())
this.selectedItemAttributes.outlinePaintList.objects[] == orig(this.selectedItemAttributes.outlinePaintList.objects[])
this.selectedItemAttributes.outlinePaintList.size == orig(this.selectedItemAttributes.outlinePaintList.size)
this.selectedItemAttributes.outlinePaintList.increment == orig(this.selectedItemAttributes.outlinePaintList.increment)
this.selectedItemAttributes.defaultOutlinePaint == orig(this.selectedItemAttributes.defaultOutlinePaint)
this.selectedItemAttributes.outlineStrokeList == orig(this.selectedItemAttributes.outlineStrokeList)
this.selectedItemAttributes.defaultOutlineStroke == orig(this.selectedItemAttributes.defaultOutlineStroke)
this.selectedItemAttributes.labelsVisibleList == orig(this.selectedItemAttributes.labelsVisibleList)
this.selectedItemAttributes.defaultLabelVisible == orig(this.selectedItemAttributes.defaultLabelVisible)
this.selectedItemAttributes.labelFontList == orig(this.selectedItemAttributes.labelFontList)
this.selectedItemAttributes.defaultLabelFont == orig(this.selectedItemAttributes.defaultLabelFont)
this.selectedItemAttributes.labelPaintList == orig(this.selectedItemAttributes.labelPaintList)
this.selectedItemAttributes.defaultLabelPaint == orig(this.selectedItemAttributes.defaultLabelPaint)
this.selectedItemAttributes.positionItemLabelPositionList == orig(this.selectedItemAttributes.positionItemLabelPositionList)
this.selectedItemAttributes.defaultPositiveItemLabelPosition == orig(this.selectedItemAttributes.defaultPositiveItemLabelPosition)
this.selectedItemAttributes.negativeItemLabelPositionList == orig(this.selectedItemAttributes.negativeItemLabelPositionList)
this.selectedItemAttributes.defaultNegativeItemLabelPosition == orig(this.selectedItemAttributes.defaultNegativeItemLabelPosition)
this.selectedItemAttributes.createEntityList == orig(this.selectedItemAttributes.createEntityList)
this.selectedItemAttributes.defaultCreateEntity == orig(this.selectedItemAttributes.defaultCreateEntity)
org.jfree.chart.renderer.AbstractRenderer.ADJ == orig(org.jfree.chart.renderer.AbstractRenderer.ADJ)
org.jfree.chart.renderer.AbstractRenderer.OPP == orig(org.jfree.chart.renderer.AbstractRenderer.OPP)
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener == orig(org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener)
this.plot has only one value
this.paintList.objects[] contains only nulls and has only one value, of length 8
this.paintList.objects[] elements == null
this.paintList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.paintList.objects[].getClass().getName() elements == null
this.paintList.size == 0
this.strokeList.objects[] contains only nulls and has only one value, of length 8
this.strokeList.objects[] elements == null
this.strokeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.strokeList.objects[].getClass().getName() elements == null
this.strokeList.size == 0
this.shapeList.objects[] contains only nulls and has only one value, of length 8
this.shapeList.objects[] elements == null
this.shapeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.shapeList.objects[].getClass().getName() elements == null
this.shapeList.size == 0
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener has only one value
return == null
===========================================================================
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItemURLGenerator():::ENTER
this.plot has only one value
this.paintList.objects[] contains only nulls and has only one value, of length 8
this.paintList.objects[] elements == null
this.paintList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.paintList.objects[].getClass().getName() elements == null
this.paintList.size == 0
this.strokeList.objects[] contains only nulls and has only one value, of length 8
this.strokeList.objects[] elements == null
this.strokeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.strokeList.objects[].getClass().getName() elements == null
this.strokeList.size == 0
this.shapeList.objects[] contains only nulls and has only one value, of length 8
this.shapeList.objects[] elements == null
this.shapeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.shapeList.objects[].getClass().getName() elements == null
this.shapeList.size == 0
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener has only one value
===========================================================================
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItemURLGenerator():::EXIT
this.plot == orig(this.plot)
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE)
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_VALUE_LABEL_FONT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_VALUE_LABEL_FONT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT.getClass().getName())
org.jfree.chart.plot.CategoryPlot.localizationResources == orig(org.jfree.chart.plot.CategoryPlot.localizationResources)
org.jfree.chart.plot.CategoryPlot.localizationResources.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.localizationResources.getClass().getName())
this.plot.orientation == orig(this.plot.orientation)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL)
org.jfree.chart.plot.PlotOrientation.VERTICAL == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL)
this.plot.orientation.name == orig(this.plot.orientation.name)
this.plot.orientation.name.toString == orig(this.plot.orientation.name.toString)
this.plot.axisOffset == orig(this.plot.axisOffset)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS)
this.plot.axisOffset.unitType == orig(this.plot.axisOffset.unitType)
this.plot.axisOffset.top == orig(this.plot.axisOffset.top)
this.plot.axisOffset.left == orig(this.plot.axisOffset.left)
this.plot.axisOffset.bottom == orig(this.plot.axisOffset.bottom)
this.plot.axisOffset.right == orig(this.plot.axisOffset.right)
this.plot.domainAxes == orig(this.plot.domainAxes)
this.plot.domainAxes.objects == orig(this.plot.domainAxes.objects)
this.plot.domainAxes.objects.getClass().getName() == orig(this.plot.domainAxes.objects.getClass().getName())
this.plot.domainAxes.objects[] == orig(this.plot.domainAxes.objects[])
this.plot.domainAxes.size == orig(this.plot.domainAxes.size)
this.plot.domainAxes.increment == orig(this.plot.domainAxes.increment)
this.plot.domainAxisLocations == orig(this.plot.domainAxisLocations)
this.plot.domainAxisLocations.objects == orig(this.plot.domainAxisLocations.objects)
this.plot.domainAxisLocations.objects.getClass().getName() == orig(this.plot.domainAxisLocations.objects.getClass().getName())
this.plot.domainAxisLocations.objects[] == orig(this.plot.domainAxisLocations.objects[])
this.plot.domainAxisLocations.size == orig(this.plot.domainAxisLocations.size)
this.plot.domainAxisLocations.increment == orig(this.plot.domainAxisLocations.increment)
this.plot.drawSharedDomainAxis == orig(this.plot.drawSharedDomainAxis)
this.plot.rangeAxes == orig(this.plot.rangeAxes)
this.plot.rangeAxes.objects == orig(this.plot.rangeAxes.objects)
this.plot.rangeAxes.objects.getClass().getName() == orig(this.plot.rangeAxes.objects.getClass().getName())
this.plot.rangeAxes.objects[] == orig(this.plot.rangeAxes.objects[])
this.plot.rangeAxes.size == orig(this.plot.rangeAxes.size)
this.plot.rangeAxes.increment == orig(this.plot.rangeAxes.increment)
this.plot.rangeAxisLocations == orig(this.plot.rangeAxisLocations)
this.plot.rangeAxisLocations.objects == orig(this.plot.rangeAxisLocations.objects)
this.plot.rangeAxisLocations.objects.getClass().getName() == orig(this.plot.rangeAxisLocations.objects.getClass().getName())
this.plot.rangeAxisLocations.objects[] == orig(this.plot.rangeAxisLocations.objects[])
this.plot.rangeAxisLocations.size == orig(this.plot.rangeAxisLocations.size)
this.plot.rangeAxisLocations.increment == orig(this.plot.rangeAxisLocations.increment)
this.plot.datasets == orig(this.plot.datasets)
this.plot.datasets.objects == orig(this.plot.datasets.objects)
this.plot.datasets.objects.getClass().getName() == orig(this.plot.datasets.objects.getClass().getName())
this.plot.datasets.objects[] == orig(this.plot.datasets.objects[])
this.plot.datasets.size == orig(this.plot.datasets.size)
this.plot.datasets.increment == orig(this.plot.datasets.increment)
this.plot.datasetToDomainAxesMap == orig(this.plot.datasetToDomainAxesMap)
this.plot.datasetToRangeAxesMap == orig(this.plot.datasetToRangeAxesMap)
this.plot.renderers == orig(this.plot.renderers)
this.plot.renderers.objects == orig(this.plot.renderers.objects)
this.plot.renderers.objects.getClass().getName() == orig(this.plot.renderers.objects.getClass().getName())
this.plot.renderers.objects[] == orig(this.plot.renderers.objects[])
this.plot.renderers.size == orig(this.plot.renderers.size)
this.plot.renderers.increment == orig(this.plot.renderers.increment)
this.plot.renderingOrder == orig(this.plot.renderingOrder)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE)
this.plot.renderingOrder.name == orig(this.plot.renderingOrder.name)
this.plot.renderingOrder.name.toString == orig(this.plot.renderingOrder.name.toString)
this.plot.columnRenderingOrder == orig(this.plot.columnRenderingOrder)
org.jfree.chart.util.SortOrder.ASCENDING == orig(org.jfree.chart.util.SortOrder.ASCENDING)
org.jfree.chart.util.SortOrder.DESCENDING == orig(org.jfree.chart.util.SortOrder.DESCENDING)
this.plot.columnRenderingOrder.name == orig(this.plot.columnRenderingOrder.name)
this.plot.columnRenderingOrder.name.toString == orig(this.plot.columnRenderingOrder.name.toString)
this.plot.rowRenderingOrder == orig(this.plot.rowRenderingOrder)
this.plot.rowRenderingOrder.name == orig(this.plot.rowRenderingOrder.name)
this.plot.rowRenderingOrder.name.toString == orig(this.plot.rowRenderingOrder.name.toString)
this.plot.domainGridlinesVisible == orig(this.plot.domainGridlinesVisible)
this.plot.domainGridlinePosition == orig(this.plot.domainGridlinePosition)
org.jfree.chart.axis.CategoryAnchor.START == orig(org.jfree.chart.axis.CategoryAnchor.START)
org.jfree.chart.axis.CategoryAnchor.MIDDLE == orig(org.jfree.chart.axis.CategoryAnchor.MIDDLE)
org.jfree.chart.axis.CategoryAnchor.END == orig(org.jfree.chart.axis.CategoryAnchor.END)
this.plot.domainGridlinePosition.name == orig(this.plot.domainGridlinePosition.name)
this.plot.domainGridlinePosition.name.toString == orig(this.plot.domainGridlinePosition.name.toString)
this.plot.domainGridlineStroke == orig(this.plot.domainGridlineStroke)
this.plot.domainGridlineStroke.getClass().getName() == orig(this.plot.domainGridlineStroke.getClass().getName())
this.plot.domainGridlinePaint == orig(this.plot.domainGridlinePaint)
this.plot.domainGridlinePaint.getClass().getName() == orig(this.plot.domainGridlinePaint.getClass().getName())
this.plot.rangeZeroBaselineVisible == orig(this.plot.rangeZeroBaselineVisible)
this.plot.rangeZeroBaselineStroke == orig(this.plot.rangeZeroBaselineStroke)
this.plot.rangeZeroBaselineStroke.getClass().getName() == orig(this.plot.rangeZeroBaselineStroke.getClass().getName())
this.plot.rangeZeroBaselinePaint == orig(this.plot.rangeZeroBaselinePaint)
this.plot.rangeZeroBaselinePaint.getClass().getName() == orig(this.plot.rangeZeroBaselinePaint.getClass().getName())
this.plot.rangeGridlinesVisible == orig(this.plot.rangeGridlinesVisible)
this.plot.rangeGridlineStroke == orig(this.plot.rangeGridlineStroke)
this.plot.rangeGridlineStroke.getClass().getName() == orig(this.plot.rangeGridlineStroke.getClass().getName())
this.plot.rangeGridlinePaint == orig(this.plot.rangeGridlinePaint)
this.plot.rangeGridlinePaint.getClass().getName() == orig(this.plot.rangeGridlinePaint.getClass().getName())
this.plot.rangeMinorGridlinesVisible == orig(this.plot.rangeMinorGridlinesVisible)
this.plot.rangeMinorGridlineStroke == orig(this.plot.rangeMinorGridlineStroke)
this.plot.rangeMinorGridlineStroke.getClass().getName() == orig(this.plot.rangeMinorGridlineStroke.getClass().getName())
this.plot.rangeMinorGridlinePaint == orig(this.plot.rangeMinorGridlinePaint)
this.plot.rangeMinorGridlinePaint.getClass().getName() == orig(this.plot.rangeMinorGridlinePaint.getClass().getName())
this.plot.anchorValue == orig(this.plot.anchorValue)
this.plot.crosshairDatasetIndex == orig(this.plot.crosshairDatasetIndex)
this.plot.domainCrosshairVisible == orig(this.plot.domainCrosshairVisible)
this.plot.domainCrosshairRowKey == orig(this.plot.domainCrosshairRowKey)
this.plot.domainCrosshairColumnKey == orig(this.plot.domainCrosshairColumnKey)
this.plot.domainCrosshairStroke == orig(this.plot.domainCrosshairStroke)
this.plot.domainCrosshairStroke.getClass().getName() == orig(this.plot.domainCrosshairStroke.getClass().getName())
this.plot.domainCrosshairPaint == orig(this.plot.domainCrosshairPaint)
this.plot.domainCrosshairPaint.getClass().getName() == orig(this.plot.domainCrosshairPaint.getClass().getName())
this.plot.rangeCrosshairVisible == orig(this.plot.rangeCrosshairVisible)
this.plot.rangeCrosshairValue == orig(this.plot.rangeCrosshairValue)
this.plot.rangeCrosshairStroke == orig(this.plot.rangeCrosshairStroke)
this.plot.rangeCrosshairStroke.getClass().getName() == orig(this.plot.rangeCrosshairStroke.getClass().getName())
this.plot.rangeCrosshairPaint == orig(this.plot.rangeCrosshairPaint)
this.plot.rangeCrosshairPaint.getClass().getName() == orig(this.plot.rangeCrosshairPaint.getClass().getName())
this.plot.rangeCrosshairLockedOnData == orig(this.plot.rangeCrosshairLockedOnData)
this.plot.foregroundDomainMarkers == orig(this.plot.foregroundDomainMarkers)
this.plot.foregroundDomainMarkers.getClass().getName() == orig(this.plot.foregroundDomainMarkers.getClass().getName())
this.plot.backgroundDomainMarkers == orig(this.plot.backgroundDomainMarkers)
this.plot.backgroundDomainMarkers.getClass().getName() == orig(this.plot.backgroundDomainMarkers.getClass().getName())
this.plot.foregroundRangeMarkers == orig(this.plot.foregroundRangeMarkers)
this.plot.foregroundRangeMarkers.getClass().getName() == orig(this.plot.foregroundRangeMarkers.getClass().getName())
this.plot.backgroundRangeMarkers == orig(this.plot.backgroundRangeMarkers)
this.plot.backgroundRangeMarkers.getClass().getName() == orig(this.plot.backgroundRangeMarkers.getClass().getName())
this.plot.annotations == orig(this.plot.annotations)
this.plot.annotations[] == orig(this.plot.annotations[])
this.plot.annotations.getClass().getName() == orig(this.plot.annotations.getClass().getName())
this.plot.weight == orig(this.plot.weight)
this.plot.fixedDomainAxisSpace == orig(this.plot.fixedDomainAxisSpace)
this.plot.fixedRangeAxisSpace == orig(this.plot.fixedRangeAxisSpace)
this.plot.fixedLegendItems == orig(this.plot.fixedLegendItems)
this.plot.rangePannable == orig(this.plot.rangePannable)
this.plot.shadowGenerator == orig(this.plot.shadowGenerator)
this.plot.shadowGenerator.getClass().getName() == orig(this.plot.shadowGenerator.getClass().getName())
org.jfree.chart.plot.Plot.ZERO == orig(org.jfree.chart.plot.Plot.ZERO)
org.jfree.chart.plot.Plot.ZERO.getClass().getName() == orig(org.jfree.chart.plot.Plot.ZERO.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_INSETS == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.top == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.top)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.left == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.left)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.right == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.right)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName())
this.plot.parent == orig(this.plot.parent)
org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener == orig(org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener)
this.plot.datasetGroup == orig(this.plot.datasetGroup)
this.plot.noDataMessage == orig(this.plot.noDataMessage)
this.plot.noDataMessageFont == orig(this.plot.noDataMessageFont)
this.plot.noDataMessagePaint == orig(this.plot.noDataMessagePaint)
this.plot.noDataMessagePaint.getClass().getName() == orig(this.plot.noDataMessagePaint.getClass().getName())
this.plot.insets == orig(this.plot.insets)
this.plot.insets.unitType == orig(this.plot.insets.unitType)
this.plot.insets.top == orig(this.plot.insets.top)
this.plot.insets.left == orig(this.plot.insets.left)
this.plot.insets.bottom == orig(this.plot.insets.bottom)
this.plot.insets.right == orig(this.plot.insets.right)
this.plot.outlineVisible == orig(this.plot.outlineVisible)
this.plot.outlineStroke == orig(this.plot.outlineStroke)
this.plot.outlineStroke.getClass().getName() == orig(this.plot.outlineStroke.getClass().getName())
this.plot.outlinePaint == orig(this.plot.outlinePaint)
this.plot.outlinePaint.getClass().getName() == orig(this.plot.outlinePaint.getClass().getName())
this.plot.backgroundPaint == orig(this.plot.backgroundPaint)
this.plot.backgroundPaint.getClass().getName() == orig(this.plot.backgroundPaint.getClass().getName())
this.plot.backgroundImage == orig(this.plot.backgroundImage)
this.plot.backgroundImageAlignment == orig(this.plot.backgroundImageAlignment)
this.plot.backgroundImageAlpha == orig(this.plot.backgroundImageAlpha)
this.plot.foregroundAlpha == orig(this.plot.foregroundAlpha)
this.plot.backgroundAlpha == orig(this.plot.backgroundAlpha)
this.plot.drawingSupplier == orig(this.plot.drawingSupplier)
this.plot.drawingSupplier.getClass().getName() == orig(this.plot.drawingSupplier.getClass().getName())
this.plot.listenerList == orig(this.plot.listenerList)
this.plot.notify == orig(this.plot.notify)
this.itemLabelGeneratorList == orig(this.itemLabelGeneratorList)
this.itemLabelGeneratorList.objects == orig(this.itemLabelGeneratorList.objects)
this.itemLabelGeneratorList.objects.getClass().getName() == orig(this.itemLabelGeneratorList.objects.getClass().getName())
this.itemLabelGeneratorList.objects[] == orig(this.itemLabelGeneratorList.objects[])
this.itemLabelGeneratorList.size == orig(this.itemLabelGeneratorList.size)
this.itemLabelGeneratorList.increment == orig(this.itemLabelGeneratorList.increment)
this.baseItemLabelGenerator == orig(this.baseItemLabelGenerator)
this.toolTipGeneratorList == orig(this.toolTipGeneratorList)
this.toolTipGeneratorList.objects == orig(this.toolTipGeneratorList.objects)
this.toolTipGeneratorList.objects.getClass().getName() == orig(this.toolTipGeneratorList.objects.getClass().getName())
this.toolTipGeneratorList.objects[] == orig(this.toolTipGeneratorList.objects[])
this.toolTipGeneratorList.size == orig(this.toolTipGeneratorList.size)
this.toolTipGeneratorList.increment == orig(this.toolTipGeneratorList.increment)
this.baseToolTipGenerator == orig(this.baseToolTipGenerator)
this.urlGeneratorList == orig(this.urlGeneratorList)
this.urlGeneratorList.objects == orig(this.urlGeneratorList.objects)
this.urlGeneratorList.objects.getClass().getName() == orig(this.urlGeneratorList.objects.getClass().getName())
this.urlGeneratorList.objects[] == orig(this.urlGeneratorList.objects[])
this.urlGeneratorList.size == orig(this.urlGeneratorList.size)
this.urlGeneratorList.increment == orig(this.urlGeneratorList.increment)
this.baseURLGenerator == orig(this.baseURLGenerator)
this.legendItemLabelGenerator == orig(this.legendItemLabelGenerator)
this.legendItemLabelGenerator.getClass().getName() == orig(this.legendItemLabelGenerator.getClass().getName())
this.legendItemToolTipGenerator == orig(this.legendItemToolTipGenerator)
this.legendItemURLGenerator == orig(this.legendItemURLGenerator)
this.backgroundAnnotations == orig(this.backgroundAnnotations)
this.backgroundAnnotations[] == orig(this.backgroundAnnotations[])
this.backgroundAnnotations.getClass().getName() == orig(this.backgroundAnnotations.getClass().getName())
this.foregroundAnnotations == orig(this.foregroundAnnotations)
this.foregroundAnnotations[] == orig(this.foregroundAnnotations[])
this.foregroundAnnotations.getClass().getName() == orig(this.foregroundAnnotations.getClass().getName())
this.rowCount == orig(this.rowCount)
this.columnCount == orig(this.columnCount)
org.jfree.chart.renderer.AbstractRenderer.ZERO == orig(org.jfree.chart.renderer.AbstractRenderer.ZERO)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_FONT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_FONT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT.getClass().getName())
this.seriesVisibleList == orig(this.seriesVisibleList)
this.seriesVisibleList.objects == orig(this.seriesVisibleList.objects)
this.seriesVisibleList.objects.getClass().getName() == orig(this.seriesVisibleList.objects.getClass().getName())
this.seriesVisibleList.objects[] == orig(this.seriesVisibleList.objects[])
this.seriesVisibleList.size == orig(this.seriesVisibleList.size)
this.seriesVisibleList.increment == orig(this.seriesVisibleList.increment)
this.baseSeriesVisible == orig(this.baseSeriesVisible)
this.seriesVisibleInLegendList == orig(this.seriesVisibleInLegendList)
this.seriesVisibleInLegendList.objects == orig(this.seriesVisibleInLegendList.objects)
this.seriesVisibleInLegendList.objects.getClass().getName() == orig(this.seriesVisibleInLegendList.objects.getClass().getName())
this.seriesVisibleInLegendList.objects[] == orig(this.seriesVisibleInLegendList.objects[])
this.seriesVisibleInLegendList.size == orig(this.seriesVisibleInLegendList.size)
this.seriesVisibleInLegendList.increment == orig(this.seriesVisibleInLegendList.increment)
this.baseSeriesVisibleInLegend == orig(this.baseSeriesVisibleInLegend)
this.paintList == orig(this.paintList)
this.paintList.objects == orig(this.paintList.objects)
this.paintList.objects.getClass().getName() == orig(this.paintList.objects.getClass().getName())
this.paintList.objects[] == orig(this.paintList.objects[])
this.paintList.size == orig(this.paintList.size)
this.paintList.increment == orig(this.paintList.increment)
this.autoPopulateSeriesPaint == orig(this.autoPopulateSeriesPaint)
this.basePaint == orig(this.basePaint)
this.basePaint.getClass().getName() == orig(this.basePaint.getClass().getName())
this.fillPaintList == orig(this.fillPaintList)
this.fillPaintList.objects == orig(this.fillPaintList.objects)
this.fillPaintList.objects.getClass().getName() == orig(this.fillPaintList.objects.getClass().getName())
this.fillPaintList.objects[] == orig(this.fillPaintList.objects[])
this.fillPaintList.size == orig(this.fillPaintList.size)
this.fillPaintList.increment == orig(this.fillPaintList.increment)
this.autoPopulateSeriesFillPaint == orig(this.autoPopulateSeriesFillPaint)
this.baseFillPaint == orig(this.baseFillPaint)
this.baseFillPaint.getClass().getName() == orig(this.baseFillPaint.getClass().getName())
this.outlinePaintList == orig(this.outlinePaintList)
this.outlinePaintList.objects == orig(this.outlinePaintList.objects)
this.outlinePaintList.objects.getClass().getName() == orig(this.outlinePaintList.objects.getClass().getName())
this.outlinePaintList.objects[] == orig(this.outlinePaintList.objects[])
this.outlinePaintList.size == orig(this.outlinePaintList.size)
this.outlinePaintList.increment == orig(this.outlinePaintList.increment)
this.autoPopulateSeriesOutlinePaint == orig(this.autoPopulateSeriesOutlinePaint)
this.baseOutlinePaint == orig(this.baseOutlinePaint)
this.baseOutlinePaint.getClass().getName() == orig(this.baseOutlinePaint.getClass().getName())
this.strokeList == orig(this.strokeList)
this.strokeList.objects == orig(this.strokeList.objects)
this.strokeList.objects.getClass().getName() == orig(this.strokeList.objects.getClass().getName())
this.strokeList.objects[] == orig(this.strokeList.objects[])
this.strokeList.size == orig(this.strokeList.size)
this.strokeList.increment == orig(this.strokeList.increment)
this.autoPopulateSeriesStroke == orig(this.autoPopulateSeriesStroke)
this.baseStroke == orig(this.baseStroke)
this.baseStroke.getClass().getName() == orig(this.baseStroke.getClass().getName())
this.outlineStrokeList == orig(this.outlineStrokeList)
this.outlineStrokeList.objects == orig(this.outlineStrokeList.objects)
this.outlineStrokeList.objects.getClass().getName() == orig(this.outlineStrokeList.objects.getClass().getName())
this.outlineStrokeList.objects[] == orig(this.outlineStrokeList.objects[])
this.outlineStrokeList.size == orig(this.outlineStrokeList.size)
this.outlineStrokeList.increment == orig(this.outlineStrokeList.increment)
this.baseOutlineStroke == orig(this.baseOutlineStroke)
this.baseOutlineStroke.getClass().getName() == orig(this.baseOutlineStroke.getClass().getName())
this.autoPopulateSeriesOutlineStroke == orig(this.autoPopulateSeriesOutlineStroke)
this.shapeList == orig(this.shapeList)
this.shapeList.objects == orig(this.shapeList.objects)
this.shapeList.objects.getClass().getName() == orig(this.shapeList.objects.getClass().getName())
this.shapeList.objects[] == orig(this.shapeList.objects[])
this.shapeList.size == orig(this.shapeList.size)
this.shapeList.increment == orig(this.shapeList.increment)
this.autoPopulateSeriesShape == orig(this.autoPopulateSeriesShape)
this.baseShape == orig(this.baseShape)
this.baseShape.getClass().getName() == orig(this.baseShape.getClass().getName())
this.itemLabelsVisibleList == orig(this.itemLabelsVisibleList)
this.itemLabelsVisibleList.objects == orig(this.itemLabelsVisibleList.objects)
this.itemLabelsVisibleList.objects.getClass().getName() == orig(this.itemLabelsVisibleList.objects.getClass().getName())
this.itemLabelsVisibleList.objects[] == orig(this.itemLabelsVisibleList.objects[])
this.itemLabelsVisibleList.size == orig(this.itemLabelsVisibleList.size)
this.itemLabelsVisibleList.increment == orig(this.itemLabelsVisibleList.increment)
this.baseItemLabelsVisible == orig(this.baseItemLabelsVisible)
this.itemLabelFontList == orig(this.itemLabelFontList)
this.itemLabelFontList.objects == orig(this.itemLabelFontList.objects)
this.itemLabelFontList.objects.getClass().getName() == orig(this.itemLabelFontList.objects.getClass().getName())
this.itemLabelFontList.objects[] == orig(this.itemLabelFontList.objects[])
this.itemLabelFontList.size == orig(this.itemLabelFontList.size)
this.itemLabelFontList.increment == orig(this.itemLabelFontList.increment)
this.baseItemLabelFont == orig(this.baseItemLabelFont)
this.itemLabelPaintList == orig(this.itemLabelPaintList)
this.itemLabelPaintList.objects == orig(this.itemLabelPaintList.objects)
this.itemLabelPaintList.objects.getClass().getName() == orig(this.itemLabelPaintList.objects.getClass().getName())
this.itemLabelPaintList.objects[] == orig(this.itemLabelPaintList.objects[])
this.itemLabelPaintList.size == orig(this.itemLabelPaintList.size)
this.itemLabelPaintList.increment == orig(this.itemLabelPaintList.increment)
this.baseItemLabelPaint == orig(this.baseItemLabelPaint)
this.baseItemLabelPaint.getClass().getName() == orig(this.baseItemLabelPaint.getClass().getName())
this.positiveItemLabelPositionList == orig(this.positiveItemLabelPositionList)
this.positiveItemLabelPositionList.objects == orig(this.positiveItemLabelPositionList.objects)
this.positiveItemLabelPositionList.objects.getClass().getName() == orig(this.positiveItemLabelPositionList.objects.getClass().getName())
this.positiveItemLabelPositionList.objects[] == orig(this.positiveItemLabelPositionList.objects[])
this.positiveItemLabelPositionList.size == orig(this.positiveItemLabelPositionList.size)
this.positiveItemLabelPositionList.increment == orig(this.positiveItemLabelPositionList.increment)
this.basePositiveItemLabelPosition == orig(this.basePositiveItemLabelPosition)
this.basePositiveItemLabelPosition.itemLabelAnchor == orig(this.basePositiveItemLabelPosition.itemLabelAnchor)
org.jfree.chart.labels.ItemLabelAnchor.CENTER == orig(org.jfree.chart.labels.ItemLabelAnchor.CENTER)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE1 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE1)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE2 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE2)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE3 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE3)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE4 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE4)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE5 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE5)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE6 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE6)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE7 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE7)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE8 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE8)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE9 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE9)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE10 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE10)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE11 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE11)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE12 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE12)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12)
this.basePositiveItemLabelPosition.itemLabelAnchor.name == orig(this.basePositiveItemLabelPosition.itemLabelAnchor.name)
this.basePositiveItemLabelPosition.itemLabelAnchor.name.toString == orig(this.basePositiveItemLabelPosition.itemLabelAnchor.name.toString)
this.basePositiveItemLabelPosition.textAnchor == orig(this.basePositiveItemLabelPosition.textAnchor)
org.jfree.chart.text.TextAnchor.TOP_LEFT == orig(org.jfree.chart.text.TextAnchor.TOP_LEFT)
org.jfree.chart.text.TextAnchor.TOP_CENTER == orig(org.jfree.chart.text.TextAnchor.TOP_CENTER)
org.jfree.chart.text.TextAnchor.TOP_RIGHT == orig(org.jfree.chart.text.TextAnchor.TOP_RIGHT)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT)
org.jfree.chart.text.TextAnchor.CENTER_LEFT == orig(org.jfree.chart.text.TextAnchor.CENTER_LEFT)
org.jfree.chart.text.TextAnchor.CENTER == orig(org.jfree.chart.text.TextAnchor.CENTER)
org.jfree.chart.text.TextAnchor.CENTER_RIGHT == orig(org.jfree.chart.text.TextAnchor.CENTER_RIGHT)
org.jfree.chart.text.TextAnchor.BASELINE_LEFT == orig(org.jfree.chart.text.TextAnchor.BASELINE_LEFT)
org.jfree.chart.text.TextAnchor.BASELINE_CENTER == orig(org.jfree.chart.text.TextAnchor.BASELINE_CENTER)
org.jfree.chart.text.TextAnchor.BASELINE_RIGHT == orig(org.jfree.chart.text.TextAnchor.BASELINE_RIGHT)
org.jfree.chart.text.TextAnchor.BOTTOM_LEFT == orig(org.jfree.chart.text.TextAnchor.BOTTOM_LEFT)
org.jfree.chart.text.TextAnchor.BOTTOM_CENTER == orig(org.jfree.chart.text.TextAnchor.BOTTOM_CENTER)
org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT == orig(org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT)
this.basePositiveItemLabelPosition.textAnchor.name == orig(this.basePositiveItemLabelPosition.textAnchor.name)
this.basePositiveItemLabelPosition.textAnchor.name.toString == orig(this.basePositiveItemLabelPosition.textAnchor.name.toString)
this.basePositiveItemLabelPosition.rotationAnchor == orig(this.basePositiveItemLabelPosition.rotationAnchor)
this.basePositiveItemLabelPosition.rotationAnchor.name == orig(this.basePositiveItemLabelPosition.rotationAnchor.name)
this.basePositiveItemLabelPosition.rotationAnchor.name.toString == orig(this.basePositiveItemLabelPosition.rotationAnchor.name.toString)
this.basePositiveItemLabelPosition.angle == orig(this.basePositiveItemLabelPosition.angle)
this.negativeItemLabelPositionList == orig(this.negativeItemLabelPositionList)
this.negativeItemLabelPositionList.objects == orig(this.negativeItemLabelPositionList.objects)
this.negativeItemLabelPositionList.objects.getClass().getName() == orig(this.negativeItemLabelPositionList.objects.getClass().getName())
this.negativeItemLabelPositionList.objects[] == orig(this.negativeItemLabelPositionList.objects[])
this.negativeItemLabelPositionList.size == orig(this.negativeItemLabelPositionList.size)
this.negativeItemLabelPositionList.increment == orig(this.negativeItemLabelPositionList.increment)
this.baseNegativeItemLabelPosition == orig(this.baseNegativeItemLabelPosition)
this.baseNegativeItemLabelPosition.itemLabelAnchor == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor)
this.baseNegativeItemLabelPosition.itemLabelAnchor.name == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor.name)
this.baseNegativeItemLabelPosition.itemLabelAnchor.name.toString == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor.name.toString)
this.baseNegativeItemLabelPosition.textAnchor == orig(this.baseNegativeItemLabelPosition.textAnchor)
this.baseNegativeItemLabelPosition.textAnchor.name == orig(this.baseNegativeItemLabelPosition.textAnchor.name)
this.baseNegativeItemLabelPosition.textAnchor.name.toString == orig(this.baseNegativeItemLabelPosition.textAnchor.name.toString)
this.baseNegativeItemLabelPosition.rotationAnchor == orig(this.baseNegativeItemLabelPosition.rotationAnchor)
this.baseNegativeItemLabelPosition.rotationAnchor.name == orig(this.baseNegativeItemLabelPosition.rotationAnchor.name)
this.baseNegativeItemLabelPosition.rotationAnchor.name.toString == orig(this.baseNegativeItemLabelPosition.rotationAnchor.name.toString)
this.baseNegativeItemLabelPosition.angle == orig(this.baseNegativeItemLabelPosition.angle)
this.itemLabelAnchorOffset == orig(this.itemLabelAnchorOffset)
this.createEntitiesList == orig(this.createEntitiesList)
this.createEntitiesList.objects == orig(this.createEntitiesList.objects)
this.createEntitiesList.objects.getClass().getName() == orig(this.createEntitiesList.objects.getClass().getName())
this.createEntitiesList.objects[] == orig(this.createEntitiesList.objects[])
this.createEntitiesList.size == orig(this.createEntitiesList.size)
this.createEntitiesList.increment == orig(this.createEntitiesList.increment)
this.baseCreateEntities == orig(this.baseCreateEntities)
this.legendShapeList == orig(this.legendShapeList)
this.legendShapeList.objects == orig(this.legendShapeList.objects)
this.legendShapeList.objects.getClass().getName() == orig(this.legendShapeList.objects.getClass().getName())
this.legendShapeList.objects[] == orig(this.legendShapeList.objects[])
this.legendShapeList.size == orig(this.legendShapeList.size)
this.legendShapeList.increment == orig(this.legendShapeList.increment)
this.baseLegendShape == orig(this.baseLegendShape)
this.treatLegendShapeAsLine == orig(this.treatLegendShapeAsLine)
this.legendTextFont == orig(this.legendTextFont)
this.legendTextFont.objects == orig(this.legendTextFont.objects)
this.legendTextFont.objects.getClass().getName() == orig(this.legendTextFont.objects.getClass().getName())
this.legendTextFont.objects[] == orig(this.legendTextFont.objects[])
this.legendTextFont.size == orig(this.legendTextFont.size)
this.legendTextFont.increment == orig(this.legendTextFont.increment)
this.baseLegendTextFont == orig(this.baseLegendTextFont)
this.legendTextPaint == orig(this.legendTextPaint)
this.legendTextPaint.objects == orig(this.legendTextPaint.objects)
this.legendTextPaint.objects.getClass().getName() == orig(this.legendTextPaint.objects.getClass().getName())
this.legendTextPaint.objects[] == orig(this.legendTextPaint.objects[])
this.legendTextPaint.size == orig(this.legendTextPaint.size)
this.legendTextPaint.increment == orig(this.legendTextPaint.increment)
this.baseLegendTextPaint == orig(this.baseLegendTextPaint)
this.dataBoundsIncludesVisibleSeriesOnly == orig(this.dataBoundsIncludesVisibleSeriesOnly)
this.defaultEntityRadius == orig(this.defaultEntityRadius)
this.listenerList == orig(this.listenerList)
this.selectedItemAttributes == orig(this.selectedItemAttributes)
this.selectedItemAttributes.allowNull == orig(this.selectedItemAttributes.allowNull)
this.selectedItemAttributes.paintList == orig(this.selectedItemAttributes.paintList)
this.selectedItemAttributes.paintList.objects == orig(this.selectedItemAttributes.paintList.objects)
this.selectedItemAttributes.paintList.objects.getClass().getName() == orig(this.selectedItemAttributes.paintList.objects.getClass().getName())
this.selectedItemAttributes.paintList.objects[] == orig(this.selectedItemAttributes.paintList.objects[])
this.selectedItemAttributes.paintList.size == orig(this.selectedItemAttributes.paintList.size)
this.selectedItemAttributes.paintList.increment == orig(this.selectedItemAttributes.paintList.increment)
this.selectedItemAttributes.defaultPaint == orig(this.selectedItemAttributes.defaultPaint)
this.selectedItemAttributes.strokeList == orig(this.selectedItemAttributes.strokeList)
this.selectedItemAttributes.strokeList.objects == orig(this.selectedItemAttributes.strokeList.objects)
this.selectedItemAttributes.strokeList.objects.getClass().getName() == orig(this.selectedItemAttributes.strokeList.objects.getClass().getName())
this.selectedItemAttributes.strokeList.objects[] == orig(this.selectedItemAttributes.strokeList.objects[])
this.selectedItemAttributes.strokeList.size == orig(this.selectedItemAttributes.strokeList.size)
this.selectedItemAttributes.strokeList.increment == orig(this.selectedItemAttributes.strokeList.increment)
this.selectedItemAttributes.defaultStroke == orig(this.selectedItemAttributes.defaultStroke)
this.selectedItemAttributes.shapeList == orig(this.selectedItemAttributes.shapeList)
this.selectedItemAttributes.shapeList.objects == orig(this.selectedItemAttributes.shapeList.objects)
this.selectedItemAttributes.shapeList.objects.getClass().getName() == orig(this.selectedItemAttributes.shapeList.objects.getClass().getName())
this.selectedItemAttributes.shapeList.objects[] == orig(this.selectedItemAttributes.shapeList.objects[])
this.selectedItemAttributes.shapeList.size == orig(this.selectedItemAttributes.shapeList.size)
this.selectedItemAttributes.shapeList.increment == orig(this.selectedItemAttributes.shapeList.increment)
this.selectedItemAttributes.defaultShape == orig(this.selectedItemAttributes.defaultShape)
this.selectedItemAttributes.fillPaintList == orig(this.selectedItemAttributes.fillPaintList)
this.selectedItemAttributes.fillPaintList.objects == orig(this.selectedItemAttributes.fillPaintList.objects)
this.selectedItemAttributes.fillPaintList.objects.getClass().getName() == orig(this.selectedItemAttributes.fillPaintList.objects.getClass().getName())
this.selectedItemAttributes.fillPaintList.objects[] == orig(this.selectedItemAttributes.fillPaintList.objects[])
this.selectedItemAttributes.fillPaintList.size == orig(this.selectedItemAttributes.fillPaintList.size)
this.selectedItemAttributes.fillPaintList.increment == orig(this.selectedItemAttributes.fillPaintList.increment)
this.selectedItemAttributes.defaultFillPaint == orig(this.selectedItemAttributes.defaultFillPaint)
this.selectedItemAttributes.defaultFillPaint.getClass().getName() == orig(this.selectedItemAttributes.defaultFillPaint.getClass().getName())
this.selectedItemAttributes.outlinePaintList == orig(this.selectedItemAttributes.outlinePaintList)
this.selectedItemAttributes.outlinePaintList.objects == orig(this.selectedItemAttributes.outlinePaintList.objects)
this.selectedItemAttributes.outlinePaintList.objects.getClass().getName() == orig(this.selectedItemAttributes.outlinePaintList.objects.getClass().getName())
this.selectedItemAttributes.outlinePaintList.objects[] == orig(this.selectedItemAttributes.outlinePaintList.objects[])
this.selectedItemAttributes.outlinePaintList.size == orig(this.selectedItemAttributes.outlinePaintList.size)
this.selectedItemAttributes.outlinePaintList.increment == orig(this.selectedItemAttributes.outlinePaintList.increment)
this.selectedItemAttributes.defaultOutlinePaint == orig(this.selectedItemAttributes.defaultOutlinePaint)
this.selectedItemAttributes.outlineStrokeList == orig(this.selectedItemAttributes.outlineStrokeList)
this.selectedItemAttributes.defaultOutlineStroke == orig(this.selectedItemAttributes.defaultOutlineStroke)
this.selectedItemAttributes.labelsVisibleList == orig(this.selectedItemAttributes.labelsVisibleList)
this.selectedItemAttributes.defaultLabelVisible == orig(this.selectedItemAttributes.defaultLabelVisible)
this.selectedItemAttributes.labelFontList == orig(this.selectedItemAttributes.labelFontList)
this.selectedItemAttributes.defaultLabelFont == orig(this.selectedItemAttributes.defaultLabelFont)
this.selectedItemAttributes.labelPaintList == orig(this.selectedItemAttributes.labelPaintList)
this.selectedItemAttributes.defaultLabelPaint == orig(this.selectedItemAttributes.defaultLabelPaint)
this.selectedItemAttributes.positionItemLabelPositionList == orig(this.selectedItemAttributes.positionItemLabelPositionList)
this.selectedItemAttributes.defaultPositiveItemLabelPosition == orig(this.selectedItemAttributes.defaultPositiveItemLabelPosition)
this.selectedItemAttributes.negativeItemLabelPositionList == orig(this.selectedItemAttributes.negativeItemLabelPositionList)
this.selectedItemAttributes.defaultNegativeItemLabelPosition == orig(this.selectedItemAttributes.defaultNegativeItemLabelPosition)
this.selectedItemAttributes.createEntityList == orig(this.selectedItemAttributes.createEntityList)
this.selectedItemAttributes.defaultCreateEntity == orig(this.selectedItemAttributes.defaultCreateEntity)
org.jfree.chart.renderer.AbstractRenderer.ADJ == orig(org.jfree.chart.renderer.AbstractRenderer.ADJ)
org.jfree.chart.renderer.AbstractRenderer.OPP == orig(org.jfree.chart.renderer.AbstractRenderer.OPP)
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener == orig(org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener)
this.plot has only one value
this.paintList.objects[] contains only nulls and has only one value, of length 8
this.paintList.objects[] elements == null
this.paintList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.paintList.objects[].getClass().getName() elements == null
this.paintList.size == 0
this.strokeList.objects[] contains only nulls and has only one value, of length 8
this.strokeList.objects[] elements == null
this.strokeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.strokeList.objects[].getClass().getName() elements == null
this.strokeList.size == 0
this.shapeList.objects[] contains only nulls and has only one value, of length 8
this.shapeList.objects[] elements == null
this.shapeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.shapeList.objects[].getClass().getName() elements == null
this.shapeList.size == 0
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener has only one value
return == null
===========================================================================
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems():::ENTER
this.paintList.objects[] contains only nulls and has only one value, of length 8
this.paintList.objects[] elements == null
this.paintList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.paintList.objects[].getClass().getName() elements == null
this.paintList.size == 0
this.strokeList.objects[] contains only nulls and has only one value, of length 8
this.strokeList.objects[] elements == null
this.strokeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.strokeList.objects[].getClass().getName() elements == null
this.strokeList.size == 0
this.shapeList.objects[] contains only nulls and has only one value, of length 8
this.shapeList.objects[] elements == null
this.shapeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.shapeList.objects[].getClass().getName() elements == null
this.shapeList.size == 0
===========================================================================
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems():::EXIT1793
this.paintList.objects[] == orig(this.paintList.objects[])
this.paintList.size == orig(this.paintList.size)
this.strokeList.objects[] == orig(this.strokeList.objects[])
this.strokeList.size == orig(this.strokeList.size)
this.shapeList.objects[] == orig(this.shapeList.objects[])
this.shapeList.size == orig(this.shapeList.size)
this.plot == null
this.paintList.objects[] contains only nulls and has only one value, of length 8
this.paintList.objects[] elements == null
this.paintList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.paintList.objects[].getClass().getName() elements == null
this.paintList.size == 0
this.strokeList.objects[] contains only nulls and has only one value, of length 8
this.strokeList.objects[] elements == null
this.strokeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.strokeList.objects[].getClass().getName() elements == null
this.strokeList.size == 0
this.shapeList.objects[] contains only nulls and has only one value, of length 8
this.shapeList.objects[] elements == null
this.shapeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.shapeList.objects[].getClass().getName() elements == null
this.shapeList.size == 0
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener == null
return.items[] == []
return.items[].getClass().getName() == []
===========================================================================
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems():::EXIT1818
this.plot has only one value
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener has only one value
===========================================================================
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems():::EXIT
this.plot == orig(this.plot)
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE)
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_VALUE_LABEL_FONT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_VALUE_LABEL_FONT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT.getClass().getName())
org.jfree.chart.plot.CategoryPlot.localizationResources == orig(org.jfree.chart.plot.CategoryPlot.localizationResources)
org.jfree.chart.plot.CategoryPlot.localizationResources.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.localizationResources.getClass().getName())
this.plot.orientation == orig(this.plot.orientation)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL)
org.jfree.chart.plot.PlotOrientation.VERTICAL == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL)
this.plot.orientation.name == orig(this.plot.orientation.name)
this.plot.orientation.name.toString == orig(this.plot.orientation.name.toString)
this.plot.axisOffset == orig(this.plot.axisOffset)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS)
this.plot.axisOffset.unitType == orig(this.plot.axisOffset.unitType)
this.plot.axisOffset.top == orig(this.plot.axisOffset.top)
this.plot.axisOffset.left == orig(this.plot.axisOffset.left)
this.plot.axisOffset.bottom == orig(this.plot.axisOffset.bottom)
this.plot.axisOffset.right == orig(this.plot.axisOffset.right)
this.plot.domainAxes == orig(this.plot.domainAxes)
this.plot.domainAxes.objects == orig(this.plot.domainAxes.objects)
this.plot.domainAxes.objects.getClass().getName() == orig(this.plot.domainAxes.objects.getClass().getName())
this.plot.domainAxes.objects[] == orig(this.plot.domainAxes.objects[])
this.plot.domainAxes.size == orig(this.plot.domainAxes.size)
this.plot.domainAxes.increment == orig(this.plot.domainAxes.increment)
this.plot.domainAxisLocations == orig(this.plot.domainAxisLocations)
this.plot.domainAxisLocations.objects == orig(this.plot.domainAxisLocations.objects)
this.plot.domainAxisLocations.objects.getClass().getName() == orig(this.plot.domainAxisLocations.objects.getClass().getName())
this.plot.domainAxisLocations.objects[] == orig(this.plot.domainAxisLocations.objects[])
this.plot.domainAxisLocations.size == orig(this.plot.domainAxisLocations.size)
this.plot.domainAxisLocations.increment == orig(this.plot.domainAxisLocations.increment)
this.plot.drawSharedDomainAxis == orig(this.plot.drawSharedDomainAxis)
this.plot.rangeAxes == orig(this.plot.rangeAxes)
this.plot.rangeAxes.objects == orig(this.plot.rangeAxes.objects)
this.plot.rangeAxes.objects.getClass().getName() == orig(this.plot.rangeAxes.objects.getClass().getName())
this.plot.rangeAxes.objects[] == orig(this.plot.rangeAxes.objects[])
this.plot.rangeAxes.size == orig(this.plot.rangeAxes.size)
this.plot.rangeAxes.increment == orig(this.plot.rangeAxes.increment)
this.plot.rangeAxisLocations == orig(this.plot.rangeAxisLocations)
this.plot.rangeAxisLocations.objects == orig(this.plot.rangeAxisLocations.objects)
this.plot.rangeAxisLocations.objects.getClass().getName() == orig(this.plot.rangeAxisLocations.objects.getClass().getName())
this.plot.rangeAxisLocations.objects[] == orig(this.plot.rangeAxisLocations.objects[])
this.plot.rangeAxisLocations.size == orig(this.plot.rangeAxisLocations.size)
this.plot.rangeAxisLocations.increment == orig(this.plot.rangeAxisLocations.increment)
this.plot.datasets == orig(this.plot.datasets)
this.plot.datasets.objects == orig(this.plot.datasets.objects)
this.plot.datasets.objects.getClass().getName() == orig(this.plot.datasets.objects.getClass().getName())
this.plot.datasets.objects[] == orig(this.plot.datasets.objects[])
this.plot.datasets.size == orig(this.plot.datasets.size)
this.plot.datasets.increment == orig(this.plot.datasets.increment)
this.plot.datasetToDomainAxesMap == orig(this.plot.datasetToDomainAxesMap)
this.plot.datasetToRangeAxesMap == orig(this.plot.datasetToRangeAxesMap)
this.plot.renderers == orig(this.plot.renderers)
this.plot.renderers.objects == orig(this.plot.renderers.objects)
this.plot.renderers.objects.getClass().getName() == orig(this.plot.renderers.objects.getClass().getName())
this.plot.renderers.objects[] == orig(this.plot.renderers.objects[])
this.plot.renderers.size == orig(this.plot.renderers.size)
this.plot.renderers.increment == orig(this.plot.renderers.increment)
this.plot.renderingOrder == orig(this.plot.renderingOrder)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE)
this.plot.renderingOrder.name == orig(this.plot.renderingOrder.name)
this.plot.renderingOrder.name.toString == orig(this.plot.renderingOrder.name.toString)
this.plot.columnRenderingOrder == orig(this.plot.columnRenderingOrder)
org.jfree.chart.util.SortOrder.ASCENDING == orig(org.jfree.chart.util.SortOrder.ASCENDING)
org.jfree.chart.util.SortOrder.DESCENDING == orig(org.jfree.chart.util.SortOrder.DESCENDING)
this.plot.columnRenderingOrder.name == orig(this.plot.columnRenderingOrder.name)
this.plot.columnRenderingOrder.name.toString == orig(this.plot.columnRenderingOrder.name.toString)
this.plot.rowRenderingOrder == orig(this.plot.rowRenderingOrder)
this.plot.rowRenderingOrder.name == orig(this.plot.rowRenderingOrder.name)
this.plot.rowRenderingOrder.name.toString == orig(this.plot.rowRenderingOrder.name.toString)
this.plot.domainGridlinesVisible == orig(this.plot.domainGridlinesVisible)
this.plot.domainGridlinePosition == orig(this.plot.domainGridlinePosition)
org.jfree.chart.axis.CategoryAnchor.START == orig(org.jfree.chart.axis.CategoryAnchor.START)
org.jfree.chart.axis.CategoryAnchor.MIDDLE == orig(org.jfree.chart.axis.CategoryAnchor.MIDDLE)
org.jfree.chart.axis.CategoryAnchor.END == orig(org.jfree.chart.axis.CategoryAnchor.END)
this.plot.domainGridlinePosition.name == orig(this.plot.domainGridlinePosition.name)
this.plot.domainGridlinePosition.name.toString == orig(this.plot.domainGridlinePosition.name.toString)
this.plot.domainGridlineStroke == orig(this.plot.domainGridlineStroke)
this.plot.domainGridlineStroke.getClass().getName() == orig(this.plot.domainGridlineStroke.getClass().getName())
this.plot.domainGridlinePaint == orig(this.plot.domainGridlinePaint)
this.plot.domainGridlinePaint.getClass().getName() == orig(this.plot.domainGridlinePaint.getClass().getName())
this.plot.rangeZeroBaselineVisible == orig(this.plot.rangeZeroBaselineVisible)
this.plot.rangeZeroBaselineStroke == orig(this.plot.rangeZeroBaselineStroke)
this.plot.rangeZeroBaselineStroke.getClass().getName() == orig(this.plot.rangeZeroBaselineStroke.getClass().getName())
this.plot.rangeZeroBaselinePaint == orig(this.plot.rangeZeroBaselinePaint)
this.plot.rangeZeroBaselinePaint.getClass().getName() == orig(this.plot.rangeZeroBaselinePaint.getClass().getName())
this.plot.rangeGridlinesVisible == orig(this.plot.rangeGridlinesVisible)
this.plot.rangeGridlineStroke == orig(this.plot.rangeGridlineStroke)
this.plot.rangeGridlineStroke.getClass().getName() == orig(this.plot.rangeGridlineStroke.getClass().getName())
this.plot.rangeGridlinePaint == orig(this.plot.rangeGridlinePaint)
this.plot.rangeGridlinePaint.getClass().getName() == orig(this.plot.rangeGridlinePaint.getClass().getName())
this.plot.rangeMinorGridlinesVisible == orig(this.plot.rangeMinorGridlinesVisible)
this.plot.rangeMinorGridlineStroke == orig(this.plot.rangeMinorGridlineStroke)
this.plot.rangeMinorGridlineStroke.getClass().getName() == orig(this.plot.rangeMinorGridlineStroke.getClass().getName())
this.plot.rangeMinorGridlinePaint == orig(this.plot.rangeMinorGridlinePaint)
this.plot.rangeMinorGridlinePaint.getClass().getName() == orig(this.plot.rangeMinorGridlinePaint.getClass().getName())
this.plot.anchorValue == orig(this.plot.anchorValue)
this.plot.crosshairDatasetIndex == orig(this.plot.crosshairDatasetIndex)
this.plot.domainCrosshairVisible == orig(this.plot.domainCrosshairVisible)
this.plot.domainCrosshairRowKey == orig(this.plot.domainCrosshairRowKey)
this.plot.domainCrosshairColumnKey == orig(this.plot.domainCrosshairColumnKey)
this.plot.domainCrosshairStroke == orig(this.plot.domainCrosshairStroke)
this.plot.domainCrosshairStroke.getClass().getName() == orig(this.plot.domainCrosshairStroke.getClass().getName())
this.plot.domainCrosshairPaint == orig(this.plot.domainCrosshairPaint)
this.plot.domainCrosshairPaint.getClass().getName() == orig(this.plot.domainCrosshairPaint.getClass().getName())
this.plot.rangeCrosshairVisible == orig(this.plot.rangeCrosshairVisible)
this.plot.rangeCrosshairValue == orig(this.plot.rangeCrosshairValue)
this.plot.rangeCrosshairStroke == orig(this.plot.rangeCrosshairStroke)
this.plot.rangeCrosshairStroke.getClass().getName() == orig(this.plot.rangeCrosshairStroke.getClass().getName())
this.plot.rangeCrosshairPaint == orig(this.plot.rangeCrosshairPaint)
this.plot.rangeCrosshairPaint.getClass().getName() == orig(this.plot.rangeCrosshairPaint.getClass().getName())
this.plot.rangeCrosshairLockedOnData == orig(this.plot.rangeCrosshairLockedOnData)
this.plot.foregroundDomainMarkers == orig(this.plot.foregroundDomainMarkers)
this.plot.foregroundDomainMarkers.getClass().getName() == orig(this.plot.foregroundDomainMarkers.getClass().getName())
this.plot.backgroundDomainMarkers == orig(this.plot.backgroundDomainMarkers)
this.plot.backgroundDomainMarkers.getClass().getName() == orig(this.plot.backgroundDomainMarkers.getClass().getName())
this.plot.foregroundRangeMarkers == orig(this.plot.foregroundRangeMarkers)
this.plot.foregroundRangeMarkers.getClass().getName() == orig(this.plot.foregroundRangeMarkers.getClass().getName())
this.plot.backgroundRangeMarkers == orig(this.plot.backgroundRangeMarkers)
this.plot.backgroundRangeMarkers.getClass().getName() == orig(this.plot.backgroundRangeMarkers.getClass().getName())
this.plot.annotations == orig(this.plot.annotations)
this.plot.annotations[] == orig(this.plot.annotations[])
this.plot.annotations.getClass().getName() == orig(this.plot.annotations.getClass().getName())
this.plot.weight == orig(this.plot.weight)
this.plot.fixedDomainAxisSpace == orig(this.plot.fixedDomainAxisSpace)
this.plot.fixedRangeAxisSpace == orig(this.plot.fixedRangeAxisSpace)
this.plot.fixedLegendItems == orig(this.plot.fixedLegendItems)
this.plot.rangePannable == orig(this.plot.rangePannable)
this.plot.shadowGenerator == orig(this.plot.shadowGenerator)
this.plot.shadowGenerator.getClass().getName() == orig(this.plot.shadowGenerator.getClass().getName())
org.jfree.chart.plot.Plot.ZERO == orig(org.jfree.chart.plot.Plot.ZERO)
org.jfree.chart.plot.Plot.ZERO.getClass().getName() == orig(org.jfree.chart.plot.Plot.ZERO.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_INSETS == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.top == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.top)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.left == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.left)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.right == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.right)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName())
this.plot.parent == orig(this.plot.parent)
org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener == orig(org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener)
this.plot.datasetGroup == orig(this.plot.datasetGroup)
this.plot.noDataMessage == orig(this.plot.noDataMessage)
this.plot.noDataMessageFont == orig(this.plot.noDataMessageFont)
this.plot.noDataMessagePaint == orig(this.plot.noDataMessagePaint)
this.plot.noDataMessagePaint.getClass().getName() == orig(this.plot.noDataMessagePaint.getClass().getName())
this.plot.insets == orig(this.plot.insets)
this.plot.insets.unitType == orig(this.plot.insets.unitType)
this.plot.insets.top == orig(this.plot.insets.top)
this.plot.insets.left == orig(this.plot.insets.left)
this.plot.insets.bottom == orig(this.plot.insets.bottom)
this.plot.insets.right == orig(this.plot.insets.right)
this.plot.outlineVisible == orig(this.plot.outlineVisible)
this.plot.outlineStroke == orig(this.plot.outlineStroke)
this.plot.outlineStroke.getClass().getName() == orig(this.plot.outlineStroke.getClass().getName())
this.plot.outlinePaint == orig(this.plot.outlinePaint)
this.plot.outlinePaint.getClass().getName() == orig(this.plot.outlinePaint.getClass().getName())
this.plot.backgroundPaint == orig(this.plot.backgroundPaint)
this.plot.backgroundPaint.getClass().getName() == orig(this.plot.backgroundPaint.getClass().getName())
this.plot.backgroundImage == orig(this.plot.backgroundImage)
this.plot.backgroundImageAlignment == orig(this.plot.backgroundImageAlignment)
this.plot.backgroundImageAlpha == orig(this.plot.backgroundImageAlpha)
this.plot.foregroundAlpha == orig(this.plot.foregroundAlpha)
this.plot.backgroundAlpha == orig(this.plot.backgroundAlpha)
this.plot.drawingSupplier == orig(this.plot.drawingSupplier)
this.plot.drawingSupplier.getClass().getName() == orig(this.plot.drawingSupplier.getClass().getName())
this.plot.listenerList == orig(this.plot.listenerList)
this.plot.notify == orig(this.plot.notify)
this.itemLabelGeneratorList == orig(this.itemLabelGeneratorList)
this.itemLabelGeneratorList.objects == orig(this.itemLabelGeneratorList.objects)
this.itemLabelGeneratorList.objects.getClass().getName() == orig(this.itemLabelGeneratorList.objects.getClass().getName())
this.itemLabelGeneratorList.objects[] == orig(this.itemLabelGeneratorList.objects[])
this.itemLabelGeneratorList.size == orig(this.itemLabelGeneratorList.size)
this.itemLabelGeneratorList.increment == orig(this.itemLabelGeneratorList.increment)
this.baseItemLabelGenerator == orig(this.baseItemLabelGenerator)
this.toolTipGeneratorList == orig(this.toolTipGeneratorList)
this.toolTipGeneratorList.objects == orig(this.toolTipGeneratorList.objects)
this.toolTipGeneratorList.objects.getClass().getName() == orig(this.toolTipGeneratorList.objects.getClass().getName())
this.toolTipGeneratorList.objects[] == orig(this.toolTipGeneratorList.objects[])
this.toolTipGeneratorList.size == orig(this.toolTipGeneratorList.size)
this.toolTipGeneratorList.increment == orig(this.toolTipGeneratorList.increment)
this.baseToolTipGenerator == orig(this.baseToolTipGenerator)
this.urlGeneratorList == orig(this.urlGeneratorList)
this.urlGeneratorList.objects == orig(this.urlGeneratorList.objects)
this.urlGeneratorList.objects.getClass().getName() == orig(this.urlGeneratorList.objects.getClass().getName())
this.urlGeneratorList.objects[] == orig(this.urlGeneratorList.objects[])
this.urlGeneratorList.size == orig(this.urlGeneratorList.size)
this.urlGeneratorList.increment == orig(this.urlGeneratorList.increment)
this.baseURLGenerator == orig(this.baseURLGenerator)
this.legendItemLabelGenerator == orig(this.legendItemLabelGenerator)
this.legendItemLabelGenerator.getClass().getName() == orig(this.legendItemLabelGenerator.getClass().getName())
this.legendItemToolTipGenerator == orig(this.legendItemToolTipGenerator)
this.legendItemURLGenerator == orig(this.legendItemURLGenerator)
this.backgroundAnnotations == orig(this.backgroundAnnotations)
this.backgroundAnnotations[] == orig(this.backgroundAnnotations[])
this.backgroundAnnotations.getClass().getName() == orig(this.backgroundAnnotations.getClass().getName())
this.foregroundAnnotations == orig(this.foregroundAnnotations)
this.foregroundAnnotations[] == orig(this.foregroundAnnotations[])
this.foregroundAnnotations.getClass().getName() == orig(this.foregroundAnnotations.getClass().getName())
this.rowCount == orig(this.rowCount)
this.columnCount == orig(this.columnCount)
org.jfree.chart.renderer.AbstractRenderer.ZERO == orig(org.jfree.chart.renderer.AbstractRenderer.ZERO)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_FONT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_FONT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT.getClass().getName())
this.seriesVisibleList == orig(this.seriesVisibleList)
this.seriesVisibleList.objects == orig(this.seriesVisibleList.objects)
this.seriesVisibleList.objects.getClass().getName() == orig(this.seriesVisibleList.objects.getClass().getName())
this.seriesVisibleList.objects[] == orig(this.seriesVisibleList.objects[])
this.seriesVisibleList.size == orig(this.seriesVisibleList.size)
this.seriesVisibleList.increment == orig(this.seriesVisibleList.increment)
this.baseSeriesVisible == orig(this.baseSeriesVisible)
this.seriesVisibleInLegendList == orig(this.seriesVisibleInLegendList)
this.seriesVisibleInLegendList.objects == orig(this.seriesVisibleInLegendList.objects)
this.seriesVisibleInLegendList.objects.getClass().getName() == orig(this.seriesVisibleInLegendList.objects.getClass().getName())
this.seriesVisibleInLegendList.objects[] == orig(this.seriesVisibleInLegendList.objects[])
this.seriesVisibleInLegendList.size == orig(this.seriesVisibleInLegendList.size)
this.seriesVisibleInLegendList.increment == orig(this.seriesVisibleInLegendList.increment)
this.baseSeriesVisibleInLegend == orig(this.baseSeriesVisibleInLegend)
this.paintList == orig(this.paintList)
this.paintList.objects == orig(this.paintList.objects)
this.paintList.objects.getClass().getName() == orig(this.paintList.objects.getClass().getName())
this.paintList.increment == orig(this.paintList.increment)
this.autoPopulateSeriesPaint == orig(this.autoPopulateSeriesPaint)
this.basePaint == orig(this.basePaint)
this.basePaint.getClass().getName() == orig(this.basePaint.getClass().getName())
this.fillPaintList == orig(this.fillPaintList)
this.fillPaintList.objects == orig(this.fillPaintList.objects)
this.fillPaintList.objects.getClass().getName() == orig(this.fillPaintList.objects.getClass().getName())
this.fillPaintList.objects[] == orig(this.fillPaintList.objects[])
this.fillPaintList.size == orig(this.fillPaintList.size)
this.fillPaintList.increment == orig(this.fillPaintList.increment)
this.autoPopulateSeriesFillPaint == orig(this.autoPopulateSeriesFillPaint)
this.baseFillPaint == orig(this.baseFillPaint)
this.baseFillPaint.getClass().getName() == orig(this.baseFillPaint.getClass().getName())
this.outlinePaintList == orig(this.outlinePaintList)
this.outlinePaintList.objects == orig(this.outlinePaintList.objects)
this.outlinePaintList.objects.getClass().getName() == orig(this.outlinePaintList.objects.getClass().getName())
this.outlinePaintList.objects[] == orig(this.outlinePaintList.objects[])
this.outlinePaintList.size == orig(this.outlinePaintList.size)
this.outlinePaintList.increment == orig(this.outlinePaintList.increment)
this.autoPopulateSeriesOutlinePaint == orig(this.autoPopulateSeriesOutlinePaint)
this.baseOutlinePaint == orig(this.baseOutlinePaint)
this.baseOutlinePaint.getClass().getName() == orig(this.baseOutlinePaint.getClass().getName())
this.strokeList == orig(this.strokeList)
this.strokeList.objects == orig(this.strokeList.objects)
this.strokeList.objects.getClass().getName() == orig(this.strokeList.objects.getClass().getName())
this.strokeList.increment == orig(this.strokeList.increment)
this.autoPopulateSeriesStroke == orig(this.autoPopulateSeriesStroke)
this.baseStroke == orig(this.baseStroke)
this.baseStroke.getClass().getName() == orig(this.baseStroke.getClass().getName())
this.outlineStrokeList == orig(this.outlineStrokeList)
this.outlineStrokeList.objects == orig(this.outlineStrokeList.objects)
this.outlineStrokeList.objects.getClass().getName() == orig(this.outlineStrokeList.objects.getClass().getName())
this.outlineStrokeList.objects[] == orig(this.outlineStrokeList.objects[])
this.outlineStrokeList.size == orig(this.outlineStrokeList.size)
this.outlineStrokeList.increment == orig(this.outlineStrokeList.increment)
this.baseOutlineStroke == orig(this.baseOutlineStroke)
this.baseOutlineStroke.getClass().getName() == orig(this.baseOutlineStroke.getClass().getName())
this.autoPopulateSeriesOutlineStroke == orig(this.autoPopulateSeriesOutlineStroke)
this.shapeList == orig(this.shapeList)
this.shapeList.objects == orig(this.shapeList.objects)
this.shapeList.objects.getClass().getName() == orig(this.shapeList.objects.getClass().getName())
this.shapeList.increment == orig(this.shapeList.increment)
this.autoPopulateSeriesShape == orig(this.autoPopulateSeriesShape)
this.baseShape == orig(this.baseShape)
this.baseShape.getClass().getName() == orig(this.baseShape.getClass().getName())
this.itemLabelsVisibleList == orig(this.itemLabelsVisibleList)
this.itemLabelsVisibleList.objects == orig(this.itemLabelsVisibleList.objects)
this.itemLabelsVisibleList.objects.getClass().getName() == orig(this.itemLabelsVisibleList.objects.getClass().getName())
this.itemLabelsVisibleList.objects[] == orig(this.itemLabelsVisibleList.objects[])
this.itemLabelsVisibleList.size == orig(this.itemLabelsVisibleList.size)
this.itemLabelsVisibleList.increment == orig(this.itemLabelsVisibleList.increment)
this.baseItemLabelsVisible == orig(this.baseItemLabelsVisible)
this.itemLabelFontList == orig(this.itemLabelFontList)
this.itemLabelFontList.objects == orig(this.itemLabelFontList.objects)
this.itemLabelFontList.objects.getClass().getName() == orig(this.itemLabelFontList.objects.getClass().getName())
this.itemLabelFontList.objects[] == orig(this.itemLabelFontList.objects[])
this.itemLabelFontList.size == orig(this.itemLabelFontList.size)
this.itemLabelFontList.increment == orig(this.itemLabelFontList.increment)
this.baseItemLabelFont == orig(this.baseItemLabelFont)
this.itemLabelPaintList == orig(this.itemLabelPaintList)
this.itemLabelPaintList.objects == orig(this.itemLabelPaintList.objects)
this.itemLabelPaintList.objects.getClass().getName() == orig(this.itemLabelPaintList.objects.getClass().getName())
this.itemLabelPaintList.objects[] == orig(this.itemLabelPaintList.objects[])
this.itemLabelPaintList.size == orig(this.itemLabelPaintList.size)
this.itemLabelPaintList.increment == orig(this.itemLabelPaintList.increment)
this.baseItemLabelPaint == orig(this.baseItemLabelPaint)
this.baseItemLabelPaint.getClass().getName() == orig(this.baseItemLabelPaint.getClass().getName())
this.positiveItemLabelPositionList == orig(this.positiveItemLabelPositionList)
this.positiveItemLabelPositionList.objects == orig(this.positiveItemLabelPositionList.objects)
this.positiveItemLabelPositionList.objects.getClass().getName() == orig(this.positiveItemLabelPositionList.objects.getClass().getName())
this.positiveItemLabelPositionList.objects[] == orig(this.positiveItemLabelPositionList.objects[])
this.positiveItemLabelPositionList.size == orig(this.positiveItemLabelPositionList.size)
this.positiveItemLabelPositionList.increment == orig(this.positiveItemLabelPositionList.increment)
this.basePositiveItemLabelPosition == orig(this.basePositiveItemLabelPosition)
this.basePositiveItemLabelPosition.itemLabelAnchor == orig(this.basePositiveItemLabelPosition.itemLabelAnchor)
org.jfree.chart.labels.ItemLabelAnchor.CENTER == orig(org.jfree.chart.labels.ItemLabelAnchor.CENTER)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE1 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE1)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE2 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE2)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE3 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE3)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE4 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE4)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE5 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE5)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE6 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE6)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE7 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE7)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE8 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE8)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE9 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE9)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE10 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE10)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE11 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE11)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE12 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE12)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12)
this.basePositiveItemLabelPosition.itemLabelAnchor.name == orig(this.basePositiveItemLabelPosition.itemLabelAnchor.name)
this.basePositiveItemLabelPosition.itemLabelAnchor.name.toString == orig(this.basePositiveItemLabelPosition.itemLabelAnchor.name.toString)
this.basePositiveItemLabelPosition.textAnchor == orig(this.basePositiveItemLabelPosition.textAnchor)
org.jfree.chart.text.TextAnchor.TOP_LEFT == orig(org.jfree.chart.text.TextAnchor.TOP_LEFT)
org.jfree.chart.text.TextAnchor.TOP_CENTER == orig(org.jfree.chart.text.TextAnchor.TOP_CENTER)
org.jfree.chart.text.TextAnchor.TOP_RIGHT == orig(org.jfree.chart.text.TextAnchor.TOP_RIGHT)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT)
org.jfree.chart.text.TextAnchor.CENTER_LEFT == orig(org.jfree.chart.text.TextAnchor.CENTER_LEFT)
org.jfree.chart.text.TextAnchor.CENTER == orig(org.jfree.chart.text.TextAnchor.CENTER)
org.jfree.chart.text.TextAnchor.CENTER_RIGHT == orig(org.jfree.chart.text.TextAnchor.CENTER_RIGHT)
org.jfree.chart.text.TextAnchor.BASELINE_LEFT == orig(org.jfree.chart.text.TextAnchor.BASELINE_LEFT)
org.jfree.chart.text.TextAnchor.BASELINE_CENTER == orig(org.jfree.chart.text.TextAnchor.BASELINE_CENTER)
org.jfree.chart.text.TextAnchor.BASELINE_RIGHT == orig(org.jfree.chart.text.TextAnchor.BASELINE_RIGHT)
org.jfree.chart.text.TextAnchor.BOTTOM_LEFT == orig(org.jfree.chart.text.TextAnchor.BOTTOM_LEFT)
org.jfree.chart.text.TextAnchor.BOTTOM_CENTER == orig(org.jfree.chart.text.TextAnchor.BOTTOM_CENTER)
org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT == orig(org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT)
this.basePositiveItemLabelPosition.textAnchor.name == orig(this.basePositiveItemLabelPosition.textAnchor.name)
this.basePositiveItemLabelPosition.textAnchor.name.toString == orig(this.basePositiveItemLabelPosition.textAnchor.name.toString)
this.basePositiveItemLabelPosition.rotationAnchor == orig(this.basePositiveItemLabelPosition.rotationAnchor)
this.basePositiveItemLabelPosition.rotationAnchor.name == orig(this.basePositiveItemLabelPosition.rotationAnchor.name)
this.basePositiveItemLabelPosition.rotationAnchor.name.toString == orig(this.basePositiveItemLabelPosition.rotationAnchor.name.toString)
this.basePositiveItemLabelPosition.angle == orig(this.basePositiveItemLabelPosition.angle)
this.negativeItemLabelPositionList == orig(this.negativeItemLabelPositionList)
this.negativeItemLabelPositionList.objects == orig(this.negativeItemLabelPositionList.objects)
this.negativeItemLabelPositionList.objects.getClass().getName() == orig(this.negativeItemLabelPositionList.objects.getClass().getName())
this.negativeItemLabelPositionList.objects[] == orig(this.negativeItemLabelPositionList.objects[])
this.negativeItemLabelPositionList.size == orig(this.negativeItemLabelPositionList.size)
this.negativeItemLabelPositionList.increment == orig(this.negativeItemLabelPositionList.increment)
this.baseNegativeItemLabelPosition == orig(this.baseNegativeItemLabelPosition)
this.baseNegativeItemLabelPosition.itemLabelAnchor == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor)
this.baseNegativeItemLabelPosition.itemLabelAnchor.name == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor.name)
this.baseNegativeItemLabelPosition.itemLabelAnchor.name.toString == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor.name.toString)
this.baseNegativeItemLabelPosition.textAnchor == orig(this.baseNegativeItemLabelPosition.textAnchor)
this.baseNegativeItemLabelPosition.textAnchor.name == orig(this.baseNegativeItemLabelPosition.textAnchor.name)
this.baseNegativeItemLabelPosition.textAnchor.name.toString == orig(this.baseNegativeItemLabelPosition.textAnchor.name.toString)
this.baseNegativeItemLabelPosition.rotationAnchor == orig(this.baseNegativeItemLabelPosition.rotationAnchor)
this.baseNegativeItemLabelPosition.rotationAnchor.name == orig(this.baseNegativeItemLabelPosition.rotationAnchor.name)
this.baseNegativeItemLabelPosition.rotationAnchor.name.toString == orig(this.baseNegativeItemLabelPosition.rotationAnchor.name.toString)
this.baseNegativeItemLabelPosition.angle == orig(this.baseNegativeItemLabelPosition.angle)
this.itemLabelAnchorOffset == orig(this.itemLabelAnchorOffset)
this.createEntitiesList == orig(this.createEntitiesList)
this.createEntitiesList.objects == orig(this.createEntitiesList.objects)
this.createEntitiesList.objects.getClass().getName() == orig(this.createEntitiesList.objects.getClass().getName())
this.createEntitiesList.objects[] == orig(this.createEntitiesList.objects[])
this.createEntitiesList.size == orig(this.createEntitiesList.size)
this.createEntitiesList.increment == orig(this.createEntitiesList.increment)
this.baseCreateEntities == orig(this.baseCreateEntities)
this.legendShapeList == orig(this.legendShapeList)
this.legendShapeList.objects == orig(this.legendShapeList.objects)
this.legendShapeList.objects.getClass().getName() == orig(this.legendShapeList.objects.getClass().getName())
this.legendShapeList.objects[] == orig(this.legendShapeList.objects[])
this.legendShapeList.size == orig(this.legendShapeList.size)
this.legendShapeList.increment == orig(this.legendShapeList.increment)
this.baseLegendShape == orig(this.baseLegendShape)
this.treatLegendShapeAsLine == orig(this.treatLegendShapeAsLine)
this.legendTextFont == orig(this.legendTextFont)
this.legendTextFont.objects == orig(this.legendTextFont.objects)
this.legendTextFont.objects.getClass().getName() == orig(this.legendTextFont.objects.getClass().getName())
this.legendTextFont.objects[] == orig(this.legendTextFont.objects[])
this.legendTextFont.size == orig(this.legendTextFont.size)
this.legendTextFont.increment == orig(this.legendTextFont.increment)
this.baseLegendTextFont == orig(this.baseLegendTextFont)
this.legendTextPaint == orig(this.legendTextPaint)
this.legendTextPaint.objects == orig(this.legendTextPaint.objects)
this.legendTextPaint.objects.getClass().getName() == orig(this.legendTextPaint.objects.getClass().getName())
this.legendTextPaint.objects[] == orig(this.legendTextPaint.objects[])
this.legendTextPaint.size == orig(this.legendTextPaint.size)
this.legendTextPaint.increment == orig(this.legendTextPaint.increment)
this.baseLegendTextPaint == orig(this.baseLegendTextPaint)
this.dataBoundsIncludesVisibleSeriesOnly == orig(this.dataBoundsIncludesVisibleSeriesOnly)
this.defaultEntityRadius == orig(this.defaultEntityRadius)
this.listenerList == orig(this.listenerList)
this.selectedItemAttributes == orig(this.selectedItemAttributes)
this.selectedItemAttributes.allowNull == orig(this.selectedItemAttributes.allowNull)
this.selectedItemAttributes.paintList == orig(this.selectedItemAttributes.paintList)
this.selectedItemAttributes.paintList.objects == orig(this.selectedItemAttributes.paintList.objects)
this.selectedItemAttributes.paintList.objects.getClass().getName() == orig(this.selectedItemAttributes.paintList.objects.getClass().getName())
this.selectedItemAttributes.paintList.objects[] == orig(this.selectedItemAttributes.paintList.objects[])
this.selectedItemAttributes.paintList.size == orig(this.selectedItemAttributes.paintList.size)
this.selectedItemAttributes.paintList.increment == orig(this.selectedItemAttributes.paintList.increment)
this.selectedItemAttributes.defaultPaint == orig(this.selectedItemAttributes.defaultPaint)
this.selectedItemAttributes.strokeList == orig(this.selectedItemAttributes.strokeList)
this.selectedItemAttributes.strokeList.objects == orig(this.selectedItemAttributes.strokeList.objects)
this.selectedItemAttributes.strokeList.objects.getClass().getName() == orig(this.selectedItemAttributes.strokeList.objects.getClass().getName())
this.selectedItemAttributes.strokeList.objects[] == orig(this.selectedItemAttributes.strokeList.objects[])
this.selectedItemAttributes.strokeList.size == orig(this.selectedItemAttributes.strokeList.size)
this.selectedItemAttributes.strokeList.increment == orig(this.selectedItemAttributes.strokeList.increment)
this.selectedItemAttributes.defaultStroke == orig(this.selectedItemAttributes.defaultStroke)
this.selectedItemAttributes.shapeList == orig(this.selectedItemAttributes.shapeList)
this.selectedItemAttributes.shapeList.objects == orig(this.selectedItemAttributes.shapeList.objects)
this.selectedItemAttributes.shapeList.objects.getClass().getName() == orig(this.selectedItemAttributes.shapeList.objects.getClass().getName())
this.selectedItemAttributes.shapeList.objects[] == orig(this.selectedItemAttributes.shapeList.objects[])
this.selectedItemAttributes.shapeList.size == orig(this.selectedItemAttributes.shapeList.size)
this.selectedItemAttributes.shapeList.increment == orig(this.selectedItemAttributes.shapeList.increment)
this.selectedItemAttributes.defaultShape == orig(this.selectedItemAttributes.defaultShape)
this.selectedItemAttributes.fillPaintList == orig(this.selectedItemAttributes.fillPaintList)
this.selectedItemAttributes.fillPaintList.objects == orig(this.selectedItemAttributes.fillPaintList.objects)
this.selectedItemAttributes.fillPaintList.objects.getClass().getName() == orig(this.selectedItemAttributes.fillPaintList.objects.getClass().getName())
this.selectedItemAttributes.fillPaintList.objects[] == orig(this.selectedItemAttributes.fillPaintList.objects[])
this.selectedItemAttributes.fillPaintList.size == orig(this.selectedItemAttributes.fillPaintList.size)
this.selectedItemAttributes.fillPaintList.increment == orig(this.selectedItemAttributes.fillPaintList.increment)
this.selectedItemAttributes.defaultFillPaint == orig(this.selectedItemAttributes.defaultFillPaint)
this.selectedItemAttributes.defaultFillPaint.getClass().getName() == orig(this.selectedItemAttributes.defaultFillPaint.getClass().getName())
this.selectedItemAttributes.outlinePaintList == orig(this.selectedItemAttributes.outlinePaintList)
this.selectedItemAttributes.outlinePaintList.objects == orig(this.selectedItemAttributes.outlinePaintList.objects)
this.selectedItemAttributes.outlinePaintList.objects.getClass().getName() == orig(this.selectedItemAttributes.outlinePaintList.objects.getClass().getName())
this.selectedItemAttributes.outlinePaintList.objects[] == orig(this.selectedItemAttributes.outlinePaintList.objects[])
this.selectedItemAttributes.outlinePaintList.size == orig(this.selectedItemAttributes.outlinePaintList.size)
this.selectedItemAttributes.outlinePaintList.increment == orig(this.selectedItemAttributes.outlinePaintList.increment)
this.selectedItemAttributes.defaultOutlinePaint == orig(this.selectedItemAttributes.defaultOutlinePaint)
this.selectedItemAttributes.outlineStrokeList == orig(this.selectedItemAttributes.outlineStrokeList)
this.selectedItemAttributes.defaultOutlineStroke == orig(this.selectedItemAttributes.defaultOutlineStroke)
this.selectedItemAttributes.labelsVisibleList == orig(this.selectedItemAttributes.labelsVisibleList)
this.selectedItemAttributes.defaultLabelVisible == orig(this.selectedItemAttributes.defaultLabelVisible)
this.selectedItemAttributes.labelFontList == orig(this.selectedItemAttributes.labelFontList)
this.selectedItemAttributes.defaultLabelFont == orig(this.selectedItemAttributes.defaultLabelFont)
this.selectedItemAttributes.labelPaintList == orig(this.selectedItemAttributes.labelPaintList)
this.selectedItemAttributes.defaultLabelPaint == orig(this.selectedItemAttributes.defaultLabelPaint)
this.selectedItemAttributes.positionItemLabelPositionList == orig(this.selectedItemAttributes.positionItemLabelPositionList)
this.selectedItemAttributes.defaultPositiveItemLabelPosition == orig(this.selectedItemAttributes.defaultPositiveItemLabelPosition)
this.selectedItemAttributes.negativeItemLabelPositionList == orig(this.selectedItemAttributes.negativeItemLabelPositionList)
this.selectedItemAttributes.defaultNegativeItemLabelPosition == orig(this.selectedItemAttributes.defaultNegativeItemLabelPosition)
this.selectedItemAttributes.createEntityList == orig(this.selectedItemAttributes.createEntityList)
this.selectedItemAttributes.defaultCreateEntity == orig(this.selectedItemAttributes.defaultCreateEntity)
org.jfree.chart.renderer.AbstractRenderer.ADJ == orig(org.jfree.chart.renderer.AbstractRenderer.ADJ)
org.jfree.chart.renderer.AbstractRenderer.OPP == orig(org.jfree.chart.renderer.AbstractRenderer.OPP)
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener == orig(org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener)
size(this.paintList.objects[]) == orig(size(this.paintList.objects[]))
size(this.strokeList.objects[]) == orig(size(this.strokeList.objects[]))
size(this.shapeList.objects[]) == orig(size(this.shapeList.objects[]))
(this.plot == null)  <==>  (org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener == null)
(this.plot == null)  ==>  (return.items[] == [])
(this.plot == null)  ==>  (return.items[].getClass().getName() == [])
(this.plot == null)  ==>  (this.paintList.objects[] contains only nulls and has only one value, of length 8)
(this.plot == null)  ==>  (this.paintList.objects[] elements == null)
(this.plot == null)  ==>  (this.paintList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null])
(this.plot == null)  ==>  (this.paintList.objects[].getClass().getName() elements == null)
(this.plot == null)  ==>  (this.paintList.size == 0)
(this.plot == null)  ==>  (this.paintList.size == orig(this.paintList.size))
(this.plot == null)  ==>  (this.shapeList.objects[] contains only nulls and has only one value, of length 8)
(this.plot == null)  ==>  (this.shapeList.objects[] elements == null)
(this.plot == null)  ==>  (this.shapeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null])
(this.plot == null)  ==>  (this.shapeList.objects[].getClass().getName() elements == null)
(this.plot == null)  ==>  (this.shapeList.size == 0)
(this.plot == null)  ==>  (this.shapeList.size == orig(this.shapeList.size))
(this.plot == null)  ==>  (this.strokeList.objects[] contains only nulls and has only one value, of length 8)
(this.plot == null)  ==>  (this.strokeList.objects[] elements == null)
(this.plot == null)  ==>  (this.strokeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null])
(this.plot == null)  ==>  (this.strokeList.objects[].getClass().getName() elements == null)
(this.plot == null)  ==>  (this.strokeList.size == 0)
(this.plot == null)  ==>  (this.strokeList.size == orig(this.strokeList.size))
(this.plot has only one value)  <==>  (org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener has only one value)
(this.plot has only one value)  ==>  (org.jfree.chart.axis.CategoryAnchor.END has only one value)
(this.plot has only one value)  ==>  (org.jfree.chart.axis.CategoryAnchor.MIDDLE has only one value)
(this.plot has only one value)  ==>  (org.jfree.chart.axis.CategoryAnchor.START has only one value)
(this.plot has only one value)  ==>  (org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT has only one value)
(this.plot has only one value)  ==>  (org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT.getClass().getName() == java.awt.Color.class)
(this.plot has only one value)  ==>  (org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE has only one value)
(this.plot has only one value)  ==>  (org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE.getClass().getName() == java.awt.BasicStroke.class)
(this.plot has only one value)  ==>  (org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT has only one value)
(this.plot has only one value)  ==>  (org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == java.awt.Color.class)
(this.plot has only one value)  ==>  (org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE has only one value)
(this.plot has only one value)  ==>  (org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName() == java.awt.BasicStroke.class)
(this.plot has only one value)  ==>  (org.jfree.chart.plot.CategoryPlot.DEFAULT_VALUE_LABEL_FONT has only one value)
(this.plot has only one value)  ==>  (org.jfree.chart.plot.CategoryPlot.localizationResources has only one value)
(this.plot has only one value)  ==>  (org.jfree.chart.plot.CategoryPlot.localizationResources.getClass().getName() == java.util.PropertyResourceBundle.class)
(this.plot has only one value)  ==>  (org.jfree.chart.plot.DatasetRenderingOrder.FORWARD has only one value)
(this.plot has only one value)  ==>  (org.jfree.chart.plot.DatasetRenderingOrder.REVERSE has only one value)
(this.plot has only one value)  ==>  (org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT has only one value)
(this.plot has only one value)  ==>  (org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName() == java.awt.Color.class)
(this.plot has only one value)  ==>  (org.jfree.chart.plot.Plot.DEFAULT_INSETS has only one value)
(this.plot has only one value)  ==>  (org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType has only one value)
(this.plot has only one value)  ==>  (org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX has only one value)
(this.plot has only one value)  ==>  (org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName() == java.awt.geom.Rectangle2D$Double.class)
(this.plot has only one value)  ==>  (org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE has only one value)
(this.plot has only one value)  ==>  (org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName() == java.awt.geom.Ellipse2D$Double.class)
(this.plot has only one value)  ==>  (org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT has only one value)
(this.plot has only one value)  ==>  (org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() == java.awt.Color.class)
(this.plot has only one value)  ==>  (org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE has only one value)
(this.plot has only one value)  ==>  (org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName() == java.awt.BasicStroke.class)
(this.plot has only one value)  ==>  (org.jfree.chart.plot.Plot.ZERO has only one value)
(this.plot has only one value)  ==>  (org.jfree.chart.plot.Plot.ZERO.getClass().getName() == java.lang.Integer.class)
(this.plot has only one value)  ==>  (org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener == null)
(this.plot has only one value)  ==>  (org.jfree.chart.plot.PlotOrientation.HORIZONTAL has only one value)
(this.plot has only one value)  ==>  (org.jfree.chart.plot.PlotOrientation.VERTICAL has only one value)
(this.plot has only one value)  ==>  (org.jfree.chart.util.RectangleInsets.ZERO_INSETS has only one value)
(this.plot has only one value)  ==>  (org.jfree.chart.util.SortOrder.ASCENDING has only one value)
(this.plot has only one value)  ==>  (org.jfree.chart.util.SortOrder.DESCENDING has only one value)
(this.plot has only one value)  ==>  (return.items[] elements has only one value)
(this.plot has only one value)  ==>  (return.items[].getClass().getName() elements == org.jfree.chart.LegendItem.class)
(this.plot has only one value)  ==>  (return.items[].getClass().getName() one of { [], [org.jfree.chart.LegendItem] })
(this.plot has only one value)  ==>  (size(return.items[]) one of { 0, 1 })
(this.plot has only one value)  ==>  (this.paintList.objects[].getClass().getName() one of { [null, null, null, null, null, null, null, null], [java.awt.Color, null, null, null, null, null, null, null] })
(this.plot has only one value)  ==>  (this.paintList.size one of { 0, 1 })
(this.plot has only one value)  ==>  (this.plot.annotations has only one value)
(this.plot has only one value)  ==>  (this.plot.annotations.getClass().getName() == java.util.ArrayList.class)
(this.plot has only one value)  ==>  (this.plot.annotations[] == [])
(this.plot has only one value)  ==>  (this.plot.annotations[].getClass().getName() == [])
(this.plot has only one value)  ==>  (this.plot.axisOffset has only one value)
(this.plot has only one value)  ==>  (this.plot.axisOffset.unitType has only one value)
(this.plot has only one value)  ==>  (this.plot.backgroundDomainMarkers has only one value)
(this.plot has only one value)  ==>  (this.plot.backgroundDomainMarkers.getClass().getName() == java.util.HashMap.class)
(this.plot has only one value)  ==>  (this.plot.backgroundImage == null)
(this.plot has only one value)  ==>  (this.plot.backgroundPaint has only one value)
(this.plot has only one value)  ==>  (this.plot.backgroundPaint.getClass().getName() == java.awt.Color.class)
(this.plot has only one value)  ==>  (this.plot.backgroundRangeMarkers has only one value)
(this.plot has only one value)  ==>  (this.plot.backgroundRangeMarkers.getClass().getName() == java.util.HashMap.class)
(this.plot has only one value)  ==>  (this.plot.columnRenderingOrder has only one value)
(this.plot has only one value)  ==>  (this.plot.columnRenderingOrder.name has only one value)
(this.plot has only one value)  ==>  (this.plot.columnRenderingOrder.name.toString == "SortOrder.ASCENDING")
(this.plot has only one value)  ==>  (this.plot.datasetGroup == null)
(this.plot has only one value)  ==>  (this.plot.datasetToDomainAxesMap has only one value)
(this.plot has only one value)  ==>  (this.plot.datasetToRangeAxesMap has only one value)
(this.plot has only one value)  ==>  (this.plot.datasets has only one value)
(this.plot has only one value)  ==>  (this.plot.datasets.objects has only one value)
(this.plot has only one value)  ==>  (this.plot.datasets.objects.getClass().getName() == java.lang.Object[].class)
(this.plot has only one value)  ==>  (this.plot.datasets.objects[] has only one value, of length 8)
(this.plot has only one value)  ==>  (this.plot.datasets.objects[].getClass().getName() == [org.jfree.data.category.DefaultCategoryDataset, null, null, null, null, null, null, null])
(this.plot has only one value)  ==>  (this.plot.domainAxes has only one value)
(this.plot has only one value)  ==>  (this.plot.domainAxes.objects has only one value)
(this.plot has only one value)  ==>  (this.plot.domainAxes.objects.getClass().getName() == java.lang.Object[].class)
(this.plot has only one value)  ==>  (this.plot.domainAxes.objects[] contains only nulls and has only one value, of length 8)
(this.plot has only one value)  ==>  (this.plot.domainAxes.objects[] elements == null)
(this.plot has only one value)  ==>  (this.plot.domainAxes.objects[].getClass().getName() == [null, null, null, null, null, null, null, null])
(this.plot has only one value)  ==>  (this.plot.domainAxes.objects[].getClass().getName() elements == null)
(this.plot has only one value)  ==>  (this.plot.domainAxisLocations has only one value)
(this.plot has only one value)  ==>  (this.plot.domainAxisLocations.objects has only one value)
(this.plot has only one value)  ==>  (this.plot.domainAxisLocations.objects.getClass().getName() == java.lang.Object[].class)
(this.plot has only one value)  ==>  (this.plot.domainAxisLocations.objects[] has only one value, of length 8)
(this.plot has only one value)  ==>  (this.plot.domainAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null])
(this.plot has only one value)  ==>  (this.plot.domainCrosshairColumnKey == null)
(this.plot has only one value)  ==>  (this.plot.domainCrosshairPaint has only one value)
(this.plot has only one value)  ==>  (this.plot.domainCrosshairPaint.getClass().getName() == java.awt.Color.class)
(this.plot has only one value)  ==>  (this.plot.domainCrosshairRowKey == null)
(this.plot has only one value)  ==>  (this.plot.domainCrosshairStroke has only one value)
(this.plot has only one value)  ==>  (this.plot.domainCrosshairStroke.getClass().getName() == java.awt.BasicStroke.class)
(this.plot has only one value)  ==>  (this.plot.domainGridlinePaint has only one value)
(this.plot has only one value)  ==>  (this.plot.domainGridlinePaint.getClass().getName() == java.awt.Color.class)
(this.plot has only one value)  ==>  (this.plot.domainGridlinePosition has only one value)
(this.plot has only one value)  ==>  (this.plot.domainGridlinePosition.name has only one value)
(this.plot has only one value)  ==>  (this.plot.domainGridlinePosition.name.toString == "CategoryAnchor.MIDDLE")
(this.plot has only one value)  ==>  (this.plot.domainGridlineStroke has only one value)
(this.plot has only one value)  ==>  (this.plot.domainGridlineStroke.getClass().getName() == java.awt.BasicStroke.class)
(this.plot has only one value)  ==>  (this.plot.drawingSupplier has only one value)
(this.plot has only one value)  ==>  (this.plot.drawingSupplier.getClass().getName() == org.jfree.chart.plot.DefaultDrawingSupplier.class)
(this.plot has only one value)  ==>  (this.plot.fixedDomainAxisSpace == null)
(this.plot has only one value)  ==>  (this.plot.fixedLegendItems == null)
(this.plot has only one value)  ==>  (this.plot.fixedRangeAxisSpace == null)
(this.plot has only one value)  ==>  (this.plot.foregroundDomainMarkers has only one value)
(this.plot has only one value)  ==>  (this.plot.foregroundDomainMarkers.getClass().getName() == java.util.HashMap.class)
(this.plot has only one value)  ==>  (this.plot.foregroundRangeMarkers has only one value)
(this.plot has only one value)  ==>  (this.plot.foregroundRangeMarkers.getClass().getName() == java.util.HashMap.class)
(this.plot has only one value)  ==>  (this.plot.insets has only one value)
(this.plot has only one value)  ==>  (this.plot.insets.unitType has only one value)
(this.plot has only one value)  ==>  (this.plot.listenerList has only one value)
(this.plot has only one value)  ==>  (this.plot.noDataMessage == null)
(this.plot has only one value)  ==>  (this.plot.noDataMessageFont has only one value)
(this.plot has only one value)  ==>  (this.plot.noDataMessagePaint has only one value)
(this.plot has only one value)  ==>  (this.plot.noDataMessagePaint.getClass().getName() == java.awt.Color.class)
(this.plot has only one value)  ==>  (this.plot.orientation has only one value)
(this.plot has only one value)  ==>  (this.plot.orientation.name has only one value)
(this.plot has only one value)  ==>  (this.plot.orientation.name.toString == "PlotOrientation.VERTICAL")
(this.plot has only one value)  ==>  (this.plot.outlinePaint has only one value)
(this.plot has only one value)  ==>  (this.plot.outlinePaint.getClass().getName() == java.awt.Color.class)
(this.plot has only one value)  ==>  (this.plot.outlineStroke has only one value)
(this.plot has only one value)  ==>  (this.plot.outlineStroke.getClass().getName() == java.awt.BasicStroke.class)
(this.plot has only one value)  ==>  (this.plot.parent == null)
(this.plot has only one value)  ==>  (this.plot.rangeAxes has only one value)
(this.plot has only one value)  ==>  (this.plot.rangeAxes.objects has only one value)
(this.plot has only one value)  ==>  (this.plot.rangeAxes.objects.getClass().getName() == java.lang.Object[].class)
(this.plot has only one value)  ==>  (this.plot.rangeAxes.objects[] contains only nulls and has only one value, of length 8)
(this.plot has only one value)  ==>  (this.plot.rangeAxes.objects[] elements == null)
(this.plot has only one value)  ==>  (this.plot.rangeAxes.objects[].getClass().getName() == [null, null, null, null, null, null, null, null])
(this.plot has only one value)  ==>  (this.plot.rangeAxes.objects[].getClass().getName() elements == null)
(this.plot has only one value)  ==>  (this.plot.rangeAxisLocations has only one value)
(this.plot has only one value)  ==>  (this.plot.rangeAxisLocations.objects has only one value)
(this.plot has only one value)  ==>  (this.plot.rangeAxisLocations.objects.getClass().getName() == java.lang.Object[].class)
(this.plot has only one value)  ==>  (this.plot.rangeAxisLocations.objects[] has only one value, of length 8)
(this.plot has only one value)  ==>  (this.plot.rangeAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null])
(this.plot has only one value)  ==>  (this.plot.rangeCrosshairPaint has only one value)
(this.plot has only one value)  ==>  (this.plot.rangeCrosshairPaint.getClass().getName() == java.awt.Color.class)
(this.plot has only one value)  ==>  (this.plot.rangeCrosshairStroke has only one value)
(this.plot has only one value)  ==>  (this.plot.rangeCrosshairStroke.getClass().getName() == java.awt.BasicStroke.class)
(this.plot has only one value)  ==>  (this.plot.rangeGridlinePaint has only one value)
(this.plot has only one value)  ==>  (this.plot.rangeGridlinePaint.getClass().getName() == java.awt.Color.class)
(this.plot has only one value)  ==>  (this.plot.rangeGridlineStroke has only one value)
(this.plot has only one value)  ==>  (this.plot.rangeGridlineStroke.getClass().getName() == java.awt.BasicStroke.class)
(this.plot has only one value)  ==>  (this.plot.rangeMinorGridlinePaint has only one value)
(this.plot has only one value)  ==>  (this.plot.rangeMinorGridlinePaint.getClass().getName() == java.awt.Color.class)
(this.plot has only one value)  ==>  (this.plot.rangeMinorGridlineStroke has only one value)
(this.plot has only one value)  ==>  (this.plot.rangeMinorGridlineStroke.getClass().getName() == java.awt.BasicStroke.class)
(this.plot has only one value)  ==>  (this.plot.rangeZeroBaselinePaint has only one value)
(this.plot has only one value)  ==>  (this.plot.rangeZeroBaselinePaint.getClass().getName() == java.awt.Color.class)
(this.plot has only one value)  ==>  (this.plot.rangeZeroBaselineStroke has only one value)
(this.plot has only one value)  ==>  (this.plot.rangeZeroBaselineStroke.getClass().getName() == java.awt.BasicStroke.class)
(this.plot has only one value)  ==>  (this.plot.renderers has only one value)
(this.plot has only one value)  ==>  (this.plot.renderers.objects has only one value)
(this.plot has only one value)  ==>  (this.plot.renderers.objects.getClass().getName() == java.lang.Object[].class)
(this.plot has only one value)  ==>  (this.plot.renderers.objects[] has only one value, of length 8)
(this.plot has only one value)  ==>  (this.plot.renderers.objects[].getClass().getName() == [org.jfree.chart.renderer.category.LineAndShapeRenderer, null, null, null, null, null, null, null])
(this.plot has only one value)  ==>  (this.plot.renderingOrder has only one value)
(this.plot has only one value)  ==>  (this.plot.renderingOrder.name has only one value)
(this.plot has only one value)  ==>  (this.plot.renderingOrder.name.toString == "DatasetRenderingOrder.REVERSE")
(this.plot has only one value)  ==>  (this.plot.rowRenderingOrder has only one value)
(this.plot has only one value)  ==>  (this.plot.rowRenderingOrder.name has only one value)
(this.plot has only one value)  ==>  (this.plot.rowRenderingOrder.name.toString == "SortOrder.ASCENDING")
(this.plot has only one value)  ==>  (this.plot.shadowGenerator has only one value)
(this.plot has only one value)  ==>  (this.plot.shadowGenerator.getClass().getName() == org.jfree.chart.util.DefaultShadowGenerator.class)
(this.plot has only one value)  ==>  (this.shapeList.objects[].getClass().getName() one of { [null, null, null, null, null, null, null, null], [java.awt.geom.Rectangle2D.Double, null, null, null, null, null, null, null] })
(this.plot has only one value)  ==>  (this.shapeList.size one of { 0, 1 })
(this.plot has only one value)  ==>  (this.strokeList.objects[].getClass().getName() one of { [null, null, null, null, null, null, null, null], [java.awt.BasicStroke, null, null, null, null, null, null, null] })
(this.plot has only one value)  ==>  (this.strokeList.size one of { 0, 1 })
return.items[] elements has only one value
return.items[].getClass().getName() elements == org.jfree.chart.LegendItem.class
return.items[].getClass().getName() one of { [], [org.jfree.chart.LegendItem] }
return.items.getClass().getName() == java.util.ArrayList.class
size(return.items[]) one of { 0, 1 }
===========================================================================
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getPlot():::ENTER
this.plot has only one value
this.strokeList.objects[] contains only nulls and has only one value, of length 8
this.strokeList.objects[] elements == null
this.strokeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.strokeList.objects[].getClass().getName() elements == null
this.strokeList.size == 0
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener has only one value
===========================================================================
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getPlot():::EXIT
this.plot == orig(this.plot)
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE)
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_VALUE_LABEL_FONT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_VALUE_LABEL_FONT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT.getClass().getName())
org.jfree.chart.plot.CategoryPlot.localizationResources == orig(org.jfree.chart.plot.CategoryPlot.localizationResources)
org.jfree.chart.plot.CategoryPlot.localizationResources.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.localizationResources.getClass().getName())
this.plot.orientation == orig(this.plot.orientation)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL)
org.jfree.chart.plot.PlotOrientation.VERTICAL == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL)
this.plot.orientation.name == orig(this.plot.orientation.name)
this.plot.orientation.name.toString == orig(this.plot.orientation.name.toString)
this.plot.axisOffset == orig(this.plot.axisOffset)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS)
this.plot.axisOffset.unitType == orig(this.plot.axisOffset.unitType)
this.plot.axisOffset.top == orig(this.plot.axisOffset.top)
this.plot.axisOffset.left == orig(this.plot.axisOffset.left)
this.plot.axisOffset.bottom == orig(this.plot.axisOffset.bottom)
this.plot.axisOffset.right == orig(this.plot.axisOffset.right)
this.plot.domainAxes == orig(this.plot.domainAxes)
this.plot.domainAxes.objects == orig(this.plot.domainAxes.objects)
this.plot.domainAxes.objects.getClass().getName() == orig(this.plot.domainAxes.objects.getClass().getName())
this.plot.domainAxes.objects[] == orig(this.plot.domainAxes.objects[])
this.plot.domainAxes.size == orig(this.plot.domainAxes.size)
this.plot.domainAxes.increment == orig(this.plot.domainAxes.increment)
this.plot.domainAxisLocations == orig(this.plot.domainAxisLocations)
this.plot.domainAxisLocations.objects == orig(this.plot.domainAxisLocations.objects)
this.plot.domainAxisLocations.objects.getClass().getName() == orig(this.plot.domainAxisLocations.objects.getClass().getName())
this.plot.domainAxisLocations.objects[] == orig(this.plot.domainAxisLocations.objects[])
this.plot.domainAxisLocations.size == orig(this.plot.domainAxisLocations.size)
this.plot.domainAxisLocations.increment == orig(this.plot.domainAxisLocations.increment)
this.plot.drawSharedDomainAxis == orig(this.plot.drawSharedDomainAxis)
this.plot.rangeAxes == orig(this.plot.rangeAxes)
this.plot.rangeAxes.objects == orig(this.plot.rangeAxes.objects)
this.plot.rangeAxes.objects.getClass().getName() == orig(this.plot.rangeAxes.objects.getClass().getName())
this.plot.rangeAxes.objects[] == orig(this.plot.rangeAxes.objects[])
this.plot.rangeAxes.size == orig(this.plot.rangeAxes.size)
this.plot.rangeAxes.increment == orig(this.plot.rangeAxes.increment)
this.plot.rangeAxisLocations == orig(this.plot.rangeAxisLocations)
this.plot.rangeAxisLocations.objects == orig(this.plot.rangeAxisLocations.objects)
this.plot.rangeAxisLocations.objects.getClass().getName() == orig(this.plot.rangeAxisLocations.objects.getClass().getName())
this.plot.rangeAxisLocations.objects[] == orig(this.plot.rangeAxisLocations.objects[])
this.plot.rangeAxisLocations.size == orig(this.plot.rangeAxisLocations.size)
this.plot.rangeAxisLocations.increment == orig(this.plot.rangeAxisLocations.increment)
this.plot.datasets == orig(this.plot.datasets)
this.plot.datasets.objects == orig(this.plot.datasets.objects)
this.plot.datasets.objects.getClass().getName() == orig(this.plot.datasets.objects.getClass().getName())
this.plot.datasets.objects[] == orig(this.plot.datasets.objects[])
this.plot.datasets.size == orig(this.plot.datasets.size)
this.plot.datasets.increment == orig(this.plot.datasets.increment)
this.plot.datasetToDomainAxesMap == orig(this.plot.datasetToDomainAxesMap)
this.plot.datasetToRangeAxesMap == orig(this.plot.datasetToRangeAxesMap)
this.plot.renderers == orig(this.plot.renderers)
this.plot.renderers.objects == orig(this.plot.renderers.objects)
this.plot.renderers.objects.getClass().getName() == orig(this.plot.renderers.objects.getClass().getName())
this.plot.renderers.objects[] == orig(this.plot.renderers.objects[])
this.plot.renderers.size == orig(this.plot.renderers.size)
this.plot.renderers.increment == orig(this.plot.renderers.increment)
this.plot.renderingOrder == orig(this.plot.renderingOrder)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE)
this.plot.renderingOrder.name == orig(this.plot.renderingOrder.name)
this.plot.renderingOrder.name.toString == orig(this.plot.renderingOrder.name.toString)
this.plot.columnRenderingOrder == orig(this.plot.columnRenderingOrder)
org.jfree.chart.util.SortOrder.ASCENDING == orig(org.jfree.chart.util.SortOrder.ASCENDING)
org.jfree.chart.util.SortOrder.DESCENDING == orig(org.jfree.chart.util.SortOrder.DESCENDING)
this.plot.columnRenderingOrder.name == orig(this.plot.columnRenderingOrder.name)
this.plot.columnRenderingOrder.name.toString == orig(this.plot.columnRenderingOrder.name.toString)
this.plot.rowRenderingOrder == orig(this.plot.rowRenderingOrder)
this.plot.rowRenderingOrder.name == orig(this.plot.rowRenderingOrder.name)
this.plot.rowRenderingOrder.name.toString == orig(this.plot.rowRenderingOrder.name.toString)
this.plot.domainGridlinesVisible == orig(this.plot.domainGridlinesVisible)
this.plot.domainGridlinePosition == orig(this.plot.domainGridlinePosition)
org.jfree.chart.axis.CategoryAnchor.START == orig(org.jfree.chart.axis.CategoryAnchor.START)
org.jfree.chart.axis.CategoryAnchor.MIDDLE == orig(org.jfree.chart.axis.CategoryAnchor.MIDDLE)
org.jfree.chart.axis.CategoryAnchor.END == orig(org.jfree.chart.axis.CategoryAnchor.END)
this.plot.domainGridlinePosition.name == orig(this.plot.domainGridlinePosition.name)
this.plot.domainGridlinePosition.name.toString == orig(this.plot.domainGridlinePosition.name.toString)
this.plot.domainGridlineStroke == orig(this.plot.domainGridlineStroke)
this.plot.domainGridlineStroke.getClass().getName() == orig(this.plot.domainGridlineStroke.getClass().getName())
this.plot.domainGridlinePaint == orig(this.plot.domainGridlinePaint)
this.plot.domainGridlinePaint.getClass().getName() == orig(this.plot.domainGridlinePaint.getClass().getName())
this.plot.rangeZeroBaselineVisible == orig(this.plot.rangeZeroBaselineVisible)
this.plot.rangeZeroBaselineStroke == orig(this.plot.rangeZeroBaselineStroke)
this.plot.rangeZeroBaselineStroke.getClass().getName() == orig(this.plot.rangeZeroBaselineStroke.getClass().getName())
this.plot.rangeZeroBaselinePaint == orig(this.plot.rangeZeroBaselinePaint)
this.plot.rangeZeroBaselinePaint.getClass().getName() == orig(this.plot.rangeZeroBaselinePaint.getClass().getName())
this.plot.rangeGridlinesVisible == orig(this.plot.rangeGridlinesVisible)
this.plot.rangeGridlineStroke == orig(this.plot.rangeGridlineStroke)
this.plot.rangeGridlineStroke.getClass().getName() == orig(this.plot.rangeGridlineStroke.getClass().getName())
this.plot.rangeGridlinePaint == orig(this.plot.rangeGridlinePaint)
this.plot.rangeGridlinePaint.getClass().getName() == orig(this.plot.rangeGridlinePaint.getClass().getName())
this.plot.rangeMinorGridlinesVisible == orig(this.plot.rangeMinorGridlinesVisible)
this.plot.rangeMinorGridlineStroke == orig(this.plot.rangeMinorGridlineStroke)
this.plot.rangeMinorGridlineStroke.getClass().getName() == orig(this.plot.rangeMinorGridlineStroke.getClass().getName())
this.plot.rangeMinorGridlinePaint == orig(this.plot.rangeMinorGridlinePaint)
this.plot.rangeMinorGridlinePaint.getClass().getName() == orig(this.plot.rangeMinorGridlinePaint.getClass().getName())
this.plot.anchorValue == orig(this.plot.anchorValue)
this.plot.crosshairDatasetIndex == orig(this.plot.crosshairDatasetIndex)
this.plot.domainCrosshairVisible == orig(this.plot.domainCrosshairVisible)
this.plot.domainCrosshairRowKey == orig(this.plot.domainCrosshairRowKey)
this.plot.domainCrosshairColumnKey == orig(this.plot.domainCrosshairColumnKey)
this.plot.domainCrosshairStroke == orig(this.plot.domainCrosshairStroke)
this.plot.domainCrosshairStroke.getClass().getName() == orig(this.plot.domainCrosshairStroke.getClass().getName())
this.plot.domainCrosshairPaint == orig(this.plot.domainCrosshairPaint)
this.plot.domainCrosshairPaint.getClass().getName() == orig(this.plot.domainCrosshairPaint.getClass().getName())
this.plot.rangeCrosshairVisible == orig(this.plot.rangeCrosshairVisible)
this.plot.rangeCrosshairValue == orig(this.plot.rangeCrosshairValue)
this.plot.rangeCrosshairStroke == orig(this.plot.rangeCrosshairStroke)
this.plot.rangeCrosshairStroke.getClass().getName() == orig(this.plot.rangeCrosshairStroke.getClass().getName())
this.plot.rangeCrosshairPaint == orig(this.plot.rangeCrosshairPaint)
this.plot.rangeCrosshairPaint.getClass().getName() == orig(this.plot.rangeCrosshairPaint.getClass().getName())
this.plot.rangeCrosshairLockedOnData == orig(this.plot.rangeCrosshairLockedOnData)
this.plot.foregroundDomainMarkers == orig(this.plot.foregroundDomainMarkers)
this.plot.foregroundDomainMarkers.getClass().getName() == orig(this.plot.foregroundDomainMarkers.getClass().getName())
this.plot.backgroundDomainMarkers == orig(this.plot.backgroundDomainMarkers)
this.plot.backgroundDomainMarkers.getClass().getName() == orig(this.plot.backgroundDomainMarkers.getClass().getName())
this.plot.foregroundRangeMarkers == orig(this.plot.foregroundRangeMarkers)
this.plot.foregroundRangeMarkers.getClass().getName() == orig(this.plot.foregroundRangeMarkers.getClass().getName())
this.plot.backgroundRangeMarkers == orig(this.plot.backgroundRangeMarkers)
this.plot.backgroundRangeMarkers.getClass().getName() == orig(this.plot.backgroundRangeMarkers.getClass().getName())
this.plot.annotations == orig(this.plot.annotations)
this.plot.annotations[] == orig(this.plot.annotations[])
this.plot.annotations.getClass().getName() == orig(this.plot.annotations.getClass().getName())
this.plot.weight == orig(this.plot.weight)
this.plot.fixedDomainAxisSpace == orig(this.plot.fixedDomainAxisSpace)
this.plot.fixedRangeAxisSpace == orig(this.plot.fixedRangeAxisSpace)
this.plot.fixedLegendItems == orig(this.plot.fixedLegendItems)
this.plot.rangePannable == orig(this.plot.rangePannable)
this.plot.shadowGenerator == orig(this.plot.shadowGenerator)
this.plot.shadowGenerator.getClass().getName() == orig(this.plot.shadowGenerator.getClass().getName())
org.jfree.chart.plot.Plot.ZERO == orig(org.jfree.chart.plot.Plot.ZERO)
org.jfree.chart.plot.Plot.ZERO.getClass().getName() == orig(org.jfree.chart.plot.Plot.ZERO.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_INSETS == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.top == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.top)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.left == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.left)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.right == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.right)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName())
this.plot.parent == orig(this.plot.parent)
org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener == orig(org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener)
this.plot.datasetGroup == orig(this.plot.datasetGroup)
this.plot.noDataMessage == orig(this.plot.noDataMessage)
this.plot.noDataMessageFont == orig(this.plot.noDataMessageFont)
this.plot.noDataMessagePaint == orig(this.plot.noDataMessagePaint)
this.plot.noDataMessagePaint.getClass().getName() == orig(this.plot.noDataMessagePaint.getClass().getName())
this.plot.insets == orig(this.plot.insets)
this.plot.insets.unitType == orig(this.plot.insets.unitType)
this.plot.insets.top == orig(this.plot.insets.top)
this.plot.insets.left == orig(this.plot.insets.left)
this.plot.insets.bottom == orig(this.plot.insets.bottom)
this.plot.insets.right == orig(this.plot.insets.right)
this.plot.outlineVisible == orig(this.plot.outlineVisible)
this.plot.outlineStroke == orig(this.plot.outlineStroke)
this.plot.outlineStroke.getClass().getName() == orig(this.plot.outlineStroke.getClass().getName())
this.plot.outlinePaint == orig(this.plot.outlinePaint)
this.plot.outlinePaint.getClass().getName() == orig(this.plot.outlinePaint.getClass().getName())
this.plot.backgroundPaint == orig(this.plot.backgroundPaint)
this.plot.backgroundPaint.getClass().getName() == orig(this.plot.backgroundPaint.getClass().getName())
this.plot.backgroundImage == orig(this.plot.backgroundImage)
this.plot.backgroundImageAlignment == orig(this.plot.backgroundImageAlignment)
this.plot.backgroundImageAlpha == orig(this.plot.backgroundImageAlpha)
this.plot.foregroundAlpha == orig(this.plot.foregroundAlpha)
this.plot.backgroundAlpha == orig(this.plot.backgroundAlpha)
this.plot.drawingSupplier == orig(this.plot.drawingSupplier)
this.plot.drawingSupplier.getClass().getName() == orig(this.plot.drawingSupplier.getClass().getName())
this.plot.listenerList == orig(this.plot.listenerList)
this.plot.notify == orig(this.plot.notify)
this.itemLabelGeneratorList == orig(this.itemLabelGeneratorList)
this.itemLabelGeneratorList.objects == orig(this.itemLabelGeneratorList.objects)
this.itemLabelGeneratorList.objects.getClass().getName() == orig(this.itemLabelGeneratorList.objects.getClass().getName())
this.itemLabelGeneratorList.objects[] == orig(this.itemLabelGeneratorList.objects[])
this.itemLabelGeneratorList.size == orig(this.itemLabelGeneratorList.size)
this.itemLabelGeneratorList.increment == orig(this.itemLabelGeneratorList.increment)
this.baseItemLabelGenerator == orig(this.baseItemLabelGenerator)
this.toolTipGeneratorList == orig(this.toolTipGeneratorList)
this.toolTipGeneratorList.objects == orig(this.toolTipGeneratorList.objects)
this.toolTipGeneratorList.objects.getClass().getName() == orig(this.toolTipGeneratorList.objects.getClass().getName())
this.toolTipGeneratorList.objects[] == orig(this.toolTipGeneratorList.objects[])
this.toolTipGeneratorList.size == orig(this.toolTipGeneratorList.size)
this.toolTipGeneratorList.increment == orig(this.toolTipGeneratorList.increment)
this.baseToolTipGenerator == orig(this.baseToolTipGenerator)
this.urlGeneratorList == orig(this.urlGeneratorList)
this.urlGeneratorList.objects == orig(this.urlGeneratorList.objects)
this.urlGeneratorList.objects.getClass().getName() == orig(this.urlGeneratorList.objects.getClass().getName())
this.urlGeneratorList.objects[] == orig(this.urlGeneratorList.objects[])
this.urlGeneratorList.size == orig(this.urlGeneratorList.size)
this.urlGeneratorList.increment == orig(this.urlGeneratorList.increment)
this.baseURLGenerator == orig(this.baseURLGenerator)
this.legendItemLabelGenerator == orig(this.legendItemLabelGenerator)
this.legendItemLabelGenerator.getClass().getName() == orig(this.legendItemLabelGenerator.getClass().getName())
this.legendItemToolTipGenerator == orig(this.legendItemToolTipGenerator)
this.legendItemURLGenerator == orig(this.legendItemURLGenerator)
this.backgroundAnnotations == orig(this.backgroundAnnotations)
this.backgroundAnnotations[] == orig(this.backgroundAnnotations[])
this.backgroundAnnotations.getClass().getName() == orig(this.backgroundAnnotations.getClass().getName())
this.foregroundAnnotations == orig(this.foregroundAnnotations)
this.foregroundAnnotations[] == orig(this.foregroundAnnotations[])
this.foregroundAnnotations.getClass().getName() == orig(this.foregroundAnnotations.getClass().getName())
this.rowCount == orig(this.rowCount)
this.columnCount == orig(this.columnCount)
org.jfree.chart.renderer.AbstractRenderer.ZERO == orig(org.jfree.chart.renderer.AbstractRenderer.ZERO)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_FONT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_FONT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT.getClass().getName())
this.seriesVisibleList == orig(this.seriesVisibleList)
this.seriesVisibleList.objects == orig(this.seriesVisibleList.objects)
this.seriesVisibleList.objects.getClass().getName() == orig(this.seriesVisibleList.objects.getClass().getName())
this.seriesVisibleList.objects[] == orig(this.seriesVisibleList.objects[])
this.seriesVisibleList.size == orig(this.seriesVisibleList.size)
this.seriesVisibleList.increment == orig(this.seriesVisibleList.increment)
this.baseSeriesVisible == orig(this.baseSeriesVisible)
this.seriesVisibleInLegendList == orig(this.seriesVisibleInLegendList)
this.seriesVisibleInLegendList.objects == orig(this.seriesVisibleInLegendList.objects)
this.seriesVisibleInLegendList.objects.getClass().getName() == orig(this.seriesVisibleInLegendList.objects.getClass().getName())
this.seriesVisibleInLegendList.objects[] == orig(this.seriesVisibleInLegendList.objects[])
this.seriesVisibleInLegendList.size == orig(this.seriesVisibleInLegendList.size)
this.seriesVisibleInLegendList.increment == orig(this.seriesVisibleInLegendList.increment)
this.baseSeriesVisibleInLegend == orig(this.baseSeriesVisibleInLegend)
this.paintList == orig(this.paintList)
this.paintList.objects == orig(this.paintList.objects)
this.paintList.objects.getClass().getName() == orig(this.paintList.objects.getClass().getName())
this.paintList.objects[] == orig(this.paintList.objects[])
this.paintList.size == orig(this.paintList.size)
this.paintList.increment == orig(this.paintList.increment)
this.autoPopulateSeriesPaint == orig(this.autoPopulateSeriesPaint)
this.basePaint == orig(this.basePaint)
this.basePaint.getClass().getName() == orig(this.basePaint.getClass().getName())
this.fillPaintList == orig(this.fillPaintList)
this.fillPaintList.objects == orig(this.fillPaintList.objects)
this.fillPaintList.objects.getClass().getName() == orig(this.fillPaintList.objects.getClass().getName())
this.fillPaintList.objects[] == orig(this.fillPaintList.objects[])
this.fillPaintList.size == orig(this.fillPaintList.size)
this.fillPaintList.increment == orig(this.fillPaintList.increment)
this.autoPopulateSeriesFillPaint == orig(this.autoPopulateSeriesFillPaint)
this.baseFillPaint == orig(this.baseFillPaint)
this.baseFillPaint.getClass().getName() == orig(this.baseFillPaint.getClass().getName())
this.outlinePaintList == orig(this.outlinePaintList)
this.outlinePaintList.objects == orig(this.outlinePaintList.objects)
this.outlinePaintList.objects.getClass().getName() == orig(this.outlinePaintList.objects.getClass().getName())
this.outlinePaintList.objects[] == orig(this.outlinePaintList.objects[])
this.outlinePaintList.size == orig(this.outlinePaintList.size)
this.outlinePaintList.increment == orig(this.outlinePaintList.increment)
this.autoPopulateSeriesOutlinePaint == orig(this.autoPopulateSeriesOutlinePaint)
this.baseOutlinePaint == orig(this.baseOutlinePaint)
this.baseOutlinePaint.getClass().getName() == orig(this.baseOutlinePaint.getClass().getName())
this.strokeList == orig(this.strokeList)
this.strokeList.objects == orig(this.strokeList.objects)
this.strokeList.objects.getClass().getName() == orig(this.strokeList.objects.getClass().getName())
this.strokeList.objects[] == orig(this.strokeList.objects[])
this.strokeList.size == orig(this.strokeList.size)
this.strokeList.increment == orig(this.strokeList.increment)
this.autoPopulateSeriesStroke == orig(this.autoPopulateSeriesStroke)
this.baseStroke == orig(this.baseStroke)
this.baseStroke.getClass().getName() == orig(this.baseStroke.getClass().getName())
this.outlineStrokeList == orig(this.outlineStrokeList)
this.outlineStrokeList.objects == orig(this.outlineStrokeList.objects)
this.outlineStrokeList.objects.getClass().getName() == orig(this.outlineStrokeList.objects.getClass().getName())
this.outlineStrokeList.objects[] == orig(this.outlineStrokeList.objects[])
this.outlineStrokeList.size == orig(this.outlineStrokeList.size)
this.outlineStrokeList.increment == orig(this.outlineStrokeList.increment)
this.baseOutlineStroke == orig(this.baseOutlineStroke)
this.baseOutlineStroke.getClass().getName() == orig(this.baseOutlineStroke.getClass().getName())
this.autoPopulateSeriesOutlineStroke == orig(this.autoPopulateSeriesOutlineStroke)
this.shapeList == orig(this.shapeList)
this.shapeList.objects == orig(this.shapeList.objects)
this.shapeList.objects.getClass().getName() == orig(this.shapeList.objects.getClass().getName())
this.shapeList.objects[] == orig(this.shapeList.objects[])
this.shapeList.size == orig(this.shapeList.size)
this.shapeList.increment == orig(this.shapeList.increment)
this.autoPopulateSeriesShape == orig(this.autoPopulateSeriesShape)
this.baseShape == orig(this.baseShape)
this.baseShape.getClass().getName() == orig(this.baseShape.getClass().getName())
this.itemLabelsVisibleList == orig(this.itemLabelsVisibleList)
this.itemLabelsVisibleList.objects == orig(this.itemLabelsVisibleList.objects)
this.itemLabelsVisibleList.objects.getClass().getName() == orig(this.itemLabelsVisibleList.objects.getClass().getName())
this.itemLabelsVisibleList.objects[] == orig(this.itemLabelsVisibleList.objects[])
this.itemLabelsVisibleList.size == orig(this.itemLabelsVisibleList.size)
this.itemLabelsVisibleList.increment == orig(this.itemLabelsVisibleList.increment)
this.baseItemLabelsVisible == orig(this.baseItemLabelsVisible)
this.itemLabelFontList == orig(this.itemLabelFontList)
this.itemLabelFontList.objects == orig(this.itemLabelFontList.objects)
this.itemLabelFontList.objects.getClass().getName() == orig(this.itemLabelFontList.objects.getClass().getName())
this.itemLabelFontList.objects[] == orig(this.itemLabelFontList.objects[])
this.itemLabelFontList.size == orig(this.itemLabelFontList.size)
this.itemLabelFontList.increment == orig(this.itemLabelFontList.increment)
this.baseItemLabelFont == orig(this.baseItemLabelFont)
this.itemLabelPaintList == orig(this.itemLabelPaintList)
this.itemLabelPaintList.objects == orig(this.itemLabelPaintList.objects)
this.itemLabelPaintList.objects.getClass().getName() == orig(this.itemLabelPaintList.objects.getClass().getName())
this.itemLabelPaintList.objects[] == orig(this.itemLabelPaintList.objects[])
this.itemLabelPaintList.size == orig(this.itemLabelPaintList.size)
this.itemLabelPaintList.increment == orig(this.itemLabelPaintList.increment)
this.baseItemLabelPaint == orig(this.baseItemLabelPaint)
this.baseItemLabelPaint.getClass().getName() == orig(this.baseItemLabelPaint.getClass().getName())
this.positiveItemLabelPositionList == orig(this.positiveItemLabelPositionList)
this.positiveItemLabelPositionList.objects == orig(this.positiveItemLabelPositionList.objects)
this.positiveItemLabelPositionList.objects.getClass().getName() == orig(this.positiveItemLabelPositionList.objects.getClass().getName())
this.positiveItemLabelPositionList.objects[] == orig(this.positiveItemLabelPositionList.objects[])
this.positiveItemLabelPositionList.size == orig(this.positiveItemLabelPositionList.size)
this.positiveItemLabelPositionList.increment == orig(this.positiveItemLabelPositionList.increment)
this.basePositiveItemLabelPosition == orig(this.basePositiveItemLabelPosition)
this.basePositiveItemLabelPosition.itemLabelAnchor == orig(this.basePositiveItemLabelPosition.itemLabelAnchor)
org.jfree.chart.labels.ItemLabelAnchor.CENTER == orig(org.jfree.chart.labels.ItemLabelAnchor.CENTER)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE1 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE1)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE2 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE2)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE3 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE3)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE4 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE4)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE5 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE5)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE6 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE6)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE7 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE7)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE8 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE8)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE9 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE9)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE10 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE10)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE11 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE11)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE12 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE12)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12)
this.basePositiveItemLabelPosition.itemLabelAnchor.name == orig(this.basePositiveItemLabelPosition.itemLabelAnchor.name)
this.basePositiveItemLabelPosition.itemLabelAnchor.name.toString == orig(this.basePositiveItemLabelPosition.itemLabelAnchor.name.toString)
this.basePositiveItemLabelPosition.textAnchor == orig(this.basePositiveItemLabelPosition.textAnchor)
org.jfree.chart.text.TextAnchor.TOP_LEFT == orig(org.jfree.chart.text.TextAnchor.TOP_LEFT)
org.jfree.chart.text.TextAnchor.TOP_CENTER == orig(org.jfree.chart.text.TextAnchor.TOP_CENTER)
org.jfree.chart.text.TextAnchor.TOP_RIGHT == orig(org.jfree.chart.text.TextAnchor.TOP_RIGHT)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT)
org.jfree.chart.text.TextAnchor.CENTER_LEFT == orig(org.jfree.chart.text.TextAnchor.CENTER_LEFT)
org.jfree.chart.text.TextAnchor.CENTER == orig(org.jfree.chart.text.TextAnchor.CENTER)
org.jfree.chart.text.TextAnchor.CENTER_RIGHT == orig(org.jfree.chart.text.TextAnchor.CENTER_RIGHT)
org.jfree.chart.text.TextAnchor.BASELINE_LEFT == orig(org.jfree.chart.text.TextAnchor.BASELINE_LEFT)
org.jfree.chart.text.TextAnchor.BASELINE_CENTER == orig(org.jfree.chart.text.TextAnchor.BASELINE_CENTER)
org.jfree.chart.text.TextAnchor.BASELINE_RIGHT == orig(org.jfree.chart.text.TextAnchor.BASELINE_RIGHT)
org.jfree.chart.text.TextAnchor.BOTTOM_LEFT == orig(org.jfree.chart.text.TextAnchor.BOTTOM_LEFT)
org.jfree.chart.text.TextAnchor.BOTTOM_CENTER == orig(org.jfree.chart.text.TextAnchor.BOTTOM_CENTER)
org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT == orig(org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT)
this.basePositiveItemLabelPosition.textAnchor.name == orig(this.basePositiveItemLabelPosition.textAnchor.name)
this.basePositiveItemLabelPosition.textAnchor.name.toString == orig(this.basePositiveItemLabelPosition.textAnchor.name.toString)
this.basePositiveItemLabelPosition.rotationAnchor == orig(this.basePositiveItemLabelPosition.rotationAnchor)
this.basePositiveItemLabelPosition.rotationAnchor.name == orig(this.basePositiveItemLabelPosition.rotationAnchor.name)
this.basePositiveItemLabelPosition.rotationAnchor.name.toString == orig(this.basePositiveItemLabelPosition.rotationAnchor.name.toString)
this.basePositiveItemLabelPosition.angle == orig(this.basePositiveItemLabelPosition.angle)
this.negativeItemLabelPositionList == orig(this.negativeItemLabelPositionList)
this.negativeItemLabelPositionList.objects == orig(this.negativeItemLabelPositionList.objects)
this.negativeItemLabelPositionList.objects.getClass().getName() == orig(this.negativeItemLabelPositionList.objects.getClass().getName())
this.negativeItemLabelPositionList.objects[] == orig(this.negativeItemLabelPositionList.objects[])
this.negativeItemLabelPositionList.size == orig(this.negativeItemLabelPositionList.size)
this.negativeItemLabelPositionList.increment == orig(this.negativeItemLabelPositionList.increment)
this.baseNegativeItemLabelPosition == orig(this.baseNegativeItemLabelPosition)
this.baseNegativeItemLabelPosition.itemLabelAnchor == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor)
this.baseNegativeItemLabelPosition.itemLabelAnchor.name == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor.name)
this.baseNegativeItemLabelPosition.itemLabelAnchor.name.toString == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor.name.toString)
this.baseNegativeItemLabelPosition.textAnchor == orig(this.baseNegativeItemLabelPosition.textAnchor)
this.baseNegativeItemLabelPosition.textAnchor.name == orig(this.baseNegativeItemLabelPosition.textAnchor.name)
this.baseNegativeItemLabelPosition.textAnchor.name.toString == orig(this.baseNegativeItemLabelPosition.textAnchor.name.toString)
this.baseNegativeItemLabelPosition.rotationAnchor == orig(this.baseNegativeItemLabelPosition.rotationAnchor)
this.baseNegativeItemLabelPosition.rotationAnchor.name == orig(this.baseNegativeItemLabelPosition.rotationAnchor.name)
this.baseNegativeItemLabelPosition.rotationAnchor.name.toString == orig(this.baseNegativeItemLabelPosition.rotationAnchor.name.toString)
this.baseNegativeItemLabelPosition.angle == orig(this.baseNegativeItemLabelPosition.angle)
this.itemLabelAnchorOffset == orig(this.itemLabelAnchorOffset)
this.createEntitiesList == orig(this.createEntitiesList)
this.createEntitiesList.objects == orig(this.createEntitiesList.objects)
this.createEntitiesList.objects.getClass().getName() == orig(this.createEntitiesList.objects.getClass().getName())
this.createEntitiesList.objects[] == orig(this.createEntitiesList.objects[])
this.createEntitiesList.size == orig(this.createEntitiesList.size)
this.createEntitiesList.increment == orig(this.createEntitiesList.increment)
this.baseCreateEntities == orig(this.baseCreateEntities)
this.legendShapeList == orig(this.legendShapeList)
this.legendShapeList.objects == orig(this.legendShapeList.objects)
this.legendShapeList.objects.getClass().getName() == orig(this.legendShapeList.objects.getClass().getName())
this.legendShapeList.objects[] == orig(this.legendShapeList.objects[])
this.legendShapeList.size == orig(this.legendShapeList.size)
this.legendShapeList.increment == orig(this.legendShapeList.increment)
this.baseLegendShape == orig(this.baseLegendShape)
this.treatLegendShapeAsLine == orig(this.treatLegendShapeAsLine)
this.legendTextFont == orig(this.legendTextFont)
this.legendTextFont.objects == orig(this.legendTextFont.objects)
this.legendTextFont.objects.getClass().getName() == orig(this.legendTextFont.objects.getClass().getName())
this.legendTextFont.objects[] == orig(this.legendTextFont.objects[])
this.legendTextFont.size == orig(this.legendTextFont.size)
this.legendTextFont.increment == orig(this.legendTextFont.increment)
this.baseLegendTextFont == orig(this.baseLegendTextFont)
this.legendTextPaint == orig(this.legendTextPaint)
this.legendTextPaint.objects == orig(this.legendTextPaint.objects)
this.legendTextPaint.objects.getClass().getName() == orig(this.legendTextPaint.objects.getClass().getName())
this.legendTextPaint.objects[] == orig(this.legendTextPaint.objects[])
this.legendTextPaint.size == orig(this.legendTextPaint.size)
this.legendTextPaint.increment == orig(this.legendTextPaint.increment)
this.baseLegendTextPaint == orig(this.baseLegendTextPaint)
this.dataBoundsIncludesVisibleSeriesOnly == orig(this.dataBoundsIncludesVisibleSeriesOnly)
this.defaultEntityRadius == orig(this.defaultEntityRadius)
this.listenerList == orig(this.listenerList)
this.selectedItemAttributes == orig(this.selectedItemAttributes)
this.selectedItemAttributes.allowNull == orig(this.selectedItemAttributes.allowNull)
this.selectedItemAttributes.paintList == orig(this.selectedItemAttributes.paintList)
this.selectedItemAttributes.paintList.objects == orig(this.selectedItemAttributes.paintList.objects)
this.selectedItemAttributes.paintList.objects.getClass().getName() == orig(this.selectedItemAttributes.paintList.objects.getClass().getName())
this.selectedItemAttributes.paintList.objects[] == orig(this.selectedItemAttributes.paintList.objects[])
this.selectedItemAttributes.paintList.size == orig(this.selectedItemAttributes.paintList.size)
this.selectedItemAttributes.paintList.increment == orig(this.selectedItemAttributes.paintList.increment)
this.selectedItemAttributes.defaultPaint == orig(this.selectedItemAttributes.defaultPaint)
this.selectedItemAttributes.strokeList == orig(this.selectedItemAttributes.strokeList)
this.selectedItemAttributes.strokeList.objects == orig(this.selectedItemAttributes.strokeList.objects)
this.selectedItemAttributes.strokeList.objects.getClass().getName() == orig(this.selectedItemAttributes.strokeList.objects.getClass().getName())
this.selectedItemAttributes.strokeList.objects[] == orig(this.selectedItemAttributes.strokeList.objects[])
this.selectedItemAttributes.strokeList.size == orig(this.selectedItemAttributes.strokeList.size)
this.selectedItemAttributes.strokeList.increment == orig(this.selectedItemAttributes.strokeList.increment)
this.selectedItemAttributes.defaultStroke == orig(this.selectedItemAttributes.defaultStroke)
this.selectedItemAttributes.shapeList == orig(this.selectedItemAttributes.shapeList)
this.selectedItemAttributes.shapeList.objects == orig(this.selectedItemAttributes.shapeList.objects)
this.selectedItemAttributes.shapeList.objects.getClass().getName() == orig(this.selectedItemAttributes.shapeList.objects.getClass().getName())
this.selectedItemAttributes.shapeList.objects[] == orig(this.selectedItemAttributes.shapeList.objects[])
this.selectedItemAttributes.shapeList.size == orig(this.selectedItemAttributes.shapeList.size)
this.selectedItemAttributes.shapeList.increment == orig(this.selectedItemAttributes.shapeList.increment)
this.selectedItemAttributes.defaultShape == orig(this.selectedItemAttributes.defaultShape)
this.selectedItemAttributes.fillPaintList == orig(this.selectedItemAttributes.fillPaintList)
this.selectedItemAttributes.fillPaintList.objects == orig(this.selectedItemAttributes.fillPaintList.objects)
this.selectedItemAttributes.fillPaintList.objects.getClass().getName() == orig(this.selectedItemAttributes.fillPaintList.objects.getClass().getName())
this.selectedItemAttributes.fillPaintList.objects[] == orig(this.selectedItemAttributes.fillPaintList.objects[])
this.selectedItemAttributes.fillPaintList.size == orig(this.selectedItemAttributes.fillPaintList.size)
this.selectedItemAttributes.fillPaintList.increment == orig(this.selectedItemAttributes.fillPaintList.increment)
this.selectedItemAttributes.defaultFillPaint == orig(this.selectedItemAttributes.defaultFillPaint)
this.selectedItemAttributes.defaultFillPaint.getClass().getName() == orig(this.selectedItemAttributes.defaultFillPaint.getClass().getName())
this.selectedItemAttributes.outlinePaintList == orig(this.selectedItemAttributes.outlinePaintList)
this.selectedItemAttributes.outlinePaintList.objects == orig(this.selectedItemAttributes.outlinePaintList.objects)
this.selectedItemAttributes.outlinePaintList.objects.getClass().getName() == orig(this.selectedItemAttributes.outlinePaintList.objects.getClass().getName())
this.selectedItemAttributes.outlinePaintList.objects[] == orig(this.selectedItemAttributes.outlinePaintList.objects[])
this.selectedItemAttributes.outlinePaintList.size == orig(this.selectedItemAttributes.outlinePaintList.size)
this.selectedItemAttributes.outlinePaintList.increment == orig(this.selectedItemAttributes.outlinePaintList.increment)
this.selectedItemAttributes.defaultOutlinePaint == orig(this.selectedItemAttributes.defaultOutlinePaint)
this.selectedItemAttributes.outlineStrokeList == orig(this.selectedItemAttributes.outlineStrokeList)
this.selectedItemAttributes.defaultOutlineStroke == orig(this.selectedItemAttributes.defaultOutlineStroke)
this.selectedItemAttributes.labelsVisibleList == orig(this.selectedItemAttributes.labelsVisibleList)
this.selectedItemAttributes.defaultLabelVisible == orig(this.selectedItemAttributes.defaultLabelVisible)
this.selectedItemAttributes.labelFontList == orig(this.selectedItemAttributes.labelFontList)
this.selectedItemAttributes.defaultLabelFont == orig(this.selectedItemAttributes.defaultLabelFont)
this.selectedItemAttributes.labelPaintList == orig(this.selectedItemAttributes.labelPaintList)
this.selectedItemAttributes.defaultLabelPaint == orig(this.selectedItemAttributes.defaultLabelPaint)
this.selectedItemAttributes.positionItemLabelPositionList == orig(this.selectedItemAttributes.positionItemLabelPositionList)
this.selectedItemAttributes.defaultPositiveItemLabelPosition == orig(this.selectedItemAttributes.defaultPositiveItemLabelPosition)
this.selectedItemAttributes.negativeItemLabelPositionList == orig(this.selectedItemAttributes.negativeItemLabelPositionList)
this.selectedItemAttributes.defaultNegativeItemLabelPosition == orig(this.selectedItemAttributes.defaultNegativeItemLabelPosition)
this.selectedItemAttributes.createEntityList == orig(this.selectedItemAttributes.createEntityList)
this.selectedItemAttributes.defaultCreateEntity == orig(this.selectedItemAttributes.defaultCreateEntity)
org.jfree.chart.renderer.AbstractRenderer.ADJ == orig(org.jfree.chart.renderer.AbstractRenderer.ADJ)
org.jfree.chart.renderer.AbstractRenderer.OPP == orig(org.jfree.chart.renderer.AbstractRenderer.OPP)
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener == orig(org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener)
this.plot has only one value
this.strokeList.objects[] contains only nulls and has only one value, of length 8
this.strokeList.objects[] elements == null
this.strokeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.strokeList.objects[].getClass().getName() elements == null
this.strokeList.size == 0
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener has only one value
return has only one value
return.orientation has only one value
return.orientation.name has only one value
return.orientation.name.toString == "PlotOrientation.VERTICAL"
return.axisOffset has only one value
return.axisOffset.unitType has only one value
return.axisOffset.top == 4.0
return.axisOffset.left == 4.0
return.axisOffset.bottom == 4.0
return.axisOffset.right == 4.0
return.domainAxes has only one value
return.domainAxes.objects has only one value
return.domainAxes.objects.getClass().getName() == java.lang.Object[].class
return.domainAxes.objects[] contains only nulls and has only one value, of length 8
return.domainAxes.objects[] elements == null
return.domainAxes.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
return.domainAxes.objects[].getClass().getName() elements == null
return.domainAxes.size == 1
return.domainAxes.increment == 8
return.domainAxisLocations has only one value
return.domainAxisLocations.objects has only one value
return.domainAxisLocations.objects.getClass().getName() == java.lang.Object[].class
return.domainAxisLocations.objects[] has only one value, of length 8
return.domainAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
return.domainAxisLocations.size == 1
return.domainAxisLocations.increment == 8
return.drawSharedDomainAxis == false
return.rangeAxes has only one value
return.rangeAxes.objects has only one value
return.rangeAxes.objects.getClass().getName() == java.lang.Object[].class
return.rangeAxes.objects[] contains only nulls and has only one value, of length 8
return.rangeAxes.objects[] elements == null
return.rangeAxes.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
return.rangeAxes.objects[].getClass().getName() elements == null
return.rangeAxes.size == 1
return.rangeAxes.increment == 8
return.rangeAxisLocations has only one value
return.rangeAxisLocations.objects has only one value
return.rangeAxisLocations.objects.getClass().getName() == java.lang.Object[].class
return.rangeAxisLocations.objects[] has only one value, of length 8
return.rangeAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
return.rangeAxisLocations.size == 1
return.rangeAxisLocations.increment == 8
return.datasets has only one value
return.datasets.objects has only one value
return.datasets.objects.getClass().getName() == java.lang.Object[].class
return.datasets.objects[] has only one value, of length 8
return.datasets.objects[].getClass().getName() == [org.jfree.data.category.DefaultCategoryDataset, null, null, null, null, null, null, null]
return.datasets.size == 1
return.datasets.increment == 8
return.datasetToDomainAxesMap has only one value
return.datasetToRangeAxesMap has only one value
return.renderers has only one value
return.renderers.objects has only one value
return.renderers.objects.getClass().getName() == java.lang.Object[].class
return.renderers.objects[] has only one value, of length 8
return.renderers.objects[].getClass().getName() == [org.jfree.chart.renderer.category.LineAndShapeRenderer, null, null, null, null, null, null, null]
return.renderers.size == 1
return.renderers.increment == 8
return.renderingOrder has only one value
return.renderingOrder.name has only one value
return.renderingOrder.name.toString == "DatasetRenderingOrder.REVERSE"
return.columnRenderingOrder has only one value
return.columnRenderingOrder.name has only one value
return.columnRenderingOrder.name.toString == "SortOrder.ASCENDING"
return.rowRenderingOrder has only one value
return.rowRenderingOrder.name has only one value
return.rowRenderingOrder.name.toString == "SortOrder.ASCENDING"
return.domainGridlinesVisible == false
return.domainGridlinePosition has only one value
return.domainGridlinePosition.name has only one value
return.domainGridlinePosition.name.toString == "CategoryAnchor.MIDDLE"
return.domainGridlineStroke has only one value
return.domainGridlineStroke.getClass().getName() == java.awt.BasicStroke.class
return.domainGridlinePaint has only one value
return.domainGridlinePaint.getClass().getName() == java.awt.Color.class
return.rangeZeroBaselineVisible == false
return.rangeZeroBaselineStroke has only one value
return.rangeZeroBaselineStroke.getClass().getName() == java.awt.BasicStroke.class
return.rangeZeroBaselinePaint has only one value
return.rangeZeroBaselinePaint.getClass().getName() == java.awt.Color.class
return.rangeGridlinesVisible == true
return.rangeGridlineStroke has only one value
return.rangeGridlineStroke.getClass().getName() == java.awt.BasicStroke.class
return.rangeGridlinePaint has only one value
return.rangeGridlinePaint.getClass().getName() == java.awt.Color.class
return.rangeMinorGridlinesVisible == false
return.rangeMinorGridlineStroke has only one value
return.rangeMinorGridlineStroke.getClass().getName() == java.awt.BasicStroke.class
return.rangeMinorGridlinePaint has only one value
return.rangeMinorGridlinePaint.getClass().getName() == java.awt.Color.class
return.anchorValue == 0.0
return.crosshairDatasetIndex == 0
return.domainCrosshairVisible == false
return.domainCrosshairRowKey == null
return.domainCrosshairColumnKey == null
return.domainCrosshairStroke has only one value
return.domainCrosshairStroke.getClass().getName() == java.awt.BasicStroke.class
return.domainCrosshairPaint has only one value
return.domainCrosshairPaint.getClass().getName() == java.awt.Color.class
return.rangeCrosshairVisible == false
return.rangeCrosshairValue == 0.0
return.rangeCrosshairStroke has only one value
return.rangeCrosshairStroke.getClass().getName() == java.awt.BasicStroke.class
return.rangeCrosshairPaint has only one value
return.rangeCrosshairPaint.getClass().getName() == java.awt.Color.class
return.rangeCrosshairLockedOnData == true
return.foregroundDomainMarkers has only one value
return.foregroundDomainMarkers.getClass().getName() == java.util.HashMap.class
return.backgroundDomainMarkers has only one value
return.backgroundDomainMarkers.getClass().getName() == java.util.HashMap.class
return.foregroundRangeMarkers has only one value
return.foregroundRangeMarkers.getClass().getName() == java.util.HashMap.class
return.backgroundRangeMarkers has only one value
return.backgroundRangeMarkers.getClass().getName() == java.util.HashMap.class
return.annotations has only one value
return.annotations[] == []
return.annotations[].getClass().getName() == []
return.annotations.getClass().getName() == java.util.ArrayList.class
return.weight == 0
return.fixedDomainAxisSpace == null
return.fixedRangeAxisSpace == null
return.fixedLegendItems == null
return.rangePannable == false
return.shadowGenerator has only one value
return.shadowGenerator.getClass().getName() == org.jfree.chart.util.DefaultShadowGenerator.class
return.parent == null
return.datasetGroup == null
return.noDataMessage == null
return.noDataMessageFont has only one value
return.noDataMessagePaint has only one value
return.noDataMessagePaint.getClass().getName() == java.awt.Color.class
return.insets has only one value
return.insets.unitType has only one value
return.insets.top == 4.0
return.insets.left == 8.0
return.insets.bottom == 4.0
return.insets.right == 8.0
return.outlineVisible == true
return.outlineStroke has only one value
return.outlineStroke.getClass().getName() == java.awt.BasicStroke.class
return.outlinePaint has only one value
return.outlinePaint.getClass().getName() == java.awt.Color.class
return.backgroundPaint has only one value
return.backgroundPaint.getClass().getName() == java.awt.Color.class
return.backgroundImage == null
return.backgroundImageAlignment == 15
return.backgroundImageAlpha == 0.5
return.foregroundAlpha == 1.0
return.backgroundAlpha == 1.0
return.drawingSupplier has only one value
return.drawingSupplier.getClass().getName() == org.jfree.chart.plot.DefaultDrawingSupplier.class
return.listenerList has only one value
return.notify == true
size(return.domainAxes.objects[]) == 8
size(return.domainAxisLocations.objects[]) == 8
size(return.rangeAxes.objects[]) == 8
size(return.rangeAxisLocations.objects[]) == 8
size(return.datasets.objects[]) == 8
size(return.renderers.objects[]) == 8
===========================================================================
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::ENTER
this.plot == null
this.paintList.objects[] contains only nulls and has only one value, of length 8
this.paintList.objects[] elements == null
this.paintList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.paintList.objects[].getClass().getName() elements == null
this.paintList.size == 0
this.strokeList.objects[] contains only nulls and has only one value, of length 8
this.strokeList.objects[] elements == null
this.strokeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.strokeList.objects[].getClass().getName() elements == null
this.strokeList.size == 0
this.shapeList.objects[] contains only nulls and has only one value, of length 8
this.shapeList.objects[] elements == null
this.shapeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.shapeList.objects[].getClass().getName() elements == null
this.shapeList.size == 0
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener == null
plot has only one value
plot.orientation has only one value
plot.orientation.name has only one value
plot.orientation.name.toString == "PlotOrientation.VERTICAL"
plot.axisOffset has only one value
plot.axisOffset.unitType has only one value
plot.axisOffset.top == 4.0
plot.axisOffset.left == 4.0
plot.axisOffset.bottom == 4.0
plot.axisOffset.right == 4.0
plot.domainAxes has only one value
plot.domainAxes.objects has only one value
plot.domainAxes.objects.getClass().getName() == java.lang.Object[].class
plot.domainAxes.objects[] contains only nulls and has only one value, of length 8
plot.domainAxes.objects[] elements == null
plot.domainAxes.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
plot.domainAxes.objects[].getClass().getName() elements == null
plot.domainAxes.size == 1
plot.domainAxes.increment == 8
plot.domainAxisLocations has only one value
plot.domainAxisLocations.objects has only one value
plot.domainAxisLocations.objects.getClass().getName() == java.lang.Object[].class
plot.domainAxisLocations.objects[] has only one value, of length 8
plot.domainAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
plot.domainAxisLocations.size == 1
plot.domainAxisLocations.increment == 8
plot.drawSharedDomainAxis == false
plot.rangeAxes has only one value
plot.rangeAxes.objects has only one value
plot.rangeAxes.objects.getClass().getName() == java.lang.Object[].class
plot.rangeAxes.objects[] contains only nulls and has only one value, of length 8
plot.rangeAxes.objects[] elements == null
plot.rangeAxes.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
plot.rangeAxes.objects[].getClass().getName() elements == null
plot.rangeAxes.size == 1
plot.rangeAxes.increment == 8
plot.rangeAxisLocations has only one value
plot.rangeAxisLocations.objects has only one value
plot.rangeAxisLocations.objects.getClass().getName() == java.lang.Object[].class
plot.rangeAxisLocations.objects[] has only one value, of length 8
plot.rangeAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
plot.rangeAxisLocations.size == 1
plot.rangeAxisLocations.increment == 8
plot.datasets has only one value
plot.datasets.objects has only one value
plot.datasets.objects.getClass().getName() == java.lang.Object[].class
plot.datasets.objects[] has only one value, of length 8
plot.datasets.objects[].getClass().getName() == [org.jfree.data.category.DefaultCategoryDataset, null, null, null, null, null, null, null]
plot.datasets.size == 1
plot.datasets.increment == 8
plot.datasetToDomainAxesMap has only one value
plot.datasetToRangeAxesMap has only one value
plot.renderers has only one value
plot.renderers.objects has only one value
plot.renderers.objects.getClass().getName() == java.lang.Object[].class
plot.renderers.objects[] has only one value, of length 8
plot.renderers.objects[].getClass().getName() == [org.jfree.chart.renderer.category.LineAndShapeRenderer, null, null, null, null, null, null, null]
plot.renderers.size == 1
plot.renderers.increment == 8
plot.renderingOrder has only one value
plot.renderingOrder.name has only one value
plot.renderingOrder.name.toString == "DatasetRenderingOrder.REVERSE"
plot.columnRenderingOrder has only one value
plot.columnRenderingOrder.name has only one value
plot.columnRenderingOrder.name.toString == "SortOrder.ASCENDING"
plot.rowRenderingOrder has only one value
plot.rowRenderingOrder.name has only one value
plot.rowRenderingOrder.name.toString == "SortOrder.ASCENDING"
plot.domainGridlinesVisible == false
plot.domainGridlinePosition has only one value
plot.domainGridlinePosition.name has only one value
plot.domainGridlinePosition.name.toString == "CategoryAnchor.MIDDLE"
plot.domainGridlineStroke has only one value
plot.domainGridlineStroke.getClass().getName() == java.awt.BasicStroke.class
plot.domainGridlinePaint has only one value
plot.domainGridlinePaint.getClass().getName() == java.awt.Color.class
plot.rangeZeroBaselineVisible == false
plot.rangeZeroBaselineStroke has only one value
plot.rangeZeroBaselineStroke.getClass().getName() == java.awt.BasicStroke.class
plot.rangeZeroBaselinePaint has only one value
plot.rangeZeroBaselinePaint.getClass().getName() == java.awt.Color.class
plot.rangeGridlinesVisible == true
plot.rangeGridlineStroke has only one value
plot.rangeGridlineStroke.getClass().getName() == java.awt.BasicStroke.class
plot.rangeGridlinePaint has only one value
plot.rangeGridlinePaint.getClass().getName() == java.awt.Color.class
plot.rangeMinorGridlinesVisible == false
plot.rangeMinorGridlineStroke has only one value
plot.rangeMinorGridlineStroke.getClass().getName() == java.awt.BasicStroke.class
plot.rangeMinorGridlinePaint has only one value
plot.rangeMinorGridlinePaint.getClass().getName() == java.awt.Color.class
plot.anchorValue == 0.0
plot.crosshairDatasetIndex == 0
plot.domainCrosshairVisible == false
plot.domainCrosshairRowKey == null
plot.domainCrosshairColumnKey == null
plot.domainCrosshairStroke has only one value
plot.domainCrosshairStroke.getClass().getName() == java.awt.BasicStroke.class
plot.domainCrosshairPaint has only one value
plot.domainCrosshairPaint.getClass().getName() == java.awt.Color.class
plot.rangeCrosshairVisible == false
plot.rangeCrosshairValue == 0.0
plot.rangeCrosshairStroke has only one value
plot.rangeCrosshairStroke.getClass().getName() == java.awt.BasicStroke.class
plot.rangeCrosshairPaint has only one value
plot.rangeCrosshairPaint.getClass().getName() == java.awt.Color.class
plot.rangeCrosshairLockedOnData == true
plot.foregroundDomainMarkers has only one value
plot.foregroundDomainMarkers.getClass().getName() == java.util.HashMap.class
plot.backgroundDomainMarkers has only one value
plot.backgroundDomainMarkers.getClass().getName() == java.util.HashMap.class
plot.foregroundRangeMarkers has only one value
plot.foregroundRangeMarkers.getClass().getName() == java.util.HashMap.class
plot.backgroundRangeMarkers has only one value
plot.backgroundRangeMarkers.getClass().getName() == java.util.HashMap.class
plot.annotations has only one value
plot.annotations[] == []
plot.annotations[].getClass().getName() == []
plot.annotations.getClass().getName() == java.util.ArrayList.class
plot.weight == 0
plot.fixedDomainAxisSpace == null
plot.fixedRangeAxisSpace == null
plot.fixedLegendItems == null
plot.rangePannable == false
plot.shadowGenerator has only one value
plot.shadowGenerator.getClass().getName() == org.jfree.chart.util.DefaultShadowGenerator.class
plot.parent == null
plot.datasetGroup == null
plot.noDataMessage == null
plot.noDataMessageFont has only one value
plot.noDataMessagePaint has only one value
plot.noDataMessagePaint.getClass().getName() == java.awt.Color.class
plot.insets has only one value
plot.insets.unitType has only one value
plot.insets.top == 4.0
plot.insets.left == 8.0
plot.insets.bottom == 4.0
plot.insets.right == 8.0
plot.outlineVisible == true
plot.outlineStroke has only one value
plot.outlineStroke.getClass().getName() == java.awt.BasicStroke.class
plot.outlinePaint has only one value
plot.outlinePaint.getClass().getName() == java.awt.Color.class
plot.backgroundPaint has only one value
plot.backgroundPaint.getClass().getName() == java.awt.Color.class
plot.backgroundImage == null
plot.backgroundImageAlignment == 15
plot.backgroundImageAlpha == 0.5
plot.foregroundAlpha == 1.0
plot.backgroundAlpha == 1.0
plot.drawingSupplier has only one value
plot.drawingSupplier.getClass().getName() == org.jfree.chart.plot.DefaultDrawingSupplier.class
plot.listenerList has only one value
plot.notify == true
size(plot.domainAxes.objects[]) == 8
size(plot.domainAxisLocations.objects[]) == 8
size(plot.rangeAxes.objects[]) == 8
size(plot.rangeAxisLocations.objects[]) == 8
size(plot.datasets.objects[]) == 8
size(plot.renderers.objects[]) == 8
===========================================================================
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::EXIT
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE)
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_VALUE_LABEL_FONT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_VALUE_LABEL_FONT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT.getClass().getName())
org.jfree.chart.plot.CategoryPlot.localizationResources == orig(org.jfree.chart.plot.CategoryPlot.localizationResources)
org.jfree.chart.plot.CategoryPlot.localizationResources.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.localizationResources.getClass().getName())
org.jfree.chart.plot.PlotOrientation.HORIZONTAL == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL)
org.jfree.chart.plot.PlotOrientation.VERTICAL == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE)
org.jfree.chart.util.SortOrder.ASCENDING == orig(org.jfree.chart.util.SortOrder.ASCENDING)
org.jfree.chart.util.SortOrder.DESCENDING == orig(org.jfree.chart.util.SortOrder.DESCENDING)
org.jfree.chart.axis.CategoryAnchor.START == orig(org.jfree.chart.axis.CategoryAnchor.START)
org.jfree.chart.axis.CategoryAnchor.MIDDLE == orig(org.jfree.chart.axis.CategoryAnchor.MIDDLE)
org.jfree.chart.axis.CategoryAnchor.END == orig(org.jfree.chart.axis.CategoryAnchor.END)
org.jfree.chart.plot.Plot.ZERO == orig(org.jfree.chart.plot.Plot.ZERO)
org.jfree.chart.plot.Plot.ZERO.getClass().getName() == orig(org.jfree.chart.plot.Plot.ZERO.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_INSETS == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.top == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.top)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.left == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.left)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.right == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.right)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName())
org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener == orig(org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener)
this.itemLabelGeneratorList == orig(this.itemLabelGeneratorList)
this.itemLabelGeneratorList.objects == orig(this.itemLabelGeneratorList.objects)
this.itemLabelGeneratorList.objects.getClass().getName() == orig(this.itemLabelGeneratorList.objects.getClass().getName())
this.itemLabelGeneratorList.objects[] == orig(this.itemLabelGeneratorList.objects[])
this.itemLabelGeneratorList.size == orig(this.itemLabelGeneratorList.size)
this.itemLabelGeneratorList.increment == orig(this.itemLabelGeneratorList.increment)
this.baseItemLabelGenerator == orig(this.baseItemLabelGenerator)
this.toolTipGeneratorList == orig(this.toolTipGeneratorList)
this.toolTipGeneratorList.objects == orig(this.toolTipGeneratorList.objects)
this.toolTipGeneratorList.objects.getClass().getName() == orig(this.toolTipGeneratorList.objects.getClass().getName())
this.toolTipGeneratorList.objects[] == orig(this.toolTipGeneratorList.objects[])
this.toolTipGeneratorList.size == orig(this.toolTipGeneratorList.size)
this.toolTipGeneratorList.increment == orig(this.toolTipGeneratorList.increment)
this.baseToolTipGenerator == orig(this.baseToolTipGenerator)
this.urlGeneratorList == orig(this.urlGeneratorList)
this.urlGeneratorList.objects == orig(this.urlGeneratorList.objects)
this.urlGeneratorList.objects.getClass().getName() == orig(this.urlGeneratorList.objects.getClass().getName())
this.urlGeneratorList.objects[] == orig(this.urlGeneratorList.objects[])
this.urlGeneratorList.size == orig(this.urlGeneratorList.size)
this.urlGeneratorList.increment == orig(this.urlGeneratorList.increment)
this.baseURLGenerator == orig(this.baseURLGenerator)
this.legendItemLabelGenerator == orig(this.legendItemLabelGenerator)
this.legendItemLabelGenerator.getClass().getName() == orig(this.legendItemLabelGenerator.getClass().getName())
this.legendItemToolTipGenerator == orig(this.legendItemToolTipGenerator)
this.legendItemURLGenerator == orig(this.legendItemURLGenerator)
this.backgroundAnnotations == orig(this.backgroundAnnotations)
this.backgroundAnnotations[] == orig(this.backgroundAnnotations[])
this.backgroundAnnotations.getClass().getName() == orig(this.backgroundAnnotations.getClass().getName())
this.foregroundAnnotations == orig(this.foregroundAnnotations)
this.foregroundAnnotations[] == orig(this.foregroundAnnotations[])
this.foregroundAnnotations.getClass().getName() == orig(this.foregroundAnnotations.getClass().getName())
this.rowCount == orig(this.rowCount)
this.columnCount == orig(this.columnCount)
org.jfree.chart.renderer.AbstractRenderer.ZERO == orig(org.jfree.chart.renderer.AbstractRenderer.ZERO)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_FONT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_FONT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT.getClass().getName())
this.seriesVisibleList == orig(this.seriesVisibleList)
this.seriesVisibleList.objects == orig(this.seriesVisibleList.objects)
this.seriesVisibleList.objects.getClass().getName() == orig(this.seriesVisibleList.objects.getClass().getName())
this.seriesVisibleList.objects[] == orig(this.seriesVisibleList.objects[])
this.seriesVisibleList.size == orig(this.seriesVisibleList.size)
this.seriesVisibleList.increment == orig(this.seriesVisibleList.increment)
this.baseSeriesVisible == orig(this.baseSeriesVisible)
this.seriesVisibleInLegendList == orig(this.seriesVisibleInLegendList)
this.seriesVisibleInLegendList.objects == orig(this.seriesVisibleInLegendList.objects)
this.seriesVisibleInLegendList.objects.getClass().getName() == orig(this.seriesVisibleInLegendList.objects.getClass().getName())
this.seriesVisibleInLegendList.objects[] == orig(this.seriesVisibleInLegendList.objects[])
this.seriesVisibleInLegendList.size == orig(this.seriesVisibleInLegendList.size)
this.seriesVisibleInLegendList.increment == orig(this.seriesVisibleInLegendList.increment)
this.baseSeriesVisibleInLegend == orig(this.baseSeriesVisibleInLegend)
this.paintList == orig(this.paintList)
this.paintList.objects == orig(this.paintList.objects)
this.paintList.objects.getClass().getName() == orig(this.paintList.objects.getClass().getName())
this.paintList.objects[] == orig(this.paintList.objects[])
this.paintList.size == orig(this.paintList.size)
this.paintList.increment == orig(this.paintList.increment)
this.autoPopulateSeriesPaint == orig(this.autoPopulateSeriesPaint)
this.basePaint == orig(this.basePaint)
this.basePaint.getClass().getName() == orig(this.basePaint.getClass().getName())
this.fillPaintList == orig(this.fillPaintList)
this.fillPaintList.objects == orig(this.fillPaintList.objects)
this.fillPaintList.objects.getClass().getName() == orig(this.fillPaintList.objects.getClass().getName())
this.fillPaintList.objects[] == orig(this.fillPaintList.objects[])
this.fillPaintList.size == orig(this.fillPaintList.size)
this.fillPaintList.increment == orig(this.fillPaintList.increment)
this.autoPopulateSeriesFillPaint == orig(this.autoPopulateSeriesFillPaint)
this.baseFillPaint == orig(this.baseFillPaint)
this.baseFillPaint.getClass().getName() == orig(this.baseFillPaint.getClass().getName())
this.outlinePaintList == orig(this.outlinePaintList)
this.outlinePaintList.objects == orig(this.outlinePaintList.objects)
this.outlinePaintList.objects.getClass().getName() == orig(this.outlinePaintList.objects.getClass().getName())
this.outlinePaintList.objects[] == orig(this.outlinePaintList.objects[])
this.outlinePaintList.size == orig(this.outlinePaintList.size)
this.outlinePaintList.increment == orig(this.outlinePaintList.increment)
this.autoPopulateSeriesOutlinePaint == orig(this.autoPopulateSeriesOutlinePaint)
this.baseOutlinePaint == orig(this.baseOutlinePaint)
this.baseOutlinePaint.getClass().getName() == orig(this.baseOutlinePaint.getClass().getName())
this.strokeList == orig(this.strokeList)
this.strokeList.objects == orig(this.strokeList.objects)
this.strokeList.objects.getClass().getName() == orig(this.strokeList.objects.getClass().getName())
this.strokeList.objects[] == orig(this.strokeList.objects[])
this.strokeList.size == orig(this.strokeList.size)
this.strokeList.increment == orig(this.strokeList.increment)
this.autoPopulateSeriesStroke == orig(this.autoPopulateSeriesStroke)
this.baseStroke == orig(this.baseStroke)
this.baseStroke.getClass().getName() == orig(this.baseStroke.getClass().getName())
this.outlineStrokeList == orig(this.outlineStrokeList)
this.outlineStrokeList.objects == orig(this.outlineStrokeList.objects)
this.outlineStrokeList.objects.getClass().getName() == orig(this.outlineStrokeList.objects.getClass().getName())
this.outlineStrokeList.objects[] == orig(this.outlineStrokeList.objects[])
this.outlineStrokeList.size == orig(this.outlineStrokeList.size)
this.outlineStrokeList.increment == orig(this.outlineStrokeList.increment)
this.baseOutlineStroke == orig(this.baseOutlineStroke)
this.baseOutlineStroke.getClass().getName() == orig(this.baseOutlineStroke.getClass().getName())
this.autoPopulateSeriesOutlineStroke == orig(this.autoPopulateSeriesOutlineStroke)
this.shapeList == orig(this.shapeList)
this.shapeList.objects == orig(this.shapeList.objects)
this.shapeList.objects.getClass().getName() == orig(this.shapeList.objects.getClass().getName())
this.shapeList.objects[] == orig(this.shapeList.objects[])
this.shapeList.size == orig(this.shapeList.size)
this.shapeList.increment == orig(this.shapeList.increment)
this.autoPopulateSeriesShape == orig(this.autoPopulateSeriesShape)
this.baseShape == orig(this.baseShape)
this.baseShape.getClass().getName() == orig(this.baseShape.getClass().getName())
this.itemLabelsVisibleList == orig(this.itemLabelsVisibleList)
this.itemLabelsVisibleList.objects == orig(this.itemLabelsVisibleList.objects)
this.itemLabelsVisibleList.objects.getClass().getName() == orig(this.itemLabelsVisibleList.objects.getClass().getName())
this.itemLabelsVisibleList.objects[] == orig(this.itemLabelsVisibleList.objects[])
this.itemLabelsVisibleList.size == orig(this.itemLabelsVisibleList.size)
this.itemLabelsVisibleList.increment == orig(this.itemLabelsVisibleList.increment)
this.baseItemLabelsVisible == orig(this.baseItemLabelsVisible)
this.itemLabelFontList == orig(this.itemLabelFontList)
this.itemLabelFontList.objects == orig(this.itemLabelFontList.objects)
this.itemLabelFontList.objects.getClass().getName() == orig(this.itemLabelFontList.objects.getClass().getName())
this.itemLabelFontList.objects[] == orig(this.itemLabelFontList.objects[])
this.itemLabelFontList.size == orig(this.itemLabelFontList.size)
this.itemLabelFontList.increment == orig(this.itemLabelFontList.increment)
this.baseItemLabelFont == orig(this.baseItemLabelFont)
this.itemLabelPaintList == orig(this.itemLabelPaintList)
this.itemLabelPaintList.objects == orig(this.itemLabelPaintList.objects)
this.itemLabelPaintList.objects.getClass().getName() == orig(this.itemLabelPaintList.objects.getClass().getName())
this.itemLabelPaintList.objects[] == orig(this.itemLabelPaintList.objects[])
this.itemLabelPaintList.size == orig(this.itemLabelPaintList.size)
this.itemLabelPaintList.increment == orig(this.itemLabelPaintList.increment)
this.baseItemLabelPaint == orig(this.baseItemLabelPaint)
this.baseItemLabelPaint.getClass().getName() == orig(this.baseItemLabelPaint.getClass().getName())
this.positiveItemLabelPositionList == orig(this.positiveItemLabelPositionList)
this.positiveItemLabelPositionList.objects == orig(this.positiveItemLabelPositionList.objects)
this.positiveItemLabelPositionList.objects.getClass().getName() == orig(this.positiveItemLabelPositionList.objects.getClass().getName())
this.positiveItemLabelPositionList.objects[] == orig(this.positiveItemLabelPositionList.objects[])
this.positiveItemLabelPositionList.size == orig(this.positiveItemLabelPositionList.size)
this.positiveItemLabelPositionList.increment == orig(this.positiveItemLabelPositionList.increment)
this.basePositiveItemLabelPosition == orig(this.basePositiveItemLabelPosition)
this.basePositiveItemLabelPosition.itemLabelAnchor == orig(this.basePositiveItemLabelPosition.itemLabelAnchor)
org.jfree.chart.labels.ItemLabelAnchor.CENTER == orig(org.jfree.chart.labels.ItemLabelAnchor.CENTER)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE1 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE1)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE2 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE2)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE3 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE3)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE4 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE4)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE5 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE5)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE6 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE6)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE7 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE7)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE8 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE8)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE9 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE9)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE10 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE10)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE11 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE11)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE12 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE12)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12)
this.basePositiveItemLabelPosition.itemLabelAnchor.name == orig(this.basePositiveItemLabelPosition.itemLabelAnchor.name)
this.basePositiveItemLabelPosition.itemLabelAnchor.name.toString == orig(this.basePositiveItemLabelPosition.itemLabelAnchor.name.toString)
this.basePositiveItemLabelPosition.textAnchor == orig(this.basePositiveItemLabelPosition.textAnchor)
org.jfree.chart.text.TextAnchor.TOP_LEFT == orig(org.jfree.chart.text.TextAnchor.TOP_LEFT)
org.jfree.chart.text.TextAnchor.TOP_CENTER == orig(org.jfree.chart.text.TextAnchor.TOP_CENTER)
org.jfree.chart.text.TextAnchor.TOP_RIGHT == orig(org.jfree.chart.text.TextAnchor.TOP_RIGHT)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT)
org.jfree.chart.text.TextAnchor.CENTER_LEFT == orig(org.jfree.chart.text.TextAnchor.CENTER_LEFT)
org.jfree.chart.text.TextAnchor.CENTER == orig(org.jfree.chart.text.TextAnchor.CENTER)
org.jfree.chart.text.TextAnchor.CENTER_RIGHT == orig(org.jfree.chart.text.TextAnchor.CENTER_RIGHT)
org.jfree.chart.text.TextAnchor.BASELINE_LEFT == orig(org.jfree.chart.text.TextAnchor.BASELINE_LEFT)
org.jfree.chart.text.TextAnchor.BASELINE_CENTER == orig(org.jfree.chart.text.TextAnchor.BASELINE_CENTER)
org.jfree.chart.text.TextAnchor.BASELINE_RIGHT == orig(org.jfree.chart.text.TextAnchor.BASELINE_RIGHT)
org.jfree.chart.text.TextAnchor.BOTTOM_LEFT == orig(org.jfree.chart.text.TextAnchor.BOTTOM_LEFT)
org.jfree.chart.text.TextAnchor.BOTTOM_CENTER == orig(org.jfree.chart.text.TextAnchor.BOTTOM_CENTER)
org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT == orig(org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT)
this.basePositiveItemLabelPosition.textAnchor.name == orig(this.basePositiveItemLabelPosition.textAnchor.name)
this.basePositiveItemLabelPosition.textAnchor.name.toString == orig(this.basePositiveItemLabelPosition.textAnchor.name.toString)
this.basePositiveItemLabelPosition.rotationAnchor == orig(this.basePositiveItemLabelPosition.rotationAnchor)
this.basePositiveItemLabelPosition.rotationAnchor.name == orig(this.basePositiveItemLabelPosition.rotationAnchor.name)
this.basePositiveItemLabelPosition.rotationAnchor.name.toString == orig(this.basePositiveItemLabelPosition.rotationAnchor.name.toString)
this.basePositiveItemLabelPosition.angle == orig(this.basePositiveItemLabelPosition.angle)
this.negativeItemLabelPositionList == orig(this.negativeItemLabelPositionList)
this.negativeItemLabelPositionList.objects == orig(this.negativeItemLabelPositionList.objects)
this.negativeItemLabelPositionList.objects.getClass().getName() == orig(this.negativeItemLabelPositionList.objects.getClass().getName())
this.negativeItemLabelPositionList.objects[] == orig(this.negativeItemLabelPositionList.objects[])
this.negativeItemLabelPositionList.size == orig(this.negativeItemLabelPositionList.size)
this.negativeItemLabelPositionList.increment == orig(this.negativeItemLabelPositionList.increment)
this.baseNegativeItemLabelPosition == orig(this.baseNegativeItemLabelPosition)
this.baseNegativeItemLabelPosition.itemLabelAnchor == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor)
this.baseNegativeItemLabelPosition.itemLabelAnchor.name == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor.name)
this.baseNegativeItemLabelPosition.itemLabelAnchor.name.toString == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor.name.toString)
this.baseNegativeItemLabelPosition.textAnchor == orig(this.baseNegativeItemLabelPosition.textAnchor)
this.baseNegativeItemLabelPosition.textAnchor.name == orig(this.baseNegativeItemLabelPosition.textAnchor.name)
this.baseNegativeItemLabelPosition.textAnchor.name.toString == orig(this.baseNegativeItemLabelPosition.textAnchor.name.toString)
this.baseNegativeItemLabelPosition.rotationAnchor == orig(this.baseNegativeItemLabelPosition.rotationAnchor)
this.baseNegativeItemLabelPosition.rotationAnchor.name == orig(this.baseNegativeItemLabelPosition.rotationAnchor.name)
this.baseNegativeItemLabelPosition.rotationAnchor.name.toString == orig(this.baseNegativeItemLabelPosition.rotationAnchor.name.toString)
this.baseNegativeItemLabelPosition.angle == orig(this.baseNegativeItemLabelPosition.angle)
this.itemLabelAnchorOffset == orig(this.itemLabelAnchorOffset)
this.createEntitiesList == orig(this.createEntitiesList)
this.createEntitiesList.objects == orig(this.createEntitiesList.objects)
this.createEntitiesList.objects.getClass().getName() == orig(this.createEntitiesList.objects.getClass().getName())
this.createEntitiesList.objects[] == orig(this.createEntitiesList.objects[])
this.createEntitiesList.size == orig(this.createEntitiesList.size)
this.createEntitiesList.increment == orig(this.createEntitiesList.increment)
this.baseCreateEntities == orig(this.baseCreateEntities)
this.legendShapeList == orig(this.legendShapeList)
this.legendShapeList.objects == orig(this.legendShapeList.objects)
this.legendShapeList.objects.getClass().getName() == orig(this.legendShapeList.objects.getClass().getName())
this.legendShapeList.objects[] == orig(this.legendShapeList.objects[])
this.legendShapeList.size == orig(this.legendShapeList.size)
this.legendShapeList.increment == orig(this.legendShapeList.increment)
this.baseLegendShape == orig(this.baseLegendShape)
this.treatLegendShapeAsLine == orig(this.treatLegendShapeAsLine)
this.legendTextFont == orig(this.legendTextFont)
this.legendTextFont.objects == orig(this.legendTextFont.objects)
this.legendTextFont.objects.getClass().getName() == orig(this.legendTextFont.objects.getClass().getName())
this.legendTextFont.objects[] == orig(this.legendTextFont.objects[])
this.legendTextFont.size == orig(this.legendTextFont.size)
this.legendTextFont.increment == orig(this.legendTextFont.increment)
this.baseLegendTextFont == orig(this.baseLegendTextFont)
this.legendTextPaint == orig(this.legendTextPaint)
this.legendTextPaint.objects == orig(this.legendTextPaint.objects)
this.legendTextPaint.objects.getClass().getName() == orig(this.legendTextPaint.objects.getClass().getName())
this.legendTextPaint.objects[] == orig(this.legendTextPaint.objects[])
this.legendTextPaint.size == orig(this.legendTextPaint.size)
this.legendTextPaint.increment == orig(this.legendTextPaint.increment)
this.baseLegendTextPaint == orig(this.baseLegendTextPaint)
this.dataBoundsIncludesVisibleSeriesOnly == orig(this.dataBoundsIncludesVisibleSeriesOnly)
this.defaultEntityRadius == orig(this.defaultEntityRadius)
this.listenerList == orig(this.listenerList)
this.selectedItemAttributes == orig(this.selectedItemAttributes)
this.selectedItemAttributes.allowNull == orig(this.selectedItemAttributes.allowNull)
this.selectedItemAttributes.paintList == orig(this.selectedItemAttributes.paintList)
this.selectedItemAttributes.paintList.objects == orig(this.selectedItemAttributes.paintList.objects)
this.selectedItemAttributes.paintList.objects.getClass().getName() == orig(this.selectedItemAttributes.paintList.objects.getClass().getName())
this.selectedItemAttributes.paintList.objects[] == orig(this.selectedItemAttributes.paintList.objects[])
this.selectedItemAttributes.paintList.size == orig(this.selectedItemAttributes.paintList.size)
this.selectedItemAttributes.paintList.increment == orig(this.selectedItemAttributes.paintList.increment)
this.selectedItemAttributes.defaultPaint == orig(this.selectedItemAttributes.defaultPaint)
this.selectedItemAttributes.strokeList == orig(this.selectedItemAttributes.strokeList)
this.selectedItemAttributes.strokeList.objects == orig(this.selectedItemAttributes.strokeList.objects)
this.selectedItemAttributes.strokeList.objects.getClass().getName() == orig(this.selectedItemAttributes.strokeList.objects.getClass().getName())
this.selectedItemAttributes.strokeList.objects[] == orig(this.selectedItemAttributes.strokeList.objects[])
this.selectedItemAttributes.strokeList.size == orig(this.selectedItemAttributes.strokeList.size)
this.selectedItemAttributes.strokeList.increment == orig(this.selectedItemAttributes.strokeList.increment)
this.selectedItemAttributes.defaultStroke == orig(this.selectedItemAttributes.defaultStroke)
this.selectedItemAttributes.shapeList == orig(this.selectedItemAttributes.shapeList)
this.selectedItemAttributes.shapeList.objects == orig(this.selectedItemAttributes.shapeList.objects)
this.selectedItemAttributes.shapeList.objects.getClass().getName() == orig(this.selectedItemAttributes.shapeList.objects.getClass().getName())
this.selectedItemAttributes.shapeList.objects[] == orig(this.selectedItemAttributes.shapeList.objects[])
this.selectedItemAttributes.shapeList.size == orig(this.selectedItemAttributes.shapeList.size)
this.selectedItemAttributes.shapeList.increment == orig(this.selectedItemAttributes.shapeList.increment)
this.selectedItemAttributes.defaultShape == orig(this.selectedItemAttributes.defaultShape)
this.selectedItemAttributes.fillPaintList == orig(this.selectedItemAttributes.fillPaintList)
this.selectedItemAttributes.fillPaintList.objects == orig(this.selectedItemAttributes.fillPaintList.objects)
this.selectedItemAttributes.fillPaintList.objects.getClass().getName() == orig(this.selectedItemAttributes.fillPaintList.objects.getClass().getName())
this.selectedItemAttributes.fillPaintList.objects[] == orig(this.selectedItemAttributes.fillPaintList.objects[])
this.selectedItemAttributes.fillPaintList.size == orig(this.selectedItemAttributes.fillPaintList.size)
this.selectedItemAttributes.fillPaintList.increment == orig(this.selectedItemAttributes.fillPaintList.increment)
this.selectedItemAttributes.defaultFillPaint == orig(this.selectedItemAttributes.defaultFillPaint)
this.selectedItemAttributes.defaultFillPaint.getClass().getName() == orig(this.selectedItemAttributes.defaultFillPaint.getClass().getName())
this.selectedItemAttributes.outlinePaintList == orig(this.selectedItemAttributes.outlinePaintList)
this.selectedItemAttributes.outlinePaintList.objects == orig(this.selectedItemAttributes.outlinePaintList.objects)
this.selectedItemAttributes.outlinePaintList.objects.getClass().getName() == orig(this.selectedItemAttributes.outlinePaintList.objects.getClass().getName())
this.selectedItemAttributes.outlinePaintList.objects[] == orig(this.selectedItemAttributes.outlinePaintList.objects[])
this.selectedItemAttributes.outlinePaintList.size == orig(this.selectedItemAttributes.outlinePaintList.size)
this.selectedItemAttributes.outlinePaintList.increment == orig(this.selectedItemAttributes.outlinePaintList.increment)
this.selectedItemAttributes.defaultOutlinePaint == orig(this.selectedItemAttributes.defaultOutlinePaint)
this.selectedItemAttributes.outlineStrokeList == orig(this.selectedItemAttributes.outlineStrokeList)
this.selectedItemAttributes.defaultOutlineStroke == orig(this.selectedItemAttributes.defaultOutlineStroke)
this.selectedItemAttributes.labelsVisibleList == orig(this.selectedItemAttributes.labelsVisibleList)
this.selectedItemAttributes.defaultLabelVisible == orig(this.selectedItemAttributes.defaultLabelVisible)
this.selectedItemAttributes.labelFontList == orig(this.selectedItemAttributes.labelFontList)
this.selectedItemAttributes.defaultLabelFont == orig(this.selectedItemAttributes.defaultLabelFont)
this.selectedItemAttributes.labelPaintList == orig(this.selectedItemAttributes.labelPaintList)
this.selectedItemAttributes.defaultLabelPaint == orig(this.selectedItemAttributes.defaultLabelPaint)
this.selectedItemAttributes.positionItemLabelPositionList == orig(this.selectedItemAttributes.positionItemLabelPositionList)
this.selectedItemAttributes.defaultPositiveItemLabelPosition == orig(this.selectedItemAttributes.defaultPositiveItemLabelPosition)
this.selectedItemAttributes.negativeItemLabelPositionList == orig(this.selectedItemAttributes.negativeItemLabelPositionList)
this.selectedItemAttributes.defaultNegativeItemLabelPosition == orig(this.selectedItemAttributes.defaultNegativeItemLabelPosition)
this.selectedItemAttributes.createEntityList == orig(this.selectedItemAttributes.createEntityList)
this.selectedItemAttributes.defaultCreateEntity == orig(this.selectedItemAttributes.defaultCreateEntity)
org.jfree.chart.renderer.AbstractRenderer.ADJ == orig(org.jfree.chart.renderer.AbstractRenderer.ADJ)
org.jfree.chart.renderer.AbstractRenderer.OPP == orig(org.jfree.chart.renderer.AbstractRenderer.OPP)
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener == orig(org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener)
plot.orientation == orig(plot.orientation)
plot.orientation.name == orig(plot.orientation.name)
plot.orientation.name.toString == orig(plot.orientation.name.toString)
plot.axisOffset == orig(plot.axisOffset)
plot.axisOffset.unitType == orig(plot.axisOffset.unitType)
plot.axisOffset.top == orig(plot.axisOffset.top)
plot.axisOffset.left == orig(plot.axisOffset.left)
plot.axisOffset.bottom == orig(plot.axisOffset.bottom)
plot.axisOffset.right == orig(plot.axisOffset.right)
plot.domainAxes == orig(plot.domainAxes)
plot.domainAxes.objects == orig(plot.domainAxes.objects)
plot.domainAxes.objects.getClass().getName() == orig(plot.domainAxes.objects.getClass().getName())
plot.domainAxes.objects[] == orig(plot.domainAxes.objects[])
plot.domainAxes.size == orig(plot.domainAxes.size)
plot.domainAxes.increment == orig(plot.domainAxes.increment)
plot.domainAxisLocations == orig(plot.domainAxisLocations)
plot.domainAxisLocations.objects == orig(plot.domainAxisLocations.objects)
plot.domainAxisLocations.objects.getClass().getName() == orig(plot.domainAxisLocations.objects.getClass().getName())
plot.domainAxisLocations.objects[] == orig(plot.domainAxisLocations.objects[])
plot.domainAxisLocations.size == orig(plot.domainAxisLocations.size)
plot.domainAxisLocations.increment == orig(plot.domainAxisLocations.increment)
plot.drawSharedDomainAxis == orig(plot.drawSharedDomainAxis)
plot.rangeAxes == orig(plot.rangeAxes)
plot.rangeAxes.objects == orig(plot.rangeAxes.objects)
plot.rangeAxes.objects.getClass().getName() == orig(plot.rangeAxes.objects.getClass().getName())
plot.rangeAxes.objects[] == orig(plot.rangeAxes.objects[])
plot.rangeAxes.size == orig(plot.rangeAxes.size)
plot.rangeAxes.increment == orig(plot.rangeAxes.increment)
plot.rangeAxisLocations == orig(plot.rangeAxisLocations)
plot.rangeAxisLocations.objects == orig(plot.rangeAxisLocations.objects)
plot.rangeAxisLocations.objects.getClass().getName() == orig(plot.rangeAxisLocations.objects.getClass().getName())
plot.rangeAxisLocations.objects[] == orig(plot.rangeAxisLocations.objects[])
plot.rangeAxisLocations.size == orig(plot.rangeAxisLocations.size)
plot.rangeAxisLocations.increment == orig(plot.rangeAxisLocations.increment)
plot.datasets == orig(plot.datasets)
plot.datasets.objects == orig(plot.datasets.objects)
plot.datasets.objects.getClass().getName() == orig(plot.datasets.objects.getClass().getName())
plot.datasets.objects[] == orig(plot.datasets.objects[])
plot.datasets.size == orig(plot.datasets.size)
plot.datasets.increment == orig(plot.datasets.increment)
plot.datasetToDomainAxesMap == orig(plot.datasetToDomainAxesMap)
plot.datasetToRangeAxesMap == orig(plot.datasetToRangeAxesMap)
plot.renderers == orig(plot.renderers)
plot.renderers.objects == orig(plot.renderers.objects)
plot.renderers.objects.getClass().getName() == orig(plot.renderers.objects.getClass().getName())
plot.renderers.objects[] == orig(plot.renderers.objects[])
plot.renderers.size == orig(plot.renderers.size)
plot.renderers.increment == orig(plot.renderers.increment)
plot.renderingOrder == orig(plot.renderingOrder)
plot.renderingOrder.name == orig(plot.renderingOrder.name)
plot.renderingOrder.name.toString == orig(plot.renderingOrder.name.toString)
plot.columnRenderingOrder == orig(plot.columnRenderingOrder)
plot.columnRenderingOrder.name == orig(plot.columnRenderingOrder.name)
plot.columnRenderingOrder.name.toString == orig(plot.columnRenderingOrder.name.toString)
plot.rowRenderingOrder == orig(plot.rowRenderingOrder)
plot.rowRenderingOrder.name == orig(plot.rowRenderingOrder.name)
plot.rowRenderingOrder.name.toString == orig(plot.rowRenderingOrder.name.toString)
plot.domainGridlinesVisible == orig(plot.domainGridlinesVisible)
plot.domainGridlinePosition == orig(plot.domainGridlinePosition)
plot.domainGridlinePosition.name == orig(plot.domainGridlinePosition.name)
plot.domainGridlinePosition.name.toString == orig(plot.domainGridlinePosition.name.toString)
plot.domainGridlineStroke == orig(plot.domainGridlineStroke)
plot.domainGridlineStroke.getClass().getName() == orig(plot.domainGridlineStroke.getClass().getName())
plot.domainGridlinePaint == orig(plot.domainGridlinePaint)
plot.domainGridlinePaint.getClass().getName() == orig(plot.domainGridlinePaint.getClass().getName())
plot.rangeZeroBaselineVisible == orig(plot.rangeZeroBaselineVisible)
plot.rangeZeroBaselineStroke == orig(plot.rangeZeroBaselineStroke)
plot.rangeZeroBaselineStroke.getClass().getName() == orig(plot.rangeZeroBaselineStroke.getClass().getName())
plot.rangeZeroBaselinePaint == orig(plot.rangeZeroBaselinePaint)
plot.rangeZeroBaselinePaint.getClass().getName() == orig(plot.rangeZeroBaselinePaint.getClass().getName())
plot.rangeGridlinesVisible == orig(plot.rangeGridlinesVisible)
plot.rangeGridlineStroke == orig(plot.rangeGridlineStroke)
plot.rangeGridlineStroke.getClass().getName() == orig(plot.rangeGridlineStroke.getClass().getName())
plot.rangeGridlinePaint == orig(plot.rangeGridlinePaint)
plot.rangeGridlinePaint.getClass().getName() == orig(plot.rangeGridlinePaint.getClass().getName())
plot.rangeMinorGridlinesVisible == orig(plot.rangeMinorGridlinesVisible)
plot.rangeMinorGridlineStroke == orig(plot.rangeMinorGridlineStroke)
plot.rangeMinorGridlineStroke.getClass().getName() == orig(plot.rangeMinorGridlineStroke.getClass().getName())
plot.rangeMinorGridlinePaint == orig(plot.rangeMinorGridlinePaint)
plot.rangeMinorGridlinePaint.getClass().getName() == orig(plot.rangeMinorGridlinePaint.getClass().getName())
plot.anchorValue == orig(plot.anchorValue)
plot.crosshairDatasetIndex == orig(plot.crosshairDatasetIndex)
plot.domainCrosshairVisible == orig(plot.domainCrosshairVisible)
plot.domainCrosshairRowKey == orig(plot.domainCrosshairRowKey)
plot.domainCrosshairColumnKey == orig(plot.domainCrosshairColumnKey)
plot.domainCrosshairStroke == orig(plot.domainCrosshairStroke)
plot.domainCrosshairStroke.getClass().getName() == orig(plot.domainCrosshairStroke.getClass().getName())
plot.domainCrosshairPaint == orig(plot.domainCrosshairPaint)
plot.domainCrosshairPaint.getClass().getName() == orig(plot.domainCrosshairPaint.getClass().getName())
plot.rangeCrosshairVisible == orig(plot.rangeCrosshairVisible)
plot.rangeCrosshairValue == orig(plot.rangeCrosshairValue)
plot.rangeCrosshairStroke == orig(plot.rangeCrosshairStroke)
plot.rangeCrosshairStroke.getClass().getName() == orig(plot.rangeCrosshairStroke.getClass().getName())
plot.rangeCrosshairPaint == orig(plot.rangeCrosshairPaint)
plot.rangeCrosshairPaint.getClass().getName() == orig(plot.rangeCrosshairPaint.getClass().getName())
plot.rangeCrosshairLockedOnData == orig(plot.rangeCrosshairLockedOnData)
plot.foregroundDomainMarkers == orig(plot.foregroundDomainMarkers)
plot.foregroundDomainMarkers.getClass().getName() == orig(plot.foregroundDomainMarkers.getClass().getName())
plot.backgroundDomainMarkers == orig(plot.backgroundDomainMarkers)
plot.backgroundDomainMarkers.getClass().getName() == orig(plot.backgroundDomainMarkers.getClass().getName())
plot.foregroundRangeMarkers == orig(plot.foregroundRangeMarkers)
plot.foregroundRangeMarkers.getClass().getName() == orig(plot.foregroundRangeMarkers.getClass().getName())
plot.backgroundRangeMarkers == orig(plot.backgroundRangeMarkers)
plot.backgroundRangeMarkers.getClass().getName() == orig(plot.backgroundRangeMarkers.getClass().getName())
plot.annotations == orig(plot.annotations)
plot.annotations[] == orig(plot.annotations[])
plot.annotations.getClass().getName() == orig(plot.annotations.getClass().getName())
plot.weight == orig(plot.weight)
plot.fixedDomainAxisSpace == orig(plot.fixedDomainAxisSpace)
plot.fixedRangeAxisSpace == orig(plot.fixedRangeAxisSpace)
plot.fixedLegendItems == orig(plot.fixedLegendItems)
plot.rangePannable == orig(plot.rangePannable)
plot.shadowGenerator == orig(plot.shadowGenerator)
plot.shadowGenerator.getClass().getName() == orig(plot.shadowGenerator.getClass().getName())
plot.parent == orig(plot.parent)
plot.datasetGroup == orig(plot.datasetGroup)
plot.noDataMessage == orig(plot.noDataMessage)
plot.noDataMessageFont == orig(plot.noDataMessageFont)
plot.noDataMessagePaint == orig(plot.noDataMessagePaint)
plot.noDataMessagePaint.getClass().getName() == orig(plot.noDataMessagePaint.getClass().getName())
plot.insets == orig(plot.insets)
plot.insets.unitType == orig(plot.insets.unitType)
plot.insets.top == orig(plot.insets.top)
plot.insets.left == orig(plot.insets.left)
plot.insets.bottom == orig(plot.insets.bottom)
plot.insets.right == orig(plot.insets.right)
plot.outlineVisible == orig(plot.outlineVisible)
plot.outlineStroke == orig(plot.outlineStroke)
plot.outlineStroke.getClass().getName() == orig(plot.outlineStroke.getClass().getName())
plot.outlinePaint == orig(plot.outlinePaint)
plot.outlinePaint.getClass().getName() == orig(plot.outlinePaint.getClass().getName())
plot.backgroundPaint == orig(plot.backgroundPaint)
plot.backgroundPaint.getClass().getName() == orig(plot.backgroundPaint.getClass().getName())
plot.backgroundImage == orig(plot.backgroundImage)
plot.backgroundImageAlignment == orig(plot.backgroundImageAlignment)
plot.backgroundImageAlpha == orig(plot.backgroundImageAlpha)
plot.foregroundAlpha == orig(plot.foregroundAlpha)
plot.backgroundAlpha == orig(plot.backgroundAlpha)
plot.drawingSupplier == orig(plot.drawingSupplier)
plot.drawingSupplier.getClass().getName() == orig(plot.drawingSupplier.getClass().getName())
plot.listenerList == orig(plot.listenerList)
plot.notify == orig(plot.notify)
this.plot has only one value
this.paintList.objects[] contains only nulls and has only one value, of length 8
this.paintList.objects[] elements == null
this.paintList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.paintList.objects[].getClass().getName() elements == null
this.paintList.size == 0
this.strokeList.objects[] contains only nulls and has only one value, of length 8
this.strokeList.objects[] elements == null
this.strokeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.strokeList.objects[].getClass().getName() elements == null
this.strokeList.size == 0
this.shapeList.objects[] contains only nulls and has only one value, of length 8
this.shapeList.objects[] elements == null
this.shapeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.shapeList.objects[].getClass().getName() elements == null
this.shapeList.size == 0
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener == null
plot.orientation has only one value
plot.orientation.name has only one value
plot.orientation.name.toString == "PlotOrientation.VERTICAL"
plot.axisOffset has only one value
plot.axisOffset.unitType has only one value
plot.axisOffset.top == 4.0
plot.axisOffset.left == 4.0
plot.axisOffset.bottom == 4.0
plot.axisOffset.right == 4.0
plot.domainAxes has only one value
plot.domainAxes.objects has only one value
plot.domainAxes.objects.getClass().getName() == java.lang.Object[].class
plot.domainAxes.objects[] contains only nulls and has only one value, of length 8
plot.domainAxes.objects[] elements == null
plot.domainAxes.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
plot.domainAxes.objects[].getClass().getName() elements == null
plot.domainAxes.size == 1
plot.domainAxes.increment == 8
plot.domainAxisLocations has only one value
plot.domainAxisLocations.objects has only one value
plot.domainAxisLocations.objects.getClass().getName() == java.lang.Object[].class
plot.domainAxisLocations.objects[] has only one value, of length 8
plot.domainAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
plot.domainAxisLocations.size == 1
plot.domainAxisLocations.increment == 8
plot.drawSharedDomainAxis == false
plot.rangeAxes has only one value
plot.rangeAxes.objects has only one value
plot.rangeAxes.objects.getClass().getName() == java.lang.Object[].class
plot.rangeAxes.objects[] contains only nulls and has only one value, of length 8
plot.rangeAxes.objects[] elements == null
plot.rangeAxes.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
plot.rangeAxes.objects[].getClass().getName() elements == null
plot.rangeAxes.size == 1
plot.rangeAxes.increment == 8
plot.rangeAxisLocations has only one value
plot.rangeAxisLocations.objects has only one value
plot.rangeAxisLocations.objects.getClass().getName() == java.lang.Object[].class
plot.rangeAxisLocations.objects[] has only one value, of length 8
plot.rangeAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
plot.rangeAxisLocations.size == 1
plot.rangeAxisLocations.increment == 8
plot.datasets has only one value
plot.datasets.objects has only one value
plot.datasets.objects.getClass().getName() == java.lang.Object[].class
plot.datasets.objects[] has only one value, of length 8
plot.datasets.objects[].getClass().getName() == [org.jfree.data.category.DefaultCategoryDataset, null, null, null, null, null, null, null]
plot.datasets.size == 1
plot.datasets.increment == 8
plot.datasetToDomainAxesMap has only one value
plot.datasetToRangeAxesMap has only one value
plot.renderers has only one value
plot.renderers.objects has only one value
plot.renderers.objects.getClass().getName() == java.lang.Object[].class
plot.renderers.objects[] has only one value, of length 8
plot.renderers.objects[].getClass().getName() == [org.jfree.chart.renderer.category.LineAndShapeRenderer, null, null, null, null, null, null, null]
plot.renderers.size == 1
plot.renderers.increment == 8
plot.renderingOrder has only one value
plot.renderingOrder.name has only one value
plot.renderingOrder.name.toString == "DatasetRenderingOrder.REVERSE"
plot.columnRenderingOrder has only one value
plot.columnRenderingOrder.name has only one value
plot.columnRenderingOrder.name.toString == "SortOrder.ASCENDING"
plot.rowRenderingOrder has only one value
plot.rowRenderingOrder.name has only one value
plot.rowRenderingOrder.name.toString == "SortOrder.ASCENDING"
plot.domainGridlinesVisible == false
plot.domainGridlinePosition has only one value
plot.domainGridlinePosition.name has only one value
plot.domainGridlinePosition.name.toString == "CategoryAnchor.MIDDLE"
plot.domainGridlineStroke has only one value
plot.domainGridlineStroke.getClass().getName() == java.awt.BasicStroke.class
plot.domainGridlinePaint has only one value
plot.domainGridlinePaint.getClass().getName() == java.awt.Color.class
plot.rangeZeroBaselineVisible == false
plot.rangeZeroBaselineStroke has only one value
plot.rangeZeroBaselineStroke.getClass().getName() == java.awt.BasicStroke.class
plot.rangeZeroBaselinePaint has only one value
plot.rangeZeroBaselinePaint.getClass().getName() == java.awt.Color.class
plot.rangeGridlinesVisible == true
plot.rangeGridlineStroke has only one value
plot.rangeGridlineStroke.getClass().getName() == java.awt.BasicStroke.class
plot.rangeGridlinePaint has only one value
plot.rangeGridlinePaint.getClass().getName() == java.awt.Color.class
plot.rangeMinorGridlinesVisible == false
plot.rangeMinorGridlineStroke has only one value
plot.rangeMinorGridlineStroke.getClass().getName() == java.awt.BasicStroke.class
plot.rangeMinorGridlinePaint has only one value
plot.rangeMinorGridlinePaint.getClass().getName() == java.awt.Color.class
plot.anchorValue == 0.0
plot.crosshairDatasetIndex == 0
plot.domainCrosshairVisible == false
plot.domainCrosshairRowKey == null
plot.domainCrosshairColumnKey == null
plot.domainCrosshairStroke has only one value
plot.domainCrosshairStroke.getClass().getName() == java.awt.BasicStroke.class
plot.domainCrosshairPaint has only one value
plot.domainCrosshairPaint.getClass().getName() == java.awt.Color.class
plot.rangeCrosshairVisible == false
plot.rangeCrosshairValue == 0.0
plot.rangeCrosshairStroke has only one value
plot.rangeCrosshairStroke.getClass().getName() == java.awt.BasicStroke.class
plot.rangeCrosshairPaint has only one value
plot.rangeCrosshairPaint.getClass().getName() == java.awt.Color.class
plot.rangeCrosshairLockedOnData == true
plot.foregroundDomainMarkers has only one value
plot.foregroundDomainMarkers.getClass().getName() == java.util.HashMap.class
plot.backgroundDomainMarkers has only one value
plot.backgroundDomainMarkers.getClass().getName() == java.util.HashMap.class
plot.foregroundRangeMarkers has only one value
plot.foregroundRangeMarkers.getClass().getName() == java.util.HashMap.class
plot.backgroundRangeMarkers has only one value
plot.backgroundRangeMarkers.getClass().getName() == java.util.HashMap.class
plot.annotations has only one value
plot.annotations[] == []
plot.annotations[].getClass().getName() == []
plot.annotations.getClass().getName() == java.util.ArrayList.class
plot.weight == 0
plot.fixedDomainAxisSpace == null
plot.fixedRangeAxisSpace == null
plot.fixedLegendItems == null
plot.rangePannable == false
plot.shadowGenerator has only one value
plot.shadowGenerator.getClass().getName() == org.jfree.chart.util.DefaultShadowGenerator.class
plot.parent == null
plot.datasetGroup == null
plot.noDataMessage == null
plot.noDataMessageFont has only one value
plot.noDataMessagePaint has only one value
plot.noDataMessagePaint.getClass().getName() == java.awt.Color.class
plot.insets has only one value
plot.insets.unitType has only one value
plot.insets.top == 4.0
plot.insets.left == 8.0
plot.insets.bottom == 4.0
plot.insets.right == 8.0
plot.outlineVisible == true
plot.outlineStroke has only one value
plot.outlineStroke.getClass().getName() == java.awt.BasicStroke.class
plot.outlinePaint has only one value
plot.outlinePaint.getClass().getName() == java.awt.Color.class
plot.backgroundPaint has only one value
plot.backgroundPaint.getClass().getName() == java.awt.Color.class
plot.backgroundImage == null
plot.backgroundImageAlignment == 15
plot.backgroundImageAlpha == 0.5
plot.foregroundAlpha == 1.0
plot.backgroundAlpha == 1.0
plot.drawingSupplier has only one value
plot.drawingSupplier.getClass().getName() == org.jfree.chart.plot.DefaultDrawingSupplier.class
plot.listenerList has only one value
plot.notify == true
size(plot.domainAxes.objects[]) == 8
size(plot.domainAxisLocations.objects[]) == 8
size(plot.rangeAxes.objects[]) == 8
size(plot.rangeAxisLocations.objects[]) == 8
size(plot.datasets.objects[]) == 8
size(plot.renderers.objects[]) == 8
===========================================================================
org.jfree.chart.renderer.category.LineAndShapeRenderer:::CLASS
org.jfree.chart.renderer.AbstractRenderer.ZERO has only one value
org.jfree.chart.renderer.AbstractRenderer.ZERO != null
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT has only one value
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT != null
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == java.awt.Color.class
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT has only one value
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT != null
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT.getClass().getName() == java.awt.Color.class
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE has only one value
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE != null
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == java.awt.BasicStroke.class
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE has only one value
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE != null
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE.getClass().getName() == java.awt.BasicStroke.class
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE has only one value
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE != null
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE.getClass().getName() == java.awt.geom.Rectangle2D$Double.class
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_FONT has only one value
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_FONT != null
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT has only one value
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT != null
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT.getClass().getName() == java.awt.Color.class
org.jfree.chart.renderer.AbstractRenderer.ADJ == 0.8660254037844387
org.jfree.chart.renderer.AbstractRenderer.OPP == 0.49999999999999994
===========================================================================
org.jfree.chart.renderer.category.LineAndShapeRenderer:::OBJECT
this has only one value
this.seriesLinesVisible has only one value
this.seriesLinesVisible != null
this.seriesLinesVisible.objects has only one value
this.seriesLinesVisible.objects != null
this.seriesLinesVisible.objects.getClass().getName() == java.lang.Object[].class
this.seriesLinesVisible.objects[] contains only nulls and has only one value, of length 8
this.seriesLinesVisible.objects[] elements == null
this.seriesLinesVisible.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.seriesLinesVisible.objects[].getClass().getName() elements == null
this.seriesLinesVisible.size == 0
this.seriesLinesVisible.increment == 8
this.baseLinesVisible == true
this.seriesShapesVisible has only one value
this.seriesShapesVisible != null
this.seriesShapesVisible.objects has only one value
this.seriesShapesVisible.objects != null
this.seriesShapesVisible.objects.getClass().getName() == java.lang.Object[].class
this.seriesShapesVisible.objects[] contains only nulls and has only one value, of length 8
this.seriesShapesVisible.objects[] elements == null
this.seriesShapesVisible.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.seriesShapesVisible.objects[].getClass().getName() elements == null
this.seriesShapesVisible.size == 0
this.seriesShapesVisible.increment == 8
this.baseShapesVisible == true
this.seriesShapesFilled has only one value
this.seriesShapesFilled != null
this.seriesShapesFilled.objects has only one value
this.seriesShapesFilled.objects != null
this.seriesShapesFilled.objects.getClass().getName() == java.lang.Object[].class
this.seriesShapesFilled.objects[] contains only nulls and has only one value, of length 8
this.seriesShapesFilled.objects[] elements == null
this.seriesShapesFilled.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.seriesShapesFilled.objects[].getClass().getName() elements == null
this.seriesShapesFilled.size == 0
this.seriesShapesFilled.increment == 8
this.baseShapesFilled == true
this.useFillPaint == false
this.drawOutlines == true
this.useOutlinePaint == false
this.useSeriesOffset == false
this.itemMargin == 0.0
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE has only one value
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE != null
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName() == java.awt.BasicStroke.class
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT has only one value
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT != null
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == java.awt.Color.class
org.jfree.chart.plot.CategoryPlot.DEFAULT_VALUE_LABEL_FONT has only one value
org.jfree.chart.plot.CategoryPlot.DEFAULT_VALUE_LABEL_FONT != null
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE has only one value
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE != null
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE.getClass().getName() == java.awt.BasicStroke.class
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT has only one value
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT != null
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT.getClass().getName() == java.awt.Color.class
org.jfree.chart.plot.CategoryPlot.localizationResources has only one value
org.jfree.chart.plot.CategoryPlot.localizationResources != null
org.jfree.chart.plot.CategoryPlot.localizationResources.getClass().getName() == java.util.PropertyResourceBundle.class
this.plot.orientation has only one value
this.plot.orientation != null
org.jfree.chart.plot.PlotOrientation.HORIZONTAL has only one value
org.jfree.chart.plot.PlotOrientation.HORIZONTAL != null
org.jfree.chart.plot.PlotOrientation.VERTICAL has only one value
org.jfree.chart.plot.PlotOrientation.VERTICAL != null
this.plot.orientation.name has only one value
this.plot.orientation.name != null
this.plot.orientation.name.toString == "PlotOrientation.VERTICAL"
this.plot.axisOffset has only one value
this.plot.axisOffset != null
org.jfree.chart.util.RectangleInsets.ZERO_INSETS has only one value
org.jfree.chart.util.RectangleInsets.ZERO_INSETS != null
this.plot.axisOffset.unitType has only one value
this.plot.axisOffset.unitType != null
this.plot.axisOffset.top == 4.0
this.plot.axisOffset.left == 4.0
this.plot.axisOffset.bottom == 4.0
this.plot.axisOffset.right == 4.0
this.plot.domainAxes has only one value
this.plot.domainAxes != null
this.plot.domainAxes.objects has only one value
this.plot.domainAxes.objects != null
this.plot.domainAxes.objects.getClass().getName() == java.lang.Object[].class
this.plot.domainAxes.objects[] contains only nulls and has only one value, of length 8
this.plot.domainAxes.objects[] elements == null
this.plot.domainAxes.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.plot.domainAxes.objects[].getClass().getName() elements == null
this.plot.domainAxes.size == 1
this.plot.domainAxes.increment == 8
this.plot.domainAxisLocations has only one value
this.plot.domainAxisLocations != null
this.plot.domainAxisLocations.objects has only one value
this.plot.domainAxisLocations.objects != null
this.plot.domainAxisLocations.objects.getClass().getName() == java.lang.Object[].class
this.plot.domainAxisLocations.objects[] has only one value, of length 8
this.plot.domainAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.plot.domainAxisLocations.size == 1
this.plot.domainAxisLocations.increment == 8
this.plot.drawSharedDomainAxis == false
this.plot.rangeAxes has only one value
this.plot.rangeAxes != null
this.plot.rangeAxes.objects has only one value
this.plot.rangeAxes.objects != null
this.plot.rangeAxes.objects.getClass().getName() == java.lang.Object[].class
this.plot.rangeAxes.objects[] contains only nulls and has only one value, of length 8
this.plot.rangeAxes.objects[] elements == null
this.plot.rangeAxes.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.plot.rangeAxes.objects[].getClass().getName() elements == null
this.plot.rangeAxes.size == 1
this.plot.rangeAxes.increment == 8
this.plot.rangeAxisLocations has only one value
this.plot.rangeAxisLocations != null
this.plot.rangeAxisLocations.objects has only one value
this.plot.rangeAxisLocations.objects != null
this.plot.rangeAxisLocations.objects.getClass().getName() == java.lang.Object[].class
this.plot.rangeAxisLocations.objects[] has only one value, of length 8
this.plot.rangeAxisLocations.objects[].getClass().getName() == [org.jfree.chart.axis.AxisLocation, null, null, null, null, null, null, null]
this.plot.rangeAxisLocations.size == 1
this.plot.rangeAxisLocations.increment == 8
this.plot.datasets has only one value
this.plot.datasets != null
this.plot.datasets.objects has only one value
this.plot.datasets.objects != null
this.plot.datasets.objects.getClass().getName() == java.lang.Object[].class
this.plot.datasets.objects[] has only one value, of length 8
this.plot.datasets.objects[].getClass().getName() == [org.jfree.data.category.DefaultCategoryDataset, null, null, null, null, null, null, null]
this.plot.datasets.size == 1
this.plot.datasets.increment == 8
this.plot.datasetToDomainAxesMap has only one value
this.plot.datasetToDomainAxesMap != null
this.plot.datasetToRangeAxesMap has only one value
this.plot.datasetToRangeAxesMap != null
this.plot.renderers has only one value
this.plot.renderers != null
this.plot.renderers.objects has only one value
this.plot.renderers.objects != null
this.plot.renderers.objects.getClass().getName() == java.lang.Object[].class
this.plot.renderers.objects[] has only one value, of length 8
this.plot.renderers.objects[].getClass().getName() == [org.jfree.chart.renderer.category.LineAndShapeRenderer, null, null, null, null, null, null, null]
this.plot.renderers.size == 1
this.plot.renderers.increment == 8
this.plot.renderingOrder has only one value
this.plot.renderingOrder != null
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD has only one value
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD != null
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE has only one value
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE != null
this.plot.renderingOrder.name has only one value
this.plot.renderingOrder.name != null
this.plot.renderingOrder.name.toString == "DatasetRenderingOrder.REVERSE"
this.plot.columnRenderingOrder has only one value
this.plot.columnRenderingOrder != null
org.jfree.chart.util.SortOrder.ASCENDING has only one value
org.jfree.chart.util.SortOrder.ASCENDING != null
org.jfree.chart.util.SortOrder.DESCENDING has only one value
org.jfree.chart.util.SortOrder.DESCENDING != null
this.plot.columnRenderingOrder.name has only one value
this.plot.columnRenderingOrder.name != null
this.plot.columnRenderingOrder.name.toString == "SortOrder.ASCENDING"
this.plot.rowRenderingOrder has only one value
this.plot.rowRenderingOrder != null
this.plot.rowRenderingOrder.name has only one value
this.plot.rowRenderingOrder.name != null
this.plot.rowRenderingOrder.name.toString == "SortOrder.ASCENDING"
this.plot.domainGridlinesVisible == false
this.plot.domainGridlinePosition has only one value
this.plot.domainGridlinePosition != null
org.jfree.chart.axis.CategoryAnchor.START has only one value
org.jfree.chart.axis.CategoryAnchor.START != null
org.jfree.chart.axis.CategoryAnchor.MIDDLE has only one value
org.jfree.chart.axis.CategoryAnchor.MIDDLE != null
org.jfree.chart.axis.CategoryAnchor.END has only one value
org.jfree.chart.axis.CategoryAnchor.END != null
this.plot.domainGridlinePosition.name has only one value
this.plot.domainGridlinePosition.name != null
this.plot.domainGridlinePosition.name.toString == "CategoryAnchor.MIDDLE"
this.plot.domainGridlineStroke has only one value
this.plot.domainGridlineStroke != null
this.plot.domainGridlineStroke.getClass().getName() == java.awt.BasicStroke.class
this.plot.domainGridlinePaint has only one value
this.plot.domainGridlinePaint != null
this.plot.domainGridlinePaint.getClass().getName() == java.awt.Color.class
this.plot.rangeZeroBaselineVisible == false
this.plot.rangeZeroBaselineStroke has only one value
this.plot.rangeZeroBaselineStroke != null
this.plot.rangeZeroBaselineStroke.getClass().getName() == java.awt.BasicStroke.class
this.plot.rangeZeroBaselinePaint has only one value
this.plot.rangeZeroBaselinePaint != null
this.plot.rangeZeroBaselinePaint.getClass().getName() == java.awt.Color.class
this.plot.rangeGridlinesVisible == true
this.plot.rangeGridlineStroke has only one value
this.plot.rangeGridlineStroke != null
this.plot.rangeGridlineStroke.getClass().getName() == java.awt.BasicStroke.class
this.plot.rangeGridlinePaint has only one value
this.plot.rangeGridlinePaint != null
this.plot.rangeGridlinePaint.getClass().getName() == java.awt.Color.class
this.plot.rangeMinorGridlinesVisible == false
this.plot.rangeMinorGridlineStroke has only one value
this.plot.rangeMinorGridlineStroke != null
this.plot.rangeMinorGridlineStroke.getClass().getName() == java.awt.BasicStroke.class
this.plot.rangeMinorGridlinePaint has only one value
this.plot.rangeMinorGridlinePaint != null
this.plot.rangeMinorGridlinePaint.getClass().getName() == java.awt.Color.class
this.plot.anchorValue == 0.0
this.plot.crosshairDatasetIndex == 0
this.plot.domainCrosshairVisible == false
this.plot.domainCrosshairRowKey == null
this.plot.domainCrosshairColumnKey == null
this.plot.domainCrosshairStroke has only one value
this.plot.domainCrosshairStroke != null
this.plot.domainCrosshairStroke.getClass().getName() == java.awt.BasicStroke.class
this.plot.domainCrosshairPaint has only one value
this.plot.domainCrosshairPaint != null
this.plot.domainCrosshairPaint.getClass().getName() == java.awt.Color.class
this.plot.rangeCrosshairVisible == false
this.plot.rangeCrosshairValue == 0.0
this.plot.rangeCrosshairStroke has only one value
this.plot.rangeCrosshairStroke != null
this.plot.rangeCrosshairStroke.getClass().getName() == java.awt.BasicStroke.class
this.plot.rangeCrosshairPaint has only one value
this.plot.rangeCrosshairPaint != null
this.plot.rangeCrosshairPaint.getClass().getName() == java.awt.Color.class
this.plot.rangeCrosshairLockedOnData == true
this.plot.foregroundDomainMarkers has only one value
this.plot.foregroundDomainMarkers != null
this.plot.foregroundDomainMarkers.getClass().getName() == java.util.HashMap.class
this.plot.backgroundDomainMarkers has only one value
this.plot.backgroundDomainMarkers != null
this.plot.backgroundDomainMarkers.getClass().getName() == java.util.HashMap.class
this.plot.foregroundRangeMarkers has only one value
this.plot.foregroundRangeMarkers != null
this.plot.foregroundRangeMarkers.getClass().getName() == java.util.HashMap.class
this.plot.backgroundRangeMarkers has only one value
this.plot.backgroundRangeMarkers != null
this.plot.backgroundRangeMarkers.getClass().getName() == java.util.HashMap.class
this.plot.annotations has only one value
this.plot.annotations != null
this.plot.annotations[] == []
this.plot.annotations[].getClass().getName() == []
this.plot.annotations.getClass().getName() == java.util.ArrayList.class
this.plot.weight == 0
this.plot.fixedDomainAxisSpace == null
this.plot.fixedRangeAxisSpace == null
this.plot.fixedLegendItems == null
this.plot.rangePannable == false
this.plot.shadowGenerator has only one value
this.plot.shadowGenerator != null
this.plot.shadowGenerator.getClass().getName() == org.jfree.chart.util.DefaultShadowGenerator.class
org.jfree.chart.plot.Plot.ZERO has only one value
org.jfree.chart.plot.Plot.ZERO != null
org.jfree.chart.plot.Plot.ZERO.getClass().getName() == java.lang.Integer.class
org.jfree.chart.plot.Plot.DEFAULT_INSETS has only one value
org.jfree.chart.plot.Plot.DEFAULT_INSETS != null
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType has only one value
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType != null
org.jfree.chart.plot.Plot.DEFAULT_INSETS.top == 4.0
org.jfree.chart.plot.Plot.DEFAULT_INSETS.left == 8.0
org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom == 4.0
org.jfree.chart.plot.Plot.DEFAULT_INSETS.right == 8.0
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE has only one value
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE != null
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName() == java.awt.BasicStroke.class
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT has only one value
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT != null
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() == java.awt.Color.class
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT has only one value
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT != null
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName() == java.awt.Color.class
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX has only one value
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX != null
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName() == java.awt.geom.Rectangle2D$Double.class
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE has only one value
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE != null
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName() == java.awt.geom.Ellipse2D$Double.class
this.plot.parent == null
org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener == null
this.plot.datasetGroup == null
this.plot.noDataMessage == null
this.plot.noDataMessageFont has only one value
this.plot.noDataMessageFont != null
this.plot.noDataMessagePaint has only one value
this.plot.noDataMessagePaint != null
this.plot.noDataMessagePaint.getClass().getName() == java.awt.Color.class
this.plot.insets has only one value
this.plot.insets != null
this.plot.insets.unitType has only one value
this.plot.insets.unitType != null
this.plot.insets.top == 4.0
this.plot.insets.left == 8.0
this.plot.insets.bottom == 4.0
this.plot.insets.right == 8.0
this.plot.outlineVisible == true
this.plot.outlineStroke has only one value
this.plot.outlineStroke != null
this.plot.outlineStroke.getClass().getName() == java.awt.BasicStroke.class
this.plot.outlinePaint has only one value
this.plot.outlinePaint != null
this.plot.outlinePaint.getClass().getName() == java.awt.Color.class
this.plot.backgroundPaint has only one value
this.plot.backgroundPaint != null
this.plot.backgroundPaint.getClass().getName() == java.awt.Color.class
this.plot.backgroundImage == null
this.plot.backgroundImageAlignment == 15
this.plot.backgroundImageAlpha == 0.5
this.plot.foregroundAlpha == 1.0
this.plot.backgroundAlpha == 1.0
this.plot.drawingSupplier has only one value
this.plot.drawingSupplier != null
this.plot.drawingSupplier.getClass().getName() == org.jfree.chart.plot.DefaultDrawingSupplier.class
this.plot.listenerList has only one value
this.plot.listenerList != null
this.plot.notify == true
this.itemLabelGeneratorList has only one value
this.itemLabelGeneratorList != null
this.itemLabelGeneratorList.objects has only one value
this.itemLabelGeneratorList.objects != null
this.itemLabelGeneratorList.objects.getClass().getName() == java.lang.Object[].class
this.itemLabelGeneratorList.objects[] contains only nulls and has only one value, of length 8
this.itemLabelGeneratorList.objects[] elements == null
this.itemLabelGeneratorList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.itemLabelGeneratorList.objects[].getClass().getName() elements == null
this.itemLabelGeneratorList.size == 0
this.itemLabelGeneratorList.increment == 8
this.baseItemLabelGenerator == null
this.toolTipGeneratorList has only one value
this.toolTipGeneratorList != null
this.toolTipGeneratorList.objects has only one value
this.toolTipGeneratorList.objects != null
this.toolTipGeneratorList.objects.getClass().getName() == java.lang.Object[].class
this.toolTipGeneratorList.objects[] contains only nulls and has only one value, of length 8
this.toolTipGeneratorList.objects[] elements == null
this.toolTipGeneratorList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.toolTipGeneratorList.objects[].getClass().getName() elements == null
this.toolTipGeneratorList.size == 0
this.toolTipGeneratorList.increment == 8
this.baseToolTipGenerator == null
this.urlGeneratorList has only one value
this.urlGeneratorList != null
this.urlGeneratorList.objects has only one value
this.urlGeneratorList.objects != null
this.urlGeneratorList.objects.getClass().getName() == java.lang.Object[].class
this.urlGeneratorList.objects[] contains only nulls and has only one value, of length 8
this.urlGeneratorList.objects[] elements == null
this.urlGeneratorList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.urlGeneratorList.objects[].getClass().getName() elements == null
this.urlGeneratorList.size == 0
this.urlGeneratorList.increment == 8
this.baseURLGenerator == null
this.legendItemLabelGenerator has only one value
this.legendItemLabelGenerator != null
this.legendItemLabelGenerator.getClass().getName() == org.jfree.chart.labels.StandardCategorySeriesLabelGenerator.class
this.legendItemToolTipGenerator == null
this.legendItemURLGenerator == null
this.backgroundAnnotations has only one value
this.backgroundAnnotations != null
this.backgroundAnnotations[] == []
this.backgroundAnnotations[].getClass().getName() == []
this.backgroundAnnotations.getClass().getName() == java.util.ArrayList.class
this.foregroundAnnotations has only one value
this.foregroundAnnotations != null
this.foregroundAnnotations[] == []
this.foregroundAnnotations[].getClass().getName() == []
this.foregroundAnnotations.getClass().getName() == java.util.ArrayList.class
this.rowCount == 0
this.columnCount == 0
this.seriesVisibleList has only one value
this.seriesVisibleList != null
this.seriesVisibleList.objects has only one value
this.seriesVisibleList.objects != null
this.seriesVisibleList.objects.getClass().getName() == java.lang.Object[].class
this.seriesVisibleList.objects[] contains only nulls and has only one value, of length 8
this.seriesVisibleList.objects[] elements == null
this.seriesVisibleList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.seriesVisibleList.objects[].getClass().getName() elements == null
this.seriesVisibleList.size == 0
this.seriesVisibleList.increment == 8
this.baseSeriesVisible == true
this.seriesVisibleInLegendList has only one value
this.seriesVisibleInLegendList != null
this.seriesVisibleInLegendList.objects has only one value
this.seriesVisibleInLegendList.objects != null
this.seriesVisibleInLegendList.objects.getClass().getName() == java.lang.Object[].class
this.seriesVisibleInLegendList.objects[] contains only nulls and has only one value, of length 8
this.seriesVisibleInLegendList.objects[] elements == null
this.seriesVisibleInLegendList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.seriesVisibleInLegendList.objects[].getClass().getName() elements == null
this.seriesVisibleInLegendList.size == 0
this.seriesVisibleInLegendList.increment == 8
this.baseSeriesVisibleInLegend == true
this.paintList has only one value
this.paintList != null
this.paintList.objects has only one value
this.paintList.objects != null
this.paintList.objects.getClass().getName() == java.lang.Object[].class
this.paintList.objects[].getClass().getName() one of { [null, null, null, null, null, null, null, null], [java.awt.Color, null, null, null, null, null, null, null] }
this.paintList.size one of { 0, 1 }
this.paintList.increment == 8
this.autoPopulateSeriesPaint == true
this.basePaint has only one value
this.basePaint != null
this.basePaint.getClass().getName() == java.awt.Color.class
this.fillPaintList has only one value
this.fillPaintList != null
this.fillPaintList.objects has only one value
this.fillPaintList.objects != null
this.fillPaintList.objects.getClass().getName() == java.lang.Object[].class
this.fillPaintList.objects[] contains only nulls and has only one value, of length 8
this.fillPaintList.objects[] elements == null
this.fillPaintList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.fillPaintList.objects[].getClass().getName() elements == null
this.fillPaintList.size == 0
this.fillPaintList.increment == 8
this.autoPopulateSeriesFillPaint == false
this.baseFillPaint has only one value
this.baseFillPaint != null
this.baseFillPaint.getClass().getName() == java.awt.Color.class
this.outlinePaintList has only one value
this.outlinePaintList != null
this.outlinePaintList.objects has only one value
this.outlinePaintList.objects != null
this.outlinePaintList.objects.getClass().getName() == java.lang.Object[].class
this.outlinePaintList.objects[] contains only nulls and has only one value, of length 8
this.outlinePaintList.objects[] elements == null
this.outlinePaintList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.outlinePaintList.objects[].getClass().getName() elements == null
this.outlinePaintList.size == 0
this.outlinePaintList.increment == 8
this.autoPopulateSeriesOutlinePaint == false
this.baseOutlinePaint has only one value
this.baseOutlinePaint != null
this.baseOutlinePaint.getClass().getName() == java.awt.Color.class
this.strokeList has only one value
this.strokeList != null
this.strokeList.objects has only one value
this.strokeList.objects != null
this.strokeList.objects.getClass().getName() == java.lang.Object[].class
this.strokeList.objects[].getClass().getName() one of { [null, null, null, null, null, null, null, null], [java.awt.BasicStroke, null, null, null, null, null, null, null] }
this.strokeList.size one of { 0, 1 }
this.strokeList.increment == 8
this.autoPopulateSeriesStroke == true
this.baseStroke has only one value
this.baseStroke != null
this.baseStroke.getClass().getName() == java.awt.BasicStroke.class
this.outlineStrokeList has only one value
this.outlineStrokeList != null
this.outlineStrokeList.objects has only one value
this.outlineStrokeList.objects != null
this.outlineStrokeList.objects.getClass().getName() == java.lang.Object[].class
this.outlineStrokeList.objects[] contains only nulls and has only one value, of length 8
this.outlineStrokeList.objects[] elements == null
this.outlineStrokeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.outlineStrokeList.objects[].getClass().getName() elements == null
this.outlineStrokeList.size == 0
this.outlineStrokeList.increment == 8
this.baseOutlineStroke has only one value
this.baseOutlineStroke != null
this.baseOutlineStroke.getClass().getName() == java.awt.BasicStroke.class
this.autoPopulateSeriesOutlineStroke == false
this.shapeList has only one value
this.shapeList != null
this.shapeList.objects has only one value
this.shapeList.objects != null
this.shapeList.objects.getClass().getName() == java.lang.Object[].class
this.shapeList.objects[].getClass().getName() one of { [null, null, null, null, null, null, null, null], [java.awt.geom.Rectangle2D.Double, null, null, null, null, null, null, null] }
this.shapeList.size one of { 0, 1 }
this.shapeList.increment == 8
this.autoPopulateSeriesShape == true
this.baseShape has only one value
this.baseShape != null
this.baseShape.getClass().getName() == java.awt.geom.Rectangle2D$Double.class
this.itemLabelsVisibleList has only one value
this.itemLabelsVisibleList != null
this.itemLabelsVisibleList.objects has only one value
this.itemLabelsVisibleList.objects != null
this.itemLabelsVisibleList.objects.getClass().getName() == java.lang.Object[].class
this.itemLabelsVisibleList.objects[] contains only nulls and has only one value, of length 8
this.itemLabelsVisibleList.objects[] elements == null
this.itemLabelsVisibleList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.itemLabelsVisibleList.objects[].getClass().getName() elements == null
this.itemLabelsVisibleList.size == 0
this.itemLabelsVisibleList.increment == 8
this.baseItemLabelsVisible == false
this.itemLabelFontList has only one value
this.itemLabelFontList != null
this.itemLabelFontList.objects has only one value
this.itemLabelFontList.objects != null
this.itemLabelFontList.objects.getClass().getName() == java.lang.Object[].class
this.itemLabelFontList.objects[] contains only nulls and has only one value, of length 8
this.itemLabelFontList.objects[] elements == null
this.itemLabelFontList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.itemLabelFontList.objects[].getClass().getName() elements == null
this.itemLabelFontList.size == 0
this.itemLabelFontList.increment == 8
this.baseItemLabelFont has only one value
this.baseItemLabelFont != null
this.itemLabelPaintList has only one value
this.itemLabelPaintList != null
this.itemLabelPaintList.objects has only one value
this.itemLabelPaintList.objects != null
this.itemLabelPaintList.objects.getClass().getName() == java.lang.Object[].class
this.itemLabelPaintList.objects[] contains only nulls and has only one value, of length 8
this.itemLabelPaintList.objects[] elements == null
this.itemLabelPaintList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.itemLabelPaintList.objects[].getClass().getName() elements == null
this.itemLabelPaintList.size == 0
this.itemLabelPaintList.increment == 8
this.baseItemLabelPaint has only one value
this.baseItemLabelPaint != null
this.baseItemLabelPaint.getClass().getName() == java.awt.Color.class
this.positiveItemLabelPositionList has only one value
this.positiveItemLabelPositionList != null
this.positiveItemLabelPositionList.objects has only one value
this.positiveItemLabelPositionList.objects != null
this.positiveItemLabelPositionList.objects.getClass().getName() == java.lang.Object[].class
this.positiveItemLabelPositionList.objects[] contains only nulls and has only one value, of length 8
this.positiveItemLabelPositionList.objects[] elements == null
this.positiveItemLabelPositionList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.positiveItemLabelPositionList.objects[].getClass().getName() elements == null
this.positiveItemLabelPositionList.size == 0
this.positiveItemLabelPositionList.increment == 8
this.basePositiveItemLabelPosition has only one value
this.basePositiveItemLabelPosition != null
this.basePositiveItemLabelPosition.itemLabelAnchor has only one value
this.basePositiveItemLabelPosition.itemLabelAnchor != null
org.jfree.chart.labels.ItemLabelAnchor.CENTER has only one value
org.jfree.chart.labels.ItemLabelAnchor.CENTER != null
org.jfree.chart.labels.ItemLabelAnchor.INSIDE1 has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE1 != null
org.jfree.chart.labels.ItemLabelAnchor.INSIDE2 has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE2 != null
org.jfree.chart.labels.ItemLabelAnchor.INSIDE3 has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE3 != null
org.jfree.chart.labels.ItemLabelAnchor.INSIDE4 has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE4 != null
org.jfree.chart.labels.ItemLabelAnchor.INSIDE5 has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE5 != null
org.jfree.chart.labels.ItemLabelAnchor.INSIDE6 has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE6 != null
org.jfree.chart.labels.ItemLabelAnchor.INSIDE7 has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE7 != null
org.jfree.chart.labels.ItemLabelAnchor.INSIDE8 has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE8 != null
org.jfree.chart.labels.ItemLabelAnchor.INSIDE9 has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE9 != null
org.jfree.chart.labels.ItemLabelAnchor.INSIDE10 has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE10 != null
org.jfree.chart.labels.ItemLabelAnchor.INSIDE11 has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE11 != null
org.jfree.chart.labels.ItemLabelAnchor.INSIDE12 has only one value
org.jfree.chart.labels.ItemLabelAnchor.INSIDE12 != null
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1 has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1 != null
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2 has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2 != null
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3 has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3 != null
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4 has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4 != null
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5 has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5 != null
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6 has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6 != null
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7 has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7 != null
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8 has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8 != null
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9 has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9 != null
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10 has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10 != null
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11 has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11 != null
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12 has only one value
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12 != null
this.basePositiveItemLabelPosition.itemLabelAnchor.name has only one value
this.basePositiveItemLabelPosition.itemLabelAnchor.name != null
this.basePositiveItemLabelPosition.itemLabelAnchor.name.toString == "ItemLabelAnchor.OUTSIDE12"
this.basePositiveItemLabelPosition.textAnchor has only one value
this.basePositiveItemLabelPosition.textAnchor != null
org.jfree.chart.text.TextAnchor.TOP_LEFT has only one value
org.jfree.chart.text.TextAnchor.TOP_LEFT != null
org.jfree.chart.text.TextAnchor.TOP_CENTER has only one value
org.jfree.chart.text.TextAnchor.TOP_CENTER != null
org.jfree.chart.text.TextAnchor.TOP_RIGHT has only one value
org.jfree.chart.text.TextAnchor.TOP_RIGHT != null
org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT has only one value
org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT != null
org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER has only one value
org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER != null
org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT has only one value
org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT != null
org.jfree.chart.text.TextAnchor.CENTER_LEFT has only one value
org.jfree.chart.text.TextAnchor.CENTER_LEFT != null
org.jfree.chart.text.TextAnchor.CENTER has only one value
org.jfree.chart.text.TextAnchor.CENTER != null
org.jfree.chart.text.TextAnchor.CENTER_RIGHT has only one value
org.jfree.chart.text.TextAnchor.CENTER_RIGHT != null
org.jfree.chart.text.TextAnchor.BASELINE_LEFT has only one value
org.jfree.chart.text.TextAnchor.BASELINE_LEFT != null
org.jfree.chart.text.TextAnchor.BASELINE_CENTER has only one value
org.jfree.chart.text.TextAnchor.BASELINE_CENTER != null
org.jfree.chart.text.TextAnchor.BASELINE_RIGHT has only one value
org.jfree.chart.text.TextAnchor.BASELINE_RIGHT != null
org.jfree.chart.text.TextAnchor.BOTTOM_LEFT has only one value
org.jfree.chart.text.TextAnchor.BOTTOM_LEFT != null
org.jfree.chart.text.TextAnchor.BOTTOM_CENTER has only one value
org.jfree.chart.text.TextAnchor.BOTTOM_CENTER != null
org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT has only one value
org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT != null
this.basePositiveItemLabelPosition.textAnchor.name has only one value
this.basePositiveItemLabelPosition.textAnchor.name != null
this.basePositiveItemLabelPosition.textAnchor.name.toString == "TextAnchor.BOTTOM_CENTER"
this.basePositiveItemLabelPosition.rotationAnchor has only one value
this.basePositiveItemLabelPosition.rotationAnchor != null
this.basePositiveItemLabelPosition.rotationAnchor.name has only one value
this.basePositiveItemLabelPosition.rotationAnchor.name != null
this.basePositiveItemLabelPosition.rotationAnchor.name.toString == "TextAnchor.CENTER"
this.basePositiveItemLabelPosition.angle == 0.0
this.negativeItemLabelPositionList has only one value
this.negativeItemLabelPositionList != null
this.negativeItemLabelPositionList.objects has only one value
this.negativeItemLabelPositionList.objects != null
this.negativeItemLabelPositionList.objects.getClass().getName() == java.lang.Object[].class
this.negativeItemLabelPositionList.objects[] contains only nulls and has only one value, of length 8
this.negativeItemLabelPositionList.objects[] elements == null
this.negativeItemLabelPositionList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.negativeItemLabelPositionList.objects[].getClass().getName() elements == null
this.negativeItemLabelPositionList.size == 0
this.negativeItemLabelPositionList.increment == 8
this.baseNegativeItemLabelPosition has only one value
this.baseNegativeItemLabelPosition != null
this.baseNegativeItemLabelPosition.itemLabelAnchor has only one value
this.baseNegativeItemLabelPosition.itemLabelAnchor != null
this.baseNegativeItemLabelPosition.itemLabelAnchor.name has only one value
this.baseNegativeItemLabelPosition.itemLabelAnchor.name != null
this.baseNegativeItemLabelPosition.itemLabelAnchor.name.toString == "ItemLabelAnchor.OUTSIDE6"
this.baseNegativeItemLabelPosition.textAnchor has only one value
this.baseNegativeItemLabelPosition.textAnchor != null
this.baseNegativeItemLabelPosition.textAnchor.name has only one value
this.baseNegativeItemLabelPosition.textAnchor.name != null
this.baseNegativeItemLabelPosition.textAnchor.name.toString == "TextAnchor.TOP_CENTER"
this.baseNegativeItemLabelPosition.rotationAnchor has only one value
this.baseNegativeItemLabelPosition.rotationAnchor != null
this.baseNegativeItemLabelPosition.rotationAnchor.name has only one value
this.baseNegativeItemLabelPosition.rotationAnchor.name != null
this.baseNegativeItemLabelPosition.rotationAnchor.name.toString == "TextAnchor.CENTER"
this.baseNegativeItemLabelPosition.angle == 0.0
this.itemLabelAnchorOffset == 2.0
this.createEntitiesList has only one value
this.createEntitiesList != null
this.createEntitiesList.objects has only one value
this.createEntitiesList.objects != null
this.createEntitiesList.objects.getClass().getName() == java.lang.Object[].class
this.createEntitiesList.objects[] contains only nulls and has only one value, of length 8
this.createEntitiesList.objects[] elements == null
this.createEntitiesList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.createEntitiesList.objects[].getClass().getName() elements == null
this.createEntitiesList.size == 0
this.createEntitiesList.increment == 8
this.baseCreateEntities == true
this.legendShapeList has only one value
this.legendShapeList != null
this.legendShapeList.objects has only one value
this.legendShapeList.objects != null
this.legendShapeList.objects.getClass().getName() == java.lang.Object[].class
this.legendShapeList.objects[] contains only nulls and has only one value, of length 8
this.legendShapeList.objects[] elements == null
this.legendShapeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.legendShapeList.objects[].getClass().getName() elements == null
this.legendShapeList.size == 0
this.legendShapeList.increment == 8
this.baseLegendShape == null
this.treatLegendShapeAsLine == false
this.legendTextFont has only one value
this.legendTextFont != null
this.legendTextFont.objects has only one value
this.legendTextFont.objects != null
this.legendTextFont.objects.getClass().getName() == java.lang.Object[].class
this.legendTextFont.objects[] contains only nulls and has only one value, of length 8
this.legendTextFont.objects[] elements == null
this.legendTextFont.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.legendTextFont.objects[].getClass().getName() elements == null
this.legendTextFont.size == 0
this.legendTextFont.increment == 8
this.baseLegendTextFont == null
this.legendTextPaint has only one value
this.legendTextPaint != null
this.legendTextPaint.objects has only one value
this.legendTextPaint.objects != null
this.legendTextPaint.objects.getClass().getName() == java.lang.Object[].class
this.legendTextPaint.objects[] contains only nulls and has only one value, of length 8
this.legendTextPaint.objects[] elements == null
this.legendTextPaint.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.legendTextPaint.objects[].getClass().getName() elements == null
this.legendTextPaint.size == 0
this.legendTextPaint.increment == 8
this.baseLegendTextPaint == null
this.dataBoundsIncludesVisibleSeriesOnly == true
this.defaultEntityRadius == 3
this.listenerList has only one value
this.listenerList != null
this.selectedItemAttributes has only one value
this.selectedItemAttributes != null
this.selectedItemAttributes.allowNull == false
this.selectedItemAttributes.paintList has only one value
this.selectedItemAttributes.paintList != null
this.selectedItemAttributes.paintList.objects has only one value
this.selectedItemAttributes.paintList.objects != null
this.selectedItemAttributes.paintList.objects.getClass().getName() == java.lang.Object[].class
this.selectedItemAttributes.paintList.objects[] contains only nulls and has only one value, of length 8
this.selectedItemAttributes.paintList.objects[] elements == null
this.selectedItemAttributes.paintList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.selectedItemAttributes.paintList.objects[].getClass().getName() elements == null
this.selectedItemAttributes.paintList.size == 0
this.selectedItemAttributes.paintList.increment == 8
this.selectedItemAttributes.defaultPaint == null
this.selectedItemAttributes.strokeList has only one value
this.selectedItemAttributes.strokeList != null
this.selectedItemAttributes.strokeList.objects has only one value
this.selectedItemAttributes.strokeList.objects != null
this.selectedItemAttributes.strokeList.objects.getClass().getName() == java.lang.Object[].class
this.selectedItemAttributes.strokeList.objects[] contains only nulls and has only one value, of length 8
this.selectedItemAttributes.strokeList.objects[] elements == null
this.selectedItemAttributes.strokeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.selectedItemAttributes.strokeList.objects[].getClass().getName() elements == null
this.selectedItemAttributes.strokeList.size == 0
this.selectedItemAttributes.strokeList.increment == 8
this.selectedItemAttributes.defaultStroke == null
this.selectedItemAttributes.shapeList has only one value
this.selectedItemAttributes.shapeList != null
this.selectedItemAttributes.shapeList.objects has only one value
this.selectedItemAttributes.shapeList.objects != null
this.selectedItemAttributes.shapeList.objects.getClass().getName() == java.lang.Object[].class
this.selectedItemAttributes.shapeList.objects[] contains only nulls and has only one value, of length 8
this.selectedItemAttributes.shapeList.objects[] elements == null
this.selectedItemAttributes.shapeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.selectedItemAttributes.shapeList.objects[].getClass().getName() elements == null
this.selectedItemAttributes.shapeList.size == 0
this.selectedItemAttributes.shapeList.increment == 8
this.selectedItemAttributes.defaultShape == null
this.selectedItemAttributes.fillPaintList has only one value
this.selectedItemAttributes.fillPaintList != null
this.selectedItemAttributes.fillPaintList.objects has only one value
this.selectedItemAttributes.fillPaintList.objects != null
this.selectedItemAttributes.fillPaintList.objects.getClass().getName() == java.lang.Object[].class
this.selectedItemAttributes.fillPaintList.objects[] contains only nulls and has only one value, of length 8
this.selectedItemAttributes.fillPaintList.objects[] elements == null
this.selectedItemAttributes.fillPaintList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.selectedItemAttributes.fillPaintList.objects[].getClass().getName() elements == null
this.selectedItemAttributes.fillPaintList.size == 0
this.selectedItemAttributes.fillPaintList.increment == 8
this.selectedItemAttributes.defaultFillPaint has only one value
this.selectedItemAttributes.defaultFillPaint != null
this.selectedItemAttributes.defaultFillPaint.getClass().getName() == java.awt.Color.class
this.selectedItemAttributes.outlinePaintList has only one value
this.selectedItemAttributes.outlinePaintList != null
this.selectedItemAttributes.outlinePaintList.objects has only one value
this.selectedItemAttributes.outlinePaintList.objects != null
this.selectedItemAttributes.outlinePaintList.objects.getClass().getName() == java.lang.Object[].class
this.selectedItemAttributes.outlinePaintList.objects[] contains only nulls and has only one value, of length 8
this.selectedItemAttributes.outlinePaintList.objects[] elements == null
this.selectedItemAttributes.outlinePaintList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.selectedItemAttributes.outlinePaintList.objects[].getClass().getName() elements == null
this.selectedItemAttributes.outlinePaintList.size == 0
this.selectedItemAttributes.outlinePaintList.increment == 8
this.selectedItemAttributes.defaultOutlinePaint == null
this.selectedItemAttributes.outlineStrokeList == null
this.selectedItemAttributes.defaultOutlineStroke == null
this.selectedItemAttributes.labelsVisibleList == null
this.selectedItemAttributes.defaultLabelVisible == null
this.selectedItemAttributes.labelFontList == null
this.selectedItemAttributes.defaultLabelFont == null
this.selectedItemAttributes.labelPaintList == null
this.selectedItemAttributes.defaultLabelPaint == null
this.selectedItemAttributes.positionItemLabelPositionList == null
this.selectedItemAttributes.defaultPositiveItemLabelPosition == null
this.selectedItemAttributes.negativeItemLabelPositionList == null
this.selectedItemAttributes.defaultNegativeItemLabelPosition == null
this.selectedItemAttributes.createEntityList == null
this.selectedItemAttributes.defaultCreateEntity == null
size(this.seriesLinesVisible.objects[]) == 8
size(this.seriesShapesVisible.objects[]) == 8
size(this.seriesShapesFilled.objects[]) == 8
size(this.plot.domainAxes.objects[]) == 8
size(this.plot.domainAxisLocations.objects[]) == 8
size(this.plot.rangeAxes.objects[]) == 8
size(this.plot.rangeAxisLocations.objects[]) == 8
size(this.plot.datasets.objects[]) == 8
size(this.plot.renderers.objects[]) == 8
size(this.itemLabelGeneratorList.objects[]) == 8
size(this.toolTipGeneratorList.objects[]) == 8
size(this.urlGeneratorList.objects[]) == 8
size(this.seriesVisibleList.objects[]) == 8
size(this.seriesVisibleInLegendList.objects[]) == 8
size(this.paintList.objects[]) == 8
size(this.fillPaintList.objects[]) == 8
size(this.outlinePaintList.objects[]) == 8
size(this.strokeList.objects[]) == 8
size(this.outlineStrokeList.objects[]) == 8
size(this.shapeList.objects[]) == 8
size(this.itemLabelsVisibleList.objects[]) == 8
size(this.itemLabelFontList.objects[]) == 8
size(this.itemLabelPaintList.objects[]) == 8
size(this.positiveItemLabelPositionList.objects[]) == 8
size(this.negativeItemLabelPositionList.objects[]) == 8
size(this.createEntitiesList.objects[]) == 8
size(this.legendShapeList.objects[]) == 8
size(this.legendTextFont.objects[]) == 8
size(this.legendTextPaint.objects[]) == 8
size(this.selectedItemAttributes.paintList.objects[]) == 8
size(this.selectedItemAttributes.strokeList.objects[]) == 8
size(this.selectedItemAttributes.shapeList.objects[]) == 8
size(this.selectedItemAttributes.fillPaintList.objects[]) == 8
size(this.selectedItemAttributes.outlinePaintList.objects[]) == 8
===========================================================================
org.jfree.chart.renderer.category.LineAndShapeRenderer.LineAndShapeRenderer():::EXIT
this.plot == null
this.paintList.objects[] contains only nulls and has only one value, of length 8
this.paintList.objects[] elements == null
this.paintList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.paintList.objects[].getClass().getName() elements == null
this.paintList.size == 0
this.strokeList.objects[] contains only nulls and has only one value, of length 8
this.strokeList.objects[] elements == null
this.strokeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.strokeList.objects[].getClass().getName() elements == null
this.strokeList.size == 0
this.shapeList.objects[] contains only nulls and has only one value, of length 8
this.shapeList.objects[] elements == null
this.shapeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.shapeList.objects[].getClass().getName() elements == null
this.shapeList.size == 0
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener == null
===========================================================================
org.jfree.chart.renderer.category.LineAndShapeRenderer.LineAndShapeRenderer(boolean, boolean):::ENTER
lines == true
shapes == true
===========================================================================
org.jfree.chart.renderer.category.LineAndShapeRenderer.LineAndShapeRenderer(boolean, boolean):::EXIT
this.plot == null
this.paintList.objects[] contains only nulls and has only one value, of length 8
this.paintList.objects[] elements == null
this.paintList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.paintList.objects[].getClass().getName() elements == null
this.paintList.size == 0
this.strokeList.objects[] contains only nulls and has only one value, of length 8
this.strokeList.objects[] elements == null
this.strokeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.strokeList.objects[].getClass().getName() elements == null
this.strokeList.size == 0
this.shapeList.objects[] contains only nulls and has only one value, of length 8
this.shapeList.objects[] elements == null
this.shapeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.shapeList.objects[].getClass().getName() elements == null
this.shapeList.size == 0
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener == null
===========================================================================
org.jfree.chart.renderer.category.LineAndShapeRenderer.getItemLineVisible(int, int):::ENTER
this.plot has only one value
this.paintList.objects[] has only one value, of length 8
this.paintList.objects[].getClass().getName() == [java.awt.Color, null, null, null, null, null, null, null]
this.paintList.size == 1
this.strokeList.objects[] contains only nulls and has only one value, of length 8
this.strokeList.objects[] elements == null
this.strokeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.strokeList.objects[].getClass().getName() elements == null
this.strokeList.size == 0
this.shapeList.objects[] has only one value, of length 8
this.shapeList.objects[].getClass().getName() == [java.awt.geom.Rectangle2D.Double, null, null, null, null, null, null, null]
this.shapeList.size == 1
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener has only one value
series == 0
item == 0
===========================================================================
org.jfree.chart.renderer.category.LineAndShapeRenderer.getItemLineVisible(int, int):::EXIT242
===========================================================================
org.jfree.chart.renderer.category.LineAndShapeRenderer.getItemLineVisible(int, int):::EXIT242;condition="return == true"
===========================================================================
org.jfree.chart.renderer.category.LineAndShapeRenderer.getItemLineVisible(int, int):::EXIT
this.seriesLinesVisible == orig(this.seriesLinesVisible)
this.seriesLinesVisible.objects == orig(this.seriesLinesVisible.objects)
this.seriesLinesVisible.objects.getClass().getName() == orig(this.seriesLinesVisible.objects.getClass().getName())
this.seriesLinesVisible.objects[] == orig(this.seriesLinesVisible.objects[])
this.seriesLinesVisible.size == orig(this.seriesLinesVisible.size)
this.seriesLinesVisible.increment == orig(this.seriesLinesVisible.increment)
this.baseLinesVisible == orig(this.baseLinesVisible)
this.seriesShapesVisible == orig(this.seriesShapesVisible)
this.seriesShapesVisible.objects == orig(this.seriesShapesVisible.objects)
this.seriesShapesVisible.objects.getClass().getName() == orig(this.seriesShapesVisible.objects.getClass().getName())
this.seriesShapesVisible.objects[] == orig(this.seriesShapesVisible.objects[])
this.seriesShapesVisible.size == orig(this.seriesShapesVisible.size)
this.seriesShapesVisible.increment == orig(this.seriesShapesVisible.increment)
this.baseShapesVisible == orig(this.baseShapesVisible)
this.seriesShapesFilled == orig(this.seriesShapesFilled)
this.seriesShapesFilled.objects == orig(this.seriesShapesFilled.objects)
this.seriesShapesFilled.objects.getClass().getName() == orig(this.seriesShapesFilled.objects.getClass().getName())
this.seriesShapesFilled.objects[] == orig(this.seriesShapesFilled.objects[])
this.seriesShapesFilled.size == orig(this.seriesShapesFilled.size)
this.seriesShapesFilled.increment == orig(this.seriesShapesFilled.increment)
this.baseShapesFilled == orig(this.baseShapesFilled)
this.useFillPaint == orig(this.useFillPaint)
this.drawOutlines == orig(this.drawOutlines)
this.useOutlinePaint == orig(this.useOutlinePaint)
this.useSeriesOffset == orig(this.useSeriesOffset)
this.itemMargin == orig(this.itemMargin)
this.plot == orig(this.plot)
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE)
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_VALUE_LABEL_FONT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_VALUE_LABEL_FONT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT.getClass().getName())
org.jfree.chart.plot.CategoryPlot.localizationResources == orig(org.jfree.chart.plot.CategoryPlot.localizationResources)
org.jfree.chart.plot.CategoryPlot.localizationResources.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.localizationResources.getClass().getName())
this.plot.orientation == orig(this.plot.orientation)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL)
org.jfree.chart.plot.PlotOrientation.VERTICAL == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL)
this.plot.orientation.name == orig(this.plot.orientation.name)
this.plot.orientation.name.toString == orig(this.plot.orientation.name.toString)
this.plot.axisOffset == orig(this.plot.axisOffset)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS)
this.plot.axisOffset.unitType == orig(this.plot.axisOffset.unitType)
this.plot.axisOffset.top == orig(this.plot.axisOffset.top)
this.plot.axisOffset.left == orig(this.plot.axisOffset.left)
this.plot.axisOffset.bottom == orig(this.plot.axisOffset.bottom)
this.plot.axisOffset.right == orig(this.plot.axisOffset.right)
this.plot.domainAxes == orig(this.plot.domainAxes)
this.plot.domainAxes.objects == orig(this.plot.domainAxes.objects)
this.plot.domainAxes.objects.getClass().getName() == orig(this.plot.domainAxes.objects.getClass().getName())
this.plot.domainAxes.objects[] == orig(this.plot.domainAxes.objects[])
this.plot.domainAxes.size == orig(this.plot.domainAxes.size)
this.plot.domainAxes.increment == orig(this.plot.domainAxes.increment)
this.plot.domainAxisLocations == orig(this.plot.domainAxisLocations)
this.plot.domainAxisLocations.objects == orig(this.plot.domainAxisLocations.objects)
this.plot.domainAxisLocations.objects.getClass().getName() == orig(this.plot.domainAxisLocations.objects.getClass().getName())
this.plot.domainAxisLocations.objects[] == orig(this.plot.domainAxisLocations.objects[])
this.plot.domainAxisLocations.size == orig(this.plot.domainAxisLocations.size)
this.plot.domainAxisLocations.increment == orig(this.plot.domainAxisLocations.increment)
this.plot.drawSharedDomainAxis == orig(this.plot.drawSharedDomainAxis)
this.plot.rangeAxes == orig(this.plot.rangeAxes)
this.plot.rangeAxes.objects == orig(this.plot.rangeAxes.objects)
this.plot.rangeAxes.objects.getClass().getName() == orig(this.plot.rangeAxes.objects.getClass().getName())
this.plot.rangeAxes.objects[] == orig(this.plot.rangeAxes.objects[])
this.plot.rangeAxes.size == orig(this.plot.rangeAxes.size)
this.plot.rangeAxes.increment == orig(this.plot.rangeAxes.increment)
this.plot.rangeAxisLocations == orig(this.plot.rangeAxisLocations)
this.plot.rangeAxisLocations.objects == orig(this.plot.rangeAxisLocations.objects)
this.plot.rangeAxisLocations.objects.getClass().getName() == orig(this.plot.rangeAxisLocations.objects.getClass().getName())
this.plot.rangeAxisLocations.objects[] == orig(this.plot.rangeAxisLocations.objects[])
this.plot.rangeAxisLocations.size == orig(this.plot.rangeAxisLocations.size)
this.plot.rangeAxisLocations.increment == orig(this.plot.rangeAxisLocations.increment)
this.plot.datasets == orig(this.plot.datasets)
this.plot.datasets.objects == orig(this.plot.datasets.objects)
this.plot.datasets.objects.getClass().getName() == orig(this.plot.datasets.objects.getClass().getName())
this.plot.datasets.objects[] == orig(this.plot.datasets.objects[])
this.plot.datasets.size == orig(this.plot.datasets.size)
this.plot.datasets.increment == orig(this.plot.datasets.increment)
this.plot.datasetToDomainAxesMap == orig(this.plot.datasetToDomainAxesMap)
this.plot.datasetToRangeAxesMap == orig(this.plot.datasetToRangeAxesMap)
this.plot.renderers == orig(this.plot.renderers)
this.plot.renderers.objects == orig(this.plot.renderers.objects)
this.plot.renderers.objects.getClass().getName() == orig(this.plot.renderers.objects.getClass().getName())
this.plot.renderers.objects[] == orig(this.plot.renderers.objects[])
this.plot.renderers.size == orig(this.plot.renderers.size)
this.plot.renderers.increment == orig(this.plot.renderers.increment)
this.plot.renderingOrder == orig(this.plot.renderingOrder)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE)
this.plot.renderingOrder.name == orig(this.plot.renderingOrder.name)
this.plot.renderingOrder.name.toString == orig(this.plot.renderingOrder.name.toString)
this.plot.columnRenderingOrder == orig(this.plot.columnRenderingOrder)
org.jfree.chart.util.SortOrder.ASCENDING == orig(org.jfree.chart.util.SortOrder.ASCENDING)
org.jfree.chart.util.SortOrder.DESCENDING == orig(org.jfree.chart.util.SortOrder.DESCENDING)
this.plot.columnRenderingOrder.name == orig(this.plot.columnRenderingOrder.name)
this.plot.columnRenderingOrder.name.toString == orig(this.plot.columnRenderingOrder.name.toString)
this.plot.rowRenderingOrder == orig(this.plot.rowRenderingOrder)
this.plot.rowRenderingOrder.name == orig(this.plot.rowRenderingOrder.name)
this.plot.rowRenderingOrder.name.toString == orig(this.plot.rowRenderingOrder.name.toString)
this.plot.domainGridlinesVisible == orig(this.plot.domainGridlinesVisible)
this.plot.domainGridlinePosition == orig(this.plot.domainGridlinePosition)
org.jfree.chart.axis.CategoryAnchor.START == orig(org.jfree.chart.axis.CategoryAnchor.START)
org.jfree.chart.axis.CategoryAnchor.MIDDLE == orig(org.jfree.chart.axis.CategoryAnchor.MIDDLE)
org.jfree.chart.axis.CategoryAnchor.END == orig(org.jfree.chart.axis.CategoryAnchor.END)
this.plot.domainGridlinePosition.name == orig(this.plot.domainGridlinePosition.name)
this.plot.domainGridlinePosition.name.toString == orig(this.plot.domainGridlinePosition.name.toString)
this.plot.domainGridlineStroke == orig(this.plot.domainGridlineStroke)
this.plot.domainGridlineStroke.getClass().getName() == orig(this.plot.domainGridlineStroke.getClass().getName())
this.plot.domainGridlinePaint == orig(this.plot.domainGridlinePaint)
this.plot.domainGridlinePaint.getClass().getName() == orig(this.plot.domainGridlinePaint.getClass().getName())
this.plot.rangeZeroBaselineVisible == orig(this.plot.rangeZeroBaselineVisible)
this.plot.rangeZeroBaselineStroke == orig(this.plot.rangeZeroBaselineStroke)
this.plot.rangeZeroBaselineStroke.getClass().getName() == orig(this.plot.rangeZeroBaselineStroke.getClass().getName())
this.plot.rangeZeroBaselinePaint == orig(this.plot.rangeZeroBaselinePaint)
this.plot.rangeZeroBaselinePaint.getClass().getName() == orig(this.plot.rangeZeroBaselinePaint.getClass().getName())
this.plot.rangeGridlinesVisible == orig(this.plot.rangeGridlinesVisible)
this.plot.rangeGridlineStroke == orig(this.plot.rangeGridlineStroke)
this.plot.rangeGridlineStroke.getClass().getName() == orig(this.plot.rangeGridlineStroke.getClass().getName())
this.plot.rangeGridlinePaint == orig(this.plot.rangeGridlinePaint)
this.plot.rangeGridlinePaint.getClass().getName() == orig(this.plot.rangeGridlinePaint.getClass().getName())
this.plot.rangeMinorGridlinesVisible == orig(this.plot.rangeMinorGridlinesVisible)
this.plot.rangeMinorGridlineStroke == orig(this.plot.rangeMinorGridlineStroke)
this.plot.rangeMinorGridlineStroke.getClass().getName() == orig(this.plot.rangeMinorGridlineStroke.getClass().getName())
this.plot.rangeMinorGridlinePaint == orig(this.plot.rangeMinorGridlinePaint)
this.plot.rangeMinorGridlinePaint.getClass().getName() == orig(this.plot.rangeMinorGridlinePaint.getClass().getName())
this.plot.anchorValue == orig(this.plot.anchorValue)
this.plot.crosshairDatasetIndex == orig(this.plot.crosshairDatasetIndex)
this.plot.domainCrosshairVisible == orig(this.plot.domainCrosshairVisible)
this.plot.domainCrosshairRowKey == orig(this.plot.domainCrosshairRowKey)
this.plot.domainCrosshairColumnKey == orig(this.plot.domainCrosshairColumnKey)
this.plot.domainCrosshairStroke == orig(this.plot.domainCrosshairStroke)
this.plot.domainCrosshairStroke.getClass().getName() == orig(this.plot.domainCrosshairStroke.getClass().getName())
this.plot.domainCrosshairPaint == orig(this.plot.domainCrosshairPaint)
this.plot.domainCrosshairPaint.getClass().getName() == orig(this.plot.domainCrosshairPaint.getClass().getName())
this.plot.rangeCrosshairVisible == orig(this.plot.rangeCrosshairVisible)
this.plot.rangeCrosshairValue == orig(this.plot.rangeCrosshairValue)
this.plot.rangeCrosshairStroke == orig(this.plot.rangeCrosshairStroke)
this.plot.rangeCrosshairStroke.getClass().getName() == orig(this.plot.rangeCrosshairStroke.getClass().getName())
this.plot.rangeCrosshairPaint == orig(this.plot.rangeCrosshairPaint)
this.plot.rangeCrosshairPaint.getClass().getName() == orig(this.plot.rangeCrosshairPaint.getClass().getName())
this.plot.rangeCrosshairLockedOnData == orig(this.plot.rangeCrosshairLockedOnData)
this.plot.foregroundDomainMarkers == orig(this.plot.foregroundDomainMarkers)
this.plot.foregroundDomainMarkers.getClass().getName() == orig(this.plot.foregroundDomainMarkers.getClass().getName())
this.plot.backgroundDomainMarkers == orig(this.plot.backgroundDomainMarkers)
this.plot.backgroundDomainMarkers.getClass().getName() == orig(this.plot.backgroundDomainMarkers.getClass().getName())
this.plot.foregroundRangeMarkers == orig(this.plot.foregroundRangeMarkers)
this.plot.foregroundRangeMarkers.getClass().getName() == orig(this.plot.foregroundRangeMarkers.getClass().getName())
this.plot.backgroundRangeMarkers == orig(this.plot.backgroundRangeMarkers)
this.plot.backgroundRangeMarkers.getClass().getName() == orig(this.plot.backgroundRangeMarkers.getClass().getName())
this.plot.annotations == orig(this.plot.annotations)
this.plot.annotations[] == orig(this.plot.annotations[])
this.plot.annotations.getClass().getName() == orig(this.plot.annotations.getClass().getName())
this.plot.weight == orig(this.plot.weight)
this.plot.fixedDomainAxisSpace == orig(this.plot.fixedDomainAxisSpace)
this.plot.fixedRangeAxisSpace == orig(this.plot.fixedRangeAxisSpace)
this.plot.fixedLegendItems == orig(this.plot.fixedLegendItems)
this.plot.rangePannable == orig(this.plot.rangePannable)
this.plot.shadowGenerator == orig(this.plot.shadowGenerator)
this.plot.shadowGenerator.getClass().getName() == orig(this.plot.shadowGenerator.getClass().getName())
org.jfree.chart.plot.Plot.ZERO == orig(org.jfree.chart.plot.Plot.ZERO)
org.jfree.chart.plot.Plot.ZERO.getClass().getName() == orig(org.jfree.chart.plot.Plot.ZERO.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_INSETS == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.top == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.top)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.left == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.left)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.right == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.right)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName())
this.plot.parent == orig(this.plot.parent)
org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener == orig(org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener)
this.plot.datasetGroup == orig(this.plot.datasetGroup)
this.plot.noDataMessage == orig(this.plot.noDataMessage)
this.plot.noDataMessageFont == orig(this.plot.noDataMessageFont)
this.plot.noDataMessagePaint == orig(this.plot.noDataMessagePaint)
this.plot.noDataMessagePaint.getClass().getName() == orig(this.plot.noDataMessagePaint.getClass().getName())
this.plot.insets == orig(this.plot.insets)
this.plot.insets.unitType == orig(this.plot.insets.unitType)
this.plot.insets.top == orig(this.plot.insets.top)
this.plot.insets.left == orig(this.plot.insets.left)
this.plot.insets.bottom == orig(this.plot.insets.bottom)
this.plot.insets.right == orig(this.plot.insets.right)
this.plot.outlineVisible == orig(this.plot.outlineVisible)
this.plot.outlineStroke == orig(this.plot.outlineStroke)
this.plot.outlineStroke.getClass().getName() == orig(this.plot.outlineStroke.getClass().getName())
this.plot.outlinePaint == orig(this.plot.outlinePaint)
this.plot.outlinePaint.getClass().getName() == orig(this.plot.outlinePaint.getClass().getName())
this.plot.backgroundPaint == orig(this.plot.backgroundPaint)
this.plot.backgroundPaint.getClass().getName() == orig(this.plot.backgroundPaint.getClass().getName())
this.plot.backgroundImage == orig(this.plot.backgroundImage)
this.plot.backgroundImageAlignment == orig(this.plot.backgroundImageAlignment)
this.plot.backgroundImageAlpha == orig(this.plot.backgroundImageAlpha)
this.plot.foregroundAlpha == orig(this.plot.foregroundAlpha)
this.plot.backgroundAlpha == orig(this.plot.backgroundAlpha)
this.plot.drawingSupplier == orig(this.plot.drawingSupplier)
this.plot.drawingSupplier.getClass().getName() == orig(this.plot.drawingSupplier.getClass().getName())
this.plot.listenerList == orig(this.plot.listenerList)
this.plot.notify == orig(this.plot.notify)
this.itemLabelGeneratorList == orig(this.itemLabelGeneratorList)
this.itemLabelGeneratorList.objects == orig(this.itemLabelGeneratorList.objects)
this.itemLabelGeneratorList.objects.getClass().getName() == orig(this.itemLabelGeneratorList.objects.getClass().getName())
this.itemLabelGeneratorList.objects[] == orig(this.itemLabelGeneratorList.objects[])
this.itemLabelGeneratorList.size == orig(this.itemLabelGeneratorList.size)
this.itemLabelGeneratorList.increment == orig(this.itemLabelGeneratorList.increment)
this.baseItemLabelGenerator == orig(this.baseItemLabelGenerator)
this.toolTipGeneratorList == orig(this.toolTipGeneratorList)
this.toolTipGeneratorList.objects == orig(this.toolTipGeneratorList.objects)
this.toolTipGeneratorList.objects.getClass().getName() == orig(this.toolTipGeneratorList.objects.getClass().getName())
this.toolTipGeneratorList.objects[] == orig(this.toolTipGeneratorList.objects[])
this.toolTipGeneratorList.size == orig(this.toolTipGeneratorList.size)
this.toolTipGeneratorList.increment == orig(this.toolTipGeneratorList.increment)
this.baseToolTipGenerator == orig(this.baseToolTipGenerator)
this.urlGeneratorList == orig(this.urlGeneratorList)
this.urlGeneratorList.objects == orig(this.urlGeneratorList.objects)
this.urlGeneratorList.objects.getClass().getName() == orig(this.urlGeneratorList.objects.getClass().getName())
this.urlGeneratorList.objects[] == orig(this.urlGeneratorList.objects[])
this.urlGeneratorList.size == orig(this.urlGeneratorList.size)
this.urlGeneratorList.increment == orig(this.urlGeneratorList.increment)
this.baseURLGenerator == orig(this.baseURLGenerator)
this.legendItemLabelGenerator == orig(this.legendItemLabelGenerator)
this.legendItemLabelGenerator.getClass().getName() == orig(this.legendItemLabelGenerator.getClass().getName())
this.legendItemToolTipGenerator == orig(this.legendItemToolTipGenerator)
this.legendItemURLGenerator == orig(this.legendItemURLGenerator)
this.backgroundAnnotations == orig(this.backgroundAnnotations)
this.backgroundAnnotations[] == orig(this.backgroundAnnotations[])
this.backgroundAnnotations.getClass().getName() == orig(this.backgroundAnnotations.getClass().getName())
this.foregroundAnnotations == orig(this.foregroundAnnotations)
this.foregroundAnnotations[] == orig(this.foregroundAnnotations[])
this.foregroundAnnotations.getClass().getName() == orig(this.foregroundAnnotations.getClass().getName())
this.rowCount == orig(this.rowCount)
this.columnCount == orig(this.columnCount)
org.jfree.chart.renderer.AbstractRenderer.ZERO == orig(org.jfree.chart.renderer.AbstractRenderer.ZERO)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_FONT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_FONT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT.getClass().getName())
this.seriesVisibleList == orig(this.seriesVisibleList)
this.seriesVisibleList.objects == orig(this.seriesVisibleList.objects)
this.seriesVisibleList.objects.getClass().getName() == orig(this.seriesVisibleList.objects.getClass().getName())
this.seriesVisibleList.objects[] == orig(this.seriesVisibleList.objects[])
this.seriesVisibleList.size == orig(this.seriesVisibleList.size)
this.seriesVisibleList.increment == orig(this.seriesVisibleList.increment)
this.baseSeriesVisible == orig(this.baseSeriesVisible)
this.seriesVisibleInLegendList == orig(this.seriesVisibleInLegendList)
this.seriesVisibleInLegendList.objects == orig(this.seriesVisibleInLegendList.objects)
this.seriesVisibleInLegendList.objects.getClass().getName() == orig(this.seriesVisibleInLegendList.objects.getClass().getName())
this.seriesVisibleInLegendList.objects[] == orig(this.seriesVisibleInLegendList.objects[])
this.seriesVisibleInLegendList.size == orig(this.seriesVisibleInLegendList.size)
this.seriesVisibleInLegendList.increment == orig(this.seriesVisibleInLegendList.increment)
this.baseSeriesVisibleInLegend == orig(this.baseSeriesVisibleInLegend)
this.paintList == orig(this.paintList)
this.paintList.objects == orig(this.paintList.objects)
this.paintList.objects.getClass().getName() == orig(this.paintList.objects.getClass().getName())
this.paintList.objects[] == orig(this.paintList.objects[])
this.paintList.size == orig(this.paintList.size)
this.paintList.increment == orig(this.paintList.increment)
this.autoPopulateSeriesPaint == orig(this.autoPopulateSeriesPaint)
this.basePaint == orig(this.basePaint)
this.basePaint.getClass().getName() == orig(this.basePaint.getClass().getName())
this.fillPaintList == orig(this.fillPaintList)
this.fillPaintList.objects == orig(this.fillPaintList.objects)
this.fillPaintList.objects.getClass().getName() == orig(this.fillPaintList.objects.getClass().getName())
this.fillPaintList.objects[] == orig(this.fillPaintList.objects[])
this.fillPaintList.size == orig(this.fillPaintList.size)
this.fillPaintList.increment == orig(this.fillPaintList.increment)
this.autoPopulateSeriesFillPaint == orig(this.autoPopulateSeriesFillPaint)
this.baseFillPaint == orig(this.baseFillPaint)
this.baseFillPaint.getClass().getName() == orig(this.baseFillPaint.getClass().getName())
this.outlinePaintList == orig(this.outlinePaintList)
this.outlinePaintList.objects == orig(this.outlinePaintList.objects)
this.outlinePaintList.objects.getClass().getName() == orig(this.outlinePaintList.objects.getClass().getName())
this.outlinePaintList.objects[] == orig(this.outlinePaintList.objects[])
this.outlinePaintList.size == orig(this.outlinePaintList.size)
this.outlinePaintList.increment == orig(this.outlinePaintList.increment)
this.autoPopulateSeriesOutlinePaint == orig(this.autoPopulateSeriesOutlinePaint)
this.baseOutlinePaint == orig(this.baseOutlinePaint)
this.baseOutlinePaint.getClass().getName() == orig(this.baseOutlinePaint.getClass().getName())
this.strokeList == orig(this.strokeList)
this.strokeList.objects == orig(this.strokeList.objects)
this.strokeList.objects.getClass().getName() == orig(this.strokeList.objects.getClass().getName())
this.strokeList.objects[] == orig(this.strokeList.objects[])
this.strokeList.size == orig(this.strokeList.size)
this.strokeList.increment == orig(this.strokeList.increment)
this.autoPopulateSeriesStroke == orig(this.autoPopulateSeriesStroke)
this.baseStroke == orig(this.baseStroke)
this.baseStroke.getClass().getName() == orig(this.baseStroke.getClass().getName())
this.outlineStrokeList == orig(this.outlineStrokeList)
this.outlineStrokeList.objects == orig(this.outlineStrokeList.objects)
this.outlineStrokeList.objects.getClass().getName() == orig(this.outlineStrokeList.objects.getClass().getName())
this.outlineStrokeList.objects[] == orig(this.outlineStrokeList.objects[])
this.outlineStrokeList.size == orig(this.outlineStrokeList.size)
this.outlineStrokeList.increment == orig(this.outlineStrokeList.increment)
this.baseOutlineStroke == orig(this.baseOutlineStroke)
this.baseOutlineStroke.getClass().getName() == orig(this.baseOutlineStroke.getClass().getName())
this.autoPopulateSeriesOutlineStroke == orig(this.autoPopulateSeriesOutlineStroke)
this.shapeList == orig(this.shapeList)
this.shapeList.objects == orig(this.shapeList.objects)
this.shapeList.objects.getClass().getName() == orig(this.shapeList.objects.getClass().getName())
this.shapeList.objects[] == orig(this.shapeList.objects[])
this.shapeList.size == orig(this.shapeList.size)
this.shapeList.increment == orig(this.shapeList.increment)
this.autoPopulateSeriesShape == orig(this.autoPopulateSeriesShape)
this.baseShape == orig(this.baseShape)
this.baseShape.getClass().getName() == orig(this.baseShape.getClass().getName())
this.itemLabelsVisibleList == orig(this.itemLabelsVisibleList)
this.itemLabelsVisibleList.objects == orig(this.itemLabelsVisibleList.objects)
this.itemLabelsVisibleList.objects.getClass().getName() == orig(this.itemLabelsVisibleList.objects.getClass().getName())
this.itemLabelsVisibleList.objects[] == orig(this.itemLabelsVisibleList.objects[])
this.itemLabelsVisibleList.size == orig(this.itemLabelsVisibleList.size)
this.itemLabelsVisibleList.increment == orig(this.itemLabelsVisibleList.increment)
this.baseItemLabelsVisible == orig(this.baseItemLabelsVisible)
this.itemLabelFontList == orig(this.itemLabelFontList)
this.itemLabelFontList.objects == orig(this.itemLabelFontList.objects)
this.itemLabelFontList.objects.getClass().getName() == orig(this.itemLabelFontList.objects.getClass().getName())
this.itemLabelFontList.objects[] == orig(this.itemLabelFontList.objects[])
this.itemLabelFontList.size == orig(this.itemLabelFontList.size)
this.itemLabelFontList.increment == orig(this.itemLabelFontList.increment)
this.baseItemLabelFont == orig(this.baseItemLabelFont)
this.itemLabelPaintList == orig(this.itemLabelPaintList)
this.itemLabelPaintList.objects == orig(this.itemLabelPaintList.objects)
this.itemLabelPaintList.objects.getClass().getName() == orig(this.itemLabelPaintList.objects.getClass().getName())
this.itemLabelPaintList.objects[] == orig(this.itemLabelPaintList.objects[])
this.itemLabelPaintList.size == orig(this.itemLabelPaintList.size)
this.itemLabelPaintList.increment == orig(this.itemLabelPaintList.increment)
this.baseItemLabelPaint == orig(this.baseItemLabelPaint)
this.baseItemLabelPaint.getClass().getName() == orig(this.baseItemLabelPaint.getClass().getName())
this.positiveItemLabelPositionList == orig(this.positiveItemLabelPositionList)
this.positiveItemLabelPositionList.objects == orig(this.positiveItemLabelPositionList.objects)
this.positiveItemLabelPositionList.objects.getClass().getName() == orig(this.positiveItemLabelPositionList.objects.getClass().getName())
this.positiveItemLabelPositionList.objects[] == orig(this.positiveItemLabelPositionList.objects[])
this.positiveItemLabelPositionList.size == orig(this.positiveItemLabelPositionList.size)
this.positiveItemLabelPositionList.increment == orig(this.positiveItemLabelPositionList.increment)
this.basePositiveItemLabelPosition == orig(this.basePositiveItemLabelPosition)
this.basePositiveItemLabelPosition.itemLabelAnchor == orig(this.basePositiveItemLabelPosition.itemLabelAnchor)
org.jfree.chart.labels.ItemLabelAnchor.CENTER == orig(org.jfree.chart.labels.ItemLabelAnchor.CENTER)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE1 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE1)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE2 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE2)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE3 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE3)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE4 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE4)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE5 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE5)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE6 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE6)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE7 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE7)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE8 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE8)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE9 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE9)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE10 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE10)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE11 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE11)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE12 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE12)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12)
this.basePositiveItemLabelPosition.itemLabelAnchor.name == orig(this.basePositiveItemLabelPosition.itemLabelAnchor.name)
this.basePositiveItemLabelPosition.itemLabelAnchor.name.toString == orig(this.basePositiveItemLabelPosition.itemLabelAnchor.name.toString)
this.basePositiveItemLabelPosition.textAnchor == orig(this.basePositiveItemLabelPosition.textAnchor)
org.jfree.chart.text.TextAnchor.TOP_LEFT == orig(org.jfree.chart.text.TextAnchor.TOP_LEFT)
org.jfree.chart.text.TextAnchor.TOP_CENTER == orig(org.jfree.chart.text.TextAnchor.TOP_CENTER)
org.jfree.chart.text.TextAnchor.TOP_RIGHT == orig(org.jfree.chart.text.TextAnchor.TOP_RIGHT)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT)
org.jfree.chart.text.TextAnchor.CENTER_LEFT == orig(org.jfree.chart.text.TextAnchor.CENTER_LEFT)
org.jfree.chart.text.TextAnchor.CENTER == orig(org.jfree.chart.text.TextAnchor.CENTER)
org.jfree.chart.text.TextAnchor.CENTER_RIGHT == orig(org.jfree.chart.text.TextAnchor.CENTER_RIGHT)
org.jfree.chart.text.TextAnchor.BASELINE_LEFT == orig(org.jfree.chart.text.TextAnchor.BASELINE_LEFT)
org.jfree.chart.text.TextAnchor.BASELINE_CENTER == orig(org.jfree.chart.text.TextAnchor.BASELINE_CENTER)
org.jfree.chart.text.TextAnchor.BASELINE_RIGHT == orig(org.jfree.chart.text.TextAnchor.BASELINE_RIGHT)
org.jfree.chart.text.TextAnchor.BOTTOM_LEFT == orig(org.jfree.chart.text.TextAnchor.BOTTOM_LEFT)
org.jfree.chart.text.TextAnchor.BOTTOM_CENTER == orig(org.jfree.chart.text.TextAnchor.BOTTOM_CENTER)
org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT == orig(org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT)
this.basePositiveItemLabelPosition.textAnchor.name == orig(this.basePositiveItemLabelPosition.textAnchor.name)
this.basePositiveItemLabelPosition.textAnchor.name.toString == orig(this.basePositiveItemLabelPosition.textAnchor.name.toString)
this.basePositiveItemLabelPosition.rotationAnchor == orig(this.basePositiveItemLabelPosition.rotationAnchor)
this.basePositiveItemLabelPosition.rotationAnchor.name == orig(this.basePositiveItemLabelPosition.rotationAnchor.name)
this.basePositiveItemLabelPosition.rotationAnchor.name.toString == orig(this.basePositiveItemLabelPosition.rotationAnchor.name.toString)
this.basePositiveItemLabelPosition.angle == orig(this.basePositiveItemLabelPosition.angle)
this.negativeItemLabelPositionList == orig(this.negativeItemLabelPositionList)
this.negativeItemLabelPositionList.objects == orig(this.negativeItemLabelPositionList.objects)
this.negativeItemLabelPositionList.objects.getClass().getName() == orig(this.negativeItemLabelPositionList.objects.getClass().getName())
this.negativeItemLabelPositionList.objects[] == orig(this.negativeItemLabelPositionList.objects[])
this.negativeItemLabelPositionList.size == orig(this.negativeItemLabelPositionList.size)
this.negativeItemLabelPositionList.increment == orig(this.negativeItemLabelPositionList.increment)
this.baseNegativeItemLabelPosition == orig(this.baseNegativeItemLabelPosition)
this.baseNegativeItemLabelPosition.itemLabelAnchor == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor)
this.baseNegativeItemLabelPosition.itemLabelAnchor.name == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor.name)
this.baseNegativeItemLabelPosition.itemLabelAnchor.name.toString == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor.name.toString)
this.baseNegativeItemLabelPosition.textAnchor == orig(this.baseNegativeItemLabelPosition.textAnchor)
this.baseNegativeItemLabelPosition.textAnchor.name == orig(this.baseNegativeItemLabelPosition.textAnchor.name)
this.baseNegativeItemLabelPosition.textAnchor.name.toString == orig(this.baseNegativeItemLabelPosition.textAnchor.name.toString)
this.baseNegativeItemLabelPosition.rotationAnchor == orig(this.baseNegativeItemLabelPosition.rotationAnchor)
this.baseNegativeItemLabelPosition.rotationAnchor.name == orig(this.baseNegativeItemLabelPosition.rotationAnchor.name)
this.baseNegativeItemLabelPosition.rotationAnchor.name.toString == orig(this.baseNegativeItemLabelPosition.rotationAnchor.name.toString)
this.baseNegativeItemLabelPosition.angle == orig(this.baseNegativeItemLabelPosition.angle)
this.itemLabelAnchorOffset == orig(this.itemLabelAnchorOffset)
this.createEntitiesList == orig(this.createEntitiesList)
this.createEntitiesList.objects == orig(this.createEntitiesList.objects)
this.createEntitiesList.objects.getClass().getName() == orig(this.createEntitiesList.objects.getClass().getName())
this.createEntitiesList.objects[] == orig(this.createEntitiesList.objects[])
this.createEntitiesList.size == orig(this.createEntitiesList.size)
this.createEntitiesList.increment == orig(this.createEntitiesList.increment)
this.baseCreateEntities == orig(this.baseCreateEntities)
this.legendShapeList == orig(this.legendShapeList)
this.legendShapeList.objects == orig(this.legendShapeList.objects)
this.legendShapeList.objects.getClass().getName() == orig(this.legendShapeList.objects.getClass().getName())
this.legendShapeList.objects[] == orig(this.legendShapeList.objects[])
this.legendShapeList.size == orig(this.legendShapeList.size)
this.legendShapeList.increment == orig(this.legendShapeList.increment)
this.baseLegendShape == orig(this.baseLegendShape)
this.treatLegendShapeAsLine == orig(this.treatLegendShapeAsLine)
this.legendTextFont == orig(this.legendTextFont)
this.legendTextFont.objects == orig(this.legendTextFont.objects)
this.legendTextFont.objects.getClass().getName() == orig(this.legendTextFont.objects.getClass().getName())
this.legendTextFont.objects[] == orig(this.legendTextFont.objects[])
this.legendTextFont.size == orig(this.legendTextFont.size)
this.legendTextFont.increment == orig(this.legendTextFont.increment)
this.baseLegendTextFont == orig(this.baseLegendTextFont)
this.legendTextPaint == orig(this.legendTextPaint)
this.legendTextPaint.objects == orig(this.legendTextPaint.objects)
this.legendTextPaint.objects.getClass().getName() == orig(this.legendTextPaint.objects.getClass().getName())
this.legendTextPaint.objects[] == orig(this.legendTextPaint.objects[])
this.legendTextPaint.size == orig(this.legendTextPaint.size)
this.legendTextPaint.increment == orig(this.legendTextPaint.increment)
this.baseLegendTextPaint == orig(this.baseLegendTextPaint)
this.dataBoundsIncludesVisibleSeriesOnly == orig(this.dataBoundsIncludesVisibleSeriesOnly)
this.defaultEntityRadius == orig(this.defaultEntityRadius)
this.listenerList == orig(this.listenerList)
this.selectedItemAttributes == orig(this.selectedItemAttributes)
this.selectedItemAttributes.allowNull == orig(this.selectedItemAttributes.allowNull)
this.selectedItemAttributes.paintList == orig(this.selectedItemAttributes.paintList)
this.selectedItemAttributes.paintList.objects == orig(this.selectedItemAttributes.paintList.objects)
this.selectedItemAttributes.paintList.objects.getClass().getName() == orig(this.selectedItemAttributes.paintList.objects.getClass().getName())
this.selectedItemAttributes.paintList.objects[] == orig(this.selectedItemAttributes.paintList.objects[])
this.selectedItemAttributes.paintList.size == orig(this.selectedItemAttributes.paintList.size)
this.selectedItemAttributes.paintList.increment == orig(this.selectedItemAttributes.paintList.increment)
this.selectedItemAttributes.defaultPaint == orig(this.selectedItemAttributes.defaultPaint)
this.selectedItemAttributes.strokeList == orig(this.selectedItemAttributes.strokeList)
this.selectedItemAttributes.strokeList.objects == orig(this.selectedItemAttributes.strokeList.objects)
this.selectedItemAttributes.strokeList.objects.getClass().getName() == orig(this.selectedItemAttributes.strokeList.objects.getClass().getName())
this.selectedItemAttributes.strokeList.objects[] == orig(this.selectedItemAttributes.strokeList.objects[])
this.selectedItemAttributes.strokeList.size == orig(this.selectedItemAttributes.strokeList.size)
this.selectedItemAttributes.strokeList.increment == orig(this.selectedItemAttributes.strokeList.increment)
this.selectedItemAttributes.defaultStroke == orig(this.selectedItemAttributes.defaultStroke)
this.selectedItemAttributes.shapeList == orig(this.selectedItemAttributes.shapeList)
this.selectedItemAttributes.shapeList.objects == orig(this.selectedItemAttributes.shapeList.objects)
this.selectedItemAttributes.shapeList.objects.getClass().getName() == orig(this.selectedItemAttributes.shapeList.objects.getClass().getName())
this.selectedItemAttributes.shapeList.objects[] == orig(this.selectedItemAttributes.shapeList.objects[])
this.selectedItemAttributes.shapeList.size == orig(this.selectedItemAttributes.shapeList.size)
this.selectedItemAttributes.shapeList.increment == orig(this.selectedItemAttributes.shapeList.increment)
this.selectedItemAttributes.defaultShape == orig(this.selectedItemAttributes.defaultShape)
this.selectedItemAttributes.fillPaintList == orig(this.selectedItemAttributes.fillPaintList)
this.selectedItemAttributes.fillPaintList.objects == orig(this.selectedItemAttributes.fillPaintList.objects)
this.selectedItemAttributes.fillPaintList.objects.getClass().getName() == orig(this.selectedItemAttributes.fillPaintList.objects.getClass().getName())
this.selectedItemAttributes.fillPaintList.objects[] == orig(this.selectedItemAttributes.fillPaintList.objects[])
this.selectedItemAttributes.fillPaintList.size == orig(this.selectedItemAttributes.fillPaintList.size)
this.selectedItemAttributes.fillPaintList.increment == orig(this.selectedItemAttributes.fillPaintList.increment)
this.selectedItemAttributes.defaultFillPaint == orig(this.selectedItemAttributes.defaultFillPaint)
this.selectedItemAttributes.defaultFillPaint.getClass().getName() == orig(this.selectedItemAttributes.defaultFillPaint.getClass().getName())
this.selectedItemAttributes.outlinePaintList == orig(this.selectedItemAttributes.outlinePaintList)
this.selectedItemAttributes.outlinePaintList.objects == orig(this.selectedItemAttributes.outlinePaintList.objects)
this.selectedItemAttributes.outlinePaintList.objects.getClass().getName() == orig(this.selectedItemAttributes.outlinePaintList.objects.getClass().getName())
this.selectedItemAttributes.outlinePaintList.objects[] == orig(this.selectedItemAttributes.outlinePaintList.objects[])
this.selectedItemAttributes.outlinePaintList.size == orig(this.selectedItemAttributes.outlinePaintList.size)
this.selectedItemAttributes.outlinePaintList.increment == orig(this.selectedItemAttributes.outlinePaintList.increment)
this.selectedItemAttributes.defaultOutlinePaint == orig(this.selectedItemAttributes.defaultOutlinePaint)
this.selectedItemAttributes.outlineStrokeList == orig(this.selectedItemAttributes.outlineStrokeList)
this.selectedItemAttributes.defaultOutlineStroke == orig(this.selectedItemAttributes.defaultOutlineStroke)
this.selectedItemAttributes.labelsVisibleList == orig(this.selectedItemAttributes.labelsVisibleList)
this.selectedItemAttributes.defaultLabelVisible == orig(this.selectedItemAttributes.defaultLabelVisible)
this.selectedItemAttributes.labelFontList == orig(this.selectedItemAttributes.labelFontList)
this.selectedItemAttributes.defaultLabelFont == orig(this.selectedItemAttributes.defaultLabelFont)
this.selectedItemAttributes.labelPaintList == orig(this.selectedItemAttributes.labelPaintList)
this.selectedItemAttributes.defaultLabelPaint == orig(this.selectedItemAttributes.defaultLabelPaint)
this.selectedItemAttributes.positionItemLabelPositionList == orig(this.selectedItemAttributes.positionItemLabelPositionList)
this.selectedItemAttributes.defaultPositiveItemLabelPosition == orig(this.selectedItemAttributes.defaultPositiveItemLabelPosition)
this.selectedItemAttributes.negativeItemLabelPositionList == orig(this.selectedItemAttributes.negativeItemLabelPositionList)
this.selectedItemAttributes.defaultNegativeItemLabelPosition == orig(this.selectedItemAttributes.defaultNegativeItemLabelPosition)
this.selectedItemAttributes.createEntityList == orig(this.selectedItemAttributes.createEntityList)
this.selectedItemAttributes.defaultCreateEntity == orig(this.selectedItemAttributes.defaultCreateEntity)
org.jfree.chart.renderer.AbstractRenderer.ADJ == orig(org.jfree.chart.renderer.AbstractRenderer.ADJ)
org.jfree.chart.renderer.AbstractRenderer.OPP == orig(org.jfree.chart.renderer.AbstractRenderer.OPP)
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener == orig(org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener)
this.plot has only one value
this.paintList.objects[] has only one value, of length 8
this.paintList.objects[].getClass().getName() == [java.awt.Color, null, null, null, null, null, null, null]
this.paintList.size == 1
this.strokeList.objects[] contains only nulls and has only one value, of length 8
this.strokeList.objects[] elements == null
this.strokeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.strokeList.objects[].getClass().getName() elements == null
this.strokeList.size == 0
this.shapeList.objects[] has only one value, of length 8
this.shapeList.objects[].getClass().getName() == [java.awt.geom.Rectangle2D.Double, null, null, null, null, null, null, null]
this.shapeList.size == 1
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener has only one value
return == true
===========================================================================
org.jfree.chart.renderer.category.LineAndShapeRenderer.getItemLineVisible(int, int):::EXIT;condition="return == true"
===========================================================================
org.jfree.chart.renderer.category.LineAndShapeRenderer.getItemShapeFilled(int, int):::ENTER
this.plot has only one value
this.paintList.objects[] has only one value, of length 8
this.paintList.objects[].getClass().getName() == [java.awt.Color, null, null, null, null, null, null, null]
this.paintList.size == 1
this.strokeList.objects[] contains only nulls and has only one value, of length 8
this.strokeList.objects[] elements == null
this.strokeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.strokeList.objects[].getClass().getName() elements == null
this.strokeList.size == 0
this.shapeList.objects[] has only one value, of length 8
this.shapeList.objects[].getClass().getName() == [java.awt.geom.Rectangle2D.Double, null, null, null, null, null, null, null]
this.shapeList.size == 1
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener has only one value
series == 0
item == 0
===========================================================================
org.jfree.chart.renderer.category.LineAndShapeRenderer.getItemShapeFilled(int, int):::EXIT471
===========================================================================
org.jfree.chart.renderer.category.LineAndShapeRenderer.getItemShapeFilled(int, int):::EXIT471;condition="return == true"
===========================================================================
org.jfree.chart.renderer.category.LineAndShapeRenderer.getItemShapeFilled(int, int):::EXIT
this.seriesLinesVisible == orig(this.seriesLinesVisible)
this.seriesLinesVisible.objects == orig(this.seriesLinesVisible.objects)
this.seriesLinesVisible.objects.getClass().getName() == orig(this.seriesLinesVisible.objects.getClass().getName())
this.seriesLinesVisible.objects[] == orig(this.seriesLinesVisible.objects[])
this.seriesLinesVisible.size == orig(this.seriesLinesVisible.size)
this.seriesLinesVisible.increment == orig(this.seriesLinesVisible.increment)
this.baseLinesVisible == orig(this.baseLinesVisible)
this.seriesShapesVisible == orig(this.seriesShapesVisible)
this.seriesShapesVisible.objects == orig(this.seriesShapesVisible.objects)
this.seriesShapesVisible.objects.getClass().getName() == orig(this.seriesShapesVisible.objects.getClass().getName())
this.seriesShapesVisible.objects[] == orig(this.seriesShapesVisible.objects[])
this.seriesShapesVisible.size == orig(this.seriesShapesVisible.size)
this.seriesShapesVisible.increment == orig(this.seriesShapesVisible.increment)
this.baseShapesVisible == orig(this.baseShapesVisible)
this.seriesShapesFilled == orig(this.seriesShapesFilled)
this.seriesShapesFilled.objects == orig(this.seriesShapesFilled.objects)
this.seriesShapesFilled.objects.getClass().getName() == orig(this.seriesShapesFilled.objects.getClass().getName())
this.seriesShapesFilled.objects[] == orig(this.seriesShapesFilled.objects[])
this.seriesShapesFilled.size == orig(this.seriesShapesFilled.size)
this.seriesShapesFilled.increment == orig(this.seriesShapesFilled.increment)
this.baseShapesFilled == orig(this.baseShapesFilled)
this.useFillPaint == orig(this.useFillPaint)
this.drawOutlines == orig(this.drawOutlines)
this.useOutlinePaint == orig(this.useOutlinePaint)
this.useSeriesOffset == orig(this.useSeriesOffset)
this.itemMargin == orig(this.itemMargin)
this.plot == orig(this.plot)
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE)
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_VALUE_LABEL_FONT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_VALUE_LABEL_FONT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT.getClass().getName())
org.jfree.chart.plot.CategoryPlot.localizationResources == orig(org.jfree.chart.plot.CategoryPlot.localizationResources)
org.jfree.chart.plot.CategoryPlot.localizationResources.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.localizationResources.getClass().getName())
this.plot.orientation == orig(this.plot.orientation)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL)
org.jfree.chart.plot.PlotOrientation.VERTICAL == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL)
this.plot.orientation.name == orig(this.plot.orientation.name)
this.plot.orientation.name.toString == orig(this.plot.orientation.name.toString)
this.plot.axisOffset == orig(this.plot.axisOffset)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS)
this.plot.axisOffset.unitType == orig(this.plot.axisOffset.unitType)
this.plot.axisOffset.top == orig(this.plot.axisOffset.top)
this.plot.axisOffset.left == orig(this.plot.axisOffset.left)
this.plot.axisOffset.bottom == orig(this.plot.axisOffset.bottom)
this.plot.axisOffset.right == orig(this.plot.axisOffset.right)
this.plot.domainAxes == orig(this.plot.domainAxes)
this.plot.domainAxes.objects == orig(this.plot.domainAxes.objects)
this.plot.domainAxes.objects.getClass().getName() == orig(this.plot.domainAxes.objects.getClass().getName())
this.plot.domainAxes.objects[] == orig(this.plot.domainAxes.objects[])
this.plot.domainAxes.size == orig(this.plot.domainAxes.size)
this.plot.domainAxes.increment == orig(this.plot.domainAxes.increment)
this.plot.domainAxisLocations == orig(this.plot.domainAxisLocations)
this.plot.domainAxisLocations.objects == orig(this.plot.domainAxisLocations.objects)
this.plot.domainAxisLocations.objects.getClass().getName() == orig(this.plot.domainAxisLocations.objects.getClass().getName())
this.plot.domainAxisLocations.objects[] == orig(this.plot.domainAxisLocations.objects[])
this.plot.domainAxisLocations.size == orig(this.plot.domainAxisLocations.size)
this.plot.domainAxisLocations.increment == orig(this.plot.domainAxisLocations.increment)
this.plot.drawSharedDomainAxis == orig(this.plot.drawSharedDomainAxis)
this.plot.rangeAxes == orig(this.plot.rangeAxes)
this.plot.rangeAxes.objects == orig(this.plot.rangeAxes.objects)
this.plot.rangeAxes.objects.getClass().getName() == orig(this.plot.rangeAxes.objects.getClass().getName())
this.plot.rangeAxes.objects[] == orig(this.plot.rangeAxes.objects[])
this.plot.rangeAxes.size == orig(this.plot.rangeAxes.size)
this.plot.rangeAxes.increment == orig(this.plot.rangeAxes.increment)
this.plot.rangeAxisLocations == orig(this.plot.rangeAxisLocations)
this.plot.rangeAxisLocations.objects == orig(this.plot.rangeAxisLocations.objects)
this.plot.rangeAxisLocations.objects.getClass().getName() == orig(this.plot.rangeAxisLocations.objects.getClass().getName())
this.plot.rangeAxisLocations.objects[] == orig(this.plot.rangeAxisLocations.objects[])
this.plot.rangeAxisLocations.size == orig(this.plot.rangeAxisLocations.size)
this.plot.rangeAxisLocations.increment == orig(this.plot.rangeAxisLocations.increment)
this.plot.datasets == orig(this.plot.datasets)
this.plot.datasets.objects == orig(this.plot.datasets.objects)
this.plot.datasets.objects.getClass().getName() == orig(this.plot.datasets.objects.getClass().getName())
this.plot.datasets.objects[] == orig(this.plot.datasets.objects[])
this.plot.datasets.size == orig(this.plot.datasets.size)
this.plot.datasets.increment == orig(this.plot.datasets.increment)
this.plot.datasetToDomainAxesMap == orig(this.plot.datasetToDomainAxesMap)
this.plot.datasetToRangeAxesMap == orig(this.plot.datasetToRangeAxesMap)
this.plot.renderers == orig(this.plot.renderers)
this.plot.renderers.objects == orig(this.plot.renderers.objects)
this.plot.renderers.objects.getClass().getName() == orig(this.plot.renderers.objects.getClass().getName())
this.plot.renderers.objects[] == orig(this.plot.renderers.objects[])
this.plot.renderers.size == orig(this.plot.renderers.size)
this.plot.renderers.increment == orig(this.plot.renderers.increment)
this.plot.renderingOrder == orig(this.plot.renderingOrder)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE)
this.plot.renderingOrder.name == orig(this.plot.renderingOrder.name)
this.plot.renderingOrder.name.toString == orig(this.plot.renderingOrder.name.toString)
this.plot.columnRenderingOrder == orig(this.plot.columnRenderingOrder)
org.jfree.chart.util.SortOrder.ASCENDING == orig(org.jfree.chart.util.SortOrder.ASCENDING)
org.jfree.chart.util.SortOrder.DESCENDING == orig(org.jfree.chart.util.SortOrder.DESCENDING)
this.plot.columnRenderingOrder.name == orig(this.plot.columnRenderingOrder.name)
this.plot.columnRenderingOrder.name.toString == orig(this.plot.columnRenderingOrder.name.toString)
this.plot.rowRenderingOrder == orig(this.plot.rowRenderingOrder)
this.plot.rowRenderingOrder.name == orig(this.plot.rowRenderingOrder.name)
this.plot.rowRenderingOrder.name.toString == orig(this.plot.rowRenderingOrder.name.toString)
this.plot.domainGridlinesVisible == orig(this.plot.domainGridlinesVisible)
this.plot.domainGridlinePosition == orig(this.plot.domainGridlinePosition)
org.jfree.chart.axis.CategoryAnchor.START == orig(org.jfree.chart.axis.CategoryAnchor.START)
org.jfree.chart.axis.CategoryAnchor.MIDDLE == orig(org.jfree.chart.axis.CategoryAnchor.MIDDLE)
org.jfree.chart.axis.CategoryAnchor.END == orig(org.jfree.chart.axis.CategoryAnchor.END)
this.plot.domainGridlinePosition.name == orig(this.plot.domainGridlinePosition.name)
this.plot.domainGridlinePosition.name.toString == orig(this.plot.domainGridlinePosition.name.toString)
this.plot.domainGridlineStroke == orig(this.plot.domainGridlineStroke)
this.plot.domainGridlineStroke.getClass().getName() == orig(this.plot.domainGridlineStroke.getClass().getName())
this.plot.domainGridlinePaint == orig(this.plot.domainGridlinePaint)
this.plot.domainGridlinePaint.getClass().getName() == orig(this.plot.domainGridlinePaint.getClass().getName())
this.plot.rangeZeroBaselineVisible == orig(this.plot.rangeZeroBaselineVisible)
this.plot.rangeZeroBaselineStroke == orig(this.plot.rangeZeroBaselineStroke)
this.plot.rangeZeroBaselineStroke.getClass().getName() == orig(this.plot.rangeZeroBaselineStroke.getClass().getName())
this.plot.rangeZeroBaselinePaint == orig(this.plot.rangeZeroBaselinePaint)
this.plot.rangeZeroBaselinePaint.getClass().getName() == orig(this.plot.rangeZeroBaselinePaint.getClass().getName())
this.plot.rangeGridlinesVisible == orig(this.plot.rangeGridlinesVisible)
this.plot.rangeGridlineStroke == orig(this.plot.rangeGridlineStroke)
this.plot.rangeGridlineStroke.getClass().getName() == orig(this.plot.rangeGridlineStroke.getClass().getName())
this.plot.rangeGridlinePaint == orig(this.plot.rangeGridlinePaint)
this.plot.rangeGridlinePaint.getClass().getName() == orig(this.plot.rangeGridlinePaint.getClass().getName())
this.plot.rangeMinorGridlinesVisible == orig(this.plot.rangeMinorGridlinesVisible)
this.plot.rangeMinorGridlineStroke == orig(this.plot.rangeMinorGridlineStroke)
this.plot.rangeMinorGridlineStroke.getClass().getName() == orig(this.plot.rangeMinorGridlineStroke.getClass().getName())
this.plot.rangeMinorGridlinePaint == orig(this.plot.rangeMinorGridlinePaint)
this.plot.rangeMinorGridlinePaint.getClass().getName() == orig(this.plot.rangeMinorGridlinePaint.getClass().getName())
this.plot.anchorValue == orig(this.plot.anchorValue)
this.plot.crosshairDatasetIndex == orig(this.plot.crosshairDatasetIndex)
this.plot.domainCrosshairVisible == orig(this.plot.domainCrosshairVisible)
this.plot.domainCrosshairRowKey == orig(this.plot.domainCrosshairRowKey)
this.plot.domainCrosshairColumnKey == orig(this.plot.domainCrosshairColumnKey)
this.plot.domainCrosshairStroke == orig(this.plot.domainCrosshairStroke)
this.plot.domainCrosshairStroke.getClass().getName() == orig(this.plot.domainCrosshairStroke.getClass().getName())
this.plot.domainCrosshairPaint == orig(this.plot.domainCrosshairPaint)
this.plot.domainCrosshairPaint.getClass().getName() == orig(this.plot.domainCrosshairPaint.getClass().getName())
this.plot.rangeCrosshairVisible == orig(this.plot.rangeCrosshairVisible)
this.plot.rangeCrosshairValue == orig(this.plot.rangeCrosshairValue)
this.plot.rangeCrosshairStroke == orig(this.plot.rangeCrosshairStroke)
this.plot.rangeCrosshairStroke.getClass().getName() == orig(this.plot.rangeCrosshairStroke.getClass().getName())
this.plot.rangeCrosshairPaint == orig(this.plot.rangeCrosshairPaint)
this.plot.rangeCrosshairPaint.getClass().getName() == orig(this.plot.rangeCrosshairPaint.getClass().getName())
this.plot.rangeCrosshairLockedOnData == orig(this.plot.rangeCrosshairLockedOnData)
this.plot.foregroundDomainMarkers == orig(this.plot.foregroundDomainMarkers)
this.plot.foregroundDomainMarkers.getClass().getName() == orig(this.plot.foregroundDomainMarkers.getClass().getName())
this.plot.backgroundDomainMarkers == orig(this.plot.backgroundDomainMarkers)
this.plot.backgroundDomainMarkers.getClass().getName() == orig(this.plot.backgroundDomainMarkers.getClass().getName())
this.plot.foregroundRangeMarkers == orig(this.plot.foregroundRangeMarkers)
this.plot.foregroundRangeMarkers.getClass().getName() == orig(this.plot.foregroundRangeMarkers.getClass().getName())
this.plot.backgroundRangeMarkers == orig(this.plot.backgroundRangeMarkers)
this.plot.backgroundRangeMarkers.getClass().getName() == orig(this.plot.backgroundRangeMarkers.getClass().getName())
this.plot.annotations == orig(this.plot.annotations)
this.plot.annotations[] == orig(this.plot.annotations[])
this.plot.annotations.getClass().getName() == orig(this.plot.annotations.getClass().getName())
this.plot.weight == orig(this.plot.weight)
this.plot.fixedDomainAxisSpace == orig(this.plot.fixedDomainAxisSpace)
this.plot.fixedRangeAxisSpace == orig(this.plot.fixedRangeAxisSpace)
this.plot.fixedLegendItems == orig(this.plot.fixedLegendItems)
this.plot.rangePannable == orig(this.plot.rangePannable)
this.plot.shadowGenerator == orig(this.plot.shadowGenerator)
this.plot.shadowGenerator.getClass().getName() == orig(this.plot.shadowGenerator.getClass().getName())
org.jfree.chart.plot.Plot.ZERO == orig(org.jfree.chart.plot.Plot.ZERO)
org.jfree.chart.plot.Plot.ZERO.getClass().getName() == orig(org.jfree.chart.plot.Plot.ZERO.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_INSETS == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.top == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.top)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.left == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.left)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.right == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.right)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName())
this.plot.parent == orig(this.plot.parent)
org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener == orig(org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener)
this.plot.datasetGroup == orig(this.plot.datasetGroup)
this.plot.noDataMessage == orig(this.plot.noDataMessage)
this.plot.noDataMessageFont == orig(this.plot.noDataMessageFont)
this.plot.noDataMessagePaint == orig(this.plot.noDataMessagePaint)
this.plot.noDataMessagePaint.getClass().getName() == orig(this.plot.noDataMessagePaint.getClass().getName())
this.plot.insets == orig(this.plot.insets)
this.plot.insets.unitType == orig(this.plot.insets.unitType)
this.plot.insets.top == orig(this.plot.insets.top)
this.plot.insets.left == orig(this.plot.insets.left)
this.plot.insets.bottom == orig(this.plot.insets.bottom)
this.plot.insets.right == orig(this.plot.insets.right)
this.plot.outlineVisible == orig(this.plot.outlineVisible)
this.plot.outlineStroke == orig(this.plot.outlineStroke)
this.plot.outlineStroke.getClass().getName() == orig(this.plot.outlineStroke.getClass().getName())
this.plot.outlinePaint == orig(this.plot.outlinePaint)
this.plot.outlinePaint.getClass().getName() == orig(this.plot.outlinePaint.getClass().getName())
this.plot.backgroundPaint == orig(this.plot.backgroundPaint)
this.plot.backgroundPaint.getClass().getName() == orig(this.plot.backgroundPaint.getClass().getName())
this.plot.backgroundImage == orig(this.plot.backgroundImage)
this.plot.backgroundImageAlignment == orig(this.plot.backgroundImageAlignment)
this.plot.backgroundImageAlpha == orig(this.plot.backgroundImageAlpha)
this.plot.foregroundAlpha == orig(this.plot.foregroundAlpha)
this.plot.backgroundAlpha == orig(this.plot.backgroundAlpha)
this.plot.drawingSupplier == orig(this.plot.drawingSupplier)
this.plot.drawingSupplier.getClass().getName() == orig(this.plot.drawingSupplier.getClass().getName())
this.plot.listenerList == orig(this.plot.listenerList)
this.plot.notify == orig(this.plot.notify)
this.itemLabelGeneratorList == orig(this.itemLabelGeneratorList)
this.itemLabelGeneratorList.objects == orig(this.itemLabelGeneratorList.objects)
this.itemLabelGeneratorList.objects.getClass().getName() == orig(this.itemLabelGeneratorList.objects.getClass().getName())
this.itemLabelGeneratorList.objects[] == orig(this.itemLabelGeneratorList.objects[])
this.itemLabelGeneratorList.size == orig(this.itemLabelGeneratorList.size)
this.itemLabelGeneratorList.increment == orig(this.itemLabelGeneratorList.increment)
this.baseItemLabelGenerator == orig(this.baseItemLabelGenerator)
this.toolTipGeneratorList == orig(this.toolTipGeneratorList)
this.toolTipGeneratorList.objects == orig(this.toolTipGeneratorList.objects)
this.toolTipGeneratorList.objects.getClass().getName() == orig(this.toolTipGeneratorList.objects.getClass().getName())
this.toolTipGeneratorList.objects[] == orig(this.toolTipGeneratorList.objects[])
this.toolTipGeneratorList.size == orig(this.toolTipGeneratorList.size)
this.toolTipGeneratorList.increment == orig(this.toolTipGeneratorList.increment)
this.baseToolTipGenerator == orig(this.baseToolTipGenerator)
this.urlGeneratorList == orig(this.urlGeneratorList)
this.urlGeneratorList.objects == orig(this.urlGeneratorList.objects)
this.urlGeneratorList.objects.getClass().getName() == orig(this.urlGeneratorList.objects.getClass().getName())
this.urlGeneratorList.objects[] == orig(this.urlGeneratorList.objects[])
this.urlGeneratorList.size == orig(this.urlGeneratorList.size)
this.urlGeneratorList.increment == orig(this.urlGeneratorList.increment)
this.baseURLGenerator == orig(this.baseURLGenerator)
this.legendItemLabelGenerator == orig(this.legendItemLabelGenerator)
this.legendItemLabelGenerator.getClass().getName() == orig(this.legendItemLabelGenerator.getClass().getName())
this.legendItemToolTipGenerator == orig(this.legendItemToolTipGenerator)
this.legendItemURLGenerator == orig(this.legendItemURLGenerator)
this.backgroundAnnotations == orig(this.backgroundAnnotations)
this.backgroundAnnotations[] == orig(this.backgroundAnnotations[])
this.backgroundAnnotations.getClass().getName() == orig(this.backgroundAnnotations.getClass().getName())
this.foregroundAnnotations == orig(this.foregroundAnnotations)
this.foregroundAnnotations[] == orig(this.foregroundAnnotations[])
this.foregroundAnnotations.getClass().getName() == orig(this.foregroundAnnotations.getClass().getName())
this.rowCount == orig(this.rowCount)
this.columnCount == orig(this.columnCount)
org.jfree.chart.renderer.AbstractRenderer.ZERO == orig(org.jfree.chart.renderer.AbstractRenderer.ZERO)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_FONT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_FONT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT.getClass().getName())
this.seriesVisibleList == orig(this.seriesVisibleList)
this.seriesVisibleList.objects == orig(this.seriesVisibleList.objects)
this.seriesVisibleList.objects.getClass().getName() == orig(this.seriesVisibleList.objects.getClass().getName())
this.seriesVisibleList.objects[] == orig(this.seriesVisibleList.objects[])
this.seriesVisibleList.size == orig(this.seriesVisibleList.size)
this.seriesVisibleList.increment == orig(this.seriesVisibleList.increment)
this.baseSeriesVisible == orig(this.baseSeriesVisible)
this.seriesVisibleInLegendList == orig(this.seriesVisibleInLegendList)
this.seriesVisibleInLegendList.objects == orig(this.seriesVisibleInLegendList.objects)
this.seriesVisibleInLegendList.objects.getClass().getName() == orig(this.seriesVisibleInLegendList.objects.getClass().getName())
this.seriesVisibleInLegendList.objects[] == orig(this.seriesVisibleInLegendList.objects[])
this.seriesVisibleInLegendList.size == orig(this.seriesVisibleInLegendList.size)
this.seriesVisibleInLegendList.increment == orig(this.seriesVisibleInLegendList.increment)
this.baseSeriesVisibleInLegend == orig(this.baseSeriesVisibleInLegend)
this.paintList == orig(this.paintList)
this.paintList.objects == orig(this.paintList.objects)
this.paintList.objects.getClass().getName() == orig(this.paintList.objects.getClass().getName())
this.paintList.objects[] == orig(this.paintList.objects[])
this.paintList.size == orig(this.paintList.size)
this.paintList.increment == orig(this.paintList.increment)
this.autoPopulateSeriesPaint == orig(this.autoPopulateSeriesPaint)
this.basePaint == orig(this.basePaint)
this.basePaint.getClass().getName() == orig(this.basePaint.getClass().getName())
this.fillPaintList == orig(this.fillPaintList)
this.fillPaintList.objects == orig(this.fillPaintList.objects)
this.fillPaintList.objects.getClass().getName() == orig(this.fillPaintList.objects.getClass().getName())
this.fillPaintList.objects[] == orig(this.fillPaintList.objects[])
this.fillPaintList.size == orig(this.fillPaintList.size)
this.fillPaintList.increment == orig(this.fillPaintList.increment)
this.autoPopulateSeriesFillPaint == orig(this.autoPopulateSeriesFillPaint)
this.baseFillPaint == orig(this.baseFillPaint)
this.baseFillPaint.getClass().getName() == orig(this.baseFillPaint.getClass().getName())
this.outlinePaintList == orig(this.outlinePaintList)
this.outlinePaintList.objects == orig(this.outlinePaintList.objects)
this.outlinePaintList.objects.getClass().getName() == orig(this.outlinePaintList.objects.getClass().getName())
this.outlinePaintList.objects[] == orig(this.outlinePaintList.objects[])
this.outlinePaintList.size == orig(this.outlinePaintList.size)
this.outlinePaintList.increment == orig(this.outlinePaintList.increment)
this.autoPopulateSeriesOutlinePaint == orig(this.autoPopulateSeriesOutlinePaint)
this.baseOutlinePaint == orig(this.baseOutlinePaint)
this.baseOutlinePaint.getClass().getName() == orig(this.baseOutlinePaint.getClass().getName())
this.strokeList == orig(this.strokeList)
this.strokeList.objects == orig(this.strokeList.objects)
this.strokeList.objects.getClass().getName() == orig(this.strokeList.objects.getClass().getName())
this.strokeList.objects[] == orig(this.strokeList.objects[])
this.strokeList.size == orig(this.strokeList.size)
this.strokeList.increment == orig(this.strokeList.increment)
this.autoPopulateSeriesStroke == orig(this.autoPopulateSeriesStroke)
this.baseStroke == orig(this.baseStroke)
this.baseStroke.getClass().getName() == orig(this.baseStroke.getClass().getName())
this.outlineStrokeList == orig(this.outlineStrokeList)
this.outlineStrokeList.objects == orig(this.outlineStrokeList.objects)
this.outlineStrokeList.objects.getClass().getName() == orig(this.outlineStrokeList.objects.getClass().getName())
this.outlineStrokeList.objects[] == orig(this.outlineStrokeList.objects[])
this.outlineStrokeList.size == orig(this.outlineStrokeList.size)
this.outlineStrokeList.increment == orig(this.outlineStrokeList.increment)
this.baseOutlineStroke == orig(this.baseOutlineStroke)
this.baseOutlineStroke.getClass().getName() == orig(this.baseOutlineStroke.getClass().getName())
this.autoPopulateSeriesOutlineStroke == orig(this.autoPopulateSeriesOutlineStroke)
this.shapeList == orig(this.shapeList)
this.shapeList.objects == orig(this.shapeList.objects)
this.shapeList.objects.getClass().getName() == orig(this.shapeList.objects.getClass().getName())
this.shapeList.objects[] == orig(this.shapeList.objects[])
this.shapeList.size == orig(this.shapeList.size)
this.shapeList.increment == orig(this.shapeList.increment)
this.autoPopulateSeriesShape == orig(this.autoPopulateSeriesShape)
this.baseShape == orig(this.baseShape)
this.baseShape.getClass().getName() == orig(this.baseShape.getClass().getName())
this.itemLabelsVisibleList == orig(this.itemLabelsVisibleList)
this.itemLabelsVisibleList.objects == orig(this.itemLabelsVisibleList.objects)
this.itemLabelsVisibleList.objects.getClass().getName() == orig(this.itemLabelsVisibleList.objects.getClass().getName())
this.itemLabelsVisibleList.objects[] == orig(this.itemLabelsVisibleList.objects[])
this.itemLabelsVisibleList.size == orig(this.itemLabelsVisibleList.size)
this.itemLabelsVisibleList.increment == orig(this.itemLabelsVisibleList.increment)
this.baseItemLabelsVisible == orig(this.baseItemLabelsVisible)
this.itemLabelFontList == orig(this.itemLabelFontList)
this.itemLabelFontList.objects == orig(this.itemLabelFontList.objects)
this.itemLabelFontList.objects.getClass().getName() == orig(this.itemLabelFontList.objects.getClass().getName())
this.itemLabelFontList.objects[] == orig(this.itemLabelFontList.objects[])
this.itemLabelFontList.size == orig(this.itemLabelFontList.size)
this.itemLabelFontList.increment == orig(this.itemLabelFontList.increment)
this.baseItemLabelFont == orig(this.baseItemLabelFont)
this.itemLabelPaintList == orig(this.itemLabelPaintList)
this.itemLabelPaintList.objects == orig(this.itemLabelPaintList.objects)
this.itemLabelPaintList.objects.getClass().getName() == orig(this.itemLabelPaintList.objects.getClass().getName())
this.itemLabelPaintList.objects[] == orig(this.itemLabelPaintList.objects[])
this.itemLabelPaintList.size == orig(this.itemLabelPaintList.size)
this.itemLabelPaintList.increment == orig(this.itemLabelPaintList.increment)
this.baseItemLabelPaint == orig(this.baseItemLabelPaint)
this.baseItemLabelPaint.getClass().getName() == orig(this.baseItemLabelPaint.getClass().getName())
this.positiveItemLabelPositionList == orig(this.positiveItemLabelPositionList)
this.positiveItemLabelPositionList.objects == orig(this.positiveItemLabelPositionList.objects)
this.positiveItemLabelPositionList.objects.getClass().getName() == orig(this.positiveItemLabelPositionList.objects.getClass().getName())
this.positiveItemLabelPositionList.objects[] == orig(this.positiveItemLabelPositionList.objects[])
this.positiveItemLabelPositionList.size == orig(this.positiveItemLabelPositionList.size)
this.positiveItemLabelPositionList.increment == orig(this.positiveItemLabelPositionList.increment)
this.basePositiveItemLabelPosition == orig(this.basePositiveItemLabelPosition)
this.basePositiveItemLabelPosition.itemLabelAnchor == orig(this.basePositiveItemLabelPosition.itemLabelAnchor)
org.jfree.chart.labels.ItemLabelAnchor.CENTER == orig(org.jfree.chart.labels.ItemLabelAnchor.CENTER)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE1 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE1)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE2 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE2)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE3 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE3)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE4 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE4)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE5 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE5)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE6 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE6)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE7 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE7)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE8 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE8)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE9 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE9)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE10 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE10)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE11 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE11)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE12 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE12)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12)
this.basePositiveItemLabelPosition.itemLabelAnchor.name == orig(this.basePositiveItemLabelPosition.itemLabelAnchor.name)
this.basePositiveItemLabelPosition.itemLabelAnchor.name.toString == orig(this.basePositiveItemLabelPosition.itemLabelAnchor.name.toString)
this.basePositiveItemLabelPosition.textAnchor == orig(this.basePositiveItemLabelPosition.textAnchor)
org.jfree.chart.text.TextAnchor.TOP_LEFT == orig(org.jfree.chart.text.TextAnchor.TOP_LEFT)
org.jfree.chart.text.TextAnchor.TOP_CENTER == orig(org.jfree.chart.text.TextAnchor.TOP_CENTER)
org.jfree.chart.text.TextAnchor.TOP_RIGHT == orig(org.jfree.chart.text.TextAnchor.TOP_RIGHT)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT)
org.jfree.chart.text.TextAnchor.CENTER_LEFT == orig(org.jfree.chart.text.TextAnchor.CENTER_LEFT)
org.jfree.chart.text.TextAnchor.CENTER == orig(org.jfree.chart.text.TextAnchor.CENTER)
org.jfree.chart.text.TextAnchor.CENTER_RIGHT == orig(org.jfree.chart.text.TextAnchor.CENTER_RIGHT)
org.jfree.chart.text.TextAnchor.BASELINE_LEFT == orig(org.jfree.chart.text.TextAnchor.BASELINE_LEFT)
org.jfree.chart.text.TextAnchor.BASELINE_CENTER == orig(org.jfree.chart.text.TextAnchor.BASELINE_CENTER)
org.jfree.chart.text.TextAnchor.BASELINE_RIGHT == orig(org.jfree.chart.text.TextAnchor.BASELINE_RIGHT)
org.jfree.chart.text.TextAnchor.BOTTOM_LEFT == orig(org.jfree.chart.text.TextAnchor.BOTTOM_LEFT)
org.jfree.chart.text.TextAnchor.BOTTOM_CENTER == orig(org.jfree.chart.text.TextAnchor.BOTTOM_CENTER)
org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT == orig(org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT)
this.basePositiveItemLabelPosition.textAnchor.name == orig(this.basePositiveItemLabelPosition.textAnchor.name)
this.basePositiveItemLabelPosition.textAnchor.name.toString == orig(this.basePositiveItemLabelPosition.textAnchor.name.toString)
this.basePositiveItemLabelPosition.rotationAnchor == orig(this.basePositiveItemLabelPosition.rotationAnchor)
this.basePositiveItemLabelPosition.rotationAnchor.name == orig(this.basePositiveItemLabelPosition.rotationAnchor.name)
this.basePositiveItemLabelPosition.rotationAnchor.name.toString == orig(this.basePositiveItemLabelPosition.rotationAnchor.name.toString)
this.basePositiveItemLabelPosition.angle == orig(this.basePositiveItemLabelPosition.angle)
this.negativeItemLabelPositionList == orig(this.negativeItemLabelPositionList)
this.negativeItemLabelPositionList.objects == orig(this.negativeItemLabelPositionList.objects)
this.negativeItemLabelPositionList.objects.getClass().getName() == orig(this.negativeItemLabelPositionList.objects.getClass().getName())
this.negativeItemLabelPositionList.objects[] == orig(this.negativeItemLabelPositionList.objects[])
this.negativeItemLabelPositionList.size == orig(this.negativeItemLabelPositionList.size)
this.negativeItemLabelPositionList.increment == orig(this.negativeItemLabelPositionList.increment)
this.baseNegativeItemLabelPosition == orig(this.baseNegativeItemLabelPosition)
this.baseNegativeItemLabelPosition.itemLabelAnchor == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor)
this.baseNegativeItemLabelPosition.itemLabelAnchor.name == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor.name)
this.baseNegativeItemLabelPosition.itemLabelAnchor.name.toString == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor.name.toString)
this.baseNegativeItemLabelPosition.textAnchor == orig(this.baseNegativeItemLabelPosition.textAnchor)
this.baseNegativeItemLabelPosition.textAnchor.name == orig(this.baseNegativeItemLabelPosition.textAnchor.name)
this.baseNegativeItemLabelPosition.textAnchor.name.toString == orig(this.baseNegativeItemLabelPosition.textAnchor.name.toString)
this.baseNegativeItemLabelPosition.rotationAnchor == orig(this.baseNegativeItemLabelPosition.rotationAnchor)
this.baseNegativeItemLabelPosition.rotationAnchor.name == orig(this.baseNegativeItemLabelPosition.rotationAnchor.name)
this.baseNegativeItemLabelPosition.rotationAnchor.name.toString == orig(this.baseNegativeItemLabelPosition.rotationAnchor.name.toString)
this.baseNegativeItemLabelPosition.angle == orig(this.baseNegativeItemLabelPosition.angle)
this.itemLabelAnchorOffset == orig(this.itemLabelAnchorOffset)
this.createEntitiesList == orig(this.createEntitiesList)
this.createEntitiesList.objects == orig(this.createEntitiesList.objects)
this.createEntitiesList.objects.getClass().getName() == orig(this.createEntitiesList.objects.getClass().getName())
this.createEntitiesList.objects[] == orig(this.createEntitiesList.objects[])
this.createEntitiesList.size == orig(this.createEntitiesList.size)
this.createEntitiesList.increment == orig(this.createEntitiesList.increment)
this.baseCreateEntities == orig(this.baseCreateEntities)
this.legendShapeList == orig(this.legendShapeList)
this.legendShapeList.objects == orig(this.legendShapeList.objects)
this.legendShapeList.objects.getClass().getName() == orig(this.legendShapeList.objects.getClass().getName())
this.legendShapeList.objects[] == orig(this.legendShapeList.objects[])
this.legendShapeList.size == orig(this.legendShapeList.size)
this.legendShapeList.increment == orig(this.legendShapeList.increment)
this.baseLegendShape == orig(this.baseLegendShape)
this.treatLegendShapeAsLine == orig(this.treatLegendShapeAsLine)
this.legendTextFont == orig(this.legendTextFont)
this.legendTextFont.objects == orig(this.legendTextFont.objects)
this.legendTextFont.objects.getClass().getName() == orig(this.legendTextFont.objects.getClass().getName())
this.legendTextFont.objects[] == orig(this.legendTextFont.objects[])
this.legendTextFont.size == orig(this.legendTextFont.size)
this.legendTextFont.increment == orig(this.legendTextFont.increment)
this.baseLegendTextFont == orig(this.baseLegendTextFont)
this.legendTextPaint == orig(this.legendTextPaint)
this.legendTextPaint.objects == orig(this.legendTextPaint.objects)
this.legendTextPaint.objects.getClass().getName() == orig(this.legendTextPaint.objects.getClass().getName())
this.legendTextPaint.objects[] == orig(this.legendTextPaint.objects[])
this.legendTextPaint.size == orig(this.legendTextPaint.size)
this.legendTextPaint.increment == orig(this.legendTextPaint.increment)
this.baseLegendTextPaint == orig(this.baseLegendTextPaint)
this.dataBoundsIncludesVisibleSeriesOnly == orig(this.dataBoundsIncludesVisibleSeriesOnly)
this.defaultEntityRadius == orig(this.defaultEntityRadius)
this.listenerList == orig(this.listenerList)
this.selectedItemAttributes == orig(this.selectedItemAttributes)
this.selectedItemAttributes.allowNull == orig(this.selectedItemAttributes.allowNull)
this.selectedItemAttributes.paintList == orig(this.selectedItemAttributes.paintList)
this.selectedItemAttributes.paintList.objects == orig(this.selectedItemAttributes.paintList.objects)
this.selectedItemAttributes.paintList.objects.getClass().getName() == orig(this.selectedItemAttributes.paintList.objects.getClass().getName())
this.selectedItemAttributes.paintList.objects[] == orig(this.selectedItemAttributes.paintList.objects[])
this.selectedItemAttributes.paintList.size == orig(this.selectedItemAttributes.paintList.size)
this.selectedItemAttributes.paintList.increment == orig(this.selectedItemAttributes.paintList.increment)
this.selectedItemAttributes.defaultPaint == orig(this.selectedItemAttributes.defaultPaint)
this.selectedItemAttributes.strokeList == orig(this.selectedItemAttributes.strokeList)
this.selectedItemAttributes.strokeList.objects == orig(this.selectedItemAttributes.strokeList.objects)
this.selectedItemAttributes.strokeList.objects.getClass().getName() == orig(this.selectedItemAttributes.strokeList.objects.getClass().getName())
this.selectedItemAttributes.strokeList.objects[] == orig(this.selectedItemAttributes.strokeList.objects[])
this.selectedItemAttributes.strokeList.size == orig(this.selectedItemAttributes.strokeList.size)
this.selectedItemAttributes.strokeList.increment == orig(this.selectedItemAttributes.strokeList.increment)
this.selectedItemAttributes.defaultStroke == orig(this.selectedItemAttributes.defaultStroke)
this.selectedItemAttributes.shapeList == orig(this.selectedItemAttributes.shapeList)
this.selectedItemAttributes.shapeList.objects == orig(this.selectedItemAttributes.shapeList.objects)
this.selectedItemAttributes.shapeList.objects.getClass().getName() == orig(this.selectedItemAttributes.shapeList.objects.getClass().getName())
this.selectedItemAttributes.shapeList.objects[] == orig(this.selectedItemAttributes.shapeList.objects[])
this.selectedItemAttributes.shapeList.size == orig(this.selectedItemAttributes.shapeList.size)
this.selectedItemAttributes.shapeList.increment == orig(this.selectedItemAttributes.shapeList.increment)
this.selectedItemAttributes.defaultShape == orig(this.selectedItemAttributes.defaultShape)
this.selectedItemAttributes.fillPaintList == orig(this.selectedItemAttributes.fillPaintList)
this.selectedItemAttributes.fillPaintList.objects == orig(this.selectedItemAttributes.fillPaintList.objects)
this.selectedItemAttributes.fillPaintList.objects.getClass().getName() == orig(this.selectedItemAttributes.fillPaintList.objects.getClass().getName())
this.selectedItemAttributes.fillPaintList.objects[] == orig(this.selectedItemAttributes.fillPaintList.objects[])
this.selectedItemAttributes.fillPaintList.size == orig(this.selectedItemAttributes.fillPaintList.size)
this.selectedItemAttributes.fillPaintList.increment == orig(this.selectedItemAttributes.fillPaintList.increment)
this.selectedItemAttributes.defaultFillPaint == orig(this.selectedItemAttributes.defaultFillPaint)
this.selectedItemAttributes.defaultFillPaint.getClass().getName() == orig(this.selectedItemAttributes.defaultFillPaint.getClass().getName())
this.selectedItemAttributes.outlinePaintList == orig(this.selectedItemAttributes.outlinePaintList)
this.selectedItemAttributes.outlinePaintList.objects == orig(this.selectedItemAttributes.outlinePaintList.objects)
this.selectedItemAttributes.outlinePaintList.objects.getClass().getName() == orig(this.selectedItemAttributes.outlinePaintList.objects.getClass().getName())
this.selectedItemAttributes.outlinePaintList.objects[] == orig(this.selectedItemAttributes.outlinePaintList.objects[])
this.selectedItemAttributes.outlinePaintList.size == orig(this.selectedItemAttributes.outlinePaintList.size)
this.selectedItemAttributes.outlinePaintList.increment == orig(this.selectedItemAttributes.outlinePaintList.increment)
this.selectedItemAttributes.defaultOutlinePaint == orig(this.selectedItemAttributes.defaultOutlinePaint)
this.selectedItemAttributes.outlineStrokeList == orig(this.selectedItemAttributes.outlineStrokeList)
this.selectedItemAttributes.defaultOutlineStroke == orig(this.selectedItemAttributes.defaultOutlineStroke)
this.selectedItemAttributes.labelsVisibleList == orig(this.selectedItemAttributes.labelsVisibleList)
this.selectedItemAttributes.defaultLabelVisible == orig(this.selectedItemAttributes.defaultLabelVisible)
this.selectedItemAttributes.labelFontList == orig(this.selectedItemAttributes.labelFontList)
this.selectedItemAttributes.defaultLabelFont == orig(this.selectedItemAttributes.defaultLabelFont)
this.selectedItemAttributes.labelPaintList == orig(this.selectedItemAttributes.labelPaintList)
this.selectedItemAttributes.defaultLabelPaint == orig(this.selectedItemAttributes.defaultLabelPaint)
this.selectedItemAttributes.positionItemLabelPositionList == orig(this.selectedItemAttributes.positionItemLabelPositionList)
this.selectedItemAttributes.defaultPositiveItemLabelPosition == orig(this.selectedItemAttributes.defaultPositiveItemLabelPosition)
this.selectedItemAttributes.negativeItemLabelPositionList == orig(this.selectedItemAttributes.negativeItemLabelPositionList)
this.selectedItemAttributes.defaultNegativeItemLabelPosition == orig(this.selectedItemAttributes.defaultNegativeItemLabelPosition)
this.selectedItemAttributes.createEntityList == orig(this.selectedItemAttributes.createEntityList)
this.selectedItemAttributes.defaultCreateEntity == orig(this.selectedItemAttributes.defaultCreateEntity)
org.jfree.chart.renderer.AbstractRenderer.ADJ == orig(org.jfree.chart.renderer.AbstractRenderer.ADJ)
org.jfree.chart.renderer.AbstractRenderer.OPP == orig(org.jfree.chart.renderer.AbstractRenderer.OPP)
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener == orig(org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener)
this.plot has only one value
this.paintList.objects[] has only one value, of length 8
this.paintList.objects[].getClass().getName() == [java.awt.Color, null, null, null, null, null, null, null]
this.paintList.size == 1
this.strokeList.objects[] contains only nulls and has only one value, of length 8
this.strokeList.objects[] elements == null
this.strokeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.strokeList.objects[].getClass().getName() elements == null
this.strokeList.size == 0
this.shapeList.objects[] has only one value, of length 8
this.shapeList.objects[].getClass().getName() == [java.awt.geom.Rectangle2D.Double, null, null, null, null, null, null, null]
this.shapeList.size == 1
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener has only one value
return == true
===========================================================================
org.jfree.chart.renderer.category.LineAndShapeRenderer.getItemShapeFilled(int, int):::EXIT;condition="return == true"
===========================================================================
org.jfree.chart.renderer.category.LineAndShapeRenderer.getItemShapeVisible(int, int):::ENTER
this.plot has only one value
this.paintList.objects[] has only one value, of length 8
this.paintList.objects[].getClass().getName() == [java.awt.Color, null, null, null, null, null, null, null]
this.paintList.size == 1
this.strokeList.objects[] contains only nulls and has only one value, of length 8
this.strokeList.objects[] elements == null
this.strokeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.strokeList.objects[].getClass().getName() elements == null
this.strokeList.size == 0
this.shapeList.objects[] has only one value, of length 8
this.shapeList.objects[].getClass().getName() == [java.awt.geom.Rectangle2D.Double, null, null, null, null, null, null, null]
this.shapeList.size == 1
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener has only one value
series == 0
item == 0
===========================================================================
org.jfree.chart.renderer.category.LineAndShapeRenderer.getItemShapeVisible(int, int):::EXIT328
===========================================================================
org.jfree.chart.renderer.category.LineAndShapeRenderer.getItemShapeVisible(int, int):::EXIT328;condition="return == true"
===========================================================================
org.jfree.chart.renderer.category.LineAndShapeRenderer.getItemShapeVisible(int, int):::EXIT
this.seriesLinesVisible == orig(this.seriesLinesVisible)
this.seriesLinesVisible.objects == orig(this.seriesLinesVisible.objects)
this.seriesLinesVisible.objects.getClass().getName() == orig(this.seriesLinesVisible.objects.getClass().getName())
this.seriesLinesVisible.objects[] == orig(this.seriesLinesVisible.objects[])
this.seriesLinesVisible.size == orig(this.seriesLinesVisible.size)
this.seriesLinesVisible.increment == orig(this.seriesLinesVisible.increment)
this.baseLinesVisible == orig(this.baseLinesVisible)
this.seriesShapesVisible == orig(this.seriesShapesVisible)
this.seriesShapesVisible.objects == orig(this.seriesShapesVisible.objects)
this.seriesShapesVisible.objects.getClass().getName() == orig(this.seriesShapesVisible.objects.getClass().getName())
this.seriesShapesVisible.objects[] == orig(this.seriesShapesVisible.objects[])
this.seriesShapesVisible.size == orig(this.seriesShapesVisible.size)
this.seriesShapesVisible.increment == orig(this.seriesShapesVisible.increment)
this.baseShapesVisible == orig(this.baseShapesVisible)
this.seriesShapesFilled == orig(this.seriesShapesFilled)
this.seriesShapesFilled.objects == orig(this.seriesShapesFilled.objects)
this.seriesShapesFilled.objects.getClass().getName() == orig(this.seriesShapesFilled.objects.getClass().getName())
this.seriesShapesFilled.objects[] == orig(this.seriesShapesFilled.objects[])
this.seriesShapesFilled.size == orig(this.seriesShapesFilled.size)
this.seriesShapesFilled.increment == orig(this.seriesShapesFilled.increment)
this.baseShapesFilled == orig(this.baseShapesFilled)
this.useFillPaint == orig(this.useFillPaint)
this.drawOutlines == orig(this.drawOutlines)
this.useOutlinePaint == orig(this.useOutlinePaint)
this.useSeriesOffset == orig(this.useSeriesOffset)
this.itemMargin == orig(this.itemMargin)
this.plot == orig(this.plot)
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE)
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_VALUE_LABEL_FONT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_VALUE_LABEL_FONT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT.getClass().getName())
org.jfree.chart.plot.CategoryPlot.localizationResources == orig(org.jfree.chart.plot.CategoryPlot.localizationResources)
org.jfree.chart.plot.CategoryPlot.localizationResources.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.localizationResources.getClass().getName())
this.plot.orientation == orig(this.plot.orientation)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL)
org.jfree.chart.plot.PlotOrientation.VERTICAL == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL)
this.plot.orientation.name == orig(this.plot.orientation.name)
this.plot.orientation.name.toString == orig(this.plot.orientation.name.toString)
this.plot.axisOffset == orig(this.plot.axisOffset)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS)
this.plot.axisOffset.unitType == orig(this.plot.axisOffset.unitType)
this.plot.axisOffset.top == orig(this.plot.axisOffset.top)
this.plot.axisOffset.left == orig(this.plot.axisOffset.left)
this.plot.axisOffset.bottom == orig(this.plot.axisOffset.bottom)
this.plot.axisOffset.right == orig(this.plot.axisOffset.right)
this.plot.domainAxes == orig(this.plot.domainAxes)
this.plot.domainAxes.objects == orig(this.plot.domainAxes.objects)
this.plot.domainAxes.objects.getClass().getName() == orig(this.plot.domainAxes.objects.getClass().getName())
this.plot.domainAxes.objects[] == orig(this.plot.domainAxes.objects[])
this.plot.domainAxes.size == orig(this.plot.domainAxes.size)
this.plot.domainAxes.increment == orig(this.plot.domainAxes.increment)
this.plot.domainAxisLocations == orig(this.plot.domainAxisLocations)
this.plot.domainAxisLocations.objects == orig(this.plot.domainAxisLocations.objects)
this.plot.domainAxisLocations.objects.getClass().getName() == orig(this.plot.domainAxisLocations.objects.getClass().getName())
this.plot.domainAxisLocations.objects[] == orig(this.plot.domainAxisLocations.objects[])
this.plot.domainAxisLocations.size == orig(this.plot.domainAxisLocations.size)
this.plot.domainAxisLocations.increment == orig(this.plot.domainAxisLocations.increment)
this.plot.drawSharedDomainAxis == orig(this.plot.drawSharedDomainAxis)
this.plot.rangeAxes == orig(this.plot.rangeAxes)
this.plot.rangeAxes.objects == orig(this.plot.rangeAxes.objects)
this.plot.rangeAxes.objects.getClass().getName() == orig(this.plot.rangeAxes.objects.getClass().getName())
this.plot.rangeAxes.objects[] == orig(this.plot.rangeAxes.objects[])
this.plot.rangeAxes.size == orig(this.plot.rangeAxes.size)
this.plot.rangeAxes.increment == orig(this.plot.rangeAxes.increment)
this.plot.rangeAxisLocations == orig(this.plot.rangeAxisLocations)
this.plot.rangeAxisLocations.objects == orig(this.plot.rangeAxisLocations.objects)
this.plot.rangeAxisLocations.objects.getClass().getName() == orig(this.plot.rangeAxisLocations.objects.getClass().getName())
this.plot.rangeAxisLocations.objects[] == orig(this.plot.rangeAxisLocations.objects[])
this.plot.rangeAxisLocations.size == orig(this.plot.rangeAxisLocations.size)
this.plot.rangeAxisLocations.increment == orig(this.plot.rangeAxisLocations.increment)
this.plot.datasets == orig(this.plot.datasets)
this.plot.datasets.objects == orig(this.plot.datasets.objects)
this.plot.datasets.objects.getClass().getName() == orig(this.plot.datasets.objects.getClass().getName())
this.plot.datasets.objects[] == orig(this.plot.datasets.objects[])
this.plot.datasets.size == orig(this.plot.datasets.size)
this.plot.datasets.increment == orig(this.plot.datasets.increment)
this.plot.datasetToDomainAxesMap == orig(this.plot.datasetToDomainAxesMap)
this.plot.datasetToRangeAxesMap == orig(this.plot.datasetToRangeAxesMap)
this.plot.renderers == orig(this.plot.renderers)
this.plot.renderers.objects == orig(this.plot.renderers.objects)
this.plot.renderers.objects.getClass().getName() == orig(this.plot.renderers.objects.getClass().getName())
this.plot.renderers.objects[] == orig(this.plot.renderers.objects[])
this.plot.renderers.size == orig(this.plot.renderers.size)
this.plot.renderers.increment == orig(this.plot.renderers.increment)
this.plot.renderingOrder == orig(this.plot.renderingOrder)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE)
this.plot.renderingOrder.name == orig(this.plot.renderingOrder.name)
this.plot.renderingOrder.name.toString == orig(this.plot.renderingOrder.name.toString)
this.plot.columnRenderingOrder == orig(this.plot.columnRenderingOrder)
org.jfree.chart.util.SortOrder.ASCENDING == orig(org.jfree.chart.util.SortOrder.ASCENDING)
org.jfree.chart.util.SortOrder.DESCENDING == orig(org.jfree.chart.util.SortOrder.DESCENDING)
this.plot.columnRenderingOrder.name == orig(this.plot.columnRenderingOrder.name)
this.plot.columnRenderingOrder.name.toString == orig(this.plot.columnRenderingOrder.name.toString)
this.plot.rowRenderingOrder == orig(this.plot.rowRenderingOrder)
this.plot.rowRenderingOrder.name == orig(this.plot.rowRenderingOrder.name)
this.plot.rowRenderingOrder.name.toString == orig(this.plot.rowRenderingOrder.name.toString)
this.plot.domainGridlinesVisible == orig(this.plot.domainGridlinesVisible)
this.plot.domainGridlinePosition == orig(this.plot.domainGridlinePosition)
org.jfree.chart.axis.CategoryAnchor.START == orig(org.jfree.chart.axis.CategoryAnchor.START)
org.jfree.chart.axis.CategoryAnchor.MIDDLE == orig(org.jfree.chart.axis.CategoryAnchor.MIDDLE)
org.jfree.chart.axis.CategoryAnchor.END == orig(org.jfree.chart.axis.CategoryAnchor.END)
this.plot.domainGridlinePosition.name == orig(this.plot.domainGridlinePosition.name)
this.plot.domainGridlinePosition.name.toString == orig(this.plot.domainGridlinePosition.name.toString)
this.plot.domainGridlineStroke == orig(this.plot.domainGridlineStroke)
this.plot.domainGridlineStroke.getClass().getName() == orig(this.plot.domainGridlineStroke.getClass().getName())
this.plot.domainGridlinePaint == orig(this.plot.domainGridlinePaint)
this.plot.domainGridlinePaint.getClass().getName() == orig(this.plot.domainGridlinePaint.getClass().getName())
this.plot.rangeZeroBaselineVisible == orig(this.plot.rangeZeroBaselineVisible)
this.plot.rangeZeroBaselineStroke == orig(this.plot.rangeZeroBaselineStroke)
this.plot.rangeZeroBaselineStroke.getClass().getName() == orig(this.plot.rangeZeroBaselineStroke.getClass().getName())
this.plot.rangeZeroBaselinePaint == orig(this.plot.rangeZeroBaselinePaint)
this.plot.rangeZeroBaselinePaint.getClass().getName() == orig(this.plot.rangeZeroBaselinePaint.getClass().getName())
this.plot.rangeGridlinesVisible == orig(this.plot.rangeGridlinesVisible)
this.plot.rangeGridlineStroke == orig(this.plot.rangeGridlineStroke)
this.plot.rangeGridlineStroke.getClass().getName() == orig(this.plot.rangeGridlineStroke.getClass().getName())
this.plot.rangeGridlinePaint == orig(this.plot.rangeGridlinePaint)
this.plot.rangeGridlinePaint.getClass().getName() == orig(this.plot.rangeGridlinePaint.getClass().getName())
this.plot.rangeMinorGridlinesVisible == orig(this.plot.rangeMinorGridlinesVisible)
this.plot.rangeMinorGridlineStroke == orig(this.plot.rangeMinorGridlineStroke)
this.plot.rangeMinorGridlineStroke.getClass().getName() == orig(this.plot.rangeMinorGridlineStroke.getClass().getName())
this.plot.rangeMinorGridlinePaint == orig(this.plot.rangeMinorGridlinePaint)
this.plot.rangeMinorGridlinePaint.getClass().getName() == orig(this.plot.rangeMinorGridlinePaint.getClass().getName())
this.plot.anchorValue == orig(this.plot.anchorValue)
this.plot.crosshairDatasetIndex == orig(this.plot.crosshairDatasetIndex)
this.plot.domainCrosshairVisible == orig(this.plot.domainCrosshairVisible)
this.plot.domainCrosshairRowKey == orig(this.plot.domainCrosshairRowKey)
this.plot.domainCrosshairColumnKey == orig(this.plot.domainCrosshairColumnKey)
this.plot.domainCrosshairStroke == orig(this.plot.domainCrosshairStroke)
this.plot.domainCrosshairStroke.getClass().getName() == orig(this.plot.domainCrosshairStroke.getClass().getName())
this.plot.domainCrosshairPaint == orig(this.plot.domainCrosshairPaint)
this.plot.domainCrosshairPaint.getClass().getName() == orig(this.plot.domainCrosshairPaint.getClass().getName())
this.plot.rangeCrosshairVisible == orig(this.plot.rangeCrosshairVisible)
this.plot.rangeCrosshairValue == orig(this.plot.rangeCrosshairValue)
this.plot.rangeCrosshairStroke == orig(this.plot.rangeCrosshairStroke)
this.plot.rangeCrosshairStroke.getClass().getName() == orig(this.plot.rangeCrosshairStroke.getClass().getName())
this.plot.rangeCrosshairPaint == orig(this.plot.rangeCrosshairPaint)
this.plot.rangeCrosshairPaint.getClass().getName() == orig(this.plot.rangeCrosshairPaint.getClass().getName())
this.plot.rangeCrosshairLockedOnData == orig(this.plot.rangeCrosshairLockedOnData)
this.plot.foregroundDomainMarkers == orig(this.plot.foregroundDomainMarkers)
this.plot.foregroundDomainMarkers.getClass().getName() == orig(this.plot.foregroundDomainMarkers.getClass().getName())
this.plot.backgroundDomainMarkers == orig(this.plot.backgroundDomainMarkers)
this.plot.backgroundDomainMarkers.getClass().getName() == orig(this.plot.backgroundDomainMarkers.getClass().getName())
this.plot.foregroundRangeMarkers == orig(this.plot.foregroundRangeMarkers)
this.plot.foregroundRangeMarkers.getClass().getName() == orig(this.plot.foregroundRangeMarkers.getClass().getName())
this.plot.backgroundRangeMarkers == orig(this.plot.backgroundRangeMarkers)
this.plot.backgroundRangeMarkers.getClass().getName() == orig(this.plot.backgroundRangeMarkers.getClass().getName())
this.plot.annotations == orig(this.plot.annotations)
this.plot.annotations[] == orig(this.plot.annotations[])
this.plot.annotations.getClass().getName() == orig(this.plot.annotations.getClass().getName())
this.plot.weight == orig(this.plot.weight)
this.plot.fixedDomainAxisSpace == orig(this.plot.fixedDomainAxisSpace)
this.plot.fixedRangeAxisSpace == orig(this.plot.fixedRangeAxisSpace)
this.plot.fixedLegendItems == orig(this.plot.fixedLegendItems)
this.plot.rangePannable == orig(this.plot.rangePannable)
this.plot.shadowGenerator == orig(this.plot.shadowGenerator)
this.plot.shadowGenerator.getClass().getName() == orig(this.plot.shadowGenerator.getClass().getName())
org.jfree.chart.plot.Plot.ZERO == orig(org.jfree.chart.plot.Plot.ZERO)
org.jfree.chart.plot.Plot.ZERO.getClass().getName() == orig(org.jfree.chart.plot.Plot.ZERO.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_INSETS == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.top == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.top)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.left == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.left)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.right == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.right)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName())
this.plot.parent == orig(this.plot.parent)
org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener == orig(org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener)
this.plot.datasetGroup == orig(this.plot.datasetGroup)
this.plot.noDataMessage == orig(this.plot.noDataMessage)
this.plot.noDataMessageFont == orig(this.plot.noDataMessageFont)
this.plot.noDataMessagePaint == orig(this.plot.noDataMessagePaint)
this.plot.noDataMessagePaint.getClass().getName() == orig(this.plot.noDataMessagePaint.getClass().getName())
this.plot.insets == orig(this.plot.insets)
this.plot.insets.unitType == orig(this.plot.insets.unitType)
this.plot.insets.top == orig(this.plot.insets.top)
this.plot.insets.left == orig(this.plot.insets.left)
this.plot.insets.bottom == orig(this.plot.insets.bottom)
this.plot.insets.right == orig(this.plot.insets.right)
this.plot.outlineVisible == orig(this.plot.outlineVisible)
this.plot.outlineStroke == orig(this.plot.outlineStroke)
this.plot.outlineStroke.getClass().getName() == orig(this.plot.outlineStroke.getClass().getName())
this.plot.outlinePaint == orig(this.plot.outlinePaint)
this.plot.outlinePaint.getClass().getName() == orig(this.plot.outlinePaint.getClass().getName())
this.plot.backgroundPaint == orig(this.plot.backgroundPaint)
this.plot.backgroundPaint.getClass().getName() == orig(this.plot.backgroundPaint.getClass().getName())
this.plot.backgroundImage == orig(this.plot.backgroundImage)
this.plot.backgroundImageAlignment == orig(this.plot.backgroundImageAlignment)
this.plot.backgroundImageAlpha == orig(this.plot.backgroundImageAlpha)
this.plot.foregroundAlpha == orig(this.plot.foregroundAlpha)
this.plot.backgroundAlpha == orig(this.plot.backgroundAlpha)
this.plot.drawingSupplier == orig(this.plot.drawingSupplier)
this.plot.drawingSupplier.getClass().getName() == orig(this.plot.drawingSupplier.getClass().getName())
this.plot.listenerList == orig(this.plot.listenerList)
this.plot.notify == orig(this.plot.notify)
this.itemLabelGeneratorList == orig(this.itemLabelGeneratorList)
this.itemLabelGeneratorList.objects == orig(this.itemLabelGeneratorList.objects)
this.itemLabelGeneratorList.objects.getClass().getName() == orig(this.itemLabelGeneratorList.objects.getClass().getName())
this.itemLabelGeneratorList.objects[] == orig(this.itemLabelGeneratorList.objects[])
this.itemLabelGeneratorList.size == orig(this.itemLabelGeneratorList.size)
this.itemLabelGeneratorList.increment == orig(this.itemLabelGeneratorList.increment)
this.baseItemLabelGenerator == orig(this.baseItemLabelGenerator)
this.toolTipGeneratorList == orig(this.toolTipGeneratorList)
this.toolTipGeneratorList.objects == orig(this.toolTipGeneratorList.objects)
this.toolTipGeneratorList.objects.getClass().getName() == orig(this.toolTipGeneratorList.objects.getClass().getName())
this.toolTipGeneratorList.objects[] == orig(this.toolTipGeneratorList.objects[])
this.toolTipGeneratorList.size == orig(this.toolTipGeneratorList.size)
this.toolTipGeneratorList.increment == orig(this.toolTipGeneratorList.increment)
this.baseToolTipGenerator == orig(this.baseToolTipGenerator)
this.urlGeneratorList == orig(this.urlGeneratorList)
this.urlGeneratorList.objects == orig(this.urlGeneratorList.objects)
this.urlGeneratorList.objects.getClass().getName() == orig(this.urlGeneratorList.objects.getClass().getName())
this.urlGeneratorList.objects[] == orig(this.urlGeneratorList.objects[])
this.urlGeneratorList.size == orig(this.urlGeneratorList.size)
this.urlGeneratorList.increment == orig(this.urlGeneratorList.increment)
this.baseURLGenerator == orig(this.baseURLGenerator)
this.legendItemLabelGenerator == orig(this.legendItemLabelGenerator)
this.legendItemLabelGenerator.getClass().getName() == orig(this.legendItemLabelGenerator.getClass().getName())
this.legendItemToolTipGenerator == orig(this.legendItemToolTipGenerator)
this.legendItemURLGenerator == orig(this.legendItemURLGenerator)
this.backgroundAnnotations == orig(this.backgroundAnnotations)
this.backgroundAnnotations[] == orig(this.backgroundAnnotations[])
this.backgroundAnnotations.getClass().getName() == orig(this.backgroundAnnotations.getClass().getName())
this.foregroundAnnotations == orig(this.foregroundAnnotations)
this.foregroundAnnotations[] == orig(this.foregroundAnnotations[])
this.foregroundAnnotations.getClass().getName() == orig(this.foregroundAnnotations.getClass().getName())
this.rowCount == orig(this.rowCount)
this.columnCount == orig(this.columnCount)
org.jfree.chart.renderer.AbstractRenderer.ZERO == orig(org.jfree.chart.renderer.AbstractRenderer.ZERO)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_FONT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_FONT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT.getClass().getName())
this.seriesVisibleList == orig(this.seriesVisibleList)
this.seriesVisibleList.objects == orig(this.seriesVisibleList.objects)
this.seriesVisibleList.objects.getClass().getName() == orig(this.seriesVisibleList.objects.getClass().getName())
this.seriesVisibleList.objects[] == orig(this.seriesVisibleList.objects[])
this.seriesVisibleList.size == orig(this.seriesVisibleList.size)
this.seriesVisibleList.increment == orig(this.seriesVisibleList.increment)
this.baseSeriesVisible == orig(this.baseSeriesVisible)
this.seriesVisibleInLegendList == orig(this.seriesVisibleInLegendList)
this.seriesVisibleInLegendList.objects == orig(this.seriesVisibleInLegendList.objects)
this.seriesVisibleInLegendList.objects.getClass().getName() == orig(this.seriesVisibleInLegendList.objects.getClass().getName())
this.seriesVisibleInLegendList.objects[] == orig(this.seriesVisibleInLegendList.objects[])
this.seriesVisibleInLegendList.size == orig(this.seriesVisibleInLegendList.size)
this.seriesVisibleInLegendList.increment == orig(this.seriesVisibleInLegendList.increment)
this.baseSeriesVisibleInLegend == orig(this.baseSeriesVisibleInLegend)
this.paintList == orig(this.paintList)
this.paintList.objects == orig(this.paintList.objects)
this.paintList.objects.getClass().getName() == orig(this.paintList.objects.getClass().getName())
this.paintList.objects[] == orig(this.paintList.objects[])
this.paintList.size == orig(this.paintList.size)
this.paintList.increment == orig(this.paintList.increment)
this.autoPopulateSeriesPaint == orig(this.autoPopulateSeriesPaint)
this.basePaint == orig(this.basePaint)
this.basePaint.getClass().getName() == orig(this.basePaint.getClass().getName())
this.fillPaintList == orig(this.fillPaintList)
this.fillPaintList.objects == orig(this.fillPaintList.objects)
this.fillPaintList.objects.getClass().getName() == orig(this.fillPaintList.objects.getClass().getName())
this.fillPaintList.objects[] == orig(this.fillPaintList.objects[])
this.fillPaintList.size == orig(this.fillPaintList.size)
this.fillPaintList.increment == orig(this.fillPaintList.increment)
this.autoPopulateSeriesFillPaint == orig(this.autoPopulateSeriesFillPaint)
this.baseFillPaint == orig(this.baseFillPaint)
this.baseFillPaint.getClass().getName() == orig(this.baseFillPaint.getClass().getName())
this.outlinePaintList == orig(this.outlinePaintList)
this.outlinePaintList.objects == orig(this.outlinePaintList.objects)
this.outlinePaintList.objects.getClass().getName() == orig(this.outlinePaintList.objects.getClass().getName())
this.outlinePaintList.objects[] == orig(this.outlinePaintList.objects[])
this.outlinePaintList.size == orig(this.outlinePaintList.size)
this.outlinePaintList.increment == orig(this.outlinePaintList.increment)
this.autoPopulateSeriesOutlinePaint == orig(this.autoPopulateSeriesOutlinePaint)
this.baseOutlinePaint == orig(this.baseOutlinePaint)
this.baseOutlinePaint.getClass().getName() == orig(this.baseOutlinePaint.getClass().getName())
this.strokeList == orig(this.strokeList)
this.strokeList.objects == orig(this.strokeList.objects)
this.strokeList.objects.getClass().getName() == orig(this.strokeList.objects.getClass().getName())
this.strokeList.objects[] == orig(this.strokeList.objects[])
this.strokeList.size == orig(this.strokeList.size)
this.strokeList.increment == orig(this.strokeList.increment)
this.autoPopulateSeriesStroke == orig(this.autoPopulateSeriesStroke)
this.baseStroke == orig(this.baseStroke)
this.baseStroke.getClass().getName() == orig(this.baseStroke.getClass().getName())
this.outlineStrokeList == orig(this.outlineStrokeList)
this.outlineStrokeList.objects == orig(this.outlineStrokeList.objects)
this.outlineStrokeList.objects.getClass().getName() == orig(this.outlineStrokeList.objects.getClass().getName())
this.outlineStrokeList.objects[] == orig(this.outlineStrokeList.objects[])
this.outlineStrokeList.size == orig(this.outlineStrokeList.size)
this.outlineStrokeList.increment == orig(this.outlineStrokeList.increment)
this.baseOutlineStroke == orig(this.baseOutlineStroke)
this.baseOutlineStroke.getClass().getName() == orig(this.baseOutlineStroke.getClass().getName())
this.autoPopulateSeriesOutlineStroke == orig(this.autoPopulateSeriesOutlineStroke)
this.shapeList == orig(this.shapeList)
this.shapeList.objects == orig(this.shapeList.objects)
this.shapeList.objects.getClass().getName() == orig(this.shapeList.objects.getClass().getName())
this.shapeList.objects[] == orig(this.shapeList.objects[])
this.shapeList.size == orig(this.shapeList.size)
this.shapeList.increment == orig(this.shapeList.increment)
this.autoPopulateSeriesShape == orig(this.autoPopulateSeriesShape)
this.baseShape == orig(this.baseShape)
this.baseShape.getClass().getName() == orig(this.baseShape.getClass().getName())
this.itemLabelsVisibleList == orig(this.itemLabelsVisibleList)
this.itemLabelsVisibleList.objects == orig(this.itemLabelsVisibleList.objects)
this.itemLabelsVisibleList.objects.getClass().getName() == orig(this.itemLabelsVisibleList.objects.getClass().getName())
this.itemLabelsVisibleList.objects[] == orig(this.itemLabelsVisibleList.objects[])
this.itemLabelsVisibleList.size == orig(this.itemLabelsVisibleList.size)
this.itemLabelsVisibleList.increment == orig(this.itemLabelsVisibleList.increment)
this.baseItemLabelsVisible == orig(this.baseItemLabelsVisible)
this.itemLabelFontList == orig(this.itemLabelFontList)
this.itemLabelFontList.objects == orig(this.itemLabelFontList.objects)
this.itemLabelFontList.objects.getClass().getName() == orig(this.itemLabelFontList.objects.getClass().getName())
this.itemLabelFontList.objects[] == orig(this.itemLabelFontList.objects[])
this.itemLabelFontList.size == orig(this.itemLabelFontList.size)
this.itemLabelFontList.increment == orig(this.itemLabelFontList.increment)
this.baseItemLabelFont == orig(this.baseItemLabelFont)
this.itemLabelPaintList == orig(this.itemLabelPaintList)
this.itemLabelPaintList.objects == orig(this.itemLabelPaintList.objects)
this.itemLabelPaintList.objects.getClass().getName() == orig(this.itemLabelPaintList.objects.getClass().getName())
this.itemLabelPaintList.objects[] == orig(this.itemLabelPaintList.objects[])
this.itemLabelPaintList.size == orig(this.itemLabelPaintList.size)
this.itemLabelPaintList.increment == orig(this.itemLabelPaintList.increment)
this.baseItemLabelPaint == orig(this.baseItemLabelPaint)
this.baseItemLabelPaint.getClass().getName() == orig(this.baseItemLabelPaint.getClass().getName())
this.positiveItemLabelPositionList == orig(this.positiveItemLabelPositionList)
this.positiveItemLabelPositionList.objects == orig(this.positiveItemLabelPositionList.objects)
this.positiveItemLabelPositionList.objects.getClass().getName() == orig(this.positiveItemLabelPositionList.objects.getClass().getName())
this.positiveItemLabelPositionList.objects[] == orig(this.positiveItemLabelPositionList.objects[])
this.positiveItemLabelPositionList.size == orig(this.positiveItemLabelPositionList.size)
this.positiveItemLabelPositionList.increment == orig(this.positiveItemLabelPositionList.increment)
this.basePositiveItemLabelPosition == orig(this.basePositiveItemLabelPosition)
this.basePositiveItemLabelPosition.itemLabelAnchor == orig(this.basePositiveItemLabelPosition.itemLabelAnchor)
org.jfree.chart.labels.ItemLabelAnchor.CENTER == orig(org.jfree.chart.labels.ItemLabelAnchor.CENTER)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE1 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE1)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE2 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE2)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE3 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE3)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE4 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE4)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE5 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE5)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE6 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE6)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE7 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE7)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE8 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE8)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE9 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE9)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE10 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE10)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE11 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE11)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE12 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE12)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12)
this.basePositiveItemLabelPosition.itemLabelAnchor.name == orig(this.basePositiveItemLabelPosition.itemLabelAnchor.name)
this.basePositiveItemLabelPosition.itemLabelAnchor.name.toString == orig(this.basePositiveItemLabelPosition.itemLabelAnchor.name.toString)
this.basePositiveItemLabelPosition.textAnchor == orig(this.basePositiveItemLabelPosition.textAnchor)
org.jfree.chart.text.TextAnchor.TOP_LEFT == orig(org.jfree.chart.text.TextAnchor.TOP_LEFT)
org.jfree.chart.text.TextAnchor.TOP_CENTER == orig(org.jfree.chart.text.TextAnchor.TOP_CENTER)
org.jfree.chart.text.TextAnchor.TOP_RIGHT == orig(org.jfree.chart.text.TextAnchor.TOP_RIGHT)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT)
org.jfree.chart.text.TextAnchor.CENTER_LEFT == orig(org.jfree.chart.text.TextAnchor.CENTER_LEFT)
org.jfree.chart.text.TextAnchor.CENTER == orig(org.jfree.chart.text.TextAnchor.CENTER)
org.jfree.chart.text.TextAnchor.CENTER_RIGHT == orig(org.jfree.chart.text.TextAnchor.CENTER_RIGHT)
org.jfree.chart.text.TextAnchor.BASELINE_LEFT == orig(org.jfree.chart.text.TextAnchor.BASELINE_LEFT)
org.jfree.chart.text.TextAnchor.BASELINE_CENTER == orig(org.jfree.chart.text.TextAnchor.BASELINE_CENTER)
org.jfree.chart.text.TextAnchor.BASELINE_RIGHT == orig(org.jfree.chart.text.TextAnchor.BASELINE_RIGHT)
org.jfree.chart.text.TextAnchor.BOTTOM_LEFT == orig(org.jfree.chart.text.TextAnchor.BOTTOM_LEFT)
org.jfree.chart.text.TextAnchor.BOTTOM_CENTER == orig(org.jfree.chart.text.TextAnchor.BOTTOM_CENTER)
org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT == orig(org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT)
this.basePositiveItemLabelPosition.textAnchor.name == orig(this.basePositiveItemLabelPosition.textAnchor.name)
this.basePositiveItemLabelPosition.textAnchor.name.toString == orig(this.basePositiveItemLabelPosition.textAnchor.name.toString)
this.basePositiveItemLabelPosition.rotationAnchor == orig(this.basePositiveItemLabelPosition.rotationAnchor)
this.basePositiveItemLabelPosition.rotationAnchor.name == orig(this.basePositiveItemLabelPosition.rotationAnchor.name)
this.basePositiveItemLabelPosition.rotationAnchor.name.toString == orig(this.basePositiveItemLabelPosition.rotationAnchor.name.toString)
this.basePositiveItemLabelPosition.angle == orig(this.basePositiveItemLabelPosition.angle)
this.negativeItemLabelPositionList == orig(this.negativeItemLabelPositionList)
this.negativeItemLabelPositionList.objects == orig(this.negativeItemLabelPositionList.objects)
this.negativeItemLabelPositionList.objects.getClass().getName() == orig(this.negativeItemLabelPositionList.objects.getClass().getName())
this.negativeItemLabelPositionList.objects[] == orig(this.negativeItemLabelPositionList.objects[])
this.negativeItemLabelPositionList.size == orig(this.negativeItemLabelPositionList.size)
this.negativeItemLabelPositionList.increment == orig(this.negativeItemLabelPositionList.increment)
this.baseNegativeItemLabelPosition == orig(this.baseNegativeItemLabelPosition)
this.baseNegativeItemLabelPosition.itemLabelAnchor == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor)
this.baseNegativeItemLabelPosition.itemLabelAnchor.name == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor.name)
this.baseNegativeItemLabelPosition.itemLabelAnchor.name.toString == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor.name.toString)
this.baseNegativeItemLabelPosition.textAnchor == orig(this.baseNegativeItemLabelPosition.textAnchor)
this.baseNegativeItemLabelPosition.textAnchor.name == orig(this.baseNegativeItemLabelPosition.textAnchor.name)
this.baseNegativeItemLabelPosition.textAnchor.name.toString == orig(this.baseNegativeItemLabelPosition.textAnchor.name.toString)
this.baseNegativeItemLabelPosition.rotationAnchor == orig(this.baseNegativeItemLabelPosition.rotationAnchor)
this.baseNegativeItemLabelPosition.rotationAnchor.name == orig(this.baseNegativeItemLabelPosition.rotationAnchor.name)
this.baseNegativeItemLabelPosition.rotationAnchor.name.toString == orig(this.baseNegativeItemLabelPosition.rotationAnchor.name.toString)
this.baseNegativeItemLabelPosition.angle == orig(this.baseNegativeItemLabelPosition.angle)
this.itemLabelAnchorOffset == orig(this.itemLabelAnchorOffset)
this.createEntitiesList == orig(this.createEntitiesList)
this.createEntitiesList.objects == orig(this.createEntitiesList.objects)
this.createEntitiesList.objects.getClass().getName() == orig(this.createEntitiesList.objects.getClass().getName())
this.createEntitiesList.objects[] == orig(this.createEntitiesList.objects[])
this.createEntitiesList.size == orig(this.createEntitiesList.size)
this.createEntitiesList.increment == orig(this.createEntitiesList.increment)
this.baseCreateEntities == orig(this.baseCreateEntities)
this.legendShapeList == orig(this.legendShapeList)
this.legendShapeList.objects == orig(this.legendShapeList.objects)
this.legendShapeList.objects.getClass().getName() == orig(this.legendShapeList.objects.getClass().getName())
this.legendShapeList.objects[] == orig(this.legendShapeList.objects[])
this.legendShapeList.size == orig(this.legendShapeList.size)
this.legendShapeList.increment == orig(this.legendShapeList.increment)
this.baseLegendShape == orig(this.baseLegendShape)
this.treatLegendShapeAsLine == orig(this.treatLegendShapeAsLine)
this.legendTextFont == orig(this.legendTextFont)
this.legendTextFont.objects == orig(this.legendTextFont.objects)
this.legendTextFont.objects.getClass().getName() == orig(this.legendTextFont.objects.getClass().getName())
this.legendTextFont.objects[] == orig(this.legendTextFont.objects[])
this.legendTextFont.size == orig(this.legendTextFont.size)
this.legendTextFont.increment == orig(this.legendTextFont.increment)
this.baseLegendTextFont == orig(this.baseLegendTextFont)
this.legendTextPaint == orig(this.legendTextPaint)
this.legendTextPaint.objects == orig(this.legendTextPaint.objects)
this.legendTextPaint.objects.getClass().getName() == orig(this.legendTextPaint.objects.getClass().getName())
this.legendTextPaint.objects[] == orig(this.legendTextPaint.objects[])
this.legendTextPaint.size == orig(this.legendTextPaint.size)
this.legendTextPaint.increment == orig(this.legendTextPaint.increment)
this.baseLegendTextPaint == orig(this.baseLegendTextPaint)
this.dataBoundsIncludesVisibleSeriesOnly == orig(this.dataBoundsIncludesVisibleSeriesOnly)
this.defaultEntityRadius == orig(this.defaultEntityRadius)
this.listenerList == orig(this.listenerList)
this.selectedItemAttributes == orig(this.selectedItemAttributes)
this.selectedItemAttributes.allowNull == orig(this.selectedItemAttributes.allowNull)
this.selectedItemAttributes.paintList == orig(this.selectedItemAttributes.paintList)
this.selectedItemAttributes.paintList.objects == orig(this.selectedItemAttributes.paintList.objects)
this.selectedItemAttributes.paintList.objects.getClass().getName() == orig(this.selectedItemAttributes.paintList.objects.getClass().getName())
this.selectedItemAttributes.paintList.objects[] == orig(this.selectedItemAttributes.paintList.objects[])
this.selectedItemAttributes.paintList.size == orig(this.selectedItemAttributes.paintList.size)
this.selectedItemAttributes.paintList.increment == orig(this.selectedItemAttributes.paintList.increment)
this.selectedItemAttributes.defaultPaint == orig(this.selectedItemAttributes.defaultPaint)
this.selectedItemAttributes.strokeList == orig(this.selectedItemAttributes.strokeList)
this.selectedItemAttributes.strokeList.objects == orig(this.selectedItemAttributes.strokeList.objects)
this.selectedItemAttributes.strokeList.objects.getClass().getName() == orig(this.selectedItemAttributes.strokeList.objects.getClass().getName())
this.selectedItemAttributes.strokeList.objects[] == orig(this.selectedItemAttributes.strokeList.objects[])
this.selectedItemAttributes.strokeList.size == orig(this.selectedItemAttributes.strokeList.size)
this.selectedItemAttributes.strokeList.increment == orig(this.selectedItemAttributes.strokeList.increment)
this.selectedItemAttributes.defaultStroke == orig(this.selectedItemAttributes.defaultStroke)
this.selectedItemAttributes.shapeList == orig(this.selectedItemAttributes.shapeList)
this.selectedItemAttributes.shapeList.objects == orig(this.selectedItemAttributes.shapeList.objects)
this.selectedItemAttributes.shapeList.objects.getClass().getName() == orig(this.selectedItemAttributes.shapeList.objects.getClass().getName())
this.selectedItemAttributes.shapeList.objects[] == orig(this.selectedItemAttributes.shapeList.objects[])
this.selectedItemAttributes.shapeList.size == orig(this.selectedItemAttributes.shapeList.size)
this.selectedItemAttributes.shapeList.increment == orig(this.selectedItemAttributes.shapeList.increment)
this.selectedItemAttributes.defaultShape == orig(this.selectedItemAttributes.defaultShape)
this.selectedItemAttributes.fillPaintList == orig(this.selectedItemAttributes.fillPaintList)
this.selectedItemAttributes.fillPaintList.objects == orig(this.selectedItemAttributes.fillPaintList.objects)
this.selectedItemAttributes.fillPaintList.objects.getClass().getName() == orig(this.selectedItemAttributes.fillPaintList.objects.getClass().getName())
this.selectedItemAttributes.fillPaintList.objects[] == orig(this.selectedItemAttributes.fillPaintList.objects[])
this.selectedItemAttributes.fillPaintList.size == orig(this.selectedItemAttributes.fillPaintList.size)
this.selectedItemAttributes.fillPaintList.increment == orig(this.selectedItemAttributes.fillPaintList.increment)
this.selectedItemAttributes.defaultFillPaint == orig(this.selectedItemAttributes.defaultFillPaint)
this.selectedItemAttributes.defaultFillPaint.getClass().getName() == orig(this.selectedItemAttributes.defaultFillPaint.getClass().getName())
this.selectedItemAttributes.outlinePaintList == orig(this.selectedItemAttributes.outlinePaintList)
this.selectedItemAttributes.outlinePaintList.objects == orig(this.selectedItemAttributes.outlinePaintList.objects)
this.selectedItemAttributes.outlinePaintList.objects.getClass().getName() == orig(this.selectedItemAttributes.outlinePaintList.objects.getClass().getName())
this.selectedItemAttributes.outlinePaintList.objects[] == orig(this.selectedItemAttributes.outlinePaintList.objects[])
this.selectedItemAttributes.outlinePaintList.size == orig(this.selectedItemAttributes.outlinePaintList.size)
this.selectedItemAttributes.outlinePaintList.increment == orig(this.selectedItemAttributes.outlinePaintList.increment)
this.selectedItemAttributes.defaultOutlinePaint == orig(this.selectedItemAttributes.defaultOutlinePaint)
this.selectedItemAttributes.outlineStrokeList == orig(this.selectedItemAttributes.outlineStrokeList)
this.selectedItemAttributes.defaultOutlineStroke == orig(this.selectedItemAttributes.defaultOutlineStroke)
this.selectedItemAttributes.labelsVisibleList == orig(this.selectedItemAttributes.labelsVisibleList)
this.selectedItemAttributes.defaultLabelVisible == orig(this.selectedItemAttributes.defaultLabelVisible)
this.selectedItemAttributes.labelFontList == orig(this.selectedItemAttributes.labelFontList)
this.selectedItemAttributes.defaultLabelFont == orig(this.selectedItemAttributes.defaultLabelFont)
this.selectedItemAttributes.labelPaintList == orig(this.selectedItemAttributes.labelPaintList)
this.selectedItemAttributes.defaultLabelPaint == orig(this.selectedItemAttributes.defaultLabelPaint)
this.selectedItemAttributes.positionItemLabelPositionList == orig(this.selectedItemAttributes.positionItemLabelPositionList)
this.selectedItemAttributes.defaultPositiveItemLabelPosition == orig(this.selectedItemAttributes.defaultPositiveItemLabelPosition)
this.selectedItemAttributes.negativeItemLabelPositionList == orig(this.selectedItemAttributes.negativeItemLabelPositionList)
this.selectedItemAttributes.defaultNegativeItemLabelPosition == orig(this.selectedItemAttributes.defaultNegativeItemLabelPosition)
this.selectedItemAttributes.createEntityList == orig(this.selectedItemAttributes.createEntityList)
this.selectedItemAttributes.defaultCreateEntity == orig(this.selectedItemAttributes.defaultCreateEntity)
org.jfree.chart.renderer.AbstractRenderer.ADJ == orig(org.jfree.chart.renderer.AbstractRenderer.ADJ)
org.jfree.chart.renderer.AbstractRenderer.OPP == orig(org.jfree.chart.renderer.AbstractRenderer.OPP)
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener == orig(org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener)
this.plot has only one value
this.paintList.objects[] has only one value, of length 8
this.paintList.objects[].getClass().getName() == [java.awt.Color, null, null, null, null, null, null, null]
this.paintList.size == 1
this.strokeList.objects[] contains only nulls and has only one value, of length 8
this.strokeList.objects[] elements == null
this.strokeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.strokeList.objects[].getClass().getName() elements == null
this.strokeList.size == 0
this.shapeList.objects[] has only one value, of length 8
this.shapeList.objects[].getClass().getName() == [java.awt.geom.Rectangle2D.Double, null, null, null, null, null, null, null]
this.shapeList.size == 1
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener has only one value
return == true
===========================================================================
org.jfree.chart.renderer.category.LineAndShapeRenderer.getItemShapeVisible(int, int):::EXIT;condition="return == true"
===========================================================================
org.jfree.chart.renderer.category.LineAndShapeRenderer.getLegendItem(int, int):::ENTER
this.plot has only one value
this.paintList.objects[] contains only nulls and has only one value, of length 8
this.paintList.objects[] elements == null
this.paintList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.paintList.objects[].getClass().getName() elements == null
this.paintList.size == 0
this.strokeList.objects[] contains only nulls and has only one value, of length 8
this.strokeList.objects[] elements == null
this.strokeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.strokeList.objects[].getClass().getName() elements == null
this.strokeList.size == 0
this.shapeList.objects[] contains only nulls and has only one value, of length 8
this.shapeList.objects[] elements == null
this.shapeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.shapeList.objects[].getClass().getName() elements == null
this.shapeList.size == 0
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener has only one value
datasetIndex == 0
series == 0
===========================================================================
org.jfree.chart.renderer.category.LineAndShapeRenderer.getLegendItem(int, int):::EXIT690
===========================================================================
org.jfree.chart.renderer.category.LineAndShapeRenderer.getLegendItem(int, int):::EXIT
this.seriesLinesVisible == orig(this.seriesLinesVisible)
this.seriesLinesVisible.objects == orig(this.seriesLinesVisible.objects)
this.seriesLinesVisible.objects.getClass().getName() == orig(this.seriesLinesVisible.objects.getClass().getName())
this.seriesLinesVisible.objects[] == orig(this.seriesLinesVisible.objects[])
this.seriesLinesVisible.size == orig(this.seriesLinesVisible.size)
this.seriesLinesVisible.increment == orig(this.seriesLinesVisible.increment)
this.baseLinesVisible == orig(this.baseLinesVisible)
this.seriesShapesVisible == orig(this.seriesShapesVisible)
this.seriesShapesVisible.objects == orig(this.seriesShapesVisible.objects)
this.seriesShapesVisible.objects.getClass().getName() == orig(this.seriesShapesVisible.objects.getClass().getName())
this.seriesShapesVisible.objects[] == orig(this.seriesShapesVisible.objects[])
this.seriesShapesVisible.size == orig(this.seriesShapesVisible.size)
this.seriesShapesVisible.increment == orig(this.seriesShapesVisible.increment)
this.baseShapesVisible == orig(this.baseShapesVisible)
this.seriesShapesFilled == orig(this.seriesShapesFilled)
this.seriesShapesFilled.objects == orig(this.seriesShapesFilled.objects)
this.seriesShapesFilled.objects.getClass().getName() == orig(this.seriesShapesFilled.objects.getClass().getName())
this.seriesShapesFilled.objects[] == orig(this.seriesShapesFilled.objects[])
this.seriesShapesFilled.size == orig(this.seriesShapesFilled.size)
this.seriesShapesFilled.increment == orig(this.seriesShapesFilled.increment)
this.baseShapesFilled == orig(this.baseShapesFilled)
this.useFillPaint == orig(this.useFillPaint)
this.drawOutlines == orig(this.drawOutlines)
this.useOutlinePaint == orig(this.useOutlinePaint)
this.useSeriesOffset == orig(this.useSeriesOffset)
this.itemMargin == orig(this.itemMargin)
this.plot == orig(this.plot)
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE)
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_VALUE_LABEL_FONT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_VALUE_LABEL_FONT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT.getClass().getName())
org.jfree.chart.plot.CategoryPlot.localizationResources == orig(org.jfree.chart.plot.CategoryPlot.localizationResources)
org.jfree.chart.plot.CategoryPlot.localizationResources.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.localizationResources.getClass().getName())
this.plot.orientation == orig(this.plot.orientation)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL)
org.jfree.chart.plot.PlotOrientation.VERTICAL == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL)
this.plot.orientation.name == orig(this.plot.orientation.name)
this.plot.orientation.name.toString == orig(this.plot.orientation.name.toString)
this.plot.axisOffset == orig(this.plot.axisOffset)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS)
this.plot.axisOffset.unitType == orig(this.plot.axisOffset.unitType)
this.plot.axisOffset.top == orig(this.plot.axisOffset.top)
this.plot.axisOffset.left == orig(this.plot.axisOffset.left)
this.plot.axisOffset.bottom == orig(this.plot.axisOffset.bottom)
this.plot.axisOffset.right == orig(this.plot.axisOffset.right)
this.plot.domainAxes == orig(this.plot.domainAxes)
this.plot.domainAxes.objects == orig(this.plot.domainAxes.objects)
this.plot.domainAxes.objects.getClass().getName() == orig(this.plot.domainAxes.objects.getClass().getName())
this.plot.domainAxes.objects[] == orig(this.plot.domainAxes.objects[])
this.plot.domainAxes.size == orig(this.plot.domainAxes.size)
this.plot.domainAxes.increment == orig(this.plot.domainAxes.increment)
this.plot.domainAxisLocations == orig(this.plot.domainAxisLocations)
this.plot.domainAxisLocations.objects == orig(this.plot.domainAxisLocations.objects)
this.plot.domainAxisLocations.objects.getClass().getName() == orig(this.plot.domainAxisLocations.objects.getClass().getName())
this.plot.domainAxisLocations.objects[] == orig(this.plot.domainAxisLocations.objects[])
this.plot.domainAxisLocations.size == orig(this.plot.domainAxisLocations.size)
this.plot.domainAxisLocations.increment == orig(this.plot.domainAxisLocations.increment)
this.plot.drawSharedDomainAxis == orig(this.plot.drawSharedDomainAxis)
this.plot.rangeAxes == orig(this.plot.rangeAxes)
this.plot.rangeAxes.objects == orig(this.plot.rangeAxes.objects)
this.plot.rangeAxes.objects.getClass().getName() == orig(this.plot.rangeAxes.objects.getClass().getName())
this.plot.rangeAxes.objects[] == orig(this.plot.rangeAxes.objects[])
this.plot.rangeAxes.size == orig(this.plot.rangeAxes.size)
this.plot.rangeAxes.increment == orig(this.plot.rangeAxes.increment)
this.plot.rangeAxisLocations == orig(this.plot.rangeAxisLocations)
this.plot.rangeAxisLocations.objects == orig(this.plot.rangeAxisLocations.objects)
this.plot.rangeAxisLocations.objects.getClass().getName() == orig(this.plot.rangeAxisLocations.objects.getClass().getName())
this.plot.rangeAxisLocations.objects[] == orig(this.plot.rangeAxisLocations.objects[])
this.plot.rangeAxisLocations.size == orig(this.plot.rangeAxisLocations.size)
this.plot.rangeAxisLocations.increment == orig(this.plot.rangeAxisLocations.increment)
this.plot.datasets == orig(this.plot.datasets)
this.plot.datasets.objects == orig(this.plot.datasets.objects)
this.plot.datasets.objects.getClass().getName() == orig(this.plot.datasets.objects.getClass().getName())
this.plot.datasets.objects[] == orig(this.plot.datasets.objects[])
this.plot.datasets.size == orig(this.plot.datasets.size)
this.plot.datasets.increment == orig(this.plot.datasets.increment)
this.plot.datasetToDomainAxesMap == orig(this.plot.datasetToDomainAxesMap)
this.plot.datasetToRangeAxesMap == orig(this.plot.datasetToRangeAxesMap)
this.plot.renderers == orig(this.plot.renderers)
this.plot.renderers.objects == orig(this.plot.renderers.objects)
this.plot.renderers.objects.getClass().getName() == orig(this.plot.renderers.objects.getClass().getName())
this.plot.renderers.objects[] == orig(this.plot.renderers.objects[])
this.plot.renderers.size == orig(this.plot.renderers.size)
this.plot.renderers.increment == orig(this.plot.renderers.increment)
this.plot.renderingOrder == orig(this.plot.renderingOrder)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE)
this.plot.renderingOrder.name == orig(this.plot.renderingOrder.name)
this.plot.renderingOrder.name.toString == orig(this.plot.renderingOrder.name.toString)
this.plot.columnRenderingOrder == orig(this.plot.columnRenderingOrder)
org.jfree.chart.util.SortOrder.ASCENDING == orig(org.jfree.chart.util.SortOrder.ASCENDING)
org.jfree.chart.util.SortOrder.DESCENDING == orig(org.jfree.chart.util.SortOrder.DESCENDING)
this.plot.columnRenderingOrder.name == orig(this.plot.columnRenderingOrder.name)
this.plot.columnRenderingOrder.name.toString == orig(this.plot.columnRenderingOrder.name.toString)
this.plot.rowRenderingOrder == orig(this.plot.rowRenderingOrder)
this.plot.rowRenderingOrder.name == orig(this.plot.rowRenderingOrder.name)
this.plot.rowRenderingOrder.name.toString == orig(this.plot.rowRenderingOrder.name.toString)
this.plot.domainGridlinesVisible == orig(this.plot.domainGridlinesVisible)
this.plot.domainGridlinePosition == orig(this.plot.domainGridlinePosition)
org.jfree.chart.axis.CategoryAnchor.START == orig(org.jfree.chart.axis.CategoryAnchor.START)
org.jfree.chart.axis.CategoryAnchor.MIDDLE == orig(org.jfree.chart.axis.CategoryAnchor.MIDDLE)
org.jfree.chart.axis.CategoryAnchor.END == orig(org.jfree.chart.axis.CategoryAnchor.END)
this.plot.domainGridlinePosition.name == orig(this.plot.domainGridlinePosition.name)
this.plot.domainGridlinePosition.name.toString == orig(this.plot.domainGridlinePosition.name.toString)
this.plot.domainGridlineStroke == orig(this.plot.domainGridlineStroke)
this.plot.domainGridlineStroke.getClass().getName() == orig(this.plot.domainGridlineStroke.getClass().getName())
this.plot.domainGridlinePaint == orig(this.plot.domainGridlinePaint)
this.plot.domainGridlinePaint.getClass().getName() == orig(this.plot.domainGridlinePaint.getClass().getName())
this.plot.rangeZeroBaselineVisible == orig(this.plot.rangeZeroBaselineVisible)
this.plot.rangeZeroBaselineStroke == orig(this.plot.rangeZeroBaselineStroke)
this.plot.rangeZeroBaselineStroke.getClass().getName() == orig(this.plot.rangeZeroBaselineStroke.getClass().getName())
this.plot.rangeZeroBaselinePaint == orig(this.plot.rangeZeroBaselinePaint)
this.plot.rangeZeroBaselinePaint.getClass().getName() == orig(this.plot.rangeZeroBaselinePaint.getClass().getName())
this.plot.rangeGridlinesVisible == orig(this.plot.rangeGridlinesVisible)
this.plot.rangeGridlineStroke == orig(this.plot.rangeGridlineStroke)
this.plot.rangeGridlineStroke.getClass().getName() == orig(this.plot.rangeGridlineStroke.getClass().getName())
this.plot.rangeGridlinePaint == orig(this.plot.rangeGridlinePaint)
this.plot.rangeGridlinePaint.getClass().getName() == orig(this.plot.rangeGridlinePaint.getClass().getName())
this.plot.rangeMinorGridlinesVisible == orig(this.plot.rangeMinorGridlinesVisible)
this.plot.rangeMinorGridlineStroke == orig(this.plot.rangeMinorGridlineStroke)
this.plot.rangeMinorGridlineStroke.getClass().getName() == orig(this.plot.rangeMinorGridlineStroke.getClass().getName())
this.plot.rangeMinorGridlinePaint == orig(this.plot.rangeMinorGridlinePaint)
this.plot.rangeMinorGridlinePaint.getClass().getName() == orig(this.plot.rangeMinorGridlinePaint.getClass().getName())
this.plot.anchorValue == orig(this.plot.anchorValue)
this.plot.crosshairDatasetIndex == orig(this.plot.crosshairDatasetIndex)
this.plot.domainCrosshairVisible == orig(this.plot.domainCrosshairVisible)
this.plot.domainCrosshairRowKey == orig(this.plot.domainCrosshairRowKey)
this.plot.domainCrosshairColumnKey == orig(this.plot.domainCrosshairColumnKey)
this.plot.domainCrosshairStroke == orig(this.plot.domainCrosshairStroke)
this.plot.domainCrosshairStroke.getClass().getName() == orig(this.plot.domainCrosshairStroke.getClass().getName())
this.plot.domainCrosshairPaint == orig(this.plot.domainCrosshairPaint)
this.plot.domainCrosshairPaint.getClass().getName() == orig(this.plot.domainCrosshairPaint.getClass().getName())
this.plot.rangeCrosshairVisible == orig(this.plot.rangeCrosshairVisible)
this.plot.rangeCrosshairValue == orig(this.plot.rangeCrosshairValue)
this.plot.rangeCrosshairStroke == orig(this.plot.rangeCrosshairStroke)
this.plot.rangeCrosshairStroke.getClass().getName() == orig(this.plot.rangeCrosshairStroke.getClass().getName())
this.plot.rangeCrosshairPaint == orig(this.plot.rangeCrosshairPaint)
this.plot.rangeCrosshairPaint.getClass().getName() == orig(this.plot.rangeCrosshairPaint.getClass().getName())
this.plot.rangeCrosshairLockedOnData == orig(this.plot.rangeCrosshairLockedOnData)
this.plot.foregroundDomainMarkers == orig(this.plot.foregroundDomainMarkers)
this.plot.foregroundDomainMarkers.getClass().getName() == orig(this.plot.foregroundDomainMarkers.getClass().getName())
this.plot.backgroundDomainMarkers == orig(this.plot.backgroundDomainMarkers)
this.plot.backgroundDomainMarkers.getClass().getName() == orig(this.plot.backgroundDomainMarkers.getClass().getName())
this.plot.foregroundRangeMarkers == orig(this.plot.foregroundRangeMarkers)
this.plot.foregroundRangeMarkers.getClass().getName() == orig(this.plot.foregroundRangeMarkers.getClass().getName())
this.plot.backgroundRangeMarkers == orig(this.plot.backgroundRangeMarkers)
this.plot.backgroundRangeMarkers.getClass().getName() == orig(this.plot.backgroundRangeMarkers.getClass().getName())
this.plot.annotations == orig(this.plot.annotations)
this.plot.annotations[] == orig(this.plot.annotations[])
this.plot.annotations.getClass().getName() == orig(this.plot.annotations.getClass().getName())
this.plot.weight == orig(this.plot.weight)
this.plot.fixedDomainAxisSpace == orig(this.plot.fixedDomainAxisSpace)
this.plot.fixedRangeAxisSpace == orig(this.plot.fixedRangeAxisSpace)
this.plot.fixedLegendItems == orig(this.plot.fixedLegendItems)
this.plot.rangePannable == orig(this.plot.rangePannable)
this.plot.shadowGenerator == orig(this.plot.shadowGenerator)
this.plot.shadowGenerator.getClass().getName() == orig(this.plot.shadowGenerator.getClass().getName())
org.jfree.chart.plot.Plot.ZERO == orig(org.jfree.chart.plot.Plot.ZERO)
org.jfree.chart.plot.Plot.ZERO.getClass().getName() == orig(org.jfree.chart.plot.Plot.ZERO.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_INSETS == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.top == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.top)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.left == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.left)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.right == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.right)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName())
this.plot.parent == orig(this.plot.parent)
org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener == orig(org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener)
this.plot.datasetGroup == orig(this.plot.datasetGroup)
this.plot.noDataMessage == orig(this.plot.noDataMessage)
this.plot.noDataMessageFont == orig(this.plot.noDataMessageFont)
this.plot.noDataMessagePaint == orig(this.plot.noDataMessagePaint)
this.plot.noDataMessagePaint.getClass().getName() == orig(this.plot.noDataMessagePaint.getClass().getName())
this.plot.insets == orig(this.plot.insets)
this.plot.insets.unitType == orig(this.plot.insets.unitType)
this.plot.insets.top == orig(this.plot.insets.top)
this.plot.insets.left == orig(this.plot.insets.left)
this.plot.insets.bottom == orig(this.plot.insets.bottom)
this.plot.insets.right == orig(this.plot.insets.right)
this.plot.outlineVisible == orig(this.plot.outlineVisible)
this.plot.outlineStroke == orig(this.plot.outlineStroke)
this.plot.outlineStroke.getClass().getName() == orig(this.plot.outlineStroke.getClass().getName())
this.plot.outlinePaint == orig(this.plot.outlinePaint)
this.plot.outlinePaint.getClass().getName() == orig(this.plot.outlinePaint.getClass().getName())
this.plot.backgroundPaint == orig(this.plot.backgroundPaint)
this.plot.backgroundPaint.getClass().getName() == orig(this.plot.backgroundPaint.getClass().getName())
this.plot.backgroundImage == orig(this.plot.backgroundImage)
this.plot.backgroundImageAlignment == orig(this.plot.backgroundImageAlignment)
this.plot.backgroundImageAlpha == orig(this.plot.backgroundImageAlpha)
this.plot.foregroundAlpha == orig(this.plot.foregroundAlpha)
this.plot.backgroundAlpha == orig(this.plot.backgroundAlpha)
this.plot.drawingSupplier == orig(this.plot.drawingSupplier)
this.plot.drawingSupplier.getClass().getName() == orig(this.plot.drawingSupplier.getClass().getName())
this.plot.listenerList == orig(this.plot.listenerList)
this.plot.notify == orig(this.plot.notify)
this.itemLabelGeneratorList == orig(this.itemLabelGeneratorList)
this.itemLabelGeneratorList.objects == orig(this.itemLabelGeneratorList.objects)
this.itemLabelGeneratorList.objects.getClass().getName() == orig(this.itemLabelGeneratorList.objects.getClass().getName())
this.itemLabelGeneratorList.objects[] == orig(this.itemLabelGeneratorList.objects[])
this.itemLabelGeneratorList.size == orig(this.itemLabelGeneratorList.size)
this.itemLabelGeneratorList.increment == orig(this.itemLabelGeneratorList.increment)
this.baseItemLabelGenerator == orig(this.baseItemLabelGenerator)
this.toolTipGeneratorList == orig(this.toolTipGeneratorList)
this.toolTipGeneratorList.objects == orig(this.toolTipGeneratorList.objects)
this.toolTipGeneratorList.objects.getClass().getName() == orig(this.toolTipGeneratorList.objects.getClass().getName())
this.toolTipGeneratorList.objects[] == orig(this.toolTipGeneratorList.objects[])
this.toolTipGeneratorList.size == orig(this.toolTipGeneratorList.size)
this.toolTipGeneratorList.increment == orig(this.toolTipGeneratorList.increment)
this.baseToolTipGenerator == orig(this.baseToolTipGenerator)
this.urlGeneratorList == orig(this.urlGeneratorList)
this.urlGeneratorList.objects == orig(this.urlGeneratorList.objects)
this.urlGeneratorList.objects.getClass().getName() == orig(this.urlGeneratorList.objects.getClass().getName())
this.urlGeneratorList.objects[] == orig(this.urlGeneratorList.objects[])
this.urlGeneratorList.size == orig(this.urlGeneratorList.size)
this.urlGeneratorList.increment == orig(this.urlGeneratorList.increment)
this.baseURLGenerator == orig(this.baseURLGenerator)
this.legendItemLabelGenerator == orig(this.legendItemLabelGenerator)
this.legendItemLabelGenerator.getClass().getName() == orig(this.legendItemLabelGenerator.getClass().getName())
this.legendItemToolTipGenerator == orig(this.legendItemToolTipGenerator)
this.legendItemURLGenerator == orig(this.legendItemURLGenerator)
this.backgroundAnnotations == orig(this.backgroundAnnotations)
this.backgroundAnnotations[] == orig(this.backgroundAnnotations[])
this.backgroundAnnotations.getClass().getName() == orig(this.backgroundAnnotations.getClass().getName())
this.foregroundAnnotations == orig(this.foregroundAnnotations)
this.foregroundAnnotations[] == orig(this.foregroundAnnotations[])
this.foregroundAnnotations.getClass().getName() == orig(this.foregroundAnnotations.getClass().getName())
this.rowCount == orig(this.rowCount)
this.columnCount == orig(this.columnCount)
org.jfree.chart.renderer.AbstractRenderer.ZERO == orig(org.jfree.chart.renderer.AbstractRenderer.ZERO)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_FONT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_FONT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT.getClass().getName())
this.seriesVisibleList == orig(this.seriesVisibleList)
this.seriesVisibleList.objects == orig(this.seriesVisibleList.objects)
this.seriesVisibleList.objects.getClass().getName() == orig(this.seriesVisibleList.objects.getClass().getName())
this.seriesVisibleList.objects[] == orig(this.seriesVisibleList.objects[])
this.seriesVisibleList.size == orig(this.seriesVisibleList.size)
this.seriesVisibleList.increment == orig(this.seriesVisibleList.increment)
this.baseSeriesVisible == orig(this.baseSeriesVisible)
this.seriesVisibleInLegendList == orig(this.seriesVisibleInLegendList)
this.seriesVisibleInLegendList.objects == orig(this.seriesVisibleInLegendList.objects)
this.seriesVisibleInLegendList.objects.getClass().getName() == orig(this.seriesVisibleInLegendList.objects.getClass().getName())
this.seriesVisibleInLegendList.objects[] == orig(this.seriesVisibleInLegendList.objects[])
this.seriesVisibleInLegendList.size == orig(this.seriesVisibleInLegendList.size)
this.seriesVisibleInLegendList.increment == orig(this.seriesVisibleInLegendList.increment)
this.baseSeriesVisibleInLegend == orig(this.baseSeriesVisibleInLegend)
this.paintList == orig(this.paintList)
this.paintList.objects == orig(this.paintList.objects)
this.paintList.objects.getClass().getName() == orig(this.paintList.objects.getClass().getName())
this.paintList.increment == orig(this.paintList.increment)
this.autoPopulateSeriesPaint == orig(this.autoPopulateSeriesPaint)
this.basePaint == orig(this.basePaint)
this.basePaint.getClass().getName() == orig(this.basePaint.getClass().getName())
this.fillPaintList == orig(this.fillPaintList)
this.fillPaintList.objects == orig(this.fillPaintList.objects)
this.fillPaintList.objects.getClass().getName() == orig(this.fillPaintList.objects.getClass().getName())
this.fillPaintList.objects[] == orig(this.fillPaintList.objects[])
this.fillPaintList.size == orig(this.fillPaintList.size)
this.fillPaintList.increment == orig(this.fillPaintList.increment)
this.autoPopulateSeriesFillPaint == orig(this.autoPopulateSeriesFillPaint)
this.baseFillPaint == orig(this.baseFillPaint)
this.baseFillPaint.getClass().getName() == orig(this.baseFillPaint.getClass().getName())
this.outlinePaintList == orig(this.outlinePaintList)
this.outlinePaintList.objects == orig(this.outlinePaintList.objects)
this.outlinePaintList.objects.getClass().getName() == orig(this.outlinePaintList.objects.getClass().getName())
this.outlinePaintList.objects[] == orig(this.outlinePaintList.objects[])
this.outlinePaintList.size == orig(this.outlinePaintList.size)
this.outlinePaintList.increment == orig(this.outlinePaintList.increment)
this.autoPopulateSeriesOutlinePaint == orig(this.autoPopulateSeriesOutlinePaint)
this.baseOutlinePaint == orig(this.baseOutlinePaint)
this.baseOutlinePaint.getClass().getName() == orig(this.baseOutlinePaint.getClass().getName())
this.strokeList == orig(this.strokeList)
this.strokeList.objects == orig(this.strokeList.objects)
this.strokeList.objects.getClass().getName() == orig(this.strokeList.objects.getClass().getName())
this.strokeList.increment == orig(this.strokeList.increment)
this.autoPopulateSeriesStroke == orig(this.autoPopulateSeriesStroke)
this.baseStroke == orig(this.baseStroke)
this.baseStroke.getClass().getName() == orig(this.baseStroke.getClass().getName())
this.outlineStrokeList == orig(this.outlineStrokeList)
this.outlineStrokeList.objects == orig(this.outlineStrokeList.objects)
this.outlineStrokeList.objects.getClass().getName() == orig(this.outlineStrokeList.objects.getClass().getName())
this.outlineStrokeList.objects[] == orig(this.outlineStrokeList.objects[])
this.outlineStrokeList.size == orig(this.outlineStrokeList.size)
this.outlineStrokeList.increment == orig(this.outlineStrokeList.increment)
this.baseOutlineStroke == orig(this.baseOutlineStroke)
this.baseOutlineStroke.getClass().getName() == orig(this.baseOutlineStroke.getClass().getName())
this.autoPopulateSeriesOutlineStroke == orig(this.autoPopulateSeriesOutlineStroke)
this.shapeList == orig(this.shapeList)
this.shapeList.objects == orig(this.shapeList.objects)
this.shapeList.objects.getClass().getName() == orig(this.shapeList.objects.getClass().getName())
this.shapeList.increment == orig(this.shapeList.increment)
this.autoPopulateSeriesShape == orig(this.autoPopulateSeriesShape)
this.baseShape == orig(this.baseShape)
this.baseShape.getClass().getName() == orig(this.baseShape.getClass().getName())
this.itemLabelsVisibleList == orig(this.itemLabelsVisibleList)
this.itemLabelsVisibleList.objects == orig(this.itemLabelsVisibleList.objects)
this.itemLabelsVisibleList.objects.getClass().getName() == orig(this.itemLabelsVisibleList.objects.getClass().getName())
this.itemLabelsVisibleList.objects[] == orig(this.itemLabelsVisibleList.objects[])
this.itemLabelsVisibleList.size == orig(this.itemLabelsVisibleList.size)
this.itemLabelsVisibleList.increment == orig(this.itemLabelsVisibleList.increment)
this.baseItemLabelsVisible == orig(this.baseItemLabelsVisible)
this.itemLabelFontList == orig(this.itemLabelFontList)
this.itemLabelFontList.objects == orig(this.itemLabelFontList.objects)
this.itemLabelFontList.objects.getClass().getName() == orig(this.itemLabelFontList.objects.getClass().getName())
this.itemLabelFontList.objects[] == orig(this.itemLabelFontList.objects[])
this.itemLabelFontList.size == orig(this.itemLabelFontList.size)
this.itemLabelFontList.increment == orig(this.itemLabelFontList.increment)
this.baseItemLabelFont == orig(this.baseItemLabelFont)
this.itemLabelPaintList == orig(this.itemLabelPaintList)
this.itemLabelPaintList.objects == orig(this.itemLabelPaintList.objects)
this.itemLabelPaintList.objects.getClass().getName() == orig(this.itemLabelPaintList.objects.getClass().getName())
this.itemLabelPaintList.objects[] == orig(this.itemLabelPaintList.objects[])
this.itemLabelPaintList.size == orig(this.itemLabelPaintList.size)
this.itemLabelPaintList.increment == orig(this.itemLabelPaintList.increment)
this.baseItemLabelPaint == orig(this.baseItemLabelPaint)
this.baseItemLabelPaint.getClass().getName() == orig(this.baseItemLabelPaint.getClass().getName())
this.positiveItemLabelPositionList == orig(this.positiveItemLabelPositionList)
this.positiveItemLabelPositionList.objects == orig(this.positiveItemLabelPositionList.objects)
this.positiveItemLabelPositionList.objects.getClass().getName() == orig(this.positiveItemLabelPositionList.objects.getClass().getName())
this.positiveItemLabelPositionList.objects[] == orig(this.positiveItemLabelPositionList.objects[])
this.positiveItemLabelPositionList.size == orig(this.positiveItemLabelPositionList.size)
this.positiveItemLabelPositionList.increment == orig(this.positiveItemLabelPositionList.increment)
this.basePositiveItemLabelPosition == orig(this.basePositiveItemLabelPosition)
this.basePositiveItemLabelPosition.itemLabelAnchor == orig(this.basePositiveItemLabelPosition.itemLabelAnchor)
org.jfree.chart.labels.ItemLabelAnchor.CENTER == orig(org.jfree.chart.labels.ItemLabelAnchor.CENTER)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE1 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE1)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE2 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE2)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE3 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE3)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE4 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE4)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE5 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE5)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE6 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE6)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE7 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE7)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE8 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE8)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE9 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE9)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE10 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE10)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE11 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE11)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE12 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE12)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12)
this.basePositiveItemLabelPosition.itemLabelAnchor.name == orig(this.basePositiveItemLabelPosition.itemLabelAnchor.name)
this.basePositiveItemLabelPosition.itemLabelAnchor.name.toString == orig(this.basePositiveItemLabelPosition.itemLabelAnchor.name.toString)
this.basePositiveItemLabelPosition.textAnchor == orig(this.basePositiveItemLabelPosition.textAnchor)
org.jfree.chart.text.TextAnchor.TOP_LEFT == orig(org.jfree.chart.text.TextAnchor.TOP_LEFT)
org.jfree.chart.text.TextAnchor.TOP_CENTER == orig(org.jfree.chart.text.TextAnchor.TOP_CENTER)
org.jfree.chart.text.TextAnchor.TOP_RIGHT == orig(org.jfree.chart.text.TextAnchor.TOP_RIGHT)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT)
org.jfree.chart.text.TextAnchor.CENTER_LEFT == orig(org.jfree.chart.text.TextAnchor.CENTER_LEFT)
org.jfree.chart.text.TextAnchor.CENTER == orig(org.jfree.chart.text.TextAnchor.CENTER)
org.jfree.chart.text.TextAnchor.CENTER_RIGHT == orig(org.jfree.chart.text.TextAnchor.CENTER_RIGHT)
org.jfree.chart.text.TextAnchor.BASELINE_LEFT == orig(org.jfree.chart.text.TextAnchor.BASELINE_LEFT)
org.jfree.chart.text.TextAnchor.BASELINE_CENTER == orig(org.jfree.chart.text.TextAnchor.BASELINE_CENTER)
org.jfree.chart.text.TextAnchor.BASELINE_RIGHT == orig(org.jfree.chart.text.TextAnchor.BASELINE_RIGHT)
org.jfree.chart.text.TextAnchor.BOTTOM_LEFT == orig(org.jfree.chart.text.TextAnchor.BOTTOM_LEFT)
org.jfree.chart.text.TextAnchor.BOTTOM_CENTER == orig(org.jfree.chart.text.TextAnchor.BOTTOM_CENTER)
org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT == orig(org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT)
this.basePositiveItemLabelPosition.textAnchor.name == orig(this.basePositiveItemLabelPosition.textAnchor.name)
this.basePositiveItemLabelPosition.textAnchor.name.toString == orig(this.basePositiveItemLabelPosition.textAnchor.name.toString)
this.basePositiveItemLabelPosition.rotationAnchor == orig(this.basePositiveItemLabelPosition.rotationAnchor)
this.basePositiveItemLabelPosition.rotationAnchor.name == orig(this.basePositiveItemLabelPosition.rotationAnchor.name)
this.basePositiveItemLabelPosition.rotationAnchor.name.toString == orig(this.basePositiveItemLabelPosition.rotationAnchor.name.toString)
this.basePositiveItemLabelPosition.angle == orig(this.basePositiveItemLabelPosition.angle)
this.negativeItemLabelPositionList == orig(this.negativeItemLabelPositionList)
this.negativeItemLabelPositionList.objects == orig(this.negativeItemLabelPositionList.objects)
this.negativeItemLabelPositionList.objects.getClass().getName() == orig(this.negativeItemLabelPositionList.objects.getClass().getName())
this.negativeItemLabelPositionList.objects[] == orig(this.negativeItemLabelPositionList.objects[])
this.negativeItemLabelPositionList.size == orig(this.negativeItemLabelPositionList.size)
this.negativeItemLabelPositionList.increment == orig(this.negativeItemLabelPositionList.increment)
this.baseNegativeItemLabelPosition == orig(this.baseNegativeItemLabelPosition)
this.baseNegativeItemLabelPosition.itemLabelAnchor == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor)
this.baseNegativeItemLabelPosition.itemLabelAnchor.name == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor.name)
this.baseNegativeItemLabelPosition.itemLabelAnchor.name.toString == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor.name.toString)
this.baseNegativeItemLabelPosition.textAnchor == orig(this.baseNegativeItemLabelPosition.textAnchor)
this.baseNegativeItemLabelPosition.textAnchor.name == orig(this.baseNegativeItemLabelPosition.textAnchor.name)
this.baseNegativeItemLabelPosition.textAnchor.name.toString == orig(this.baseNegativeItemLabelPosition.textAnchor.name.toString)
this.baseNegativeItemLabelPosition.rotationAnchor == orig(this.baseNegativeItemLabelPosition.rotationAnchor)
this.baseNegativeItemLabelPosition.rotationAnchor.name == orig(this.baseNegativeItemLabelPosition.rotationAnchor.name)
this.baseNegativeItemLabelPosition.rotationAnchor.name.toString == orig(this.baseNegativeItemLabelPosition.rotationAnchor.name.toString)
this.baseNegativeItemLabelPosition.angle == orig(this.baseNegativeItemLabelPosition.angle)
this.itemLabelAnchorOffset == orig(this.itemLabelAnchorOffset)
this.createEntitiesList == orig(this.createEntitiesList)
this.createEntitiesList.objects == orig(this.createEntitiesList.objects)
this.createEntitiesList.objects.getClass().getName() == orig(this.createEntitiesList.objects.getClass().getName())
this.createEntitiesList.objects[] == orig(this.createEntitiesList.objects[])
this.createEntitiesList.size == orig(this.createEntitiesList.size)
this.createEntitiesList.increment == orig(this.createEntitiesList.increment)
this.baseCreateEntities == orig(this.baseCreateEntities)
this.legendShapeList == orig(this.legendShapeList)
this.legendShapeList.objects == orig(this.legendShapeList.objects)
this.legendShapeList.objects.getClass().getName() == orig(this.legendShapeList.objects.getClass().getName())
this.legendShapeList.objects[] == orig(this.legendShapeList.objects[])
this.legendShapeList.size == orig(this.legendShapeList.size)
this.legendShapeList.increment == orig(this.legendShapeList.increment)
this.baseLegendShape == orig(this.baseLegendShape)
this.treatLegendShapeAsLine == orig(this.treatLegendShapeAsLine)
this.legendTextFont == orig(this.legendTextFont)
this.legendTextFont.objects == orig(this.legendTextFont.objects)
this.legendTextFont.objects.getClass().getName() == orig(this.legendTextFont.objects.getClass().getName())
this.legendTextFont.objects[] == orig(this.legendTextFont.objects[])
this.legendTextFont.size == orig(this.legendTextFont.size)
this.legendTextFont.increment == orig(this.legendTextFont.increment)
this.baseLegendTextFont == orig(this.baseLegendTextFont)
this.legendTextPaint == orig(this.legendTextPaint)
this.legendTextPaint.objects == orig(this.legendTextPaint.objects)
this.legendTextPaint.objects.getClass().getName() == orig(this.legendTextPaint.objects.getClass().getName())
this.legendTextPaint.objects[] == orig(this.legendTextPaint.objects[])
this.legendTextPaint.size == orig(this.legendTextPaint.size)
this.legendTextPaint.increment == orig(this.legendTextPaint.increment)
this.baseLegendTextPaint == orig(this.baseLegendTextPaint)
this.dataBoundsIncludesVisibleSeriesOnly == orig(this.dataBoundsIncludesVisibleSeriesOnly)
this.defaultEntityRadius == orig(this.defaultEntityRadius)
this.listenerList == orig(this.listenerList)
this.selectedItemAttributes == orig(this.selectedItemAttributes)
this.selectedItemAttributes.allowNull == orig(this.selectedItemAttributes.allowNull)
this.selectedItemAttributes.paintList == orig(this.selectedItemAttributes.paintList)
this.selectedItemAttributes.paintList.objects == orig(this.selectedItemAttributes.paintList.objects)
this.selectedItemAttributes.paintList.objects.getClass().getName() == orig(this.selectedItemAttributes.paintList.objects.getClass().getName())
this.selectedItemAttributes.paintList.objects[] == orig(this.selectedItemAttributes.paintList.objects[])
this.selectedItemAttributes.paintList.size == orig(this.selectedItemAttributes.paintList.size)
this.selectedItemAttributes.paintList.increment == orig(this.selectedItemAttributes.paintList.increment)
this.selectedItemAttributes.defaultPaint == orig(this.selectedItemAttributes.defaultPaint)
this.selectedItemAttributes.strokeList == orig(this.selectedItemAttributes.strokeList)
this.selectedItemAttributes.strokeList.objects == orig(this.selectedItemAttributes.strokeList.objects)
this.selectedItemAttributes.strokeList.objects.getClass().getName() == orig(this.selectedItemAttributes.strokeList.objects.getClass().getName())
this.selectedItemAttributes.strokeList.objects[] == orig(this.selectedItemAttributes.strokeList.objects[])
this.selectedItemAttributes.strokeList.size == orig(this.selectedItemAttributes.strokeList.size)
this.selectedItemAttributes.strokeList.increment == orig(this.selectedItemAttributes.strokeList.increment)
this.selectedItemAttributes.defaultStroke == orig(this.selectedItemAttributes.defaultStroke)
this.selectedItemAttributes.shapeList == orig(this.selectedItemAttributes.shapeList)
this.selectedItemAttributes.shapeList.objects == orig(this.selectedItemAttributes.shapeList.objects)
this.selectedItemAttributes.shapeList.objects.getClass().getName() == orig(this.selectedItemAttributes.shapeList.objects.getClass().getName())
this.selectedItemAttributes.shapeList.objects[] == orig(this.selectedItemAttributes.shapeList.objects[])
this.selectedItemAttributes.shapeList.size == orig(this.selectedItemAttributes.shapeList.size)
this.selectedItemAttributes.shapeList.increment == orig(this.selectedItemAttributes.shapeList.increment)
this.selectedItemAttributes.defaultShape == orig(this.selectedItemAttributes.defaultShape)
this.selectedItemAttributes.fillPaintList == orig(this.selectedItemAttributes.fillPaintList)
this.selectedItemAttributes.fillPaintList.objects == orig(this.selectedItemAttributes.fillPaintList.objects)
this.selectedItemAttributes.fillPaintList.objects.getClass().getName() == orig(this.selectedItemAttributes.fillPaintList.objects.getClass().getName())
this.selectedItemAttributes.fillPaintList.objects[] == orig(this.selectedItemAttributes.fillPaintList.objects[])
this.selectedItemAttributes.fillPaintList.size == orig(this.selectedItemAttributes.fillPaintList.size)
this.selectedItemAttributes.fillPaintList.increment == orig(this.selectedItemAttributes.fillPaintList.increment)
this.selectedItemAttributes.defaultFillPaint == orig(this.selectedItemAttributes.defaultFillPaint)
this.selectedItemAttributes.defaultFillPaint.getClass().getName() == orig(this.selectedItemAttributes.defaultFillPaint.getClass().getName())
this.selectedItemAttributes.outlinePaintList == orig(this.selectedItemAttributes.outlinePaintList)
this.selectedItemAttributes.outlinePaintList.objects == orig(this.selectedItemAttributes.outlinePaintList.objects)
this.selectedItemAttributes.outlinePaintList.objects.getClass().getName() == orig(this.selectedItemAttributes.outlinePaintList.objects.getClass().getName())
this.selectedItemAttributes.outlinePaintList.objects[] == orig(this.selectedItemAttributes.outlinePaintList.objects[])
this.selectedItemAttributes.outlinePaintList.size == orig(this.selectedItemAttributes.outlinePaintList.size)
this.selectedItemAttributes.outlinePaintList.increment == orig(this.selectedItemAttributes.outlinePaintList.increment)
this.selectedItemAttributes.defaultOutlinePaint == orig(this.selectedItemAttributes.defaultOutlinePaint)
this.selectedItemAttributes.outlineStrokeList == orig(this.selectedItemAttributes.outlineStrokeList)
this.selectedItemAttributes.defaultOutlineStroke == orig(this.selectedItemAttributes.defaultOutlineStroke)
this.selectedItemAttributes.labelsVisibleList == orig(this.selectedItemAttributes.labelsVisibleList)
this.selectedItemAttributes.defaultLabelVisible == orig(this.selectedItemAttributes.defaultLabelVisible)
this.selectedItemAttributes.labelFontList == orig(this.selectedItemAttributes.labelFontList)
this.selectedItemAttributes.defaultLabelFont == orig(this.selectedItemAttributes.defaultLabelFont)
this.selectedItemAttributes.labelPaintList == orig(this.selectedItemAttributes.labelPaintList)
this.selectedItemAttributes.defaultLabelPaint == orig(this.selectedItemAttributes.defaultLabelPaint)
this.selectedItemAttributes.positionItemLabelPositionList == orig(this.selectedItemAttributes.positionItemLabelPositionList)
this.selectedItemAttributes.defaultPositiveItemLabelPosition == orig(this.selectedItemAttributes.defaultPositiveItemLabelPosition)
this.selectedItemAttributes.negativeItemLabelPositionList == orig(this.selectedItemAttributes.negativeItemLabelPositionList)
this.selectedItemAttributes.defaultNegativeItemLabelPosition == orig(this.selectedItemAttributes.defaultNegativeItemLabelPosition)
this.selectedItemAttributes.createEntityList == orig(this.selectedItemAttributes.createEntityList)
this.selectedItemAttributes.defaultCreateEntity == orig(this.selectedItemAttributes.defaultCreateEntity)
org.jfree.chart.renderer.AbstractRenderer.ADJ == orig(org.jfree.chart.renderer.AbstractRenderer.ADJ)
org.jfree.chart.renderer.AbstractRenderer.OPP == orig(org.jfree.chart.renderer.AbstractRenderer.OPP)
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener == orig(org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener)
size(this.paintList.objects[]) == orig(size(this.paintList.objects[]))
size(this.strokeList.objects[]) == orig(size(this.strokeList.objects[]))
size(this.shapeList.objects[]) == orig(size(this.shapeList.objects[]))
this.plot has only one value
this.paintList.objects[] has only one value, of length 8
this.paintList.objects[].getClass().getName() == [java.awt.Color, null, null, null, null, null, null, null]
this.paintList.size == 1
this.strokeList.objects[] has only one value, of length 8
this.strokeList.objects[].getClass().getName() == [java.awt.BasicStroke, null, null, null, null, null, null, null]
this.strokeList.size == 1
this.shapeList.objects[] has only one value, of length 8
this.shapeList.objects[].getClass().getName() == [java.awt.geom.Rectangle2D.Double, null, null, null, null, null, null, null]
this.shapeList.size == 1
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener has only one value
return has only one value
return.dataset has only one value
return.dataset.getClass().getName() == org.jfree.data.category.DefaultCategoryDataset.class
return.seriesKey has only one value
return.seriesKey.getClass().getName() == java.lang.String.class
return.datasetIndex == 0
return.series == 0
return.label has only one value
return.label.toString == "S1"
return.labelFont == null
return.labelPaint == null
return.attributedLabel == null
return.description has only one value
return.description.toString == "S1"
return.toolTipText == null
return.urlText == null
return.shapeVisible == true
return.shape has only one value
return.shape.getClass().getName() == java.awt.geom.Rectangle2D$Double.class
return.shapeFilled == true
return.fillPaint has only one value
return.fillPaint.getClass().getName() == java.awt.Color.class
return.fillPaintTransformer has only one value
return.fillPaintTransformer.getClass().getName() == org.jfree.chart.util.StandardGradientPaintTransformer.class
return.shapeOutlineVisible == true
return.outlinePaint has only one value
return.outlinePaint.getClass().getName() == java.awt.Color.class
return.outlineStroke has only one value
return.outlineStroke.getClass().getName() == java.awt.BasicStroke.class
return.lineVisible == true
return.line has only one value
return.line.getClass().getName() == java.awt.geom.Line2D$Double.class
return.lineStroke has only one value
return.lineStroke.getClass().getName() == java.awt.BasicStroke.class
return.linePaint has only one value
return.linePaint.getClass().getName() == java.awt.Color.class
org.jfree.chart.LegendItem.UNUSED_SHAPE has only one value
org.jfree.chart.LegendItem.UNUSED_SHAPE.getClass().getName() == java.awt.geom.Line2D$Float.class
org.jfree.chart.LegendItem.UNUSED_STROKE has only one value
org.jfree.chart.LegendItem.UNUSED_STROKE.getClass().getName() == java.awt.BasicStroke.class
===========================================================================
org.jfree.chart.renderer.category.LineAndShapeRenderer.getSeriesLinesVisible(int):::ENTER
this.plot has only one value
this.paintList.objects[] has only one value, of length 8
this.paintList.objects[].getClass().getName() == [java.awt.Color, null, null, null, null, null, null, null]
this.paintList.size == 1
this.strokeList.objects[] contains only nulls and has only one value, of length 8
this.strokeList.objects[] elements == null
this.strokeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.strokeList.objects[].getClass().getName() elements == null
this.strokeList.size == 0
this.shapeList.objects[] has only one value, of length 8
this.shapeList.objects[].getClass().getName() == [java.awt.geom.Rectangle2D.Double, null, null, null, null, null, null, null]
this.shapeList.size == 1
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener has only one value
series == 0
===========================================================================
org.jfree.chart.renderer.category.LineAndShapeRenderer.getSeriesLinesVisible(int):::EXIT
this.seriesLinesVisible == orig(this.seriesLinesVisible)
this.seriesLinesVisible.objects == orig(this.seriesLinesVisible.objects)
this.seriesLinesVisible.objects.getClass().getName() == orig(this.seriesLinesVisible.objects.getClass().getName())
this.seriesLinesVisible.objects[] == orig(this.seriesLinesVisible.objects[])
this.seriesLinesVisible.size == orig(this.seriesLinesVisible.size)
this.seriesLinesVisible.increment == orig(this.seriesLinesVisible.increment)
this.baseLinesVisible == orig(this.baseLinesVisible)
this.seriesShapesVisible == orig(this.seriesShapesVisible)
this.seriesShapesVisible.objects == orig(this.seriesShapesVisible.objects)
this.seriesShapesVisible.objects.getClass().getName() == orig(this.seriesShapesVisible.objects.getClass().getName())
this.seriesShapesVisible.objects[] == orig(this.seriesShapesVisible.objects[])
this.seriesShapesVisible.size == orig(this.seriesShapesVisible.size)
this.seriesShapesVisible.increment == orig(this.seriesShapesVisible.increment)
this.baseShapesVisible == orig(this.baseShapesVisible)
this.seriesShapesFilled == orig(this.seriesShapesFilled)
this.seriesShapesFilled.objects == orig(this.seriesShapesFilled.objects)
this.seriesShapesFilled.objects.getClass().getName() == orig(this.seriesShapesFilled.objects.getClass().getName())
this.seriesShapesFilled.objects[] == orig(this.seriesShapesFilled.objects[])
this.seriesShapesFilled.size == orig(this.seriesShapesFilled.size)
this.seriesShapesFilled.increment == orig(this.seriesShapesFilled.increment)
this.baseShapesFilled == orig(this.baseShapesFilled)
this.useFillPaint == orig(this.useFillPaint)
this.drawOutlines == orig(this.drawOutlines)
this.useOutlinePaint == orig(this.useOutlinePaint)
this.useSeriesOffset == orig(this.useSeriesOffset)
this.itemMargin == orig(this.itemMargin)
this.plot == orig(this.plot)
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE)
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_VALUE_LABEL_FONT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_VALUE_LABEL_FONT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT.getClass().getName())
org.jfree.chart.plot.CategoryPlot.localizationResources == orig(org.jfree.chart.plot.CategoryPlot.localizationResources)
org.jfree.chart.plot.CategoryPlot.localizationResources.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.localizationResources.getClass().getName())
this.plot.orientation == orig(this.plot.orientation)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL)
org.jfree.chart.plot.PlotOrientation.VERTICAL == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL)
this.plot.orientation.name == orig(this.plot.orientation.name)
this.plot.orientation.name.toString == orig(this.plot.orientation.name.toString)
this.plot.axisOffset == orig(this.plot.axisOffset)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS)
this.plot.axisOffset.unitType == orig(this.plot.axisOffset.unitType)
this.plot.axisOffset.top == orig(this.plot.axisOffset.top)
this.plot.axisOffset.left == orig(this.plot.axisOffset.left)
this.plot.axisOffset.bottom == orig(this.plot.axisOffset.bottom)
this.plot.axisOffset.right == orig(this.plot.axisOffset.right)
this.plot.domainAxes == orig(this.plot.domainAxes)
this.plot.domainAxes.objects == orig(this.plot.domainAxes.objects)
this.plot.domainAxes.objects.getClass().getName() == orig(this.plot.domainAxes.objects.getClass().getName())
this.plot.domainAxes.objects[] == orig(this.plot.domainAxes.objects[])
this.plot.domainAxes.size == orig(this.plot.domainAxes.size)
this.plot.domainAxes.increment == orig(this.plot.domainAxes.increment)
this.plot.domainAxisLocations == orig(this.plot.domainAxisLocations)
this.plot.domainAxisLocations.objects == orig(this.plot.domainAxisLocations.objects)
this.plot.domainAxisLocations.objects.getClass().getName() == orig(this.plot.domainAxisLocations.objects.getClass().getName())
this.plot.domainAxisLocations.objects[] == orig(this.plot.domainAxisLocations.objects[])
this.plot.domainAxisLocations.size == orig(this.plot.domainAxisLocations.size)
this.plot.domainAxisLocations.increment == orig(this.plot.domainAxisLocations.increment)
this.plot.drawSharedDomainAxis == orig(this.plot.drawSharedDomainAxis)
this.plot.rangeAxes == orig(this.plot.rangeAxes)
this.plot.rangeAxes.objects == orig(this.plot.rangeAxes.objects)
this.plot.rangeAxes.objects.getClass().getName() == orig(this.plot.rangeAxes.objects.getClass().getName())
this.plot.rangeAxes.objects[] == orig(this.plot.rangeAxes.objects[])
this.plot.rangeAxes.size == orig(this.plot.rangeAxes.size)
this.plot.rangeAxes.increment == orig(this.plot.rangeAxes.increment)
this.plot.rangeAxisLocations == orig(this.plot.rangeAxisLocations)
this.plot.rangeAxisLocations.objects == orig(this.plot.rangeAxisLocations.objects)
this.plot.rangeAxisLocations.objects.getClass().getName() == orig(this.plot.rangeAxisLocations.objects.getClass().getName())
this.plot.rangeAxisLocations.objects[] == orig(this.plot.rangeAxisLocations.objects[])
this.plot.rangeAxisLocations.size == orig(this.plot.rangeAxisLocations.size)
this.plot.rangeAxisLocations.increment == orig(this.plot.rangeAxisLocations.increment)
this.plot.datasets == orig(this.plot.datasets)
this.plot.datasets.objects == orig(this.plot.datasets.objects)
this.plot.datasets.objects.getClass().getName() == orig(this.plot.datasets.objects.getClass().getName())
this.plot.datasets.objects[] == orig(this.plot.datasets.objects[])
this.plot.datasets.size == orig(this.plot.datasets.size)
this.plot.datasets.increment == orig(this.plot.datasets.increment)
this.plot.datasetToDomainAxesMap == orig(this.plot.datasetToDomainAxesMap)
this.plot.datasetToRangeAxesMap == orig(this.plot.datasetToRangeAxesMap)
this.plot.renderers == orig(this.plot.renderers)
this.plot.renderers.objects == orig(this.plot.renderers.objects)
this.plot.renderers.objects.getClass().getName() == orig(this.plot.renderers.objects.getClass().getName())
this.plot.renderers.objects[] == orig(this.plot.renderers.objects[])
this.plot.renderers.size == orig(this.plot.renderers.size)
this.plot.renderers.increment == orig(this.plot.renderers.increment)
this.plot.renderingOrder == orig(this.plot.renderingOrder)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE)
this.plot.renderingOrder.name == orig(this.plot.renderingOrder.name)
this.plot.renderingOrder.name.toString == orig(this.plot.renderingOrder.name.toString)
this.plot.columnRenderingOrder == orig(this.plot.columnRenderingOrder)
org.jfree.chart.util.SortOrder.ASCENDING == orig(org.jfree.chart.util.SortOrder.ASCENDING)
org.jfree.chart.util.SortOrder.DESCENDING == orig(org.jfree.chart.util.SortOrder.DESCENDING)
this.plot.columnRenderingOrder.name == orig(this.plot.columnRenderingOrder.name)
this.plot.columnRenderingOrder.name.toString == orig(this.plot.columnRenderingOrder.name.toString)
this.plot.rowRenderingOrder == orig(this.plot.rowRenderingOrder)
this.plot.rowRenderingOrder.name == orig(this.plot.rowRenderingOrder.name)
this.plot.rowRenderingOrder.name.toString == orig(this.plot.rowRenderingOrder.name.toString)
this.plot.domainGridlinesVisible == orig(this.plot.domainGridlinesVisible)
this.plot.domainGridlinePosition == orig(this.plot.domainGridlinePosition)
org.jfree.chart.axis.CategoryAnchor.START == orig(org.jfree.chart.axis.CategoryAnchor.START)
org.jfree.chart.axis.CategoryAnchor.MIDDLE == orig(org.jfree.chart.axis.CategoryAnchor.MIDDLE)
org.jfree.chart.axis.CategoryAnchor.END == orig(org.jfree.chart.axis.CategoryAnchor.END)
this.plot.domainGridlinePosition.name == orig(this.plot.domainGridlinePosition.name)
this.plot.domainGridlinePosition.name.toString == orig(this.plot.domainGridlinePosition.name.toString)
this.plot.domainGridlineStroke == orig(this.plot.domainGridlineStroke)
this.plot.domainGridlineStroke.getClass().getName() == orig(this.plot.domainGridlineStroke.getClass().getName())
this.plot.domainGridlinePaint == orig(this.plot.domainGridlinePaint)
this.plot.domainGridlinePaint.getClass().getName() == orig(this.plot.domainGridlinePaint.getClass().getName())
this.plot.rangeZeroBaselineVisible == orig(this.plot.rangeZeroBaselineVisible)
this.plot.rangeZeroBaselineStroke == orig(this.plot.rangeZeroBaselineStroke)
this.plot.rangeZeroBaselineStroke.getClass().getName() == orig(this.plot.rangeZeroBaselineStroke.getClass().getName())
this.plot.rangeZeroBaselinePaint == orig(this.plot.rangeZeroBaselinePaint)
this.plot.rangeZeroBaselinePaint.getClass().getName() == orig(this.plot.rangeZeroBaselinePaint.getClass().getName())
this.plot.rangeGridlinesVisible == orig(this.plot.rangeGridlinesVisible)
this.plot.rangeGridlineStroke == orig(this.plot.rangeGridlineStroke)
this.plot.rangeGridlineStroke.getClass().getName() == orig(this.plot.rangeGridlineStroke.getClass().getName())
this.plot.rangeGridlinePaint == orig(this.plot.rangeGridlinePaint)
this.plot.rangeGridlinePaint.getClass().getName() == orig(this.plot.rangeGridlinePaint.getClass().getName())
this.plot.rangeMinorGridlinesVisible == orig(this.plot.rangeMinorGridlinesVisible)
this.plot.rangeMinorGridlineStroke == orig(this.plot.rangeMinorGridlineStroke)
this.plot.rangeMinorGridlineStroke.getClass().getName() == orig(this.plot.rangeMinorGridlineStroke.getClass().getName())
this.plot.rangeMinorGridlinePaint == orig(this.plot.rangeMinorGridlinePaint)
this.plot.rangeMinorGridlinePaint.getClass().getName() == orig(this.plot.rangeMinorGridlinePaint.getClass().getName())
this.plot.anchorValue == orig(this.plot.anchorValue)
this.plot.crosshairDatasetIndex == orig(this.plot.crosshairDatasetIndex)
this.plot.domainCrosshairVisible == orig(this.plot.domainCrosshairVisible)
this.plot.domainCrosshairRowKey == orig(this.plot.domainCrosshairRowKey)
this.plot.domainCrosshairColumnKey == orig(this.plot.domainCrosshairColumnKey)
this.plot.domainCrosshairStroke == orig(this.plot.domainCrosshairStroke)
this.plot.domainCrosshairStroke.getClass().getName() == orig(this.plot.domainCrosshairStroke.getClass().getName())
this.plot.domainCrosshairPaint == orig(this.plot.domainCrosshairPaint)
this.plot.domainCrosshairPaint.getClass().getName() == orig(this.plot.domainCrosshairPaint.getClass().getName())
this.plot.rangeCrosshairVisible == orig(this.plot.rangeCrosshairVisible)
this.plot.rangeCrosshairValue == orig(this.plot.rangeCrosshairValue)
this.plot.rangeCrosshairStroke == orig(this.plot.rangeCrosshairStroke)
this.plot.rangeCrosshairStroke.getClass().getName() == orig(this.plot.rangeCrosshairStroke.getClass().getName())
this.plot.rangeCrosshairPaint == orig(this.plot.rangeCrosshairPaint)
this.plot.rangeCrosshairPaint.getClass().getName() == orig(this.plot.rangeCrosshairPaint.getClass().getName())
this.plot.rangeCrosshairLockedOnData == orig(this.plot.rangeCrosshairLockedOnData)
this.plot.foregroundDomainMarkers == orig(this.plot.foregroundDomainMarkers)
this.plot.foregroundDomainMarkers.getClass().getName() == orig(this.plot.foregroundDomainMarkers.getClass().getName())
this.plot.backgroundDomainMarkers == orig(this.plot.backgroundDomainMarkers)
this.plot.backgroundDomainMarkers.getClass().getName() == orig(this.plot.backgroundDomainMarkers.getClass().getName())
this.plot.foregroundRangeMarkers == orig(this.plot.foregroundRangeMarkers)
this.plot.foregroundRangeMarkers.getClass().getName() == orig(this.plot.foregroundRangeMarkers.getClass().getName())
this.plot.backgroundRangeMarkers == orig(this.plot.backgroundRangeMarkers)
this.plot.backgroundRangeMarkers.getClass().getName() == orig(this.plot.backgroundRangeMarkers.getClass().getName())
this.plot.annotations == orig(this.plot.annotations)
this.plot.annotations[] == orig(this.plot.annotations[])
this.plot.annotations.getClass().getName() == orig(this.plot.annotations.getClass().getName())
this.plot.weight == orig(this.plot.weight)
this.plot.fixedDomainAxisSpace == orig(this.plot.fixedDomainAxisSpace)
this.plot.fixedRangeAxisSpace == orig(this.plot.fixedRangeAxisSpace)
this.plot.fixedLegendItems == orig(this.plot.fixedLegendItems)
this.plot.rangePannable == orig(this.plot.rangePannable)
this.plot.shadowGenerator == orig(this.plot.shadowGenerator)
this.plot.shadowGenerator.getClass().getName() == orig(this.plot.shadowGenerator.getClass().getName())
org.jfree.chart.plot.Plot.ZERO == orig(org.jfree.chart.plot.Plot.ZERO)
org.jfree.chart.plot.Plot.ZERO.getClass().getName() == orig(org.jfree.chart.plot.Plot.ZERO.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_INSETS == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.top == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.top)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.left == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.left)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.right == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.right)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName())
this.plot.parent == orig(this.plot.parent)
org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener == orig(org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener)
this.plot.datasetGroup == orig(this.plot.datasetGroup)
this.plot.noDataMessage == orig(this.plot.noDataMessage)
this.plot.noDataMessageFont == orig(this.plot.noDataMessageFont)
this.plot.noDataMessagePaint == orig(this.plot.noDataMessagePaint)
this.plot.noDataMessagePaint.getClass().getName() == orig(this.plot.noDataMessagePaint.getClass().getName())
this.plot.insets == orig(this.plot.insets)
this.plot.insets.unitType == orig(this.plot.insets.unitType)
this.plot.insets.top == orig(this.plot.insets.top)
this.plot.insets.left == orig(this.plot.insets.left)
this.plot.insets.bottom == orig(this.plot.insets.bottom)
this.plot.insets.right == orig(this.plot.insets.right)
this.plot.outlineVisible == orig(this.plot.outlineVisible)
this.plot.outlineStroke == orig(this.plot.outlineStroke)
this.plot.outlineStroke.getClass().getName() == orig(this.plot.outlineStroke.getClass().getName())
this.plot.outlinePaint == orig(this.plot.outlinePaint)
this.plot.outlinePaint.getClass().getName() == orig(this.plot.outlinePaint.getClass().getName())
this.plot.backgroundPaint == orig(this.plot.backgroundPaint)
this.plot.backgroundPaint.getClass().getName() == orig(this.plot.backgroundPaint.getClass().getName())
this.plot.backgroundImage == orig(this.plot.backgroundImage)
this.plot.backgroundImageAlignment == orig(this.plot.backgroundImageAlignment)
this.plot.backgroundImageAlpha == orig(this.plot.backgroundImageAlpha)
this.plot.foregroundAlpha == orig(this.plot.foregroundAlpha)
this.plot.backgroundAlpha == orig(this.plot.backgroundAlpha)
this.plot.drawingSupplier == orig(this.plot.drawingSupplier)
this.plot.drawingSupplier.getClass().getName() == orig(this.plot.drawingSupplier.getClass().getName())
this.plot.listenerList == orig(this.plot.listenerList)
this.plot.notify == orig(this.plot.notify)
this.itemLabelGeneratorList == orig(this.itemLabelGeneratorList)
this.itemLabelGeneratorList.objects == orig(this.itemLabelGeneratorList.objects)
this.itemLabelGeneratorList.objects.getClass().getName() == orig(this.itemLabelGeneratorList.objects.getClass().getName())
this.itemLabelGeneratorList.objects[] == orig(this.itemLabelGeneratorList.objects[])
this.itemLabelGeneratorList.size == orig(this.itemLabelGeneratorList.size)
this.itemLabelGeneratorList.increment == orig(this.itemLabelGeneratorList.increment)
this.baseItemLabelGenerator == orig(this.baseItemLabelGenerator)
this.toolTipGeneratorList == orig(this.toolTipGeneratorList)
this.toolTipGeneratorList.objects == orig(this.toolTipGeneratorList.objects)
this.toolTipGeneratorList.objects.getClass().getName() == orig(this.toolTipGeneratorList.objects.getClass().getName())
this.toolTipGeneratorList.objects[] == orig(this.toolTipGeneratorList.objects[])
this.toolTipGeneratorList.size == orig(this.toolTipGeneratorList.size)
this.toolTipGeneratorList.increment == orig(this.toolTipGeneratorList.increment)
this.baseToolTipGenerator == orig(this.baseToolTipGenerator)
this.urlGeneratorList == orig(this.urlGeneratorList)
this.urlGeneratorList.objects == orig(this.urlGeneratorList.objects)
this.urlGeneratorList.objects.getClass().getName() == orig(this.urlGeneratorList.objects.getClass().getName())
this.urlGeneratorList.objects[] == orig(this.urlGeneratorList.objects[])
this.urlGeneratorList.size == orig(this.urlGeneratorList.size)
this.urlGeneratorList.increment == orig(this.urlGeneratorList.increment)
this.baseURLGenerator == orig(this.baseURLGenerator)
this.legendItemLabelGenerator == orig(this.legendItemLabelGenerator)
this.legendItemLabelGenerator.getClass().getName() == orig(this.legendItemLabelGenerator.getClass().getName())
this.legendItemToolTipGenerator == orig(this.legendItemToolTipGenerator)
this.legendItemURLGenerator == orig(this.legendItemURLGenerator)
this.backgroundAnnotations == orig(this.backgroundAnnotations)
this.backgroundAnnotations[] == orig(this.backgroundAnnotations[])
this.backgroundAnnotations.getClass().getName() == orig(this.backgroundAnnotations.getClass().getName())
this.foregroundAnnotations == orig(this.foregroundAnnotations)
this.foregroundAnnotations[] == orig(this.foregroundAnnotations[])
this.foregroundAnnotations.getClass().getName() == orig(this.foregroundAnnotations.getClass().getName())
this.rowCount == orig(this.rowCount)
this.columnCount == orig(this.columnCount)
org.jfree.chart.renderer.AbstractRenderer.ZERO == orig(org.jfree.chart.renderer.AbstractRenderer.ZERO)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_FONT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_FONT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT.getClass().getName())
this.seriesVisibleList == orig(this.seriesVisibleList)
this.seriesVisibleList.objects == orig(this.seriesVisibleList.objects)
this.seriesVisibleList.objects.getClass().getName() == orig(this.seriesVisibleList.objects.getClass().getName())
this.seriesVisibleList.objects[] == orig(this.seriesVisibleList.objects[])
this.seriesVisibleList.size == orig(this.seriesVisibleList.size)
this.seriesVisibleList.increment == orig(this.seriesVisibleList.increment)
this.baseSeriesVisible == orig(this.baseSeriesVisible)
this.seriesVisibleInLegendList == orig(this.seriesVisibleInLegendList)
this.seriesVisibleInLegendList.objects == orig(this.seriesVisibleInLegendList.objects)
this.seriesVisibleInLegendList.objects.getClass().getName() == orig(this.seriesVisibleInLegendList.objects.getClass().getName())
this.seriesVisibleInLegendList.objects[] == orig(this.seriesVisibleInLegendList.objects[])
this.seriesVisibleInLegendList.size == orig(this.seriesVisibleInLegendList.size)
this.seriesVisibleInLegendList.increment == orig(this.seriesVisibleInLegendList.increment)
this.baseSeriesVisibleInLegend == orig(this.baseSeriesVisibleInLegend)
this.paintList == orig(this.paintList)
this.paintList.objects == orig(this.paintList.objects)
this.paintList.objects.getClass().getName() == orig(this.paintList.objects.getClass().getName())
this.paintList.objects[] == orig(this.paintList.objects[])
this.paintList.size == orig(this.paintList.size)
this.paintList.increment == orig(this.paintList.increment)
this.autoPopulateSeriesPaint == orig(this.autoPopulateSeriesPaint)
this.basePaint == orig(this.basePaint)
this.basePaint.getClass().getName() == orig(this.basePaint.getClass().getName())
this.fillPaintList == orig(this.fillPaintList)
this.fillPaintList.objects == orig(this.fillPaintList.objects)
this.fillPaintList.objects.getClass().getName() == orig(this.fillPaintList.objects.getClass().getName())
this.fillPaintList.objects[] == orig(this.fillPaintList.objects[])
this.fillPaintList.size == orig(this.fillPaintList.size)
this.fillPaintList.increment == orig(this.fillPaintList.increment)
this.autoPopulateSeriesFillPaint == orig(this.autoPopulateSeriesFillPaint)
this.baseFillPaint == orig(this.baseFillPaint)
this.baseFillPaint.getClass().getName() == orig(this.baseFillPaint.getClass().getName())
this.outlinePaintList == orig(this.outlinePaintList)
this.outlinePaintList.objects == orig(this.outlinePaintList.objects)
this.outlinePaintList.objects.getClass().getName() == orig(this.outlinePaintList.objects.getClass().getName())
this.outlinePaintList.objects[] == orig(this.outlinePaintList.objects[])
this.outlinePaintList.size == orig(this.outlinePaintList.size)
this.outlinePaintList.increment == orig(this.outlinePaintList.increment)
this.autoPopulateSeriesOutlinePaint == orig(this.autoPopulateSeriesOutlinePaint)
this.baseOutlinePaint == orig(this.baseOutlinePaint)
this.baseOutlinePaint.getClass().getName() == orig(this.baseOutlinePaint.getClass().getName())
this.strokeList == orig(this.strokeList)
this.strokeList.objects == orig(this.strokeList.objects)
this.strokeList.objects.getClass().getName() == orig(this.strokeList.objects.getClass().getName())
this.strokeList.objects[] == orig(this.strokeList.objects[])
this.strokeList.size == orig(this.strokeList.size)
this.strokeList.increment == orig(this.strokeList.increment)
this.autoPopulateSeriesStroke == orig(this.autoPopulateSeriesStroke)
this.baseStroke == orig(this.baseStroke)
this.baseStroke.getClass().getName() == orig(this.baseStroke.getClass().getName())
this.outlineStrokeList == orig(this.outlineStrokeList)
this.outlineStrokeList.objects == orig(this.outlineStrokeList.objects)
this.outlineStrokeList.objects.getClass().getName() == orig(this.outlineStrokeList.objects.getClass().getName())
this.outlineStrokeList.objects[] == orig(this.outlineStrokeList.objects[])
this.outlineStrokeList.size == orig(this.outlineStrokeList.size)
this.outlineStrokeList.increment == orig(this.outlineStrokeList.increment)
this.baseOutlineStroke == orig(this.baseOutlineStroke)
this.baseOutlineStroke.getClass().getName() == orig(this.baseOutlineStroke.getClass().getName())
this.autoPopulateSeriesOutlineStroke == orig(this.autoPopulateSeriesOutlineStroke)
this.shapeList == orig(this.shapeList)
this.shapeList.objects == orig(this.shapeList.objects)
this.shapeList.objects.getClass().getName() == orig(this.shapeList.objects.getClass().getName())
this.shapeList.objects[] == orig(this.shapeList.objects[])
this.shapeList.size == orig(this.shapeList.size)
this.shapeList.increment == orig(this.shapeList.increment)
this.autoPopulateSeriesShape == orig(this.autoPopulateSeriesShape)
this.baseShape == orig(this.baseShape)
this.baseShape.getClass().getName() == orig(this.baseShape.getClass().getName())
this.itemLabelsVisibleList == orig(this.itemLabelsVisibleList)
this.itemLabelsVisibleList.objects == orig(this.itemLabelsVisibleList.objects)
this.itemLabelsVisibleList.objects.getClass().getName() == orig(this.itemLabelsVisibleList.objects.getClass().getName())
this.itemLabelsVisibleList.objects[] == orig(this.itemLabelsVisibleList.objects[])
this.itemLabelsVisibleList.size == orig(this.itemLabelsVisibleList.size)
this.itemLabelsVisibleList.increment == orig(this.itemLabelsVisibleList.increment)
this.baseItemLabelsVisible == orig(this.baseItemLabelsVisible)
this.itemLabelFontList == orig(this.itemLabelFontList)
this.itemLabelFontList.objects == orig(this.itemLabelFontList.objects)
this.itemLabelFontList.objects.getClass().getName() == orig(this.itemLabelFontList.objects.getClass().getName())
this.itemLabelFontList.objects[] == orig(this.itemLabelFontList.objects[])
this.itemLabelFontList.size == orig(this.itemLabelFontList.size)
this.itemLabelFontList.increment == orig(this.itemLabelFontList.increment)
this.baseItemLabelFont == orig(this.baseItemLabelFont)
this.itemLabelPaintList == orig(this.itemLabelPaintList)
this.itemLabelPaintList.objects == orig(this.itemLabelPaintList.objects)
this.itemLabelPaintList.objects.getClass().getName() == orig(this.itemLabelPaintList.objects.getClass().getName())
this.itemLabelPaintList.objects[] == orig(this.itemLabelPaintList.objects[])
this.itemLabelPaintList.size == orig(this.itemLabelPaintList.size)
this.itemLabelPaintList.increment == orig(this.itemLabelPaintList.increment)
this.baseItemLabelPaint == orig(this.baseItemLabelPaint)
this.baseItemLabelPaint.getClass().getName() == orig(this.baseItemLabelPaint.getClass().getName())
this.positiveItemLabelPositionList == orig(this.positiveItemLabelPositionList)
this.positiveItemLabelPositionList.objects == orig(this.positiveItemLabelPositionList.objects)
this.positiveItemLabelPositionList.objects.getClass().getName() == orig(this.positiveItemLabelPositionList.objects.getClass().getName())
this.positiveItemLabelPositionList.objects[] == orig(this.positiveItemLabelPositionList.objects[])
this.positiveItemLabelPositionList.size == orig(this.positiveItemLabelPositionList.size)
this.positiveItemLabelPositionList.increment == orig(this.positiveItemLabelPositionList.increment)
this.basePositiveItemLabelPosition == orig(this.basePositiveItemLabelPosition)
this.basePositiveItemLabelPosition.itemLabelAnchor == orig(this.basePositiveItemLabelPosition.itemLabelAnchor)
org.jfree.chart.labels.ItemLabelAnchor.CENTER == orig(org.jfree.chart.labels.ItemLabelAnchor.CENTER)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE1 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE1)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE2 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE2)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE3 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE3)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE4 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE4)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE5 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE5)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE6 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE6)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE7 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE7)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE8 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE8)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE9 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE9)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE10 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE10)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE11 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE11)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE12 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE12)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12)
this.basePositiveItemLabelPosition.itemLabelAnchor.name == orig(this.basePositiveItemLabelPosition.itemLabelAnchor.name)
this.basePositiveItemLabelPosition.itemLabelAnchor.name.toString == orig(this.basePositiveItemLabelPosition.itemLabelAnchor.name.toString)
this.basePositiveItemLabelPosition.textAnchor == orig(this.basePositiveItemLabelPosition.textAnchor)
org.jfree.chart.text.TextAnchor.TOP_LEFT == orig(org.jfree.chart.text.TextAnchor.TOP_LEFT)
org.jfree.chart.text.TextAnchor.TOP_CENTER == orig(org.jfree.chart.text.TextAnchor.TOP_CENTER)
org.jfree.chart.text.TextAnchor.TOP_RIGHT == orig(org.jfree.chart.text.TextAnchor.TOP_RIGHT)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT)
org.jfree.chart.text.TextAnchor.CENTER_LEFT == orig(org.jfree.chart.text.TextAnchor.CENTER_LEFT)
org.jfree.chart.text.TextAnchor.CENTER == orig(org.jfree.chart.text.TextAnchor.CENTER)
org.jfree.chart.text.TextAnchor.CENTER_RIGHT == orig(org.jfree.chart.text.TextAnchor.CENTER_RIGHT)
org.jfree.chart.text.TextAnchor.BASELINE_LEFT == orig(org.jfree.chart.text.TextAnchor.BASELINE_LEFT)
org.jfree.chart.text.TextAnchor.BASELINE_CENTER == orig(org.jfree.chart.text.TextAnchor.BASELINE_CENTER)
org.jfree.chart.text.TextAnchor.BASELINE_RIGHT == orig(org.jfree.chart.text.TextAnchor.BASELINE_RIGHT)
org.jfree.chart.text.TextAnchor.BOTTOM_LEFT == orig(org.jfree.chart.text.TextAnchor.BOTTOM_LEFT)
org.jfree.chart.text.TextAnchor.BOTTOM_CENTER == orig(org.jfree.chart.text.TextAnchor.BOTTOM_CENTER)
org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT == orig(org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT)
this.basePositiveItemLabelPosition.textAnchor.name == orig(this.basePositiveItemLabelPosition.textAnchor.name)
this.basePositiveItemLabelPosition.textAnchor.name.toString == orig(this.basePositiveItemLabelPosition.textAnchor.name.toString)
this.basePositiveItemLabelPosition.rotationAnchor == orig(this.basePositiveItemLabelPosition.rotationAnchor)
this.basePositiveItemLabelPosition.rotationAnchor.name == orig(this.basePositiveItemLabelPosition.rotationAnchor.name)
this.basePositiveItemLabelPosition.rotationAnchor.name.toString == orig(this.basePositiveItemLabelPosition.rotationAnchor.name.toString)
this.basePositiveItemLabelPosition.angle == orig(this.basePositiveItemLabelPosition.angle)
this.negativeItemLabelPositionList == orig(this.negativeItemLabelPositionList)
this.negativeItemLabelPositionList.objects == orig(this.negativeItemLabelPositionList.objects)
this.negativeItemLabelPositionList.objects.getClass().getName() == orig(this.negativeItemLabelPositionList.objects.getClass().getName())
this.negativeItemLabelPositionList.objects[] == orig(this.negativeItemLabelPositionList.objects[])
this.negativeItemLabelPositionList.size == orig(this.negativeItemLabelPositionList.size)
this.negativeItemLabelPositionList.increment == orig(this.negativeItemLabelPositionList.increment)
this.baseNegativeItemLabelPosition == orig(this.baseNegativeItemLabelPosition)
this.baseNegativeItemLabelPosition.itemLabelAnchor == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor)
this.baseNegativeItemLabelPosition.itemLabelAnchor.name == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor.name)
this.baseNegativeItemLabelPosition.itemLabelAnchor.name.toString == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor.name.toString)
this.baseNegativeItemLabelPosition.textAnchor == orig(this.baseNegativeItemLabelPosition.textAnchor)
this.baseNegativeItemLabelPosition.textAnchor.name == orig(this.baseNegativeItemLabelPosition.textAnchor.name)
this.baseNegativeItemLabelPosition.textAnchor.name.toString == orig(this.baseNegativeItemLabelPosition.textAnchor.name.toString)
this.baseNegativeItemLabelPosition.rotationAnchor == orig(this.baseNegativeItemLabelPosition.rotationAnchor)
this.baseNegativeItemLabelPosition.rotationAnchor.name == orig(this.baseNegativeItemLabelPosition.rotationAnchor.name)
this.baseNegativeItemLabelPosition.rotationAnchor.name.toString == orig(this.baseNegativeItemLabelPosition.rotationAnchor.name.toString)
this.baseNegativeItemLabelPosition.angle == orig(this.baseNegativeItemLabelPosition.angle)
this.itemLabelAnchorOffset == orig(this.itemLabelAnchorOffset)
this.createEntitiesList == orig(this.createEntitiesList)
this.createEntitiesList.objects == orig(this.createEntitiesList.objects)
this.createEntitiesList.objects.getClass().getName() == orig(this.createEntitiesList.objects.getClass().getName())
this.createEntitiesList.objects[] == orig(this.createEntitiesList.objects[])
this.createEntitiesList.size == orig(this.createEntitiesList.size)
this.createEntitiesList.increment == orig(this.createEntitiesList.increment)
this.baseCreateEntities == orig(this.baseCreateEntities)
this.legendShapeList == orig(this.legendShapeList)
this.legendShapeList.objects == orig(this.legendShapeList.objects)
this.legendShapeList.objects.getClass().getName() == orig(this.legendShapeList.objects.getClass().getName())
this.legendShapeList.objects[] == orig(this.legendShapeList.objects[])
this.legendShapeList.size == orig(this.legendShapeList.size)
this.legendShapeList.increment == orig(this.legendShapeList.increment)
this.baseLegendShape == orig(this.baseLegendShape)
this.treatLegendShapeAsLine == orig(this.treatLegendShapeAsLine)
this.legendTextFont == orig(this.legendTextFont)
this.legendTextFont.objects == orig(this.legendTextFont.objects)
this.legendTextFont.objects.getClass().getName() == orig(this.legendTextFont.objects.getClass().getName())
this.legendTextFont.objects[] == orig(this.legendTextFont.objects[])
this.legendTextFont.size == orig(this.legendTextFont.size)
this.legendTextFont.increment == orig(this.legendTextFont.increment)
this.baseLegendTextFont == orig(this.baseLegendTextFont)
this.legendTextPaint == orig(this.legendTextPaint)
this.legendTextPaint.objects == orig(this.legendTextPaint.objects)
this.legendTextPaint.objects.getClass().getName() == orig(this.legendTextPaint.objects.getClass().getName())
this.legendTextPaint.objects[] == orig(this.legendTextPaint.objects[])
this.legendTextPaint.size == orig(this.legendTextPaint.size)
this.legendTextPaint.increment == orig(this.legendTextPaint.increment)
this.baseLegendTextPaint == orig(this.baseLegendTextPaint)
this.dataBoundsIncludesVisibleSeriesOnly == orig(this.dataBoundsIncludesVisibleSeriesOnly)
this.defaultEntityRadius == orig(this.defaultEntityRadius)
this.listenerList == orig(this.listenerList)
this.selectedItemAttributes == orig(this.selectedItemAttributes)
this.selectedItemAttributes.allowNull == orig(this.selectedItemAttributes.allowNull)
this.selectedItemAttributes.paintList == orig(this.selectedItemAttributes.paintList)
this.selectedItemAttributes.paintList.objects == orig(this.selectedItemAttributes.paintList.objects)
this.selectedItemAttributes.paintList.objects.getClass().getName() == orig(this.selectedItemAttributes.paintList.objects.getClass().getName())
this.selectedItemAttributes.paintList.objects[] == orig(this.selectedItemAttributes.paintList.objects[])
this.selectedItemAttributes.paintList.size == orig(this.selectedItemAttributes.paintList.size)
this.selectedItemAttributes.paintList.increment == orig(this.selectedItemAttributes.paintList.increment)
this.selectedItemAttributes.defaultPaint == orig(this.selectedItemAttributes.defaultPaint)
this.selectedItemAttributes.strokeList == orig(this.selectedItemAttributes.strokeList)
this.selectedItemAttributes.strokeList.objects == orig(this.selectedItemAttributes.strokeList.objects)
this.selectedItemAttributes.strokeList.objects.getClass().getName() == orig(this.selectedItemAttributes.strokeList.objects.getClass().getName())
this.selectedItemAttributes.strokeList.objects[] == orig(this.selectedItemAttributes.strokeList.objects[])
this.selectedItemAttributes.strokeList.size == orig(this.selectedItemAttributes.strokeList.size)
this.selectedItemAttributes.strokeList.increment == orig(this.selectedItemAttributes.strokeList.increment)
this.selectedItemAttributes.defaultStroke == orig(this.selectedItemAttributes.defaultStroke)
this.selectedItemAttributes.shapeList == orig(this.selectedItemAttributes.shapeList)
this.selectedItemAttributes.shapeList.objects == orig(this.selectedItemAttributes.shapeList.objects)
this.selectedItemAttributes.shapeList.objects.getClass().getName() == orig(this.selectedItemAttributes.shapeList.objects.getClass().getName())
this.selectedItemAttributes.shapeList.objects[] == orig(this.selectedItemAttributes.shapeList.objects[])
this.selectedItemAttributes.shapeList.size == orig(this.selectedItemAttributes.shapeList.size)
this.selectedItemAttributes.shapeList.increment == orig(this.selectedItemAttributes.shapeList.increment)
this.selectedItemAttributes.defaultShape == orig(this.selectedItemAttributes.defaultShape)
this.selectedItemAttributes.fillPaintList == orig(this.selectedItemAttributes.fillPaintList)
this.selectedItemAttributes.fillPaintList.objects == orig(this.selectedItemAttributes.fillPaintList.objects)
this.selectedItemAttributes.fillPaintList.objects.getClass().getName() == orig(this.selectedItemAttributes.fillPaintList.objects.getClass().getName())
this.selectedItemAttributes.fillPaintList.objects[] == orig(this.selectedItemAttributes.fillPaintList.objects[])
this.selectedItemAttributes.fillPaintList.size == orig(this.selectedItemAttributes.fillPaintList.size)
this.selectedItemAttributes.fillPaintList.increment == orig(this.selectedItemAttributes.fillPaintList.increment)
this.selectedItemAttributes.defaultFillPaint == orig(this.selectedItemAttributes.defaultFillPaint)
this.selectedItemAttributes.defaultFillPaint.getClass().getName() == orig(this.selectedItemAttributes.defaultFillPaint.getClass().getName())
this.selectedItemAttributes.outlinePaintList == orig(this.selectedItemAttributes.outlinePaintList)
this.selectedItemAttributes.outlinePaintList.objects == orig(this.selectedItemAttributes.outlinePaintList.objects)
this.selectedItemAttributes.outlinePaintList.objects.getClass().getName() == orig(this.selectedItemAttributes.outlinePaintList.objects.getClass().getName())
this.selectedItemAttributes.outlinePaintList.objects[] == orig(this.selectedItemAttributes.outlinePaintList.objects[])
this.selectedItemAttributes.outlinePaintList.size == orig(this.selectedItemAttributes.outlinePaintList.size)
this.selectedItemAttributes.outlinePaintList.increment == orig(this.selectedItemAttributes.outlinePaintList.increment)
this.selectedItemAttributes.defaultOutlinePaint == orig(this.selectedItemAttributes.defaultOutlinePaint)
this.selectedItemAttributes.outlineStrokeList == orig(this.selectedItemAttributes.outlineStrokeList)
this.selectedItemAttributes.defaultOutlineStroke == orig(this.selectedItemAttributes.defaultOutlineStroke)
this.selectedItemAttributes.labelsVisibleList == orig(this.selectedItemAttributes.labelsVisibleList)
this.selectedItemAttributes.defaultLabelVisible == orig(this.selectedItemAttributes.defaultLabelVisible)
this.selectedItemAttributes.labelFontList == orig(this.selectedItemAttributes.labelFontList)
this.selectedItemAttributes.defaultLabelFont == orig(this.selectedItemAttributes.defaultLabelFont)
this.selectedItemAttributes.labelPaintList == orig(this.selectedItemAttributes.labelPaintList)
this.selectedItemAttributes.defaultLabelPaint == orig(this.selectedItemAttributes.defaultLabelPaint)
this.selectedItemAttributes.positionItemLabelPositionList == orig(this.selectedItemAttributes.positionItemLabelPositionList)
this.selectedItemAttributes.defaultPositiveItemLabelPosition == orig(this.selectedItemAttributes.defaultPositiveItemLabelPosition)
this.selectedItemAttributes.negativeItemLabelPositionList == orig(this.selectedItemAttributes.negativeItemLabelPositionList)
this.selectedItemAttributes.defaultNegativeItemLabelPosition == orig(this.selectedItemAttributes.defaultNegativeItemLabelPosition)
this.selectedItemAttributes.createEntityList == orig(this.selectedItemAttributes.createEntityList)
this.selectedItemAttributes.defaultCreateEntity == orig(this.selectedItemAttributes.defaultCreateEntity)
org.jfree.chart.renderer.AbstractRenderer.ADJ == orig(org.jfree.chart.renderer.AbstractRenderer.ADJ)
org.jfree.chart.renderer.AbstractRenderer.OPP == orig(org.jfree.chart.renderer.AbstractRenderer.OPP)
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener == orig(org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener)
this.plot has only one value
this.paintList.objects[] has only one value, of length 8
this.paintList.objects[].getClass().getName() == [java.awt.Color, null, null, null, null, null, null, null]
this.paintList.size == 1
this.strokeList.objects[] contains only nulls and has only one value, of length 8
this.strokeList.objects[] elements == null
this.strokeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.strokeList.objects[].getClass().getName() elements == null
this.strokeList.size == 0
this.shapeList.objects[] has only one value, of length 8
this.shapeList.objects[].getClass().getName() == [java.awt.geom.Rectangle2D.Double, null, null, null, null, null, null, null]
this.shapeList.size == 1
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener has only one value
return == null
===========================================================================
org.jfree.chart.renderer.category.LineAndShapeRenderer.getSeriesShapesFilled(int):::ENTER
this.plot has only one value
this.paintList.objects[] has only one value, of length 8
this.paintList.objects[].getClass().getName() == [java.awt.Color, null, null, null, null, null, null, null]
this.paintList.size == 1
this.strokeList.objects[] contains only nulls and has only one value, of length 8
this.strokeList.objects[] elements == null
this.strokeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.strokeList.objects[].getClass().getName() elements == null
this.strokeList.size == 0
this.shapeList.objects[] has only one value, of length 8
this.shapeList.objects[].getClass().getName() == [java.awt.geom.Rectangle2D.Double, null, null, null, null, null, null, null]
this.shapeList.size == 1
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener has only one value
series == 0
===========================================================================
org.jfree.chart.renderer.category.LineAndShapeRenderer.getSeriesShapesFilled(int):::EXIT
this.seriesLinesVisible == orig(this.seriesLinesVisible)
this.seriesLinesVisible.objects == orig(this.seriesLinesVisible.objects)
this.seriesLinesVisible.objects.getClass().getName() == orig(this.seriesLinesVisible.objects.getClass().getName())
this.seriesLinesVisible.objects[] == orig(this.seriesLinesVisible.objects[])
this.seriesLinesVisible.size == orig(this.seriesLinesVisible.size)
this.seriesLinesVisible.increment == orig(this.seriesLinesVisible.increment)
this.baseLinesVisible == orig(this.baseLinesVisible)
this.seriesShapesVisible == orig(this.seriesShapesVisible)
this.seriesShapesVisible.objects == orig(this.seriesShapesVisible.objects)
this.seriesShapesVisible.objects.getClass().getName() == orig(this.seriesShapesVisible.objects.getClass().getName())
this.seriesShapesVisible.objects[] == orig(this.seriesShapesVisible.objects[])
this.seriesShapesVisible.size == orig(this.seriesShapesVisible.size)
this.seriesShapesVisible.increment == orig(this.seriesShapesVisible.increment)
this.baseShapesVisible == orig(this.baseShapesVisible)
this.seriesShapesFilled == orig(this.seriesShapesFilled)
this.seriesShapesFilled.objects == orig(this.seriesShapesFilled.objects)
this.seriesShapesFilled.objects.getClass().getName() == orig(this.seriesShapesFilled.objects.getClass().getName())
this.seriesShapesFilled.objects[] == orig(this.seriesShapesFilled.objects[])
this.seriesShapesFilled.size == orig(this.seriesShapesFilled.size)
this.seriesShapesFilled.increment == orig(this.seriesShapesFilled.increment)
this.baseShapesFilled == orig(this.baseShapesFilled)
this.useFillPaint == orig(this.useFillPaint)
this.drawOutlines == orig(this.drawOutlines)
this.useOutlinePaint == orig(this.useOutlinePaint)
this.useSeriesOffset == orig(this.useSeriesOffset)
this.itemMargin == orig(this.itemMargin)
this.plot == orig(this.plot)
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE)
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_VALUE_LABEL_FONT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_VALUE_LABEL_FONT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT.getClass().getName())
org.jfree.chart.plot.CategoryPlot.localizationResources == orig(org.jfree.chart.plot.CategoryPlot.localizationResources)
org.jfree.chart.plot.CategoryPlot.localizationResources.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.localizationResources.getClass().getName())
this.plot.orientation == orig(this.plot.orientation)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL)
org.jfree.chart.plot.PlotOrientation.VERTICAL == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL)
this.plot.orientation.name == orig(this.plot.orientation.name)
this.plot.orientation.name.toString == orig(this.plot.orientation.name.toString)
this.plot.axisOffset == orig(this.plot.axisOffset)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS)
this.plot.axisOffset.unitType == orig(this.plot.axisOffset.unitType)
this.plot.axisOffset.top == orig(this.plot.axisOffset.top)
this.plot.axisOffset.left == orig(this.plot.axisOffset.left)
this.plot.axisOffset.bottom == orig(this.plot.axisOffset.bottom)
this.plot.axisOffset.right == orig(this.plot.axisOffset.right)
this.plot.domainAxes == orig(this.plot.domainAxes)
this.plot.domainAxes.objects == orig(this.plot.domainAxes.objects)
this.plot.domainAxes.objects.getClass().getName() == orig(this.plot.domainAxes.objects.getClass().getName())
this.plot.domainAxes.objects[] == orig(this.plot.domainAxes.objects[])
this.plot.domainAxes.size == orig(this.plot.domainAxes.size)
this.plot.domainAxes.increment == orig(this.plot.domainAxes.increment)
this.plot.domainAxisLocations == orig(this.plot.domainAxisLocations)
this.plot.domainAxisLocations.objects == orig(this.plot.domainAxisLocations.objects)
this.plot.domainAxisLocations.objects.getClass().getName() == orig(this.plot.domainAxisLocations.objects.getClass().getName())
this.plot.domainAxisLocations.objects[] == orig(this.plot.domainAxisLocations.objects[])
this.plot.domainAxisLocations.size == orig(this.plot.domainAxisLocations.size)
this.plot.domainAxisLocations.increment == orig(this.plot.domainAxisLocations.increment)
this.plot.drawSharedDomainAxis == orig(this.plot.drawSharedDomainAxis)
this.plot.rangeAxes == orig(this.plot.rangeAxes)
this.plot.rangeAxes.objects == orig(this.plot.rangeAxes.objects)
this.plot.rangeAxes.objects.getClass().getName() == orig(this.plot.rangeAxes.objects.getClass().getName())
this.plot.rangeAxes.objects[] == orig(this.plot.rangeAxes.objects[])
this.plot.rangeAxes.size == orig(this.plot.rangeAxes.size)
this.plot.rangeAxes.increment == orig(this.plot.rangeAxes.increment)
this.plot.rangeAxisLocations == orig(this.plot.rangeAxisLocations)
this.plot.rangeAxisLocations.objects == orig(this.plot.rangeAxisLocations.objects)
this.plot.rangeAxisLocations.objects.getClass().getName() == orig(this.plot.rangeAxisLocations.objects.getClass().getName())
this.plot.rangeAxisLocations.objects[] == orig(this.plot.rangeAxisLocations.objects[])
this.plot.rangeAxisLocations.size == orig(this.plot.rangeAxisLocations.size)
this.plot.rangeAxisLocations.increment == orig(this.plot.rangeAxisLocations.increment)
this.plot.datasets == orig(this.plot.datasets)
this.plot.datasets.objects == orig(this.plot.datasets.objects)
this.plot.datasets.objects.getClass().getName() == orig(this.plot.datasets.objects.getClass().getName())
this.plot.datasets.objects[] == orig(this.plot.datasets.objects[])
this.plot.datasets.size == orig(this.plot.datasets.size)
this.plot.datasets.increment == orig(this.plot.datasets.increment)
this.plot.datasetToDomainAxesMap == orig(this.plot.datasetToDomainAxesMap)
this.plot.datasetToRangeAxesMap == orig(this.plot.datasetToRangeAxesMap)
this.plot.renderers == orig(this.plot.renderers)
this.plot.renderers.objects == orig(this.plot.renderers.objects)
this.plot.renderers.objects.getClass().getName() == orig(this.plot.renderers.objects.getClass().getName())
this.plot.renderers.objects[] == orig(this.plot.renderers.objects[])
this.plot.renderers.size == orig(this.plot.renderers.size)
this.plot.renderers.increment == orig(this.plot.renderers.increment)
this.plot.renderingOrder == orig(this.plot.renderingOrder)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE)
this.plot.renderingOrder.name == orig(this.plot.renderingOrder.name)
this.plot.renderingOrder.name.toString == orig(this.plot.renderingOrder.name.toString)
this.plot.columnRenderingOrder == orig(this.plot.columnRenderingOrder)
org.jfree.chart.util.SortOrder.ASCENDING == orig(org.jfree.chart.util.SortOrder.ASCENDING)
org.jfree.chart.util.SortOrder.DESCENDING == orig(org.jfree.chart.util.SortOrder.DESCENDING)
this.plot.columnRenderingOrder.name == orig(this.plot.columnRenderingOrder.name)
this.plot.columnRenderingOrder.name.toString == orig(this.plot.columnRenderingOrder.name.toString)
this.plot.rowRenderingOrder == orig(this.plot.rowRenderingOrder)
this.plot.rowRenderingOrder.name == orig(this.plot.rowRenderingOrder.name)
this.plot.rowRenderingOrder.name.toString == orig(this.plot.rowRenderingOrder.name.toString)
this.plot.domainGridlinesVisible == orig(this.plot.domainGridlinesVisible)
this.plot.domainGridlinePosition == orig(this.plot.domainGridlinePosition)
org.jfree.chart.axis.CategoryAnchor.START == orig(org.jfree.chart.axis.CategoryAnchor.START)
org.jfree.chart.axis.CategoryAnchor.MIDDLE == orig(org.jfree.chart.axis.CategoryAnchor.MIDDLE)
org.jfree.chart.axis.CategoryAnchor.END == orig(org.jfree.chart.axis.CategoryAnchor.END)
this.plot.domainGridlinePosition.name == orig(this.plot.domainGridlinePosition.name)
this.plot.domainGridlinePosition.name.toString == orig(this.plot.domainGridlinePosition.name.toString)
this.plot.domainGridlineStroke == orig(this.plot.domainGridlineStroke)
this.plot.domainGridlineStroke.getClass().getName() == orig(this.plot.domainGridlineStroke.getClass().getName())
this.plot.domainGridlinePaint == orig(this.plot.domainGridlinePaint)
this.plot.domainGridlinePaint.getClass().getName() == orig(this.plot.domainGridlinePaint.getClass().getName())
this.plot.rangeZeroBaselineVisible == orig(this.plot.rangeZeroBaselineVisible)
this.plot.rangeZeroBaselineStroke == orig(this.plot.rangeZeroBaselineStroke)
this.plot.rangeZeroBaselineStroke.getClass().getName() == orig(this.plot.rangeZeroBaselineStroke.getClass().getName())
this.plot.rangeZeroBaselinePaint == orig(this.plot.rangeZeroBaselinePaint)
this.plot.rangeZeroBaselinePaint.getClass().getName() == orig(this.plot.rangeZeroBaselinePaint.getClass().getName())
this.plot.rangeGridlinesVisible == orig(this.plot.rangeGridlinesVisible)
this.plot.rangeGridlineStroke == orig(this.plot.rangeGridlineStroke)
this.plot.rangeGridlineStroke.getClass().getName() == orig(this.plot.rangeGridlineStroke.getClass().getName())
this.plot.rangeGridlinePaint == orig(this.plot.rangeGridlinePaint)
this.plot.rangeGridlinePaint.getClass().getName() == orig(this.plot.rangeGridlinePaint.getClass().getName())
this.plot.rangeMinorGridlinesVisible == orig(this.plot.rangeMinorGridlinesVisible)
this.plot.rangeMinorGridlineStroke == orig(this.plot.rangeMinorGridlineStroke)
this.plot.rangeMinorGridlineStroke.getClass().getName() == orig(this.plot.rangeMinorGridlineStroke.getClass().getName())
this.plot.rangeMinorGridlinePaint == orig(this.plot.rangeMinorGridlinePaint)
this.plot.rangeMinorGridlinePaint.getClass().getName() == orig(this.plot.rangeMinorGridlinePaint.getClass().getName())
this.plot.anchorValue == orig(this.plot.anchorValue)
this.plot.crosshairDatasetIndex == orig(this.plot.crosshairDatasetIndex)
this.plot.domainCrosshairVisible == orig(this.plot.domainCrosshairVisible)
this.plot.domainCrosshairRowKey == orig(this.plot.domainCrosshairRowKey)
this.plot.domainCrosshairColumnKey == orig(this.plot.domainCrosshairColumnKey)
this.plot.domainCrosshairStroke == orig(this.plot.domainCrosshairStroke)
this.plot.domainCrosshairStroke.getClass().getName() == orig(this.plot.domainCrosshairStroke.getClass().getName())
this.plot.domainCrosshairPaint == orig(this.plot.domainCrosshairPaint)
this.plot.domainCrosshairPaint.getClass().getName() == orig(this.plot.domainCrosshairPaint.getClass().getName())
this.plot.rangeCrosshairVisible == orig(this.plot.rangeCrosshairVisible)
this.plot.rangeCrosshairValue == orig(this.plot.rangeCrosshairValue)
this.plot.rangeCrosshairStroke == orig(this.plot.rangeCrosshairStroke)
this.plot.rangeCrosshairStroke.getClass().getName() == orig(this.plot.rangeCrosshairStroke.getClass().getName())
this.plot.rangeCrosshairPaint == orig(this.plot.rangeCrosshairPaint)
this.plot.rangeCrosshairPaint.getClass().getName() == orig(this.plot.rangeCrosshairPaint.getClass().getName())
this.plot.rangeCrosshairLockedOnData == orig(this.plot.rangeCrosshairLockedOnData)
this.plot.foregroundDomainMarkers == orig(this.plot.foregroundDomainMarkers)
this.plot.foregroundDomainMarkers.getClass().getName() == orig(this.plot.foregroundDomainMarkers.getClass().getName())
this.plot.backgroundDomainMarkers == orig(this.plot.backgroundDomainMarkers)
this.plot.backgroundDomainMarkers.getClass().getName() == orig(this.plot.backgroundDomainMarkers.getClass().getName())
this.plot.foregroundRangeMarkers == orig(this.plot.foregroundRangeMarkers)
this.plot.foregroundRangeMarkers.getClass().getName() == orig(this.plot.foregroundRangeMarkers.getClass().getName())
this.plot.backgroundRangeMarkers == orig(this.plot.backgroundRangeMarkers)
this.plot.backgroundRangeMarkers.getClass().getName() == orig(this.plot.backgroundRangeMarkers.getClass().getName())
this.plot.annotations == orig(this.plot.annotations)
this.plot.annotations[] == orig(this.plot.annotations[])
this.plot.annotations.getClass().getName() == orig(this.plot.annotations.getClass().getName())
this.plot.weight == orig(this.plot.weight)
this.plot.fixedDomainAxisSpace == orig(this.plot.fixedDomainAxisSpace)
this.plot.fixedRangeAxisSpace == orig(this.plot.fixedRangeAxisSpace)
this.plot.fixedLegendItems == orig(this.plot.fixedLegendItems)
this.plot.rangePannable == orig(this.plot.rangePannable)
this.plot.shadowGenerator == orig(this.plot.shadowGenerator)
this.plot.shadowGenerator.getClass().getName() == orig(this.plot.shadowGenerator.getClass().getName())
org.jfree.chart.plot.Plot.ZERO == orig(org.jfree.chart.plot.Plot.ZERO)
org.jfree.chart.plot.Plot.ZERO.getClass().getName() == orig(org.jfree.chart.plot.Plot.ZERO.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_INSETS == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.top == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.top)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.left == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.left)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.right == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.right)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName())
this.plot.parent == orig(this.plot.parent)
org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener == orig(org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener)
this.plot.datasetGroup == orig(this.plot.datasetGroup)
this.plot.noDataMessage == orig(this.plot.noDataMessage)
this.plot.noDataMessageFont == orig(this.plot.noDataMessageFont)
this.plot.noDataMessagePaint == orig(this.plot.noDataMessagePaint)
this.plot.noDataMessagePaint.getClass().getName() == orig(this.plot.noDataMessagePaint.getClass().getName())
this.plot.insets == orig(this.plot.insets)
this.plot.insets.unitType == orig(this.plot.insets.unitType)
this.plot.insets.top == orig(this.plot.insets.top)
this.plot.insets.left == orig(this.plot.insets.left)
this.plot.insets.bottom == orig(this.plot.insets.bottom)
this.plot.insets.right == orig(this.plot.insets.right)
this.plot.outlineVisible == orig(this.plot.outlineVisible)
this.plot.outlineStroke == orig(this.plot.outlineStroke)
this.plot.outlineStroke.getClass().getName() == orig(this.plot.outlineStroke.getClass().getName())
this.plot.outlinePaint == orig(this.plot.outlinePaint)
this.plot.outlinePaint.getClass().getName() == orig(this.plot.outlinePaint.getClass().getName())
this.plot.backgroundPaint == orig(this.plot.backgroundPaint)
this.plot.backgroundPaint.getClass().getName() == orig(this.plot.backgroundPaint.getClass().getName())
this.plot.backgroundImage == orig(this.plot.backgroundImage)
this.plot.backgroundImageAlignment == orig(this.plot.backgroundImageAlignment)
this.plot.backgroundImageAlpha == orig(this.plot.backgroundImageAlpha)
this.plot.foregroundAlpha == orig(this.plot.foregroundAlpha)
this.plot.backgroundAlpha == orig(this.plot.backgroundAlpha)
this.plot.drawingSupplier == orig(this.plot.drawingSupplier)
this.plot.drawingSupplier.getClass().getName() == orig(this.plot.drawingSupplier.getClass().getName())
this.plot.listenerList == orig(this.plot.listenerList)
this.plot.notify == orig(this.plot.notify)
this.itemLabelGeneratorList == orig(this.itemLabelGeneratorList)
this.itemLabelGeneratorList.objects == orig(this.itemLabelGeneratorList.objects)
this.itemLabelGeneratorList.objects.getClass().getName() == orig(this.itemLabelGeneratorList.objects.getClass().getName())
this.itemLabelGeneratorList.objects[] == orig(this.itemLabelGeneratorList.objects[])
this.itemLabelGeneratorList.size == orig(this.itemLabelGeneratorList.size)
this.itemLabelGeneratorList.increment == orig(this.itemLabelGeneratorList.increment)
this.baseItemLabelGenerator == orig(this.baseItemLabelGenerator)
this.toolTipGeneratorList == orig(this.toolTipGeneratorList)
this.toolTipGeneratorList.objects == orig(this.toolTipGeneratorList.objects)
this.toolTipGeneratorList.objects.getClass().getName() == orig(this.toolTipGeneratorList.objects.getClass().getName())
this.toolTipGeneratorList.objects[] == orig(this.toolTipGeneratorList.objects[])
this.toolTipGeneratorList.size == orig(this.toolTipGeneratorList.size)
this.toolTipGeneratorList.increment == orig(this.toolTipGeneratorList.increment)
this.baseToolTipGenerator == orig(this.baseToolTipGenerator)
this.urlGeneratorList == orig(this.urlGeneratorList)
this.urlGeneratorList.objects == orig(this.urlGeneratorList.objects)
this.urlGeneratorList.objects.getClass().getName() == orig(this.urlGeneratorList.objects.getClass().getName())
this.urlGeneratorList.objects[] == orig(this.urlGeneratorList.objects[])
this.urlGeneratorList.size == orig(this.urlGeneratorList.size)
this.urlGeneratorList.increment == orig(this.urlGeneratorList.increment)
this.baseURLGenerator == orig(this.baseURLGenerator)
this.legendItemLabelGenerator == orig(this.legendItemLabelGenerator)
this.legendItemLabelGenerator.getClass().getName() == orig(this.legendItemLabelGenerator.getClass().getName())
this.legendItemToolTipGenerator == orig(this.legendItemToolTipGenerator)
this.legendItemURLGenerator == orig(this.legendItemURLGenerator)
this.backgroundAnnotations == orig(this.backgroundAnnotations)
this.backgroundAnnotations[] == orig(this.backgroundAnnotations[])
this.backgroundAnnotations.getClass().getName() == orig(this.backgroundAnnotations.getClass().getName())
this.foregroundAnnotations == orig(this.foregroundAnnotations)
this.foregroundAnnotations[] == orig(this.foregroundAnnotations[])
this.foregroundAnnotations.getClass().getName() == orig(this.foregroundAnnotations.getClass().getName())
this.rowCount == orig(this.rowCount)
this.columnCount == orig(this.columnCount)
org.jfree.chart.renderer.AbstractRenderer.ZERO == orig(org.jfree.chart.renderer.AbstractRenderer.ZERO)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_FONT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_FONT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT.getClass().getName())
this.seriesVisibleList == orig(this.seriesVisibleList)
this.seriesVisibleList.objects == orig(this.seriesVisibleList.objects)
this.seriesVisibleList.objects.getClass().getName() == orig(this.seriesVisibleList.objects.getClass().getName())
this.seriesVisibleList.objects[] == orig(this.seriesVisibleList.objects[])
this.seriesVisibleList.size == orig(this.seriesVisibleList.size)
this.seriesVisibleList.increment == orig(this.seriesVisibleList.increment)
this.baseSeriesVisible == orig(this.baseSeriesVisible)
this.seriesVisibleInLegendList == orig(this.seriesVisibleInLegendList)
this.seriesVisibleInLegendList.objects == orig(this.seriesVisibleInLegendList.objects)
this.seriesVisibleInLegendList.objects.getClass().getName() == orig(this.seriesVisibleInLegendList.objects.getClass().getName())
this.seriesVisibleInLegendList.objects[] == orig(this.seriesVisibleInLegendList.objects[])
this.seriesVisibleInLegendList.size == orig(this.seriesVisibleInLegendList.size)
this.seriesVisibleInLegendList.increment == orig(this.seriesVisibleInLegendList.increment)
this.baseSeriesVisibleInLegend == orig(this.baseSeriesVisibleInLegend)
this.paintList == orig(this.paintList)
this.paintList.objects == orig(this.paintList.objects)
this.paintList.objects.getClass().getName() == orig(this.paintList.objects.getClass().getName())
this.paintList.objects[] == orig(this.paintList.objects[])
this.paintList.size == orig(this.paintList.size)
this.paintList.increment == orig(this.paintList.increment)
this.autoPopulateSeriesPaint == orig(this.autoPopulateSeriesPaint)
this.basePaint == orig(this.basePaint)
this.basePaint.getClass().getName() == orig(this.basePaint.getClass().getName())
this.fillPaintList == orig(this.fillPaintList)
this.fillPaintList.objects == orig(this.fillPaintList.objects)
this.fillPaintList.objects.getClass().getName() == orig(this.fillPaintList.objects.getClass().getName())
this.fillPaintList.objects[] == orig(this.fillPaintList.objects[])
this.fillPaintList.size == orig(this.fillPaintList.size)
this.fillPaintList.increment == orig(this.fillPaintList.increment)
this.autoPopulateSeriesFillPaint == orig(this.autoPopulateSeriesFillPaint)
this.baseFillPaint == orig(this.baseFillPaint)
this.baseFillPaint.getClass().getName() == orig(this.baseFillPaint.getClass().getName())
this.outlinePaintList == orig(this.outlinePaintList)
this.outlinePaintList.objects == orig(this.outlinePaintList.objects)
this.outlinePaintList.objects.getClass().getName() == orig(this.outlinePaintList.objects.getClass().getName())
this.outlinePaintList.objects[] == orig(this.outlinePaintList.objects[])
this.outlinePaintList.size == orig(this.outlinePaintList.size)
this.outlinePaintList.increment == orig(this.outlinePaintList.increment)
this.autoPopulateSeriesOutlinePaint == orig(this.autoPopulateSeriesOutlinePaint)
this.baseOutlinePaint == orig(this.baseOutlinePaint)
this.baseOutlinePaint.getClass().getName() == orig(this.baseOutlinePaint.getClass().getName())
this.strokeList == orig(this.strokeList)
this.strokeList.objects == orig(this.strokeList.objects)
this.strokeList.objects.getClass().getName() == orig(this.strokeList.objects.getClass().getName())
this.strokeList.objects[] == orig(this.strokeList.objects[])
this.strokeList.size == orig(this.strokeList.size)
this.strokeList.increment == orig(this.strokeList.increment)
this.autoPopulateSeriesStroke == orig(this.autoPopulateSeriesStroke)
this.baseStroke == orig(this.baseStroke)
this.baseStroke.getClass().getName() == orig(this.baseStroke.getClass().getName())
this.outlineStrokeList == orig(this.outlineStrokeList)
this.outlineStrokeList.objects == orig(this.outlineStrokeList.objects)
this.outlineStrokeList.objects.getClass().getName() == orig(this.outlineStrokeList.objects.getClass().getName())
this.outlineStrokeList.objects[] == orig(this.outlineStrokeList.objects[])
this.outlineStrokeList.size == orig(this.outlineStrokeList.size)
this.outlineStrokeList.increment == orig(this.outlineStrokeList.increment)
this.baseOutlineStroke == orig(this.baseOutlineStroke)
this.baseOutlineStroke.getClass().getName() == orig(this.baseOutlineStroke.getClass().getName())
this.autoPopulateSeriesOutlineStroke == orig(this.autoPopulateSeriesOutlineStroke)
this.shapeList == orig(this.shapeList)
this.shapeList.objects == orig(this.shapeList.objects)
this.shapeList.objects.getClass().getName() == orig(this.shapeList.objects.getClass().getName())
this.shapeList.objects[] == orig(this.shapeList.objects[])
this.shapeList.size == orig(this.shapeList.size)
this.shapeList.increment == orig(this.shapeList.increment)
this.autoPopulateSeriesShape == orig(this.autoPopulateSeriesShape)
this.baseShape == orig(this.baseShape)
this.baseShape.getClass().getName() == orig(this.baseShape.getClass().getName())
this.itemLabelsVisibleList == orig(this.itemLabelsVisibleList)
this.itemLabelsVisibleList.objects == orig(this.itemLabelsVisibleList.objects)
this.itemLabelsVisibleList.objects.getClass().getName() == orig(this.itemLabelsVisibleList.objects.getClass().getName())
this.itemLabelsVisibleList.objects[] == orig(this.itemLabelsVisibleList.objects[])
this.itemLabelsVisibleList.size == orig(this.itemLabelsVisibleList.size)
this.itemLabelsVisibleList.increment == orig(this.itemLabelsVisibleList.increment)
this.baseItemLabelsVisible == orig(this.baseItemLabelsVisible)
this.itemLabelFontList == orig(this.itemLabelFontList)
this.itemLabelFontList.objects == orig(this.itemLabelFontList.objects)
this.itemLabelFontList.objects.getClass().getName() == orig(this.itemLabelFontList.objects.getClass().getName())
this.itemLabelFontList.objects[] == orig(this.itemLabelFontList.objects[])
this.itemLabelFontList.size == orig(this.itemLabelFontList.size)
this.itemLabelFontList.increment == orig(this.itemLabelFontList.increment)
this.baseItemLabelFont == orig(this.baseItemLabelFont)
this.itemLabelPaintList == orig(this.itemLabelPaintList)
this.itemLabelPaintList.objects == orig(this.itemLabelPaintList.objects)
this.itemLabelPaintList.objects.getClass().getName() == orig(this.itemLabelPaintList.objects.getClass().getName())
this.itemLabelPaintList.objects[] == orig(this.itemLabelPaintList.objects[])
this.itemLabelPaintList.size == orig(this.itemLabelPaintList.size)
this.itemLabelPaintList.increment == orig(this.itemLabelPaintList.increment)
this.baseItemLabelPaint == orig(this.baseItemLabelPaint)
this.baseItemLabelPaint.getClass().getName() == orig(this.baseItemLabelPaint.getClass().getName())
this.positiveItemLabelPositionList == orig(this.positiveItemLabelPositionList)
this.positiveItemLabelPositionList.objects == orig(this.positiveItemLabelPositionList.objects)
this.positiveItemLabelPositionList.objects.getClass().getName() == orig(this.positiveItemLabelPositionList.objects.getClass().getName())
this.positiveItemLabelPositionList.objects[] == orig(this.positiveItemLabelPositionList.objects[])
this.positiveItemLabelPositionList.size == orig(this.positiveItemLabelPositionList.size)
this.positiveItemLabelPositionList.increment == orig(this.positiveItemLabelPositionList.increment)
this.basePositiveItemLabelPosition == orig(this.basePositiveItemLabelPosition)
this.basePositiveItemLabelPosition.itemLabelAnchor == orig(this.basePositiveItemLabelPosition.itemLabelAnchor)
org.jfree.chart.labels.ItemLabelAnchor.CENTER == orig(org.jfree.chart.labels.ItemLabelAnchor.CENTER)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE1 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE1)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE2 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE2)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE3 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE3)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE4 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE4)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE5 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE5)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE6 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE6)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE7 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE7)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE8 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE8)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE9 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE9)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE10 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE10)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE11 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE11)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE12 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE12)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12)
this.basePositiveItemLabelPosition.itemLabelAnchor.name == orig(this.basePositiveItemLabelPosition.itemLabelAnchor.name)
this.basePositiveItemLabelPosition.itemLabelAnchor.name.toString == orig(this.basePositiveItemLabelPosition.itemLabelAnchor.name.toString)
this.basePositiveItemLabelPosition.textAnchor == orig(this.basePositiveItemLabelPosition.textAnchor)
org.jfree.chart.text.TextAnchor.TOP_LEFT == orig(org.jfree.chart.text.TextAnchor.TOP_LEFT)
org.jfree.chart.text.TextAnchor.TOP_CENTER == orig(org.jfree.chart.text.TextAnchor.TOP_CENTER)
org.jfree.chart.text.TextAnchor.TOP_RIGHT == orig(org.jfree.chart.text.TextAnchor.TOP_RIGHT)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT)
org.jfree.chart.text.TextAnchor.CENTER_LEFT == orig(org.jfree.chart.text.TextAnchor.CENTER_LEFT)
org.jfree.chart.text.TextAnchor.CENTER == orig(org.jfree.chart.text.TextAnchor.CENTER)
org.jfree.chart.text.TextAnchor.CENTER_RIGHT == orig(org.jfree.chart.text.TextAnchor.CENTER_RIGHT)
org.jfree.chart.text.TextAnchor.BASELINE_LEFT == orig(org.jfree.chart.text.TextAnchor.BASELINE_LEFT)
org.jfree.chart.text.TextAnchor.BASELINE_CENTER == orig(org.jfree.chart.text.TextAnchor.BASELINE_CENTER)
org.jfree.chart.text.TextAnchor.BASELINE_RIGHT == orig(org.jfree.chart.text.TextAnchor.BASELINE_RIGHT)
org.jfree.chart.text.TextAnchor.BOTTOM_LEFT == orig(org.jfree.chart.text.TextAnchor.BOTTOM_LEFT)
org.jfree.chart.text.TextAnchor.BOTTOM_CENTER == orig(org.jfree.chart.text.TextAnchor.BOTTOM_CENTER)
org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT == orig(org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT)
this.basePositiveItemLabelPosition.textAnchor.name == orig(this.basePositiveItemLabelPosition.textAnchor.name)
this.basePositiveItemLabelPosition.textAnchor.name.toString == orig(this.basePositiveItemLabelPosition.textAnchor.name.toString)
this.basePositiveItemLabelPosition.rotationAnchor == orig(this.basePositiveItemLabelPosition.rotationAnchor)
this.basePositiveItemLabelPosition.rotationAnchor.name == orig(this.basePositiveItemLabelPosition.rotationAnchor.name)
this.basePositiveItemLabelPosition.rotationAnchor.name.toString == orig(this.basePositiveItemLabelPosition.rotationAnchor.name.toString)
this.basePositiveItemLabelPosition.angle == orig(this.basePositiveItemLabelPosition.angle)
this.negativeItemLabelPositionList == orig(this.negativeItemLabelPositionList)
this.negativeItemLabelPositionList.objects == orig(this.negativeItemLabelPositionList.objects)
this.negativeItemLabelPositionList.objects.getClass().getName() == orig(this.negativeItemLabelPositionList.objects.getClass().getName())
this.negativeItemLabelPositionList.objects[] == orig(this.negativeItemLabelPositionList.objects[])
this.negativeItemLabelPositionList.size == orig(this.negativeItemLabelPositionList.size)
this.negativeItemLabelPositionList.increment == orig(this.negativeItemLabelPositionList.increment)
this.baseNegativeItemLabelPosition == orig(this.baseNegativeItemLabelPosition)
this.baseNegativeItemLabelPosition.itemLabelAnchor == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor)
this.baseNegativeItemLabelPosition.itemLabelAnchor.name == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor.name)
this.baseNegativeItemLabelPosition.itemLabelAnchor.name.toString == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor.name.toString)
this.baseNegativeItemLabelPosition.textAnchor == orig(this.baseNegativeItemLabelPosition.textAnchor)
this.baseNegativeItemLabelPosition.textAnchor.name == orig(this.baseNegativeItemLabelPosition.textAnchor.name)
this.baseNegativeItemLabelPosition.textAnchor.name.toString == orig(this.baseNegativeItemLabelPosition.textAnchor.name.toString)
this.baseNegativeItemLabelPosition.rotationAnchor == orig(this.baseNegativeItemLabelPosition.rotationAnchor)
this.baseNegativeItemLabelPosition.rotationAnchor.name == orig(this.baseNegativeItemLabelPosition.rotationAnchor.name)
this.baseNegativeItemLabelPosition.rotationAnchor.name.toString == orig(this.baseNegativeItemLabelPosition.rotationAnchor.name.toString)
this.baseNegativeItemLabelPosition.angle == orig(this.baseNegativeItemLabelPosition.angle)
this.itemLabelAnchorOffset == orig(this.itemLabelAnchorOffset)
this.createEntitiesList == orig(this.createEntitiesList)
this.createEntitiesList.objects == orig(this.createEntitiesList.objects)
this.createEntitiesList.objects.getClass().getName() == orig(this.createEntitiesList.objects.getClass().getName())
this.createEntitiesList.objects[] == orig(this.createEntitiesList.objects[])
this.createEntitiesList.size == orig(this.createEntitiesList.size)
this.createEntitiesList.increment == orig(this.createEntitiesList.increment)
this.baseCreateEntities == orig(this.baseCreateEntities)
this.legendShapeList == orig(this.legendShapeList)
this.legendShapeList.objects == orig(this.legendShapeList.objects)
this.legendShapeList.objects.getClass().getName() == orig(this.legendShapeList.objects.getClass().getName())
this.legendShapeList.objects[] == orig(this.legendShapeList.objects[])
this.legendShapeList.size == orig(this.legendShapeList.size)
this.legendShapeList.increment == orig(this.legendShapeList.increment)
this.baseLegendShape == orig(this.baseLegendShape)
this.treatLegendShapeAsLine == orig(this.treatLegendShapeAsLine)
this.legendTextFont == orig(this.legendTextFont)
this.legendTextFont.objects == orig(this.legendTextFont.objects)
this.legendTextFont.objects.getClass().getName() == orig(this.legendTextFont.objects.getClass().getName())
this.legendTextFont.objects[] == orig(this.legendTextFont.objects[])
this.legendTextFont.size == orig(this.legendTextFont.size)
this.legendTextFont.increment == orig(this.legendTextFont.increment)
this.baseLegendTextFont == orig(this.baseLegendTextFont)
this.legendTextPaint == orig(this.legendTextPaint)
this.legendTextPaint.objects == orig(this.legendTextPaint.objects)
this.legendTextPaint.objects.getClass().getName() == orig(this.legendTextPaint.objects.getClass().getName())
this.legendTextPaint.objects[] == orig(this.legendTextPaint.objects[])
this.legendTextPaint.size == orig(this.legendTextPaint.size)
this.legendTextPaint.increment == orig(this.legendTextPaint.increment)
this.baseLegendTextPaint == orig(this.baseLegendTextPaint)
this.dataBoundsIncludesVisibleSeriesOnly == orig(this.dataBoundsIncludesVisibleSeriesOnly)
this.defaultEntityRadius == orig(this.defaultEntityRadius)
this.listenerList == orig(this.listenerList)
this.selectedItemAttributes == orig(this.selectedItemAttributes)
this.selectedItemAttributes.allowNull == orig(this.selectedItemAttributes.allowNull)
this.selectedItemAttributes.paintList == orig(this.selectedItemAttributes.paintList)
this.selectedItemAttributes.paintList.objects == orig(this.selectedItemAttributes.paintList.objects)
this.selectedItemAttributes.paintList.objects.getClass().getName() == orig(this.selectedItemAttributes.paintList.objects.getClass().getName())
this.selectedItemAttributes.paintList.objects[] == orig(this.selectedItemAttributes.paintList.objects[])
this.selectedItemAttributes.paintList.size == orig(this.selectedItemAttributes.paintList.size)
this.selectedItemAttributes.paintList.increment == orig(this.selectedItemAttributes.paintList.increment)
this.selectedItemAttributes.defaultPaint == orig(this.selectedItemAttributes.defaultPaint)
this.selectedItemAttributes.strokeList == orig(this.selectedItemAttributes.strokeList)
this.selectedItemAttributes.strokeList.objects == orig(this.selectedItemAttributes.strokeList.objects)
this.selectedItemAttributes.strokeList.objects.getClass().getName() == orig(this.selectedItemAttributes.strokeList.objects.getClass().getName())
this.selectedItemAttributes.strokeList.objects[] == orig(this.selectedItemAttributes.strokeList.objects[])
this.selectedItemAttributes.strokeList.size == orig(this.selectedItemAttributes.strokeList.size)
this.selectedItemAttributes.strokeList.increment == orig(this.selectedItemAttributes.strokeList.increment)
this.selectedItemAttributes.defaultStroke == orig(this.selectedItemAttributes.defaultStroke)
this.selectedItemAttributes.shapeList == orig(this.selectedItemAttributes.shapeList)
this.selectedItemAttributes.shapeList.objects == orig(this.selectedItemAttributes.shapeList.objects)
this.selectedItemAttributes.shapeList.objects.getClass().getName() == orig(this.selectedItemAttributes.shapeList.objects.getClass().getName())
this.selectedItemAttributes.shapeList.objects[] == orig(this.selectedItemAttributes.shapeList.objects[])
this.selectedItemAttributes.shapeList.size == orig(this.selectedItemAttributes.shapeList.size)
this.selectedItemAttributes.shapeList.increment == orig(this.selectedItemAttributes.shapeList.increment)
this.selectedItemAttributes.defaultShape == orig(this.selectedItemAttributes.defaultShape)
this.selectedItemAttributes.fillPaintList == orig(this.selectedItemAttributes.fillPaintList)
this.selectedItemAttributes.fillPaintList.objects == orig(this.selectedItemAttributes.fillPaintList.objects)
this.selectedItemAttributes.fillPaintList.objects.getClass().getName() == orig(this.selectedItemAttributes.fillPaintList.objects.getClass().getName())
this.selectedItemAttributes.fillPaintList.objects[] == orig(this.selectedItemAttributes.fillPaintList.objects[])
this.selectedItemAttributes.fillPaintList.size == orig(this.selectedItemAttributes.fillPaintList.size)
this.selectedItemAttributes.fillPaintList.increment == orig(this.selectedItemAttributes.fillPaintList.increment)
this.selectedItemAttributes.defaultFillPaint == orig(this.selectedItemAttributes.defaultFillPaint)
this.selectedItemAttributes.defaultFillPaint.getClass().getName() == orig(this.selectedItemAttributes.defaultFillPaint.getClass().getName())
this.selectedItemAttributes.outlinePaintList == orig(this.selectedItemAttributes.outlinePaintList)
this.selectedItemAttributes.outlinePaintList.objects == orig(this.selectedItemAttributes.outlinePaintList.objects)
this.selectedItemAttributes.outlinePaintList.objects.getClass().getName() == orig(this.selectedItemAttributes.outlinePaintList.objects.getClass().getName())
this.selectedItemAttributes.outlinePaintList.objects[] == orig(this.selectedItemAttributes.outlinePaintList.objects[])
this.selectedItemAttributes.outlinePaintList.size == orig(this.selectedItemAttributes.outlinePaintList.size)
this.selectedItemAttributes.outlinePaintList.increment == orig(this.selectedItemAttributes.outlinePaintList.increment)
this.selectedItemAttributes.defaultOutlinePaint == orig(this.selectedItemAttributes.defaultOutlinePaint)
this.selectedItemAttributes.outlineStrokeList == orig(this.selectedItemAttributes.outlineStrokeList)
this.selectedItemAttributes.defaultOutlineStroke == orig(this.selectedItemAttributes.defaultOutlineStroke)
this.selectedItemAttributes.labelsVisibleList == orig(this.selectedItemAttributes.labelsVisibleList)
this.selectedItemAttributes.defaultLabelVisible == orig(this.selectedItemAttributes.defaultLabelVisible)
this.selectedItemAttributes.labelFontList == orig(this.selectedItemAttributes.labelFontList)
this.selectedItemAttributes.defaultLabelFont == orig(this.selectedItemAttributes.defaultLabelFont)
this.selectedItemAttributes.labelPaintList == orig(this.selectedItemAttributes.labelPaintList)
this.selectedItemAttributes.defaultLabelPaint == orig(this.selectedItemAttributes.defaultLabelPaint)
this.selectedItemAttributes.positionItemLabelPositionList == orig(this.selectedItemAttributes.positionItemLabelPositionList)
this.selectedItemAttributes.defaultPositiveItemLabelPosition == orig(this.selectedItemAttributes.defaultPositiveItemLabelPosition)
this.selectedItemAttributes.negativeItemLabelPositionList == orig(this.selectedItemAttributes.negativeItemLabelPositionList)
this.selectedItemAttributes.defaultNegativeItemLabelPosition == orig(this.selectedItemAttributes.defaultNegativeItemLabelPosition)
this.selectedItemAttributes.createEntityList == orig(this.selectedItemAttributes.createEntityList)
this.selectedItemAttributes.defaultCreateEntity == orig(this.selectedItemAttributes.defaultCreateEntity)
org.jfree.chart.renderer.AbstractRenderer.ADJ == orig(org.jfree.chart.renderer.AbstractRenderer.ADJ)
org.jfree.chart.renderer.AbstractRenderer.OPP == orig(org.jfree.chart.renderer.AbstractRenderer.OPP)
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener == orig(org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener)
this.plot has only one value
this.paintList.objects[] has only one value, of length 8
this.paintList.objects[].getClass().getName() == [java.awt.Color, null, null, null, null, null, null, null]
this.paintList.size == 1
this.strokeList.objects[] contains only nulls and has only one value, of length 8
this.strokeList.objects[] elements == null
this.strokeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.strokeList.objects[].getClass().getName() elements == null
this.strokeList.size == 0
this.shapeList.objects[] has only one value, of length 8
this.shapeList.objects[].getClass().getName() == [java.awt.geom.Rectangle2D.Double, null, null, null, null, null, null, null]
this.shapeList.size == 1
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener has only one value
return == null
===========================================================================
org.jfree.chart.renderer.category.LineAndShapeRenderer.getSeriesShapesVisible(int):::ENTER
this.plot has only one value
this.paintList.objects[] has only one value, of length 8
this.paintList.objects[].getClass().getName() == [java.awt.Color, null, null, null, null, null, null, null]
this.paintList.size == 1
this.strokeList.objects[] contains only nulls and has only one value, of length 8
this.strokeList.objects[] elements == null
this.strokeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.strokeList.objects[].getClass().getName() elements == null
this.strokeList.size == 0
this.shapeList.objects[] has only one value, of length 8
this.shapeList.objects[].getClass().getName() == [java.awt.geom.Rectangle2D.Double, null, null, null, null, null, null, null]
this.shapeList.size == 1
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener has only one value
series == 0
===========================================================================
org.jfree.chart.renderer.category.LineAndShapeRenderer.getSeriesShapesVisible(int):::EXIT
this.seriesLinesVisible == orig(this.seriesLinesVisible)
this.seriesLinesVisible.objects == orig(this.seriesLinesVisible.objects)
this.seriesLinesVisible.objects.getClass().getName() == orig(this.seriesLinesVisible.objects.getClass().getName())
this.seriesLinesVisible.objects[] == orig(this.seriesLinesVisible.objects[])
this.seriesLinesVisible.size == orig(this.seriesLinesVisible.size)
this.seriesLinesVisible.increment == orig(this.seriesLinesVisible.increment)
this.baseLinesVisible == orig(this.baseLinesVisible)
this.seriesShapesVisible == orig(this.seriesShapesVisible)
this.seriesShapesVisible.objects == orig(this.seriesShapesVisible.objects)
this.seriesShapesVisible.objects.getClass().getName() == orig(this.seriesShapesVisible.objects.getClass().getName())
this.seriesShapesVisible.objects[] == orig(this.seriesShapesVisible.objects[])
this.seriesShapesVisible.size == orig(this.seriesShapesVisible.size)
this.seriesShapesVisible.increment == orig(this.seriesShapesVisible.increment)
this.baseShapesVisible == orig(this.baseShapesVisible)
this.seriesShapesFilled == orig(this.seriesShapesFilled)
this.seriesShapesFilled.objects == orig(this.seriesShapesFilled.objects)
this.seriesShapesFilled.objects.getClass().getName() == orig(this.seriesShapesFilled.objects.getClass().getName())
this.seriesShapesFilled.objects[] == orig(this.seriesShapesFilled.objects[])
this.seriesShapesFilled.size == orig(this.seriesShapesFilled.size)
this.seriesShapesFilled.increment == orig(this.seriesShapesFilled.increment)
this.baseShapesFilled == orig(this.baseShapesFilled)
this.useFillPaint == orig(this.useFillPaint)
this.drawOutlines == orig(this.drawOutlines)
this.useOutlinePaint == orig(this.useOutlinePaint)
this.useSeriesOffset == orig(this.useSeriesOffset)
this.itemMargin == orig(this.itemMargin)
this.plot == orig(this.plot)
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE)
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_VALUE_LABEL_FONT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_VALUE_LABEL_FONT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE.getClass().getName())
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT)
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT.getClass().getName())
org.jfree.chart.plot.CategoryPlot.localizationResources == orig(org.jfree.chart.plot.CategoryPlot.localizationResources)
org.jfree.chart.plot.CategoryPlot.localizationResources.getClass().getName() == orig(org.jfree.chart.plot.CategoryPlot.localizationResources.getClass().getName())
this.plot.orientation == orig(this.plot.orientation)
org.jfree.chart.plot.PlotOrientation.HORIZONTAL == orig(org.jfree.chart.plot.PlotOrientation.HORIZONTAL)
org.jfree.chart.plot.PlotOrientation.VERTICAL == orig(org.jfree.chart.plot.PlotOrientation.VERTICAL)
this.plot.orientation.name == orig(this.plot.orientation.name)
this.plot.orientation.name.toString == orig(this.plot.orientation.name.toString)
this.plot.axisOffset == orig(this.plot.axisOffset)
org.jfree.chart.util.RectangleInsets.ZERO_INSETS == orig(org.jfree.chart.util.RectangleInsets.ZERO_INSETS)
this.plot.axisOffset.unitType == orig(this.plot.axisOffset.unitType)
this.plot.axisOffset.top == orig(this.plot.axisOffset.top)
this.plot.axisOffset.left == orig(this.plot.axisOffset.left)
this.plot.axisOffset.bottom == orig(this.plot.axisOffset.bottom)
this.plot.axisOffset.right == orig(this.plot.axisOffset.right)
this.plot.domainAxes == orig(this.plot.domainAxes)
this.plot.domainAxes.objects == orig(this.plot.domainAxes.objects)
this.plot.domainAxes.objects.getClass().getName() == orig(this.plot.domainAxes.objects.getClass().getName())
this.plot.domainAxes.objects[] == orig(this.plot.domainAxes.objects[])
this.plot.domainAxes.size == orig(this.plot.domainAxes.size)
this.plot.domainAxes.increment == orig(this.plot.domainAxes.increment)
this.plot.domainAxisLocations == orig(this.plot.domainAxisLocations)
this.plot.domainAxisLocations.objects == orig(this.plot.domainAxisLocations.objects)
this.plot.domainAxisLocations.objects.getClass().getName() == orig(this.plot.domainAxisLocations.objects.getClass().getName())
this.plot.domainAxisLocations.objects[] == orig(this.plot.domainAxisLocations.objects[])
this.plot.domainAxisLocations.size == orig(this.plot.domainAxisLocations.size)
this.plot.domainAxisLocations.increment == orig(this.plot.domainAxisLocations.increment)
this.plot.drawSharedDomainAxis == orig(this.plot.drawSharedDomainAxis)
this.plot.rangeAxes == orig(this.plot.rangeAxes)
this.plot.rangeAxes.objects == orig(this.plot.rangeAxes.objects)
this.plot.rangeAxes.objects.getClass().getName() == orig(this.plot.rangeAxes.objects.getClass().getName())
this.plot.rangeAxes.objects[] == orig(this.plot.rangeAxes.objects[])
this.plot.rangeAxes.size == orig(this.plot.rangeAxes.size)
this.plot.rangeAxes.increment == orig(this.plot.rangeAxes.increment)
this.plot.rangeAxisLocations == orig(this.plot.rangeAxisLocations)
this.plot.rangeAxisLocations.objects == orig(this.plot.rangeAxisLocations.objects)
this.plot.rangeAxisLocations.objects.getClass().getName() == orig(this.plot.rangeAxisLocations.objects.getClass().getName())
this.plot.rangeAxisLocations.objects[] == orig(this.plot.rangeAxisLocations.objects[])
this.plot.rangeAxisLocations.size == orig(this.plot.rangeAxisLocations.size)
this.plot.rangeAxisLocations.increment == orig(this.plot.rangeAxisLocations.increment)
this.plot.datasets == orig(this.plot.datasets)
this.plot.datasets.objects == orig(this.plot.datasets.objects)
this.plot.datasets.objects.getClass().getName() == orig(this.plot.datasets.objects.getClass().getName())
this.plot.datasets.objects[] == orig(this.plot.datasets.objects[])
this.plot.datasets.size == orig(this.plot.datasets.size)
this.plot.datasets.increment == orig(this.plot.datasets.increment)
this.plot.datasetToDomainAxesMap == orig(this.plot.datasetToDomainAxesMap)
this.plot.datasetToRangeAxesMap == orig(this.plot.datasetToRangeAxesMap)
this.plot.renderers == orig(this.plot.renderers)
this.plot.renderers.objects == orig(this.plot.renderers.objects)
this.plot.renderers.objects.getClass().getName() == orig(this.plot.renderers.objects.getClass().getName())
this.plot.renderers.objects[] == orig(this.plot.renderers.objects[])
this.plot.renderers.size == orig(this.plot.renderers.size)
this.plot.renderers.increment == orig(this.plot.renderers.increment)
this.plot.renderingOrder == orig(this.plot.renderingOrder)
org.jfree.chart.plot.DatasetRenderingOrder.FORWARD == orig(org.jfree.chart.plot.DatasetRenderingOrder.FORWARD)
org.jfree.chart.plot.DatasetRenderingOrder.REVERSE == orig(org.jfree.chart.plot.DatasetRenderingOrder.REVERSE)
this.plot.renderingOrder.name == orig(this.plot.renderingOrder.name)
this.plot.renderingOrder.name.toString == orig(this.plot.renderingOrder.name.toString)
this.plot.columnRenderingOrder == orig(this.plot.columnRenderingOrder)
org.jfree.chart.util.SortOrder.ASCENDING == orig(org.jfree.chart.util.SortOrder.ASCENDING)
org.jfree.chart.util.SortOrder.DESCENDING == orig(org.jfree.chart.util.SortOrder.DESCENDING)
this.plot.columnRenderingOrder.name == orig(this.plot.columnRenderingOrder.name)
this.plot.columnRenderingOrder.name.toString == orig(this.plot.columnRenderingOrder.name.toString)
this.plot.rowRenderingOrder == orig(this.plot.rowRenderingOrder)
this.plot.rowRenderingOrder.name == orig(this.plot.rowRenderingOrder.name)
this.plot.rowRenderingOrder.name.toString == orig(this.plot.rowRenderingOrder.name.toString)
this.plot.domainGridlinesVisible == orig(this.plot.domainGridlinesVisible)
this.plot.domainGridlinePosition == orig(this.plot.domainGridlinePosition)
org.jfree.chart.axis.CategoryAnchor.START == orig(org.jfree.chart.axis.CategoryAnchor.START)
org.jfree.chart.axis.CategoryAnchor.MIDDLE == orig(org.jfree.chart.axis.CategoryAnchor.MIDDLE)
org.jfree.chart.axis.CategoryAnchor.END == orig(org.jfree.chart.axis.CategoryAnchor.END)
this.plot.domainGridlinePosition.name == orig(this.plot.domainGridlinePosition.name)
this.plot.domainGridlinePosition.name.toString == orig(this.plot.domainGridlinePosition.name.toString)
this.plot.domainGridlineStroke == orig(this.plot.domainGridlineStroke)
this.plot.domainGridlineStroke.getClass().getName() == orig(this.plot.domainGridlineStroke.getClass().getName())
this.plot.domainGridlinePaint == orig(this.plot.domainGridlinePaint)
this.plot.domainGridlinePaint.getClass().getName() == orig(this.plot.domainGridlinePaint.getClass().getName())
this.plot.rangeZeroBaselineVisible == orig(this.plot.rangeZeroBaselineVisible)
this.plot.rangeZeroBaselineStroke == orig(this.plot.rangeZeroBaselineStroke)
this.plot.rangeZeroBaselineStroke.getClass().getName() == orig(this.plot.rangeZeroBaselineStroke.getClass().getName())
this.plot.rangeZeroBaselinePaint == orig(this.plot.rangeZeroBaselinePaint)
this.plot.rangeZeroBaselinePaint.getClass().getName() == orig(this.plot.rangeZeroBaselinePaint.getClass().getName())
this.plot.rangeGridlinesVisible == orig(this.plot.rangeGridlinesVisible)
this.plot.rangeGridlineStroke == orig(this.plot.rangeGridlineStroke)
this.plot.rangeGridlineStroke.getClass().getName() == orig(this.plot.rangeGridlineStroke.getClass().getName())
this.plot.rangeGridlinePaint == orig(this.plot.rangeGridlinePaint)
this.plot.rangeGridlinePaint.getClass().getName() == orig(this.plot.rangeGridlinePaint.getClass().getName())
this.plot.rangeMinorGridlinesVisible == orig(this.plot.rangeMinorGridlinesVisible)
this.plot.rangeMinorGridlineStroke == orig(this.plot.rangeMinorGridlineStroke)
this.plot.rangeMinorGridlineStroke.getClass().getName() == orig(this.plot.rangeMinorGridlineStroke.getClass().getName())
this.plot.rangeMinorGridlinePaint == orig(this.plot.rangeMinorGridlinePaint)
this.plot.rangeMinorGridlinePaint.getClass().getName() == orig(this.plot.rangeMinorGridlinePaint.getClass().getName())
this.plot.anchorValue == orig(this.plot.anchorValue)
this.plot.crosshairDatasetIndex == orig(this.plot.crosshairDatasetIndex)
this.plot.domainCrosshairVisible == orig(this.plot.domainCrosshairVisible)
this.plot.domainCrosshairRowKey == orig(this.plot.domainCrosshairRowKey)
this.plot.domainCrosshairColumnKey == orig(this.plot.domainCrosshairColumnKey)
this.plot.domainCrosshairStroke == orig(this.plot.domainCrosshairStroke)
this.plot.domainCrosshairStroke.getClass().getName() == orig(this.plot.domainCrosshairStroke.getClass().getName())
this.plot.domainCrosshairPaint == orig(this.plot.domainCrosshairPaint)
this.plot.domainCrosshairPaint.getClass().getName() == orig(this.plot.domainCrosshairPaint.getClass().getName())
this.plot.rangeCrosshairVisible == orig(this.plot.rangeCrosshairVisible)
this.plot.rangeCrosshairValue == orig(this.plot.rangeCrosshairValue)
this.plot.rangeCrosshairStroke == orig(this.plot.rangeCrosshairStroke)
this.plot.rangeCrosshairStroke.getClass().getName() == orig(this.plot.rangeCrosshairStroke.getClass().getName())
this.plot.rangeCrosshairPaint == orig(this.plot.rangeCrosshairPaint)
this.plot.rangeCrosshairPaint.getClass().getName() == orig(this.plot.rangeCrosshairPaint.getClass().getName())
this.plot.rangeCrosshairLockedOnData == orig(this.plot.rangeCrosshairLockedOnData)
this.plot.foregroundDomainMarkers == orig(this.plot.foregroundDomainMarkers)
this.plot.foregroundDomainMarkers.getClass().getName() == orig(this.plot.foregroundDomainMarkers.getClass().getName())
this.plot.backgroundDomainMarkers == orig(this.plot.backgroundDomainMarkers)
this.plot.backgroundDomainMarkers.getClass().getName() == orig(this.plot.backgroundDomainMarkers.getClass().getName())
this.plot.foregroundRangeMarkers == orig(this.plot.foregroundRangeMarkers)
this.plot.foregroundRangeMarkers.getClass().getName() == orig(this.plot.foregroundRangeMarkers.getClass().getName())
this.plot.backgroundRangeMarkers == orig(this.plot.backgroundRangeMarkers)
this.plot.backgroundRangeMarkers.getClass().getName() == orig(this.plot.backgroundRangeMarkers.getClass().getName())
this.plot.annotations == orig(this.plot.annotations)
this.plot.annotations[] == orig(this.plot.annotations[])
this.plot.annotations.getClass().getName() == orig(this.plot.annotations.getClass().getName())
this.plot.weight == orig(this.plot.weight)
this.plot.fixedDomainAxisSpace == orig(this.plot.fixedDomainAxisSpace)
this.plot.fixedRangeAxisSpace == orig(this.plot.fixedRangeAxisSpace)
this.plot.fixedLegendItems == orig(this.plot.fixedLegendItems)
this.plot.rangePannable == orig(this.plot.rangePannable)
this.plot.shadowGenerator == orig(this.plot.shadowGenerator)
this.plot.shadowGenerator.getClass().getName() == orig(this.plot.shadowGenerator.getClass().getName())
org.jfree.chart.plot.Plot.ZERO == orig(org.jfree.chart.plot.Plot.ZERO)
org.jfree.chart.plot.Plot.ZERO.getClass().getName() == orig(org.jfree.chart.plot.Plot.ZERO.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_INSETS == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.top == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.top)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.left == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.left)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom)
org.jfree.chart.plot.Plot.DEFAULT_INSETS.right == orig(org.jfree.chart.plot.Plot.DEFAULT_INSETS.right)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT)
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX.getClass().getName())
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE)
org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName() == orig(org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE.getClass().getName())
this.plot.parent == orig(this.plot.parent)
org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener == orig(org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener)
this.plot.datasetGroup == orig(this.plot.datasetGroup)
this.plot.noDataMessage == orig(this.plot.noDataMessage)
this.plot.noDataMessageFont == orig(this.plot.noDataMessageFont)
this.plot.noDataMessagePaint == orig(this.plot.noDataMessagePaint)
this.plot.noDataMessagePaint.getClass().getName() == orig(this.plot.noDataMessagePaint.getClass().getName())
this.plot.insets == orig(this.plot.insets)
this.plot.insets.unitType == orig(this.plot.insets.unitType)
this.plot.insets.top == orig(this.plot.insets.top)
this.plot.insets.left == orig(this.plot.insets.left)
this.plot.insets.bottom == orig(this.plot.insets.bottom)
this.plot.insets.right == orig(this.plot.insets.right)
this.plot.outlineVisible == orig(this.plot.outlineVisible)
this.plot.outlineStroke == orig(this.plot.outlineStroke)
this.plot.outlineStroke.getClass().getName() == orig(this.plot.outlineStroke.getClass().getName())
this.plot.outlinePaint == orig(this.plot.outlinePaint)
this.plot.outlinePaint.getClass().getName() == orig(this.plot.outlinePaint.getClass().getName())
this.plot.backgroundPaint == orig(this.plot.backgroundPaint)
this.plot.backgroundPaint.getClass().getName() == orig(this.plot.backgroundPaint.getClass().getName())
this.plot.backgroundImage == orig(this.plot.backgroundImage)
this.plot.backgroundImageAlignment == orig(this.plot.backgroundImageAlignment)
this.plot.backgroundImageAlpha == orig(this.plot.backgroundImageAlpha)
this.plot.foregroundAlpha == orig(this.plot.foregroundAlpha)
this.plot.backgroundAlpha == orig(this.plot.backgroundAlpha)
this.plot.drawingSupplier == orig(this.plot.drawingSupplier)
this.plot.drawingSupplier.getClass().getName() == orig(this.plot.drawingSupplier.getClass().getName())
this.plot.listenerList == orig(this.plot.listenerList)
this.plot.notify == orig(this.plot.notify)
this.itemLabelGeneratorList == orig(this.itemLabelGeneratorList)
this.itemLabelGeneratorList.objects == orig(this.itemLabelGeneratorList.objects)
this.itemLabelGeneratorList.objects.getClass().getName() == orig(this.itemLabelGeneratorList.objects.getClass().getName())
this.itemLabelGeneratorList.objects[] == orig(this.itemLabelGeneratorList.objects[])
this.itemLabelGeneratorList.size == orig(this.itemLabelGeneratorList.size)
this.itemLabelGeneratorList.increment == orig(this.itemLabelGeneratorList.increment)
this.baseItemLabelGenerator == orig(this.baseItemLabelGenerator)
this.toolTipGeneratorList == orig(this.toolTipGeneratorList)
this.toolTipGeneratorList.objects == orig(this.toolTipGeneratorList.objects)
this.toolTipGeneratorList.objects.getClass().getName() == orig(this.toolTipGeneratorList.objects.getClass().getName())
this.toolTipGeneratorList.objects[] == orig(this.toolTipGeneratorList.objects[])
this.toolTipGeneratorList.size == orig(this.toolTipGeneratorList.size)
this.toolTipGeneratorList.increment == orig(this.toolTipGeneratorList.increment)
this.baseToolTipGenerator == orig(this.baseToolTipGenerator)
this.urlGeneratorList == orig(this.urlGeneratorList)
this.urlGeneratorList.objects == orig(this.urlGeneratorList.objects)
this.urlGeneratorList.objects.getClass().getName() == orig(this.urlGeneratorList.objects.getClass().getName())
this.urlGeneratorList.objects[] == orig(this.urlGeneratorList.objects[])
this.urlGeneratorList.size == orig(this.urlGeneratorList.size)
this.urlGeneratorList.increment == orig(this.urlGeneratorList.increment)
this.baseURLGenerator == orig(this.baseURLGenerator)
this.legendItemLabelGenerator == orig(this.legendItemLabelGenerator)
this.legendItemLabelGenerator.getClass().getName() == orig(this.legendItemLabelGenerator.getClass().getName())
this.legendItemToolTipGenerator == orig(this.legendItemToolTipGenerator)
this.legendItemURLGenerator == orig(this.legendItemURLGenerator)
this.backgroundAnnotations == orig(this.backgroundAnnotations)
this.backgroundAnnotations[] == orig(this.backgroundAnnotations[])
this.backgroundAnnotations.getClass().getName() == orig(this.backgroundAnnotations.getClass().getName())
this.foregroundAnnotations == orig(this.foregroundAnnotations)
this.foregroundAnnotations[] == orig(this.foregroundAnnotations[])
this.foregroundAnnotations.getClass().getName() == orig(this.foregroundAnnotations.getClass().getName())
this.rowCount == orig(this.rowCount)
this.columnCount == orig(this.columnCount)
org.jfree.chart.renderer.AbstractRenderer.ZERO == orig(org.jfree.chart.renderer.AbstractRenderer.ZERO)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE.getClass().getName())
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_FONT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_FONT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT)
org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT.getClass().getName() == orig(org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT.getClass().getName())
this.seriesVisibleList == orig(this.seriesVisibleList)
this.seriesVisibleList.objects == orig(this.seriesVisibleList.objects)
this.seriesVisibleList.objects.getClass().getName() == orig(this.seriesVisibleList.objects.getClass().getName())
this.seriesVisibleList.objects[] == orig(this.seriesVisibleList.objects[])
this.seriesVisibleList.size == orig(this.seriesVisibleList.size)
this.seriesVisibleList.increment == orig(this.seriesVisibleList.increment)
this.baseSeriesVisible == orig(this.baseSeriesVisible)
this.seriesVisibleInLegendList == orig(this.seriesVisibleInLegendList)
this.seriesVisibleInLegendList.objects == orig(this.seriesVisibleInLegendList.objects)
this.seriesVisibleInLegendList.objects.getClass().getName() == orig(this.seriesVisibleInLegendList.objects.getClass().getName())
this.seriesVisibleInLegendList.objects[] == orig(this.seriesVisibleInLegendList.objects[])
this.seriesVisibleInLegendList.size == orig(this.seriesVisibleInLegendList.size)
this.seriesVisibleInLegendList.increment == orig(this.seriesVisibleInLegendList.increment)
this.baseSeriesVisibleInLegend == orig(this.baseSeriesVisibleInLegend)
this.paintList == orig(this.paintList)
this.paintList.objects == orig(this.paintList.objects)
this.paintList.objects.getClass().getName() == orig(this.paintList.objects.getClass().getName())
this.paintList.objects[] == orig(this.paintList.objects[])
this.paintList.size == orig(this.paintList.size)
this.paintList.increment == orig(this.paintList.increment)
this.autoPopulateSeriesPaint == orig(this.autoPopulateSeriesPaint)
this.basePaint == orig(this.basePaint)
this.basePaint.getClass().getName() == orig(this.basePaint.getClass().getName())
this.fillPaintList == orig(this.fillPaintList)
this.fillPaintList.objects == orig(this.fillPaintList.objects)
this.fillPaintList.objects.getClass().getName() == orig(this.fillPaintList.objects.getClass().getName())
this.fillPaintList.objects[] == orig(this.fillPaintList.objects[])
this.fillPaintList.size == orig(this.fillPaintList.size)
this.fillPaintList.increment == orig(this.fillPaintList.increment)
this.autoPopulateSeriesFillPaint == orig(this.autoPopulateSeriesFillPaint)
this.baseFillPaint == orig(this.baseFillPaint)
this.baseFillPaint.getClass().getName() == orig(this.baseFillPaint.getClass().getName())
this.outlinePaintList == orig(this.outlinePaintList)
this.outlinePaintList.objects == orig(this.outlinePaintList.objects)
this.outlinePaintList.objects.getClass().getName() == orig(this.outlinePaintList.objects.getClass().getName())
this.outlinePaintList.objects[] == orig(this.outlinePaintList.objects[])
this.outlinePaintList.size == orig(this.outlinePaintList.size)
this.outlinePaintList.increment == orig(this.outlinePaintList.increment)
this.autoPopulateSeriesOutlinePaint == orig(this.autoPopulateSeriesOutlinePaint)
this.baseOutlinePaint == orig(this.baseOutlinePaint)
this.baseOutlinePaint.getClass().getName() == orig(this.baseOutlinePaint.getClass().getName())
this.strokeList == orig(this.strokeList)
this.strokeList.objects == orig(this.strokeList.objects)
this.strokeList.objects.getClass().getName() == orig(this.strokeList.objects.getClass().getName())
this.strokeList.objects[] == orig(this.strokeList.objects[])
this.strokeList.size == orig(this.strokeList.size)
this.strokeList.increment == orig(this.strokeList.increment)
this.autoPopulateSeriesStroke == orig(this.autoPopulateSeriesStroke)
this.baseStroke == orig(this.baseStroke)
this.baseStroke.getClass().getName() == orig(this.baseStroke.getClass().getName())
this.outlineStrokeList == orig(this.outlineStrokeList)
this.outlineStrokeList.objects == orig(this.outlineStrokeList.objects)
this.outlineStrokeList.objects.getClass().getName() == orig(this.outlineStrokeList.objects.getClass().getName())
this.outlineStrokeList.objects[] == orig(this.outlineStrokeList.objects[])
this.outlineStrokeList.size == orig(this.outlineStrokeList.size)
this.outlineStrokeList.increment == orig(this.outlineStrokeList.increment)
this.baseOutlineStroke == orig(this.baseOutlineStroke)
this.baseOutlineStroke.getClass().getName() == orig(this.baseOutlineStroke.getClass().getName())
this.autoPopulateSeriesOutlineStroke == orig(this.autoPopulateSeriesOutlineStroke)
this.shapeList == orig(this.shapeList)
this.shapeList.objects == orig(this.shapeList.objects)
this.shapeList.objects.getClass().getName() == orig(this.shapeList.objects.getClass().getName())
this.shapeList.objects[] == orig(this.shapeList.objects[])
this.shapeList.size == orig(this.shapeList.size)
this.shapeList.increment == orig(this.shapeList.increment)
this.autoPopulateSeriesShape == orig(this.autoPopulateSeriesShape)
this.baseShape == orig(this.baseShape)
this.baseShape.getClass().getName() == orig(this.baseShape.getClass().getName())
this.itemLabelsVisibleList == orig(this.itemLabelsVisibleList)
this.itemLabelsVisibleList.objects == orig(this.itemLabelsVisibleList.objects)
this.itemLabelsVisibleList.objects.getClass().getName() == orig(this.itemLabelsVisibleList.objects.getClass().getName())
this.itemLabelsVisibleList.objects[] == orig(this.itemLabelsVisibleList.objects[])
this.itemLabelsVisibleList.size == orig(this.itemLabelsVisibleList.size)
this.itemLabelsVisibleList.increment == orig(this.itemLabelsVisibleList.increment)
this.baseItemLabelsVisible == orig(this.baseItemLabelsVisible)
this.itemLabelFontList == orig(this.itemLabelFontList)
this.itemLabelFontList.objects == orig(this.itemLabelFontList.objects)
this.itemLabelFontList.objects.getClass().getName() == orig(this.itemLabelFontList.objects.getClass().getName())
this.itemLabelFontList.objects[] == orig(this.itemLabelFontList.objects[])
this.itemLabelFontList.size == orig(this.itemLabelFontList.size)
this.itemLabelFontList.increment == orig(this.itemLabelFontList.increment)
this.baseItemLabelFont == orig(this.baseItemLabelFont)
this.itemLabelPaintList == orig(this.itemLabelPaintList)
this.itemLabelPaintList.objects == orig(this.itemLabelPaintList.objects)
this.itemLabelPaintList.objects.getClass().getName() == orig(this.itemLabelPaintList.objects.getClass().getName())
this.itemLabelPaintList.objects[] == orig(this.itemLabelPaintList.objects[])
this.itemLabelPaintList.size == orig(this.itemLabelPaintList.size)
this.itemLabelPaintList.increment == orig(this.itemLabelPaintList.increment)
this.baseItemLabelPaint == orig(this.baseItemLabelPaint)
this.baseItemLabelPaint.getClass().getName() == orig(this.baseItemLabelPaint.getClass().getName())
this.positiveItemLabelPositionList == orig(this.positiveItemLabelPositionList)
this.positiveItemLabelPositionList.objects == orig(this.positiveItemLabelPositionList.objects)
this.positiveItemLabelPositionList.objects.getClass().getName() == orig(this.positiveItemLabelPositionList.objects.getClass().getName())
this.positiveItemLabelPositionList.objects[] == orig(this.positiveItemLabelPositionList.objects[])
this.positiveItemLabelPositionList.size == orig(this.positiveItemLabelPositionList.size)
this.positiveItemLabelPositionList.increment == orig(this.positiveItemLabelPositionList.increment)
this.basePositiveItemLabelPosition == orig(this.basePositiveItemLabelPosition)
this.basePositiveItemLabelPosition.itemLabelAnchor == orig(this.basePositiveItemLabelPosition.itemLabelAnchor)
org.jfree.chart.labels.ItemLabelAnchor.CENTER == orig(org.jfree.chart.labels.ItemLabelAnchor.CENTER)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE1 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE1)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE2 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE2)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE3 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE3)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE4 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE4)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE5 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE5)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE6 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE6)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE7 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE7)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE8 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE8)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE9 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE9)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE10 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE10)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE11 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE11)
org.jfree.chart.labels.ItemLabelAnchor.INSIDE12 == orig(org.jfree.chart.labels.ItemLabelAnchor.INSIDE12)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11)
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12 == orig(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12)
this.basePositiveItemLabelPosition.itemLabelAnchor.name == orig(this.basePositiveItemLabelPosition.itemLabelAnchor.name)
this.basePositiveItemLabelPosition.itemLabelAnchor.name.toString == orig(this.basePositiveItemLabelPosition.itemLabelAnchor.name.toString)
this.basePositiveItemLabelPosition.textAnchor == orig(this.basePositiveItemLabelPosition.textAnchor)
org.jfree.chart.text.TextAnchor.TOP_LEFT == orig(org.jfree.chart.text.TextAnchor.TOP_LEFT)
org.jfree.chart.text.TextAnchor.TOP_CENTER == orig(org.jfree.chart.text.TextAnchor.TOP_CENTER)
org.jfree.chart.text.TextAnchor.TOP_RIGHT == orig(org.jfree.chart.text.TextAnchor.TOP_RIGHT)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER)
org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT == orig(org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT)
org.jfree.chart.text.TextAnchor.CENTER_LEFT == orig(org.jfree.chart.text.TextAnchor.CENTER_LEFT)
org.jfree.chart.text.TextAnchor.CENTER == orig(org.jfree.chart.text.TextAnchor.CENTER)
org.jfree.chart.text.TextAnchor.CENTER_RIGHT == orig(org.jfree.chart.text.TextAnchor.CENTER_RIGHT)
org.jfree.chart.text.TextAnchor.BASELINE_LEFT == orig(org.jfree.chart.text.TextAnchor.BASELINE_LEFT)
org.jfree.chart.text.TextAnchor.BASELINE_CENTER == orig(org.jfree.chart.text.TextAnchor.BASELINE_CENTER)
org.jfree.chart.text.TextAnchor.BASELINE_RIGHT == orig(org.jfree.chart.text.TextAnchor.BASELINE_RIGHT)
org.jfree.chart.text.TextAnchor.BOTTOM_LEFT == orig(org.jfree.chart.text.TextAnchor.BOTTOM_LEFT)
org.jfree.chart.text.TextAnchor.BOTTOM_CENTER == orig(org.jfree.chart.text.TextAnchor.BOTTOM_CENTER)
org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT == orig(org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT)
this.basePositiveItemLabelPosition.textAnchor.name == orig(this.basePositiveItemLabelPosition.textAnchor.name)
this.basePositiveItemLabelPosition.textAnchor.name.toString == orig(this.basePositiveItemLabelPosition.textAnchor.name.toString)
this.basePositiveItemLabelPosition.rotationAnchor == orig(this.basePositiveItemLabelPosition.rotationAnchor)
this.basePositiveItemLabelPosition.rotationAnchor.name == orig(this.basePositiveItemLabelPosition.rotationAnchor.name)
this.basePositiveItemLabelPosition.rotationAnchor.name.toString == orig(this.basePositiveItemLabelPosition.rotationAnchor.name.toString)
this.basePositiveItemLabelPosition.angle == orig(this.basePositiveItemLabelPosition.angle)
this.negativeItemLabelPositionList == orig(this.negativeItemLabelPositionList)
this.negativeItemLabelPositionList.objects == orig(this.negativeItemLabelPositionList.objects)
this.negativeItemLabelPositionList.objects.getClass().getName() == orig(this.negativeItemLabelPositionList.objects.getClass().getName())
this.negativeItemLabelPositionList.objects[] == orig(this.negativeItemLabelPositionList.objects[])
this.negativeItemLabelPositionList.size == orig(this.negativeItemLabelPositionList.size)
this.negativeItemLabelPositionList.increment == orig(this.negativeItemLabelPositionList.increment)
this.baseNegativeItemLabelPosition == orig(this.baseNegativeItemLabelPosition)
this.baseNegativeItemLabelPosition.itemLabelAnchor == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor)
this.baseNegativeItemLabelPosition.itemLabelAnchor.name == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor.name)
this.baseNegativeItemLabelPosition.itemLabelAnchor.name.toString == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor.name.toString)
this.baseNegativeItemLabelPosition.textAnchor == orig(this.baseNegativeItemLabelPosition.textAnchor)
this.baseNegativeItemLabelPosition.textAnchor.name == orig(this.baseNegativeItemLabelPosition.textAnchor.name)
this.baseNegativeItemLabelPosition.textAnchor.name.toString == orig(this.baseNegativeItemLabelPosition.textAnchor.name.toString)
this.baseNegativeItemLabelPosition.rotationAnchor == orig(this.baseNegativeItemLabelPosition.rotationAnchor)
this.baseNegativeItemLabelPosition.rotationAnchor.name == orig(this.baseNegativeItemLabelPosition.rotationAnchor.name)
this.baseNegativeItemLabelPosition.rotationAnchor.name.toString == orig(this.baseNegativeItemLabelPosition.rotationAnchor.name.toString)
this.baseNegativeItemLabelPosition.angle == orig(this.baseNegativeItemLabelPosition.angle)
this.itemLabelAnchorOffset == orig(this.itemLabelAnchorOffset)
this.createEntitiesList == orig(this.createEntitiesList)
this.createEntitiesList.objects == orig(this.createEntitiesList.objects)
this.createEntitiesList.objects.getClass().getName() == orig(this.createEntitiesList.objects.getClass().getName())
this.createEntitiesList.objects[] == orig(this.createEntitiesList.objects[])
this.createEntitiesList.size == orig(this.createEntitiesList.size)
this.createEntitiesList.increment == orig(this.createEntitiesList.increment)
this.baseCreateEntities == orig(this.baseCreateEntities)
this.legendShapeList == orig(this.legendShapeList)
this.legendShapeList.objects == orig(this.legendShapeList.objects)
this.legendShapeList.objects.getClass().getName() == orig(this.legendShapeList.objects.getClass().getName())
this.legendShapeList.objects[] == orig(this.legendShapeList.objects[])
this.legendShapeList.size == orig(this.legendShapeList.size)
this.legendShapeList.increment == orig(this.legendShapeList.increment)
this.baseLegendShape == orig(this.baseLegendShape)
this.treatLegendShapeAsLine == orig(this.treatLegendShapeAsLine)
this.legendTextFont == orig(this.legendTextFont)
this.legendTextFont.objects == orig(this.legendTextFont.objects)
this.legendTextFont.objects.getClass().getName() == orig(this.legendTextFont.objects.getClass().getName())
this.legendTextFont.objects[] == orig(this.legendTextFont.objects[])
this.legendTextFont.size == orig(this.legendTextFont.size)
this.legendTextFont.increment == orig(this.legendTextFont.increment)
this.baseLegendTextFont == orig(this.baseLegendTextFont)
this.legendTextPaint == orig(this.legendTextPaint)
this.legendTextPaint.objects == orig(this.legendTextPaint.objects)
this.legendTextPaint.objects.getClass().getName() == orig(this.legendTextPaint.objects.getClass().getName())
this.legendTextPaint.objects[] == orig(this.legendTextPaint.objects[])
this.legendTextPaint.size == orig(this.legendTextPaint.size)
this.legendTextPaint.increment == orig(this.legendTextPaint.increment)
this.baseLegendTextPaint == orig(this.baseLegendTextPaint)
this.dataBoundsIncludesVisibleSeriesOnly == orig(this.dataBoundsIncludesVisibleSeriesOnly)
this.defaultEntityRadius == orig(this.defaultEntityRadius)
this.listenerList == orig(this.listenerList)
this.selectedItemAttributes == orig(this.selectedItemAttributes)
this.selectedItemAttributes.allowNull == orig(this.selectedItemAttributes.allowNull)
this.selectedItemAttributes.paintList == orig(this.selectedItemAttributes.paintList)
this.selectedItemAttributes.paintList.objects == orig(this.selectedItemAttributes.paintList.objects)
this.selectedItemAttributes.paintList.objects.getClass().getName() == orig(this.selectedItemAttributes.paintList.objects.getClass().getName())
this.selectedItemAttributes.paintList.objects[] == orig(this.selectedItemAttributes.paintList.objects[])
this.selectedItemAttributes.paintList.size == orig(this.selectedItemAttributes.paintList.size)
this.selectedItemAttributes.paintList.increment == orig(this.selectedItemAttributes.paintList.increment)
this.selectedItemAttributes.defaultPaint == orig(this.selectedItemAttributes.defaultPaint)
this.selectedItemAttributes.strokeList == orig(this.selectedItemAttributes.strokeList)
this.selectedItemAttributes.strokeList.objects == orig(this.selectedItemAttributes.strokeList.objects)
this.selectedItemAttributes.strokeList.objects.getClass().getName() == orig(this.selectedItemAttributes.strokeList.objects.getClass().getName())
this.selectedItemAttributes.strokeList.objects[] == orig(this.selectedItemAttributes.strokeList.objects[])
this.selectedItemAttributes.strokeList.size == orig(this.selectedItemAttributes.strokeList.size)
this.selectedItemAttributes.strokeList.increment == orig(this.selectedItemAttributes.strokeList.increment)
this.selectedItemAttributes.defaultStroke == orig(this.selectedItemAttributes.defaultStroke)
this.selectedItemAttributes.shapeList == orig(this.selectedItemAttributes.shapeList)
this.selectedItemAttributes.shapeList.objects == orig(this.selectedItemAttributes.shapeList.objects)
this.selectedItemAttributes.shapeList.objects.getClass().getName() == orig(this.selectedItemAttributes.shapeList.objects.getClass().getName())
this.selectedItemAttributes.shapeList.objects[] == orig(this.selectedItemAttributes.shapeList.objects[])
this.selectedItemAttributes.shapeList.size == orig(this.selectedItemAttributes.shapeList.size)
this.selectedItemAttributes.shapeList.increment == orig(this.selectedItemAttributes.shapeList.increment)
this.selectedItemAttributes.defaultShape == orig(this.selectedItemAttributes.defaultShape)
this.selectedItemAttributes.fillPaintList == orig(this.selectedItemAttributes.fillPaintList)
this.selectedItemAttributes.fillPaintList.objects == orig(this.selectedItemAttributes.fillPaintList.objects)
this.selectedItemAttributes.fillPaintList.objects.getClass().getName() == orig(this.selectedItemAttributes.fillPaintList.objects.getClass().getName())
this.selectedItemAttributes.fillPaintList.objects[] == orig(this.selectedItemAttributes.fillPaintList.objects[])
this.selectedItemAttributes.fillPaintList.size == orig(this.selectedItemAttributes.fillPaintList.size)
this.selectedItemAttributes.fillPaintList.increment == orig(this.selectedItemAttributes.fillPaintList.increment)
this.selectedItemAttributes.defaultFillPaint == orig(this.selectedItemAttributes.defaultFillPaint)
this.selectedItemAttributes.defaultFillPaint.getClass().getName() == orig(this.selectedItemAttributes.defaultFillPaint.getClass().getName())
this.selectedItemAttributes.outlinePaintList == orig(this.selectedItemAttributes.outlinePaintList)
this.selectedItemAttributes.outlinePaintList.objects == orig(this.selectedItemAttributes.outlinePaintList.objects)
this.selectedItemAttributes.outlinePaintList.objects.getClass().getName() == orig(this.selectedItemAttributes.outlinePaintList.objects.getClass().getName())
this.selectedItemAttributes.outlinePaintList.objects[] == orig(this.selectedItemAttributes.outlinePaintList.objects[])
this.selectedItemAttributes.outlinePaintList.size == orig(this.selectedItemAttributes.outlinePaintList.size)
this.selectedItemAttributes.outlinePaintList.increment == orig(this.selectedItemAttributes.outlinePaintList.increment)
this.selectedItemAttributes.defaultOutlinePaint == orig(this.selectedItemAttributes.defaultOutlinePaint)
this.selectedItemAttributes.outlineStrokeList == orig(this.selectedItemAttributes.outlineStrokeList)
this.selectedItemAttributes.defaultOutlineStroke == orig(this.selectedItemAttributes.defaultOutlineStroke)
this.selectedItemAttributes.labelsVisibleList == orig(this.selectedItemAttributes.labelsVisibleList)
this.selectedItemAttributes.defaultLabelVisible == orig(this.selectedItemAttributes.defaultLabelVisible)
this.selectedItemAttributes.labelFontList == orig(this.selectedItemAttributes.labelFontList)
this.selectedItemAttributes.defaultLabelFont == orig(this.selectedItemAttributes.defaultLabelFont)
this.selectedItemAttributes.labelPaintList == orig(this.selectedItemAttributes.labelPaintList)
this.selectedItemAttributes.defaultLabelPaint == orig(this.selectedItemAttributes.defaultLabelPaint)
this.selectedItemAttributes.positionItemLabelPositionList == orig(this.selectedItemAttributes.positionItemLabelPositionList)
this.selectedItemAttributes.defaultPositiveItemLabelPosition == orig(this.selectedItemAttributes.defaultPositiveItemLabelPosition)
this.selectedItemAttributes.negativeItemLabelPositionList == orig(this.selectedItemAttributes.negativeItemLabelPositionList)
this.selectedItemAttributes.defaultNegativeItemLabelPosition == orig(this.selectedItemAttributes.defaultNegativeItemLabelPosition)
this.selectedItemAttributes.createEntityList == orig(this.selectedItemAttributes.createEntityList)
this.selectedItemAttributes.defaultCreateEntity == orig(this.selectedItemAttributes.defaultCreateEntity)
org.jfree.chart.renderer.AbstractRenderer.ADJ == orig(org.jfree.chart.renderer.AbstractRenderer.ADJ)
org.jfree.chart.renderer.AbstractRenderer.OPP == orig(org.jfree.chart.renderer.AbstractRenderer.OPP)
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener == orig(org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener)
this.plot has only one value
this.paintList.objects[] has only one value, of length 8
this.paintList.objects[].getClass().getName() == [java.awt.Color, null, null, null, null, null, null, null]
this.paintList.size == 1
this.strokeList.objects[] contains only nulls and has only one value, of length 8
this.strokeList.objects[] elements == null
this.strokeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.strokeList.objects[].getClass().getName() elements == null
this.strokeList.size == 0
this.shapeList.objects[] has only one value, of length 8
this.shapeList.objects[].getClass().getName() == [java.awt.geom.Rectangle2D.Double, null, null, null, null, null, null, null]
this.shapeList.size == 1
org.jfree.chart.renderer.AbstractRenderer.class$org$jfree$chart$event$RendererChangeListener has only one value
return == null
===========================================================================
org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests:::CLASS
===========================================================================
org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests:::OBJECT
org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests.class$org$jfree$chart$renderer$category$junit$AbstractCategoryItemRendererTests has only one value
org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests.class$org$jfree$chart$renderer$category$junit$AbstractCategoryItemRendererTests != null
===========================================================================
org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests.AbstractCategoryItemRendererTests():::EXIT
===========================================================================
org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests.class$(java.lang.String):::ENTER
org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests.class$org$jfree$chart$renderer$category$junit$AbstractCategoryItemRendererTests == null
x0 has only one value
x0.toString == "org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests"
===========================================================================
org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests.class$(java.lang.String):::EXIT
org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests.class$org$jfree$chart$renderer$category$junit$AbstractCategoryItemRendererTests == orig(org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests.class$org$jfree$chart$renderer$category$junit$AbstractCategoryItemRendererTests)
x0.toString == orig(x0.toString)
org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests.class$org$jfree$chart$renderer$category$junit$AbstractCategoryItemRendererTests == null
x0.toString == "org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests"
return has only one value
===========================================================================
org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests.suite():::ENTER
org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests.class$org$jfree$chart$renderer$category$junit$AbstractCategoryItemRendererTests == null
===========================================================================
org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests.suite():::EXIT
org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests.class$org$jfree$chart$renderer$category$junit$AbstractCategoryItemRendererTests has only one value
return has only one value
return.getClass().getName() == junit.framework.TestSuite.class
===========================================================================
org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests.test2947660():::ENTER
this has only one value
===========================================================================
org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests.test2947660():::EXIT
org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests.class$org$jfree$chart$renderer$category$junit$AbstractCategoryItemRendererTests == orig(org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests.class$org$jfree$chart$renderer$category$junit$AbstractCategoryItemRendererTests)
===========================================================================
org.jfree.chart.text.TextAnchor:::CLASS
===========================================================================
org.jfree.chart.text.TextAnchor:::OBJECT
this.name != null
===========================================================================
org.jfree.chart.text.TextAnchor.TextAnchor(java.lang.String):::ENTER
name != null
===========================================================================
org.jfree.chart.text.TextAnchor.TextAnchor(java.lang.String):::EXIT
name.toString == orig(name.toString)
===========================================================================
org.jfree.chart.util.AbstractObjectList:::CLASS
===========================================================================
org.jfree.chart.util.AbstractObjectList:::OBJECT
this.objects != null
this.objects.getClass().getName() == java.lang.Object[].class
this.size one of { 0, 1 }
this.increment == 8
size(this.objects[]) == 8
===========================================================================
org.jfree.chart.util.AbstractObjectList.AbstractObjectList():::EXIT
this.objects[] contains only nulls and has only one value, of length 8
this.objects[] elements == null
this.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.objects[].getClass().getName() elements == null
this.size == 0
===========================================================================
org.jfree.chart.util.AbstractObjectList.AbstractObjectList(int):::ENTER
initialCapacity == 8
===========================================================================
org.jfree.chart.util.AbstractObjectList.AbstractObjectList(int):::EXIT
this.objects[] contains only nulls and has only one value, of length 8
this.objects[] elements == null
this.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.objects[].getClass().getName() elements == null
this.size == 0
===========================================================================
org.jfree.chart.util.AbstractObjectList.AbstractObjectList(int, int):::ENTER
initialCapacity == 8
increment == 8
===========================================================================
org.jfree.chart.util.AbstractObjectList.AbstractObjectList(int, int):::EXIT
this.objects[] contains only nulls and has only one value, of length 8
this.objects[] elements == null
this.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.objects[].getClass().getName() elements == null
this.size == 0
===========================================================================
org.jfree.chart.util.AbstractObjectList.get(int):::ENTER
index == 0
===========================================================================
org.jfree.chart.util.AbstractObjectList.get(int):::EXIT
this.objects == orig(this.objects)
this.objects.getClass().getName() == orig(this.objects.getClass().getName())
this.objects[] == orig(this.objects[])
this.size == orig(this.size)
this.increment == orig(this.increment)
===========================================================================
org.jfree.chart.util.AbstractObjectList.indexOf(java.lang.Object):::ENTER
this has only one value
this.objects has only one value
this.objects[] has only one value, of length 8
this.objects[].getClass().getName() == [org.jfree.chart.renderer.category.LineAndShapeRenderer, null, null, null, null, null, null, null]
this.size == 1
object has only one value
object.getClass().getName() == org.jfree.chart.renderer.category.LineAndShapeRenderer.class
===========================================================================
org.jfree.chart.util.AbstractObjectList.indexOf(java.lang.Object):::EXIT163
===========================================================================
org.jfree.chart.util.AbstractObjectList.indexOf(java.lang.Object):::EXIT
this.objects == orig(this.objects)
this.objects.getClass().getName() == orig(this.objects.getClass().getName())
this.objects[] == orig(this.objects[])
this.size == orig(this.size)
this.increment == orig(this.increment)
this.objects has only one value
this.objects[] has only one value, of length 8
this.objects[].getClass().getName() == [org.jfree.chart.renderer.category.LineAndShapeRenderer, null, null, null, null, null, null, null]
this.size == 1
return == 0
===========================================================================
org.jfree.chart.util.AbstractObjectList.set(int, java.lang.Object):::ENTER
this.objects[] contains only nulls and has only one value, of length 8
this.objects[] elements == null
this.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.objects[].getClass().getName() elements == null
index == 0
===========================================================================
org.jfree.chart.util.AbstractObjectList.set(int, java.lang.Object):::EXIT
this.objects == orig(this.objects)
this.objects.getClass().getName() == orig(this.objects.getClass().getName())
this.increment == orig(this.increment)
size(this.objects[]) == orig(size(this.objects[]))
this.size == 1
this.size >= orig(this.size)
===========================================================================
org.jfree.chart.util.AbstractObjectList.size():::ENTER
this.objects[].getClass().getName() one of { [null, null, null, null, null, null, null, null], [org.jfree.data.category.DefaultCategoryDataset, null, null, null, null, null, null, null] }
===========================================================================
org.jfree.chart.util.AbstractObjectList.size():::EXIT
this.objects == orig(this.objects)
this.objects.getClass().getName() == orig(this.objects.getClass().getName())
this.objects[] == orig(this.objects[])
this.size == orig(this.size)
this.increment == orig(this.increment)
this.objects[].getClass().getName() one of { [null, null, null, null, null, null, null, null], [org.jfree.data.category.DefaultCategoryDataset, null, null, null, null, null, null, null] }
return one of { 0, 1 }
===========================================================================
org.jfree.chart.util.BooleanList:::CLASS
===========================================================================
org.jfree.chart.util.BooleanList:::OBJECT
this.objects != null
this.objects.getClass().getName() == java.lang.Object[].class
this.objects[] contains only nulls and has only one value, of length 8
this.objects[] elements == null
this.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.objects[].getClass().getName() elements == null
this.size == 0
this.increment == 8
size(this.objects[]) == 8
===========================================================================
org.jfree.chart.util.BooleanList.BooleanList():::EXIT
===========================================================================
org.jfree.chart.util.BooleanList.getBoolean(int):::ENTER
index == 0
===========================================================================
org.jfree.chart.util.BooleanList.getBoolean(int):::EXIT
this.objects == orig(this.objects)
this.objects.getClass().getName() == orig(this.objects.getClass().getName())
this.objects[] == orig(this.objects[])
this.size == orig(this.size)
this.increment == orig(this.increment)
return == null
===========================================================================
org.jfree.chart.util.DefaultShadowGenerator:::OBJECT
this has only one value
this.shadowSize == 5
this.shadowColor has only one value
this.shadowOpacity == 0.5
this.angle == -0.7853981633974483
this.distance == 5
===========================================================================
org.jfree.chart.util.DefaultShadowGenerator.DefaultShadowGenerator():::EXIT
===========================================================================
org.jfree.chart.util.DefaultShadowGenerator.DefaultShadowGenerator(int, java.awt.Color, float, int, double):::ENTER
size == 5
color has only one value
opacity == 0.5
distance == 5
angle == -0.7853981633974483
===========================================================================
org.jfree.chart.util.DefaultShadowGenerator.DefaultShadowGenerator(int, java.awt.Color, float, int, double):::EXIT
===========================================================================
org.jfree.chart.util.GradientPaintTransformType:::CLASS
===========================================================================
org.jfree.chart.util.GradientPaintTransformType:::OBJECT
===========================================================================
org.jfree.chart.util.GradientPaintTransformType.GradientPaintTransformType(java.lang.String):::ENTER
===========================================================================
org.jfree.chart.util.GradientPaintTransformType.GradientPaintTransformType(java.lang.String):::EXIT
this.name == orig(name)
name.toString == orig(name.toString)
===========================================================================
org.jfree.chart.util.ObjectList:::CLASS
===========================================================================
org.jfree.chart.util.ObjectList:::OBJECT
this.objects != null
this.objects.getClass().getName() == java.lang.Object[].class
this.size one of { 0, 1 }
this.increment == 8
size(this.objects[]) == 8
===========================================================================
org.jfree.chart.util.ObjectList.ObjectList():::EXIT
this.objects[] contains only nulls and has only one value, of length 8
this.objects[] elements == null
this.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.objects[].getClass().getName() elements == null
this.size == 0
===========================================================================
org.jfree.chart.util.ObjectList.get(int):::ENTER
this.objects[].getClass().getName() one of { [null, null, null, null, null, null, null, null], [org.jfree.data.category.DefaultCategoryDataset, null, null, null, null, null, null, null] }
index == 0
===========================================================================
org.jfree.chart.util.ObjectList.get(int):::EXIT
this.objects == orig(this.objects)
this.objects.getClass().getName() == orig(this.objects.getClass().getName())
this.objects[] == orig(this.objects[])
this.size == orig(this.size)
this.increment == orig(this.increment)
this.objects[].getClass().getName() one of { [null, null, null, null, null, null, null, null], [org.jfree.data.category.DefaultCategoryDataset, null, null, null, null, null, null, null] }
return.getClass().getName() == org.jfree.data.category.DefaultCategoryDataset.class
===========================================================================
org.jfree.chart.util.ObjectList.indexOf(java.lang.Object):::ENTER
this has only one value
this.objects has only one value
this.objects[] has only one value, of length 8
this.objects[].getClass().getName() == [org.jfree.chart.renderer.category.LineAndShapeRenderer, null, null, null, null, null, null, null]
this.size == 1
object has only one value
object.getClass().getName() == org.jfree.chart.renderer.category.LineAndShapeRenderer.class
===========================================================================
org.jfree.chart.util.ObjectList.indexOf(java.lang.Object):::EXIT
this.objects == orig(this.objects)
this.objects.getClass().getName() == orig(this.objects.getClass().getName())
this.objects[] == orig(this.objects[])
this.size == orig(this.size)
this.increment == orig(this.increment)
this.objects has only one value
this.objects[] has only one value, of length 8
this.objects[].getClass().getName() == [org.jfree.chart.renderer.category.LineAndShapeRenderer, null, null, null, null, null, null, null]
this.size == 1
return == 0
===========================================================================
org.jfree.chart.util.ObjectList.set(int, java.lang.Object):::ENTER
this.objects[] contains only nulls and has only one value, of length 8
this.objects[] elements == null
this.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.objects[].getClass().getName() elements == null
index == 0
===========================================================================
org.jfree.chart.util.ObjectList.set(int, java.lang.Object):::EXIT
this.objects == orig(this.objects)
this.objects.getClass().getName() == orig(this.objects.getClass().getName())
this.increment == orig(this.increment)
size(this.objects[]) == orig(size(this.objects[]))
this.size == 1
this.size >= orig(this.size)
===========================================================================
org.jfree.chart.util.PaintList:::CLASS
===========================================================================
org.jfree.chart.util.PaintList:::OBJECT
this.objects != null
this.objects.getClass().getName() == java.lang.Object[].class
this.objects[].getClass().getName() one of { [null, null, null, null, null, null, null, null], [java.awt.Color, null, null, null, null, null, null, null] }
this.size one of { 0, 1 }
this.increment == 8
size(this.objects[]) == 8
===========================================================================
org.jfree.chart.util.PaintList.PaintList():::EXIT
this.objects[] contains only nulls and has only one value, of length 8
this.objects[] elements == null
this.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.objects[].getClass().getName() elements == null
this.size == 0
===========================================================================
org.jfree.chart.util.PaintList.getPaint(int):::ENTER
index == 0
===========================================================================
org.jfree.chart.util.PaintList.getPaint(int):::EXIT
this.objects == orig(this.objects)
this.objects.getClass().getName() == orig(this.objects.getClass().getName())
this.objects[] == orig(this.objects[])
this.size == orig(this.size)
this.increment == orig(this.increment)
return.getClass().getName() == java.awt.Color.class
===========================================================================
org.jfree.chart.util.PaintList.setPaint(int, java.awt.Paint):::ENTER
this has only one value
this.objects has only one value
this.objects[] contains only nulls and has only one value, of length 8
this.objects[] elements == null
this.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.objects[].getClass().getName() elements == null
this.size == 0
index == 0
paint has only one value
paint.getClass().getName() == java.awt.Color.class
===========================================================================
org.jfree.chart.util.PaintList.setPaint(int, java.awt.Paint):::EXIT
this.objects == orig(this.objects)
this.objects.getClass().getName() == orig(this.objects.getClass().getName())
this.increment == orig(this.increment)
size(this.objects[]) == orig(size(this.objects[]))
this.objects has only one value
this.objects[] has only one value, of length 8
this.objects[].getClass().getName() == [java.awt.Color, null, null, null, null, null, null, null]
this.size == 1
===========================================================================
org.jfree.chart.util.RectangleInsets:::CLASS
org.jfree.chart.util.RectangleInsets.ZERO_INSETS has only one value
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType has only one value
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.top == 0.0
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.left == 0.0
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.bottom == 0.0
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.right == 0.0
org.jfree.chart.util.UnitType.ABSOLUTE has only one value
org.jfree.chart.util.UnitType.RELATIVE has only one value
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType.name has only one value
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType.name.toString == "UnitType.ABSOLUTE"
===========================================================================
org.jfree.chart.util.RectangleInsets:::OBJECT
this.unitType has only one value
org.jfree.chart.util.UnitType.ABSOLUTE.name has only one value
org.jfree.chart.util.UnitType.ABSOLUTE.name.toString == "UnitType.ABSOLUTE"
org.jfree.chart.util.UnitType.RELATIVE.name has only one value
org.jfree.chart.util.UnitType.RELATIVE.name.toString == "UnitType.RELATIVE"
this.unitType.name has only one value
this.unitType.name.toString == "UnitType.ABSOLUTE"
this.top one of { 0.0, 4.0 }
this.left one of { 0.0, 4.0, 8.0 }
this.bottom one of { 0.0, 4.0 }
this.right one of { 0.0, 4.0, 8.0 }
===========================================================================
org.jfree.chart.util.RectangleInsets.RectangleInsets(double, double, double, double):::ENTER
top == 4.0
left one of { 4.0, 8.0 }
bottom == 4.0
right one of { 4.0, 8.0 }
===========================================================================
org.jfree.chart.util.RectangleInsets.RectangleInsets(double, double, double, double):::EXIT
this.top == 4.0
this.left one of { 4.0, 8.0 }
this.bottom == 4.0
this.right one of { 4.0, 8.0 }
===========================================================================
org.jfree.chart.util.RectangleInsets.RectangleInsets(org.jfree.chart.util.UnitType, double, double, double, double):::ENTER
unitType has only one value
org.jfree.chart.util.UnitType.ABSOLUTE has only one value
org.jfree.chart.util.UnitType.RELATIVE has only one value
org.jfree.chart.util.UnitType.ABSOLUTE.name has only one value
org.jfree.chart.util.UnitType.ABSOLUTE.name.toString == "UnitType.ABSOLUTE"
org.jfree.chart.util.UnitType.RELATIVE.name has only one value
org.jfree.chart.util.UnitType.RELATIVE.name.toString == "UnitType.RELATIVE"
unitType.name has only one value
unitType.name.toString == "UnitType.ABSOLUTE"
top one of { 0.0, 4.0 }
left one of { 0.0, 4.0, 8.0 }
bottom one of { 0.0, 4.0 }
right one of { 0.0, 4.0, 8.0 }
===========================================================================
org.jfree.chart.util.RectangleInsets.RectangleInsets(org.jfree.chart.util.UnitType, double, double, double, double):::EXIT
org.jfree.chart.util.UnitType.ABSOLUTE == orig(org.jfree.chart.util.UnitType.ABSOLUTE)
org.jfree.chart.util.UnitType.RELATIVE == orig(org.jfree.chart.util.UnitType.RELATIVE)
org.jfree.chart.util.UnitType.ABSOLUTE.name == orig(org.jfree.chart.util.UnitType.ABSOLUTE.name)
org.jfree.chart.util.UnitType.ABSOLUTE.name.toString == orig(org.jfree.chart.util.UnitType.ABSOLUTE.name.toString)
org.jfree.chart.util.UnitType.RELATIVE.name == orig(org.jfree.chart.util.UnitType.RELATIVE.name)
org.jfree.chart.util.UnitType.RELATIVE.name.toString == orig(org.jfree.chart.util.UnitType.RELATIVE.name.toString)
unitType.name == orig(unitType.name)
unitType.name.toString == orig(unitType.name.toString)
unitType.name has only one value
unitType.name.toString == "UnitType.ABSOLUTE"
===========================================================================
org.jfree.chart.util.ResourceBundleWrapper:::CLASS
org.jfree.chart.util.ResourceBundleWrapper.noCodeBaseClassLoader == null
===========================================================================
org.jfree.chart.util.ResourceBundleWrapper.getBundle(java.lang.String):::ENTER
baseName has only one value
baseName.toString == "org.jfree.chart.plot.LocalizationBundle"
===========================================================================
org.jfree.chart.util.ResourceBundleWrapper.getBundle(java.lang.String):::EXIT128
===========================================================================
org.jfree.chart.util.ResourceBundleWrapper.getBundle(java.lang.String):::EXIT
org.jfree.chart.util.ResourceBundleWrapper.noCodeBaseClassLoader == orig(org.jfree.chart.util.ResourceBundleWrapper.noCodeBaseClassLoader)
baseName.toString == orig(baseName.toString)
baseName.toString == "org.jfree.chart.plot.LocalizationBundle"
return has only one value
return.getClass().getName() == java.util.PropertyResourceBundle.class
===========================================================================
org.jfree.chart.util.ShapeList:::CLASS
===========================================================================
org.jfree.chart.util.ShapeList:::OBJECT
this.objects.getClass().getName() == java.lang.Object[].class
this.objects[].getClass().getName() one of { [null, null, null, null, null, null, null, null], [java.awt.geom.Rectangle2D.Double, null, null, null, null, null, null, null] }
this.size one of { 0, 1 }
this.increment == 8
size(this.objects[]) == 8
===========================================================================
org.jfree.chart.util.ShapeList.ShapeList():::EXIT
this.objects[] contains only nulls and has only one value, of length 8
this.objects[] elements == null
this.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.objects[].getClass().getName() elements == null
this.size == 0
===========================================================================
org.jfree.chart.util.ShapeList.getShape(int):::ENTER
this.objects[] contains only nulls and has only one value, of length 8
this.objects[] elements == null
this.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.objects[].getClass().getName() elements == null
this.size == 0
index == 0
===========================================================================
org.jfree.chart.util.ShapeList.getShape(int):::EXIT
this.objects == orig(this.objects)
this.objects.getClass().getName() == orig(this.objects.getClass().getName())
this.objects[] == orig(this.objects[])
this.size == orig(this.size)
this.increment == orig(this.increment)
this.objects[] contains only nulls and has only one value, of length 8
this.objects[] elements == null
this.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.objects[].getClass().getName() elements == null
this.size == 0
return == null
===========================================================================
org.jfree.chart.util.ShapeList.setShape(int, java.awt.Shape):::ENTER
this has only one value
this.objects has only one value
this.objects[] contains only nulls and has only one value, of length 8
this.objects[] elements == null
this.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.objects[].getClass().getName() elements == null
this.size == 0
index == 0
shape has only one value
shape.getClass().getName() == java.awt.geom.Rectangle2D$Double.class
===========================================================================
org.jfree.chart.util.ShapeList.setShape(int, java.awt.Shape):::EXIT
this.objects == orig(this.objects)
this.objects.getClass().getName() == orig(this.objects.getClass().getName())
this.increment == orig(this.increment)
size(this.objects[]) == orig(size(this.objects[]))
this.objects has only one value
this.objects[] has only one value, of length 8
this.objects[].getClass().getName() == [java.awt.geom.Rectangle2D.Double, null, null, null, null, null, null, null]
this.size == 1
===========================================================================
org.jfree.chart.util.SortOrder:::CLASS
org.jfree.chart.util.SortOrder.ASCENDING has only one value
org.jfree.chart.util.SortOrder.DESCENDING has only one value
org.jfree.chart.util.SortOrder.ASCENDING.name has only one value
org.jfree.chart.util.SortOrder.ASCENDING.name.toString == "SortOrder.ASCENDING"
org.jfree.chart.util.SortOrder.DESCENDING.name has only one value
org.jfree.chart.util.SortOrder.DESCENDING.name.toString == "SortOrder.DESCENDING"
===========================================================================
org.jfree.chart.util.SortOrder:::OBJECT
this.name.toString one of { "SortOrder.ASCENDING", "SortOrder.DESCENDING" }
===========================================================================
org.jfree.chart.util.SortOrder.SortOrder(java.lang.String):::ENTER
name.toString one of { "SortOrder.ASCENDING", "SortOrder.DESCENDING" }
===========================================================================
org.jfree.chart.util.SortOrder.SortOrder(java.lang.String):::EXIT
name.toString == orig(name.toString)
name.toString one of { "SortOrder.ASCENDING", "SortOrder.DESCENDING" }
===========================================================================
org.jfree.chart.util.SortOrder.equals(java.lang.Object):::ENTER
this has only one value
this.name has only one value
this.name.toString == "SortOrder.ASCENDING"
obj has only one value
obj.getClass().getName() == org.jfree.chart.util.SortOrder.class
===========================================================================
org.jfree.chart.util.SortOrder.equals(java.lang.Object):::EXIT98
===========================================================================
org.jfree.chart.util.SortOrder.equals(java.lang.Object):::EXIT98;condition="return == true"
===========================================================================
org.jfree.chart.util.SortOrder.equals(java.lang.Object):::EXIT
org.jfree.chart.util.SortOrder.ASCENDING == orig(org.jfree.chart.util.SortOrder.ASCENDING)
org.jfree.chart.util.SortOrder.DESCENDING == orig(org.jfree.chart.util.SortOrder.DESCENDING)
org.jfree.chart.util.SortOrder.ASCENDING.name == orig(org.jfree.chart.util.SortOrder.ASCENDING.name)
org.jfree.chart.util.SortOrder.ASCENDING.name.toString == orig(org.jfree.chart.util.SortOrder.ASCENDING.name.toString)
org.jfree.chart.util.SortOrder.DESCENDING.name == orig(org.jfree.chart.util.SortOrder.DESCENDING.name)
org.jfree.chart.util.SortOrder.DESCENDING.name.toString == orig(org.jfree.chart.util.SortOrder.DESCENDING.name.toString)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.name has only one value
this.name.toString == "SortOrder.ASCENDING"
return == true
===========================================================================
org.jfree.chart.util.SortOrder.equals(java.lang.Object):::EXIT;condition="return == true"
===========================================================================
org.jfree.chart.util.StandardGradientPaintTransformer:::CLASS
===========================================================================
org.jfree.chart.util.StandardGradientPaintTransformer:::OBJECT
this has only one value
this.type has only one value
org.jfree.chart.util.GradientPaintTransformType.VERTICAL has only one value
org.jfree.chart.util.GradientPaintTransformType.HORIZONTAL has only one value
org.jfree.chart.util.GradientPaintTransformType.CENTER_VERTICAL has only one value
org.jfree.chart.util.GradientPaintTransformType.CENTER_HORIZONTAL has only one value
org.jfree.chart.util.GradientPaintTransformType.VERTICAL.name has only one value
org.jfree.chart.util.GradientPaintTransformType.VERTICAL.name.toString == "GradientPaintTransformType.VERTICAL"
org.jfree.chart.util.GradientPaintTransformType.HORIZONTAL.name has only one value
org.jfree.chart.util.GradientPaintTransformType.HORIZONTAL.name.toString == "GradientPaintTransformType.HORIZONTAL"
org.jfree.chart.util.GradientPaintTransformType.CENTER_VERTICAL.name has only one value
org.jfree.chart.util.GradientPaintTransformType.CENTER_VERTICAL.name.toString == "GradientPaintTransformType.CENTER_VERTICAL"
org.jfree.chart.util.GradientPaintTransformType.CENTER_HORIZONTAL.name has only one value
org.jfree.chart.util.GradientPaintTransformType.CENTER_HORIZONTAL.name.toString == "GradientPaintTransformType.CENTER_HORIZONTAL"
this.type.name has only one value
this.type.name.toString == "GradientPaintTransformType.VERTICAL"
===========================================================================
org.jfree.chart.util.StandardGradientPaintTransformer.StandardGradientPaintTransformer():::EXIT
===========================================================================
org.jfree.chart.util.StandardGradientPaintTransformer.StandardGradientPaintTransformer(org.jfree.chart.util.GradientPaintTransformType):::ENTER
type has only one value
org.jfree.chart.util.GradientPaintTransformType.VERTICAL has only one value
org.jfree.chart.util.GradientPaintTransformType.HORIZONTAL has only one value
org.jfree.chart.util.GradientPaintTransformType.CENTER_VERTICAL has only one value
org.jfree.chart.util.GradientPaintTransformType.CENTER_HORIZONTAL has only one value
org.jfree.chart.util.GradientPaintTransformType.VERTICAL.name has only one value
org.jfree.chart.util.GradientPaintTransformType.VERTICAL.name.toString == "GradientPaintTransformType.VERTICAL"
org.jfree.chart.util.GradientPaintTransformType.HORIZONTAL.name has only one value
org.jfree.chart.util.GradientPaintTransformType.HORIZONTAL.name.toString == "GradientPaintTransformType.HORIZONTAL"
org.jfree.chart.util.GradientPaintTransformType.CENTER_VERTICAL.name has only one value
org.jfree.chart.util.GradientPaintTransformType.CENTER_VERTICAL.name.toString == "GradientPaintTransformType.CENTER_VERTICAL"
org.jfree.chart.util.GradientPaintTransformType.CENTER_HORIZONTAL.name has only one value
org.jfree.chart.util.GradientPaintTransformType.CENTER_HORIZONTAL.name.toString == "GradientPaintTransformType.CENTER_HORIZONTAL"
type.name has only one value
type.name.toString == "GradientPaintTransformType.VERTICAL"
===========================================================================
org.jfree.chart.util.StandardGradientPaintTransformer.StandardGradientPaintTransformer(org.jfree.chart.util.GradientPaintTransformType):::EXIT
org.jfree.chart.util.GradientPaintTransformType.VERTICAL == orig(org.jfree.chart.util.GradientPaintTransformType.VERTICAL)
org.jfree.chart.util.GradientPaintTransformType.HORIZONTAL == orig(org.jfree.chart.util.GradientPaintTransformType.HORIZONTAL)
org.jfree.chart.util.GradientPaintTransformType.CENTER_VERTICAL == orig(org.jfree.chart.util.GradientPaintTransformType.CENTER_VERTICAL)
org.jfree.chart.util.GradientPaintTransformType.CENTER_HORIZONTAL == orig(org.jfree.chart.util.GradientPaintTransformType.CENTER_HORIZONTAL)
org.jfree.chart.util.GradientPaintTransformType.VERTICAL.name == orig(org.jfree.chart.util.GradientPaintTransformType.VERTICAL.name)
org.jfree.chart.util.GradientPaintTransformType.VERTICAL.name.toString == orig(org.jfree.chart.util.GradientPaintTransformType.VERTICAL.name.toString)
org.jfree.chart.util.GradientPaintTransformType.HORIZONTAL.name == orig(org.jfree.chart.util.GradientPaintTransformType.HORIZONTAL.name)
org.jfree.chart.util.GradientPaintTransformType.HORIZONTAL.name.toString == orig(org.jfree.chart.util.GradientPaintTransformType.HORIZONTAL.name.toString)
org.jfree.chart.util.GradientPaintTransformType.CENTER_VERTICAL.name == orig(org.jfree.chart.util.GradientPaintTransformType.CENTER_VERTICAL.name)
org.jfree.chart.util.GradientPaintTransformType.CENTER_VERTICAL.name.toString == orig(org.jfree.chart.util.GradientPaintTransformType.CENTER_VERTICAL.name.toString)
org.jfree.chart.util.GradientPaintTransformType.CENTER_HORIZONTAL.name == orig(org.jfree.chart.util.GradientPaintTransformType.CENTER_HORIZONTAL.name)
org.jfree.chart.util.GradientPaintTransformType.CENTER_HORIZONTAL.name.toString == orig(org.jfree.chart.util.GradientPaintTransformType.CENTER_HORIZONTAL.name.toString)
type.name == orig(type.name)
type.name.toString == orig(type.name.toString)
type.name has only one value
type.name.toString == "GradientPaintTransformType.VERTICAL"
===========================================================================
org.jfree.chart.util.StrokeList:::CLASS
===========================================================================
org.jfree.chart.util.StrokeList:::OBJECT
this.objects.getClass().getName() == java.lang.Object[].class
this.objects[].getClass().getName() one of { [null, null, null, null, null, null, null, null], [java.awt.BasicStroke, null, null, null, null, null, null, null] }
this.size one of { 0, 1 }
this.increment == 8
size(this.objects[]) == 8
===========================================================================
org.jfree.chart.util.StrokeList.StrokeList():::EXIT
this.objects[] contains only nulls and has only one value, of length 8
this.objects[] elements == null
this.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.objects[].getClass().getName() elements == null
this.size == 0
===========================================================================
org.jfree.chart.util.StrokeList.getStroke(int):::ENTER
this.objects[] contains only nulls and has only one value, of length 8
this.objects[] elements == null
this.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.objects[].getClass().getName() elements == null
this.size == 0
index == 0
===========================================================================
org.jfree.chart.util.StrokeList.getStroke(int):::EXIT
this.objects == orig(this.objects)
this.objects.getClass().getName() == orig(this.objects.getClass().getName())
this.objects[] == orig(this.objects[])
this.size == orig(this.size)
this.increment == orig(this.increment)
this.objects[] contains only nulls and has only one value, of length 8
this.objects[] elements == null
this.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.objects[].getClass().getName() elements == null
this.size == 0
return == null
===========================================================================
org.jfree.chart.util.StrokeList.setStroke(int, java.awt.Stroke):::ENTER
this has only one value
this.objects has only one value
this.objects[] contains only nulls and has only one value, of length 8
this.objects[] elements == null
this.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
this.objects[].getClass().getName() elements == null
this.size == 0
index == 0
stroke has only one value
stroke.getClass().getName() == java.awt.BasicStroke.class
===========================================================================
org.jfree.chart.util.StrokeList.setStroke(int, java.awt.Stroke):::EXIT
this.objects == orig(this.objects)
this.objects.getClass().getName() == orig(this.objects.getClass().getName())
this.increment == orig(this.increment)
size(this.objects[]) == orig(size(this.objects[]))
this.objects has only one value
this.objects[] has only one value, of length 8
this.objects[].getClass().getName() == [java.awt.BasicStroke, null, null, null, null, null, null, null]
this.size == 1
===========================================================================
org.jfree.chart.util.UnitType:::CLASS
===========================================================================
org.jfree.chart.util.UnitType:::OBJECT
this.name.toString one of { "UnitType.ABSOLUTE", "UnitType.RELATIVE" }
===========================================================================
org.jfree.chart.util.UnitType.UnitType(java.lang.String):::ENTER
name.toString one of { "UnitType.ABSOLUTE", "UnitType.RELATIVE" }
===========================================================================
org.jfree.chart.util.UnitType.UnitType(java.lang.String):::EXIT
this.name == orig(name)
name.toString == orig(name.toString)
name.toString one of { "UnitType.ABSOLUTE", "UnitType.RELATIVE" }
===========================================================================
org.jfree.data.KeyedObject:::CLASS
===========================================================================
org.jfree.data.KeyedObject:::OBJECT
this has only one value
this.key has only one value
this.key.getClass().getName() == java.lang.String.class
this.object has only one value
this.object.getClass().getName() == org.jfree.data.SelectableValue.class
===========================================================================
org.jfree.data.KeyedObject.KeyedObject(java.lang.Comparable, java.lang.Object):::ENTER
key has only one value
key.getClass().getName() == java.lang.String.class
object has only one value
object.getClass().getName() == org.jfree.data.SelectableValue.class
===========================================================================
org.jfree.data.KeyedObject.KeyedObject(java.lang.Comparable, java.lang.Object):::EXIT
===========================================================================
org.jfree.data.KeyedObjects:::CLASS
===========================================================================
org.jfree.data.KeyedObjects:::OBJECT
this has only one value
this.data has only one value
this.data[] elements has only one value
this.data[].getClass().getName() elements == org.jfree.data.KeyedObject.class
this.data[].getClass().getName() one of { [], [org.jfree.data.KeyedObject] }
this.data.getClass().getName() == java.util.ArrayList.class
size(this.data[]) one of { 0, 1 }
===========================================================================
org.jfree.data.KeyedObjects2D:::CLASS
===========================================================================
org.jfree.data.KeyedObjects2D:::OBJECT
this has only one value
this.rowKeys has only one value
this.rowKeys != null
this.rowKeys[] elements has only one value
this.rowKeys[] elements != null
this.rowKeys[].getClass().getName() elements == java.lang.String.class
this.rowKeys[].getClass().getName() one of { [], [java.lang.String] }
this.rowKeys.getClass().getName() == java.util.ArrayList.class
this.columnKeys has only one value
this.columnKeys != null
this.columnKeys[] elements has only one value
this.columnKeys[] elements != null
this.columnKeys[].getClass().getName() elements == java.lang.String.class
this.columnKeys[].getClass().getName() one of { [], [java.lang.String] }
this.columnKeys.getClass().getName() == java.util.ArrayList.class
this.rows has only one value
this.rows != null
this.rows[] elements has only one value
this.rows[] elements != null
this.rows[].getClass().getName() elements == org.jfree.data.KeyedObjects.class
this.rows[].getClass().getName() one of { [], [org.jfree.data.KeyedObjects] }
this.rows.getClass().getName() == java.util.ArrayList.class
size(this.rowKeys[]) one of { 0, 1 }
size(this.columnKeys[]) one of { 0, 1 }
size(this.rows[]) one of { 0, 1 }
===========================================================================
org.jfree.data.KeyedObjects2D.KeyedObjects2D():::EXIT
this.rowKeys[] == []
this.rowKeys[].getClass().getName() == []
this.columnKeys[] == []
this.columnKeys[].getClass().getName() == []
this.rows[] == []
this.rows[].getClass().getName() == []
===========================================================================
org.jfree.data.KeyedObjects2D.addObject(java.lang.Object, java.lang.Comparable, java.lang.Comparable):::ENTER
this.rowKeys[] == []
this.rowKeys[].getClass().getName() == []
this.columnKeys[] == []
this.columnKeys[].getClass().getName() == []
this.rows[] == []
this.rows[].getClass().getName() == []
object has only one value
object.getClass().getName() == org.jfree.data.SelectableValue.class
rowKey has only one value
rowKey.getClass().getName() == java.lang.String.class
columnKey has only one value
columnKey.getClass().getName() == java.lang.String.class
===========================================================================
org.jfree.data.KeyedObjects2D.addObject(java.lang.Object, java.lang.Comparable, java.lang.Comparable):::EXIT
this.rowKeys == orig(this.rowKeys)
this.rowKeys.getClass().getName() == orig(this.rowKeys.getClass().getName())
this.columnKeys == orig(this.columnKeys)
this.columnKeys.getClass().getName() == orig(this.columnKeys.getClass().getName())
this.rows == orig(this.rows)
this.rows.getClass().getName() == orig(this.rows.getClass().getName())
size(this.rowKeys[])-1 == orig(size(this.rowKeys[]))
size(this.columnKeys[])-1 == orig(size(this.columnKeys[]))
size(this.rows[])-1 == orig(size(this.rows[]))
this.rowKeys[] contains no nulls and has only one value, of length 1
this.rowKeys[].getClass().getName() == [java.lang.String]
this.columnKeys[] contains no nulls and has only one value, of length 1
this.columnKeys[].getClass().getName() == [java.lang.String]
this.rows[] contains no nulls and has only one value, of length 1
this.rows[].getClass().getName() == [org.jfree.data.KeyedObjects]
size(this.rowKeys[]) == 1
size(this.columnKeys[]) == 1
size(this.rows[]) == 1
===========================================================================
org.jfree.data.KeyedObjects2D.getRowCount():::ENTER
===========================================================================
org.jfree.data.KeyedObjects2D.getRowCount():::EXIT
this.rowKeys == orig(this.rowKeys)
this.rowKeys[] == orig(this.rowKeys[])
this.rowKeys.getClass().getName() == orig(this.rowKeys.getClass().getName())
this.columnKeys == orig(this.columnKeys)
this.columnKeys[] == orig(this.columnKeys[])
this.columnKeys.getClass().getName() == orig(this.columnKeys.getClass().getName())
this.rows == orig(this.rows)
this.rows[] == orig(this.rows[])
this.rows.getClass().getName() == orig(this.rows.getClass().getName())
return one of { 0, 1 }
===========================================================================
org.jfree.data.KeyedObjects2D.getRowKey(int):::ENTER
this.rowKeys[] contains no nulls and has only one value, of length 1
this.rowKeys[].getClass().getName() == [java.lang.String]
this.columnKeys[] contains no nulls and has only one value, of length 1
this.columnKeys[].getClass().getName() == [java.lang.String]
this.rows[] contains no nulls and has only one value, of length 1
this.rows[].getClass().getName() == [org.jfree.data.KeyedObjects]
row == 0
size(this.rowKeys[]) == 1
size(this.columnKeys[]) == 1
size(this.rows[]) == 1
===========================================================================
org.jfree.data.KeyedObjects2D.getRowKey(int):::EXIT
this.rowKeys == orig(this.rowKeys)
this.rowKeys[] == orig(this.rowKeys[])
this.rowKeys.getClass().getName() == orig(this.rowKeys.getClass().getName())
this.columnKeys == orig(this.columnKeys)
this.columnKeys[] == orig(this.columnKeys[])
this.columnKeys.getClass().getName() == orig(this.columnKeys.getClass().getName())
this.rows == orig(this.rows)
this.rows[] == orig(this.rows[])
this.rows.getClass().getName() == orig(this.rows.getClass().getName())
this.rowKeys[] contains no nulls and has only one value, of length 1
this.rowKeys[].getClass().getName() == [java.lang.String]
this.columnKeys[] contains no nulls and has only one value, of length 1
this.columnKeys[].getClass().getName() == [java.lang.String]
this.rows[] contains no nulls and has only one value, of length 1
this.rows[].getClass().getName() == [org.jfree.data.KeyedObjects]
return has only one value
return.getClass().getName() == java.lang.String.class
size(this.rowKeys[]) == 1
size(this.columnKeys[]) == 1
size(this.rows[]) == 1
===========================================================================
org.jfree.data.KeyedObjects2D.setObject(java.lang.Object, java.lang.Comparable, java.lang.Comparable):::ENTER
this.rowKeys[] == []
this.rowKeys[].getClass().getName() == []
this.columnKeys[] == []
this.columnKeys[].getClass().getName() == []
this.rows[] == []
this.rows[].getClass().getName() == []
object has only one value
object.getClass().getName() == org.jfree.data.SelectableValue.class
rowKey has only one value
rowKey.getClass().getName() == java.lang.String.class
columnKey has only one value
columnKey.getClass().getName() == java.lang.String.class
===========================================================================
org.jfree.data.KeyedObjects2D.setObject(java.lang.Object, java.lang.Comparable, java.lang.Comparable):::EXIT
this.rowKeys == orig(this.rowKeys)
this.rowKeys.getClass().getName() == orig(this.rowKeys.getClass().getName())
this.columnKeys == orig(this.columnKeys)
this.columnKeys.getClass().getName() == orig(this.columnKeys.getClass().getName())
this.rows == orig(this.rows)
this.rows.getClass().getName() == orig(this.rows.getClass().getName())
size(this.rowKeys[])-1 == orig(size(this.rowKeys[]))
size(this.columnKeys[])-1 == orig(size(this.columnKeys[]))
size(this.rows[])-1 == orig(size(this.rows[]))
this.rowKeys[] contains no nulls and has only one value, of length 1
this.rowKeys[].getClass().getName() == [java.lang.String]
this.columnKeys[] contains no nulls and has only one value, of length 1
this.columnKeys[].getClass().getName() == [java.lang.String]
this.rows[] contains no nulls and has only one value, of length 1
this.rows[].getClass().getName() == [org.jfree.data.KeyedObjects]
size(this.rowKeys[]) == 1
size(this.columnKeys[]) == 1
size(this.rows[]) == 1
===========================================================================
org.jfree.data.KeyedObjects.KeyedObjects():::EXIT
this.data[] == []
this.data[].getClass().getName() == []
===========================================================================
org.jfree.data.KeyedObjects.getIndex(java.lang.Comparable):::ENTER
this.data[] == []
this.data[].getClass().getName() == []
key has only one value
key.getClass().getName() == java.lang.String.class
===========================================================================
org.jfree.data.KeyedObjects.getIndex(java.lang.Comparable):::EXIT145
===========================================================================
org.jfree.data.KeyedObjects.getIndex(java.lang.Comparable):::EXIT
this.data == orig(this.data)
this.data[] == orig(this.data[])
this.data.getClass().getName() == orig(this.data.getClass().getName())
this.data[] == []
this.data[].getClass().getName() == []
return == -1
===========================================================================
org.jfree.data.KeyedObjects.setObject(java.lang.Comparable, java.lang.Object):::ENTER
this.data[] == []
this.data[].getClass().getName() == []
key has only one value
key.getClass().getName() == java.lang.String.class
object has only one value
object.getClass().getName() == org.jfree.data.SelectableValue.class
===========================================================================
org.jfree.data.KeyedObjects.setObject(java.lang.Comparable, java.lang.Object):::EXIT
this.data == orig(this.data)
this.data.getClass().getName() == orig(this.data.getClass().getName())
size(this.data[])-1 == orig(size(this.data[]))
this.data[] contains no nulls and has only one value, of length 1
this.data[].getClass().getName() == [org.jfree.data.KeyedObject]
size(this.data[]) == 1
===========================================================================
org.jfree.data.SelectableValue:::OBJECT
this has only one value
this.value has only one value
this.value.getClass().getName() == java.lang.Double.class
this.selected == false
===========================================================================
org.jfree.data.SelectableValue.SelectableValue(java.lang.Number):::ENTER
value has only one value
value.getClass().getName() == java.lang.Double.class
===========================================================================
org.jfree.data.SelectableValue.SelectableValue(java.lang.Number):::EXIT
===========================================================================
org.jfree.data.SelectableValue.SelectableValue(java.lang.Number, boolean):::ENTER
value has only one value
value.getClass().getName() == java.lang.Double.class
selected == false
===========================================================================
org.jfree.data.SelectableValue.SelectableValue(java.lang.Number, boolean):::EXIT
===========================================================================
org.jfree.data.category.AbstractCategoryDataset:::CLASS
org.jfree.data.general.AbstractDataset.class$org$jfree$data$event$DatasetChangeListener == null
===========================================================================
org.jfree.data.category.AbstractCategoryDataset:::OBJECT
this has only one value
this.selectionState.getClass().getName() == org.jfree.data.category.DefaultCategoryDataset.class
this.group has only one value
this.group.id has only one value
this.group.id.toString == "NOID"
this.listenerList has only one value
===========================================================================
org.jfree.data.category.AbstractCategoryDataset.AbstractCategoryDataset():::EXIT
this.selectionState == null
===========================================================================
org.jfree.data.category.AbstractCategoryDataset.setSelectionState(org.jfree.data.category.CategoryDatasetSelectionState):::ENTER
this.selectionState == null
state has only one value
state.getClass().getName() == org.jfree.data.category.DefaultCategoryDataset.class
===========================================================================
org.jfree.data.category.AbstractCategoryDataset.setSelectionState(org.jfree.data.category.CategoryDatasetSelectionState):::EXIT
this.group == orig(this.group)
this.group.id == orig(this.group.id)
this.group.id.toString == orig(this.group.id.toString)
this.listenerList == orig(this.listenerList)
org.jfree.data.general.AbstractDataset.class$org$jfree$data$event$DatasetChangeListener == orig(org.jfree.data.general.AbstractDataset.class$org$jfree$data$event$DatasetChangeListener)
this.selectionState has only one value
===========================================================================
org.jfree.data.category.DefaultCategoryDataset:::CLASS
===========================================================================
org.jfree.data.category.DefaultCategoryDataset:::OBJECT
this has only one value
this.data has only one value
this.data != null
this.data.rowKeys has only one value
this.data.rowKeys != null
this.data.rowKeys[] elements has only one value
this.data.rowKeys[] elements != null
this.data.rowKeys[].getClass().getName() elements == java.lang.String.class
this.data.rowKeys[].getClass().getName() one of { [], [java.lang.String] }
this.data.rowKeys.getClass().getName() == java.util.ArrayList.class
this.data.columnKeys has only one value
this.data.columnKeys != null
this.data.columnKeys[] elements has only one value
this.data.columnKeys[] elements != null
this.data.columnKeys[].getClass().getName() elements == java.lang.String.class
this.data.columnKeys[].getClass().getName() one of { [], [java.lang.String] }
this.data.columnKeys.getClass().getName() == java.util.ArrayList.class
this.data.rows has only one value
this.data.rows != null
this.data.rows[] elements has only one value
this.data.rows[] elements != null
this.data.rows[].getClass().getName() elements == org.jfree.data.KeyedObjects.class
this.data.rows[].getClass().getName() one of { [], [org.jfree.data.KeyedObjects] }
this.data.rows.getClass().getName() == java.util.ArrayList.class
this.selectionState has only one value
this.selectionState != null
this.selectionState.getClass().getName() == org.jfree.data.category.DefaultCategoryDataset.class
this.group has only one value
this.group != null
this.group.id has only one value
this.group.id != null
this.group.id.toString == "NOID"
this.listenerList has only one value
this.listenerList != null
size(this.data.rowKeys[]) one of { 0, 1 }
size(this.data.columnKeys[]) one of { 0, 1 }
size(this.data.rows[]) one of { 0, 1 }
===========================================================================
org.jfree.data.category.DefaultCategoryDataset.DefaultCategoryDataset():::EXIT
this.data.rowKeys[] == []
this.data.rowKeys[].getClass().getName() == []
this.data.columnKeys[] == []
this.data.columnKeys[].getClass().getName() == []
this.data.rows[] == []
this.data.rows[].getClass().getName() == []
org.jfree.data.general.AbstractDataset.class$org$jfree$data$event$DatasetChangeListener == null
===========================================================================
org.jfree.data.category.DefaultCategoryDataset.addValue(double, java.lang.Comparable, java.lang.Comparable):::ENTER
this.data.rowKeys[] == []
this.data.rowKeys[].getClass().getName() == []
this.data.columnKeys[] == []
this.data.columnKeys[].getClass().getName() == []
this.data.rows[] == []
this.data.rows[].getClass().getName() == []
org.jfree.data.general.AbstractDataset.class$org$jfree$data$event$DatasetChangeListener has only one value
value == 1.0
rowKey has only one value
rowKey.getClass().getName() == java.lang.String.class
columnKey has only one value
columnKey.getClass().getName() == java.lang.String.class
===========================================================================
org.jfree.data.category.DefaultCategoryDataset.addValue(double, java.lang.Comparable, java.lang.Comparable):::EXIT
this.data == orig(this.data)
this.data.rowKeys == orig(this.data.rowKeys)
this.data.rowKeys.getClass().getName() == orig(this.data.rowKeys.getClass().getName())
this.data.columnKeys == orig(this.data.columnKeys)
this.data.columnKeys.getClass().getName() == orig(this.data.columnKeys.getClass().getName())
this.data.rows == orig(this.data.rows)
this.data.rows.getClass().getName() == orig(this.data.rows.getClass().getName())
this.selectionState == orig(this.selectionState)
this.selectionState.getClass().getName() == orig(this.selectionState.getClass().getName())
this.group == orig(this.group)
this.group.id == orig(this.group.id)
this.group.id.toString == orig(this.group.id.toString)
this.listenerList == orig(this.listenerList)
org.jfree.data.general.AbstractDataset.class$org$jfree$data$event$DatasetChangeListener == orig(org.jfree.data.general.AbstractDataset.class$org$jfree$data$event$DatasetChangeListener)
size(this.data.rowKeys[])-1 == orig(size(this.data.rowKeys[]))
size(this.data.columnKeys[])-1 == orig(size(this.data.columnKeys[]))
size(this.data.rows[])-1 == orig(size(this.data.rows[]))
this.data.rowKeys[] contains no nulls and has only one value, of length 1
this.data.rowKeys[].getClass().getName() == [java.lang.String]
this.data.columnKeys[] contains no nulls and has only one value, of length 1
this.data.columnKeys[].getClass().getName() == [java.lang.String]
this.data.rows[] contains no nulls and has only one value, of length 1
this.data.rows[].getClass().getName() == [org.jfree.data.KeyedObjects]
org.jfree.data.general.AbstractDataset.class$org$jfree$data$event$DatasetChangeListener has only one value
size(this.data.rowKeys[]) == 1
size(this.data.columnKeys[]) == 1
size(this.data.rows[]) == 1
===========================================================================
org.jfree.data.category.DefaultCategoryDataset.addValue(java.lang.Number, java.lang.Comparable, java.lang.Comparable):::ENTER
this.data.rowKeys[] == []
this.data.rowKeys[].getClass().getName() == []
this.data.columnKeys[] == []
this.data.columnKeys[].getClass().getName() == []
this.data.rows[] == []
this.data.rows[].getClass().getName() == []
org.jfree.data.general.AbstractDataset.class$org$jfree$data$event$DatasetChangeListener has only one value
value has only one value
value.getClass().getName() == java.lang.Double.class
rowKey has only one value
rowKey.getClass().getName() == java.lang.String.class
columnKey has only one value
columnKey.getClass().getName() == java.lang.String.class
===========================================================================
org.jfree.data.category.DefaultCategoryDataset.addValue(java.lang.Number, java.lang.Comparable, java.lang.Comparable):::EXIT
this.data == orig(this.data)
this.data.rowKeys == orig(this.data.rowKeys)
this.data.rowKeys.getClass().getName() == orig(this.data.rowKeys.getClass().getName())
this.data.columnKeys == orig(this.data.columnKeys)
this.data.columnKeys.getClass().getName() == orig(this.data.columnKeys.getClass().getName())
this.data.rows == orig(this.data.rows)
this.data.rows.getClass().getName() == orig(this.data.rows.getClass().getName())
this.selectionState == orig(this.selectionState)
this.selectionState.getClass().getName() == orig(this.selectionState.getClass().getName())
this.group == orig(this.group)
this.group.id == orig(this.group.id)
this.group.id.toString == orig(this.group.id.toString)
this.listenerList == orig(this.listenerList)
org.jfree.data.general.AbstractDataset.class$org$jfree$data$event$DatasetChangeListener == orig(org.jfree.data.general.AbstractDataset.class$org$jfree$data$event$DatasetChangeListener)
size(this.data.rowKeys[])-1 == orig(size(this.data.rowKeys[]))
size(this.data.columnKeys[])-1 == orig(size(this.data.columnKeys[]))
size(this.data.rows[])-1 == orig(size(this.data.rows[]))
this.data.rowKeys[] contains no nulls and has only one value, of length 1
this.data.rowKeys[].getClass().getName() == [java.lang.String]
this.data.columnKeys[] contains no nulls and has only one value, of length 1
this.data.columnKeys[].getClass().getName() == [java.lang.String]
this.data.rows[] contains no nulls and has only one value, of length 1
this.data.rows[].getClass().getName() == [org.jfree.data.KeyedObjects]
org.jfree.data.general.AbstractDataset.class$org$jfree$data$event$DatasetChangeListener has only one value
size(this.data.rowKeys[]) == 1
size(this.data.columnKeys[]) == 1
size(this.data.rows[]) == 1
===========================================================================
org.jfree.data.category.DefaultCategoryDataset.getRowCount():::ENTER
org.jfree.data.general.AbstractDataset.class$org$jfree$data$event$DatasetChangeListener has only one value
===========================================================================
org.jfree.data.category.DefaultCategoryDataset.getRowCount():::EXIT
this.data == orig(this.data)
this.data.rowKeys == orig(this.data.rowKeys)
this.data.rowKeys[] == orig(this.data.rowKeys[])
this.data.rowKeys.getClass().getName() == orig(this.data.rowKeys.getClass().getName())
this.data.columnKeys == orig(this.data.columnKeys)
this.data.columnKeys[] == orig(this.data.columnKeys[])
this.data.columnKeys.getClass().getName() == orig(this.data.columnKeys.getClass().getName())
this.data.rows == orig(this.data.rows)
this.data.rows[] == orig(this.data.rows[])
this.data.rows.getClass().getName() == orig(this.data.rows.getClass().getName())
this.selectionState == orig(this.selectionState)
this.selectionState.getClass().getName() == orig(this.selectionState.getClass().getName())
this.group == orig(this.group)
this.group.id == orig(this.group.id)
this.group.id.toString == orig(this.group.id.toString)
this.listenerList == orig(this.listenerList)
org.jfree.data.general.AbstractDataset.class$org$jfree$data$event$DatasetChangeListener == orig(org.jfree.data.general.AbstractDataset.class$org$jfree$data$event$DatasetChangeListener)
org.jfree.data.general.AbstractDataset.class$org$jfree$data$event$DatasetChangeListener has only one value
return one of { 0, 1 }
===========================================================================
org.jfree.data.category.DefaultCategoryDataset.getRowKey(int):::ENTER
this.data.rowKeys[] contains no nulls and has only one value, of length 1
this.data.rowKeys[].getClass().getName() == [java.lang.String]
this.data.columnKeys[] contains no nulls and has only one value, of length 1
this.data.columnKeys[].getClass().getName() == [java.lang.String]
this.data.rows[] contains no nulls and has only one value, of length 1
this.data.rows[].getClass().getName() == [org.jfree.data.KeyedObjects]
org.jfree.data.general.AbstractDataset.class$org$jfree$data$event$DatasetChangeListener has only one value
row == 0
size(this.data.rowKeys[]) == 1
size(this.data.columnKeys[]) == 1
size(this.data.rows[]) == 1
===========================================================================
org.jfree.data.category.DefaultCategoryDataset.getRowKey(int):::EXIT
this.data == orig(this.data)
this.data.rowKeys == orig(this.data.rowKeys)
this.data.rowKeys[] == orig(this.data.rowKeys[])
this.data.rowKeys.getClass().getName() == orig(this.data.rowKeys.getClass().getName())
this.data.columnKeys == orig(this.data.columnKeys)
this.data.columnKeys[] == orig(this.data.columnKeys[])
this.data.columnKeys.getClass().getName() == orig(this.data.columnKeys.getClass().getName())
this.data.rows == orig(this.data.rows)
this.data.rows[] == orig(this.data.rows[])
this.data.rows.getClass().getName() == orig(this.data.rows.getClass().getName())
this.selectionState == orig(this.selectionState)
this.selectionState.getClass().getName() == orig(this.selectionState.getClass().getName())
this.group == orig(this.group)
this.group.id == orig(this.group.id)
this.group.id.toString == orig(this.group.id.toString)
this.listenerList == orig(this.listenerList)
org.jfree.data.general.AbstractDataset.class$org$jfree$data$event$DatasetChangeListener == orig(org.jfree.data.general.AbstractDataset.class$org$jfree$data$event$DatasetChangeListener)
this.data.rowKeys[] contains no nulls and has only one value, of length 1
this.data.rowKeys[].getClass().getName() == [java.lang.String]
this.data.columnKeys[] contains no nulls and has only one value, of length 1
this.data.columnKeys[].getClass().getName() == [java.lang.String]
this.data.rows[] contains no nulls and has only one value, of length 1
this.data.rows[].getClass().getName() == [org.jfree.data.KeyedObjects]
org.jfree.data.general.AbstractDataset.class$org$jfree$data$event$DatasetChangeListener has only one value
return has only one value
return.getClass().getName() == java.lang.String.class
size(this.data.rowKeys[]) == 1
size(this.data.columnKeys[]) == 1
size(this.data.rows[]) == 1
===========================================================================
org.jfree.data.event.DatasetChangeEvent:::OBJECT
this.dataset.getClass().getName() == org.jfree.data.category.DefaultCategoryDataset.class
===========================================================================
org.jfree.data.event.DatasetChangeEvent.DatasetChangeEvent(java.lang.Object, org.jfree.data.general.Dataset, org.jfree.chart.event.DatasetChangeInfo):::ENTER
dataset.getClass().getName() == org.jfree.data.category.DefaultCategoryDataset.class
===========================================================================
org.jfree.data.event.DatasetChangeEvent.DatasetChangeEvent(java.lang.Object, org.jfree.data.general.Dataset, org.jfree.chart.event.DatasetChangeInfo):::EXIT
===========================================================================
org.jfree.data.general.AbstractDataset:::CLASS
===========================================================================
org.jfree.data.general.AbstractDataset:::OBJECT
this has only one value
this.getClass().getName() == org.jfree.data.category.DefaultCategoryDataset.class
this.group has only one value
this.group.id has only one value
this.group.id.toString == "NOID"
this.listenerList has only one value
===========================================================================
org.jfree.data.general.AbstractDataset.AbstractDataset():::EXIT
org.jfree.data.general.AbstractDataset.class$org$jfree$data$event$DatasetChangeListener == null
===========================================================================
org.jfree.data.general.AbstractDataset.addChangeListener(org.jfree.data.event.DatasetChangeListener):::ENTER
org.jfree.data.general.AbstractDataset.class$org$jfree$data$event$DatasetChangeListener == null
listener has only one value
listener.getClass().getName() == org.jfree.chart.plot.CategoryPlot.class
===========================================================================
org.jfree.data.general.AbstractDataset.addChangeListener(org.jfree.data.event.DatasetChangeListener):::EXIT
this.group == orig(this.group)
this.group.id == orig(this.group.id)
this.group.id.toString == orig(this.group.id.toString)
this.listenerList == orig(this.listenerList)
org.jfree.data.general.AbstractDataset.class$org$jfree$data$event$DatasetChangeListener has only one value
===========================================================================
org.jfree.data.general.AbstractDataset.class$(java.lang.String):::ENTER
org.jfree.data.general.AbstractDataset.class$org$jfree$data$event$DatasetChangeListener == null
x0 has only one value
x0.toString == "org.jfree.data.event.DatasetChangeListener"
===========================================================================
org.jfree.data.general.AbstractDataset.class$(java.lang.String):::EXIT
org.jfree.data.general.AbstractDataset.class$org$jfree$data$event$DatasetChangeListener == orig(org.jfree.data.general.AbstractDataset.class$org$jfree$data$event$DatasetChangeListener)
x0.toString == orig(x0.toString)
org.jfree.data.general.AbstractDataset.class$org$jfree$data$event$DatasetChangeListener == null
x0.toString == "org.jfree.data.event.DatasetChangeListener"
return has only one value
===========================================================================
org.jfree.data.general.AbstractDataset.fireDatasetChanged(org.jfree.chart.event.DatasetChangeInfo):::ENTER
===========================================================================
org.jfree.data.general.AbstractDataset.fireDatasetChanged(org.jfree.chart.event.DatasetChangeInfo):::EXIT
this.group == orig(this.group)
this.group.id == orig(this.group.id)
this.group.id.toString == orig(this.group.id.toString)
this.listenerList == orig(this.listenerList)
org.jfree.data.general.AbstractDataset.class$org$jfree$data$event$DatasetChangeListener == orig(org.jfree.data.general.AbstractDataset.class$org$jfree$data$event$DatasetChangeListener)
===========================================================================
org.jfree.data.general.AbstractDataset.notifyListeners(org.jfree.data.event.DatasetChangeEvent):::ENTER
event.dataset has only one value
event.dataset.getClass().getName() == org.jfree.data.category.DefaultCategoryDataset.class
===========================================================================
org.jfree.data.general.AbstractDataset.notifyListeners(org.jfree.data.event.DatasetChangeEvent):::EXIT
this.group == orig(this.group)
this.group.id == orig(this.group.id)
this.group.id.toString == orig(this.group.id.toString)
this.listenerList == orig(this.listenerList)
org.jfree.data.general.AbstractDataset.class$org$jfree$data$event$DatasetChangeListener == orig(org.jfree.data.general.AbstractDataset.class$org$jfree$data$event$DatasetChangeListener)
event.dataset == orig(event.dataset)
event.dataset.getClass().getName() == orig(event.dataset.getClass().getName())
event.info == orig(event.info)
event.dataset has only one value
event.dataset.getClass().getName() == org.jfree.data.category.DefaultCategoryDataset.class
===========================================================================
org.jfree.data.general.DatasetGroup:::CLASS
===========================================================================
org.jfree.data.general.DatasetGroup:::OBJECT
this has only one value
this.id has only one value
this.id.toString == "NOID"
===========================================================================
org.jfree.data.general.DatasetGroup.DatasetGroup():::EXIT
