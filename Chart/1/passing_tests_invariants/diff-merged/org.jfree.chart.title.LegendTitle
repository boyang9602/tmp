{
    "org.jfree.chart.title.LegendTitle": [
        {
            "LegendTitle(org.jfree.chart.LegendItemSource, org.jfree.chart.block.Arrangement, org.jfree.chart.block.Arrangement)": [
                {
                    "ENTER": [
                        {
                            "f.inv.output": {
                                "invs": []
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": []
                            }
                        },
                        {
                            "Patch1.inv.output": {
                                "invs": []
                            }
                        }
                    ]
                },
                {
                    "EXIT": [
                        {
                            "f.inv.output": {
                                "invs": [
                                    "this.items.blocks[] == []",
                                    "this.items.blocks[].getClass().getName() == []"
                                ]
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": []
                            }
                        },
                        {
                            "Patch1.inv.output": {
                                "invs": [
                                    "this.items.blocks[] == []",
                                    "this.items.blocks[].getClass().getName() == []"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "getWrapper()": [
                {
                    "ENTER": [
                        {
                            "f.inv.output": {
                                "invs": [
                                    "this.items.blocks[] == []",
                                    "this.items.blocks[].getClass().getName() == []"
                                ]
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": []
                            }
                        },
                        {
                            "Patch1.inv.output": {
                                "invs": [
                                    "this.items.blocks[] == []",
                                    "this.items.blocks[].getClass().getName() == []"
                                ]
                            }
                        }
                    ]
                },
                {
                    "EXIT": [
                        {
                            "f.inv.output": {
                                "invs": [
                                    "this.items.blocks[] == []",
                                    "this.items.blocks[].getClass().getName() == []"
                                ]
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": []
                            }
                        },
                        {
                            "Patch1.inv.output": {
                                "invs": [
                                    "this.items.blocks[] == []",
                                    "this.items.blocks[].getClass().getName() == []"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "getBackgroundPaint()": [
                {
                    "ENTER": [
                        {
                            "f.inv.output": {
                                "invs": [
                                    "this.items.blocks[] == []",
                                    "this.items.blocks[].getClass().getName() == []"
                                ]
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": []
                            }
                        },
                        {
                            "Patch1.inv.output": {
                                "invs": [
                                    "this.items.blocks[] == []",
                                    "this.items.blocks[].getClass().getName() == []"
                                ]
                            }
                        }
                    ]
                },
                {
                    "EXIT": [
                        {
                            "f.inv.output": {
                                "invs": [
                                    "this.items.blocks[] == []",
                                    "this.items.blocks[].getClass().getName() == []"
                                ]
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": []
                            }
                        },
                        {
                            "Patch1.inv.output": {
                                "invs": [
                                    "this.items.blocks[] == []",
                                    "this.items.blocks[].getClass().getName() == []"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "LegendTitle(org.jfree.chart.LegendItemSource)": [
                {
                    "ENTER": [
                        {
                            "f.inv.output": {
                                "invs": []
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": []
                            }
                        },
                        {
                            "Patch1.inv.output": {
                                "invs": []
                            }
                        }
                    ]
                },
                {
                    "EXIT": [
                        {
                            "f.inv.output": {
                                "invs": [
                                    "this.items.blocks[] == []",
                                    "this.items.blocks[].getClass().getName() == []"
                                ]
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": []
                            }
                        },
                        {
                            "Patch1.inv.output": {
                                "invs": [
                                    "this.items.blocks[] == []",
                                    "this.items.blocks[].getClass().getName() == []"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "fetchLegendItems()": [
                {
                    "ENTER": [
                        {
                            "f.inv.output": {
                                "invs": [
                                    "this.items.blocks[] == []",
                                    "this.items.blocks[].getClass().getName() == []"
                                ]
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": []
                            }
                        },
                        {
                            "Patch1.inv.output": {
                                "invs": [
                                    "this.items.blocks[] == []",
                                    "this.items.blocks[].getClass().getName() == []"
                                ]
                            }
                        }
                    ]
                },
                {
                    "EXIT": [
                        {
                            "f.inv.output": {
                                "invs": [
                                    "size(this.items.blocks[])-1 >= orig(size(this.items.blocks[]))-1",
                                    "size(this.items.blocks[]) >= orig(size(this.items.blocks[]))"
                                ]
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": [
                                    "this.items.blocks[] == orig(this.items.blocks[])"
                                ]
                            }
                        },
                        {
                            "Patch1.inv.output": {
                                "invs": [
                                    "size(this.items.blocks[])-1 >= orig(size(this.items.blocks[]))-1",
                                    "size(this.items.blocks[]) >= orig(size(this.items.blocks[]))"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "readObject(java.io.ObjectInputStream)": [
                {
                    "ENTER": [
                        {
                            "f.inv.output": {
                                "invs": []
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": []
                            }
                        },
                        {
                            "Patch1.inv.output": {
                                "invs": []
                            }
                        }
                    ]
                },
                {
                    "EXIT": [
                        {
                            "f.inv.output": {
                                "invs": [
                                    "this.items.blocks[] == []",
                                    "this.items.blocks[].getClass().getName() == []"
                                ]
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": []
                            }
                        },
                        {
                            "Patch1.inv.output": {
                                "invs": [
                                    "this.items.blocks[] == []",
                                    "this.items.blocks[].getClass().getName() == []"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "setItemPaint(java.awt.Paint)": [
                {
                    "ENTER": [
                        {
                            "f.inv.output": {
                                "invs": [
                                    "this.items.blocks[] == []",
                                    "this.items.blocks[].getClass().getName() == []"
                                ]
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": []
                            }
                        },
                        {
                            "Patch1.inv.output": {
                                "invs": [
                                    "this.items.blocks[] == []",
                                    "this.items.blocks[].getClass().getName() == []"
                                ]
                            }
                        }
                    ]
                },
                {
                    "EXIT": [
                        {
                            "f.inv.output": {
                                "invs": [
                                    "this.items.blocks[] == []",
                                    "this.items.blocks[].getClass().getName() == []"
                                ]
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": []
                            }
                        },
                        {
                            "Patch1.inv.output": {
                                "invs": [
                                    "this.items.blocks[] == []",
                                    "this.items.blocks[].getClass().getName() == []"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "setBackgroundPaint(java.awt.Paint)": [
                {
                    "ENTER": [
                        {
                            "f.inv.output": {
                                "invs": [
                                    "this.items.blocks[] == []",
                                    "this.items.blocks[].getClass().getName() == []"
                                ]
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": []
                            }
                        },
                        {
                            "Patch1.inv.output": {
                                "invs": [
                                    "this.items.blocks[] == []",
                                    "this.items.blocks[].getClass().getName() == []"
                                ]
                            }
                        }
                    ]
                },
                {
                    "EXIT": [
                        {
                            "f.inv.output": {
                                "invs": [
                                    "this.items.blocks[] == []",
                                    "this.items.blocks[].getClass().getName() == []"
                                ]
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": []
                            }
                        },
                        {
                            "Patch1.inv.output": {
                                "invs": [
                                    "this.items.blocks[] == []",
                                    "this.items.blocks[].getClass().getName() == []"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "setItemFont(java.awt.Font)": [
                {
                    "ENTER": [
                        {
                            "f.inv.output": {
                                "invs": [
                                    "this.items.blocks[] == []",
                                    "this.items.blocks[].getClass().getName() == []"
                                ]
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": []
                            }
                        },
                        {
                            "Patch1.inv.output": {
                                "invs": [
                                    "this.items.blocks[] == []",
                                    "this.items.blocks[].getClass().getName() == []"
                                ]
                            }
                        }
                    ]
                },
                {
                    "EXIT": [
                        {
                            "f.inv.output": {
                                "invs": [
                                    "this.items.blocks[] == []",
                                    "this.items.blocks[].getClass().getName() == []"
                                ]
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": []
                            }
                        },
                        {
                            "Patch1.inv.output": {
                                "invs": [
                                    "this.items.blocks[] == []",
                                    "this.items.blocks[].getClass().getName() == []"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "writeObject(java.io.ObjectOutputStream)": [
                {
                    "ENTER": [
                        {
                            "f.inv.output": {
                                "invs": [
                                    "this.items.blocks[] == []",
                                    "this.items.blocks[].getClass().getName() == []"
                                ]
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": []
                            }
                        },
                        {
                            "Patch1.inv.output": {
                                "invs": [
                                    "this.items.blocks[] == []",
                                    "this.items.blocks[].getClass().getName() == []"
                                ]
                            }
                        }
                    ]
                },
                {
                    "EXIT": [
                        {
                            "f.inv.output": {
                                "invs": [
                                    "this.items.blocks[] == []",
                                    "this.items.blocks[].getClass().getName() == []"
                                ]
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": []
                            }
                        },
                        {
                            "Patch1.inv.output": {
                                "invs": [
                                    "this.items.blocks[] == []",
                                    "this.items.blocks[].getClass().getName() == []"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "equals(java.lang.Object)": [
                {
                    "ENTER": [
                        {
                            "f.inv.output": {
                                "invs": [
                                    "this.items.blocks[] == []",
                                    "this.items.blocks[].getClass().getName() == []"
                                ]
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": []
                            }
                        },
                        {
                            "Patch1.inv.output": {
                                "invs": [
                                    "this.items.blocks[] == []",
                                    "this.items.blocks[].getClass().getName() == []"
                                ]
                            }
                        }
                    ]
                },
                {
                    "EXIT": [
                        {
                            "f.inv.output": {
                                "invs": [
                                    "this.items.blocks[] == []",
                                    "this.items.blocks[].getClass().getName() == []"
                                ]
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": []
                            }
                        },
                        {
                            "Patch1.inv.output": {
                                "invs": [
                                    "this.items.blocks[] == []",
                                    "this.items.blocks[].getClass().getName() == []"
                                ]
                            }
                        }
                    ]
                },
                {
                    "EXITNN": [
                        {
                            "624": [
                                {
                                    "f.inv.output": {
                                        "invs": []
                                    }
                                },
                                {
                                    "b.inv.output": {
                                        "invs": []
                                    }
                                },
                                {
                                    "Patch1.inv.output": {
                                        "invs": []
                                    }
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "arrange(java.awt.Graphics2D, org.jfree.chart.block.RectangleConstraint)": [
                {
                    "ENTER": [
                        {
                            "f.inv.output": {
                                "invs": [
                                    "this.items.blocks[] == []",
                                    "this.items.blocks[].getClass().getName() == []"
                                ]
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": []
                            }
                        },
                        {
                            "Patch1.inv.output": {
                                "invs": [
                                    "this.items.blocks[] == []",
                                    "this.items.blocks[].getClass().getName() == []"
                                ]
                            }
                        }
                    ]
                },
                {
                    "EXIT": [
                        {
                            "f.inv.output": {
                                "invs": [
                                    "(return.height one of { 23.96875, 43.9375 })  ==>  (this.bounds.getClass().getName() == java.awt.geom.Rectangle2D$Float.class)",
                                    "return.height one of { 0.0, 23.96875, 43.9375 }",
                                    "(return.height one of { 23.96875, 43.9375 })  ==>  (this.items.frame has only one value)",
                                    "(return.height one of { 23.96875, 43.9375 })  ==>  (this.items.margin has only one value)",
                                    "(return.width == 0.0)  ==>  (this.sources[].getClass().getName() == [org.jfree.chart.plot.CategoryPlot])",
                                    "(return.width == 0.0)  ==>  (this.sources[].getClass().getName() elements == org.jfree.chart.plot.CategoryPlot.class)",
                                    "(return.height one of { 23.96875, 43.9375 })  ==>  (this.backgroundPaint has only one value)",
                                    "(return.height one of { 23.96875, 43.9375 })  ==>  (this.items.padding has only one value)",
                                    "(return.height one of { 23.96875, 43.9375 })  ==>  (this.items.blocks[].getClass().getName() elements == org.jfree.chart.block.BlockContainer.class)",
                                    "(return.width == 0.0)  ==>  (this.items.blocks[] == orig(this.items.blocks[]))",
                                    "size(this.items.blocks[])-1 >= orig(size(this.items.blocks[]))-1",
                                    "(return.width == 0.0)  ==>  (constraint.heightRange.upper one of { 74.71875, 174.71875 })",
                                    "(return.width == 0.0)  ==>  (this.items.blocks[].getClass().getName() == [])",
                                    "(return.height one of { 23.96875, 43.9375 })  <==>  (size(this.items.blocks[])-1 >= orig(size(this.items.blocks[])))",
                                    "(return.width == 0.0)  ==>  (this.items.blocks[] == [])",
                                    "size(this.items.blocks[]) >= orig(size(this.items.blocks[]))",
                                    "(return.width == 0.0)  ==>  (constraint.height one of { 74.71875, 174.71875 })",
                                    "(return.width == 0.0)  <==>  (return.height == 0.0)",
                                    "return.width >= 0.0",
                                    "(return.height one of { 23.96875, 43.9375 })  ==>  (this.items.bounds.getClass().getName() == java.awt.geom.Rectangle2D$Float.class)",
                                    "(return.height one of { 23.96875, 43.9375 })  ==>  (this.padding has only one value)"
                                ]
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": [
                                    "return.height == 0.0",
                                    "return.width == 0.0",
                                    "this.items.blocks[] == orig(this.items.blocks[])"
                                ]
                            }
                        },
                        {
                            "Patch1.inv.output": {
                                "invs": [
                                    "(return.height one of { 23.96875, 43.9375 })  ==>  (this.bounds.getClass().getName() == java.awt.geom.Rectangle2D$Float.class)",
                                    "return.height one of { 0.0, 23.96875, 43.9375 }",
                                    "(return.height one of { 23.96875, 43.9375 })  ==>  (this.items.frame has only one value)",
                                    "(return.height one of { 23.96875, 43.9375 })  ==>  (this.items.margin has only one value)",
                                    "(return.width == 0.0)  ==>  (this.sources[].getClass().getName() == [org.jfree.chart.plot.CategoryPlot])",
                                    "(return.width == 0.0)  ==>  (this.sources[].getClass().getName() elements == org.jfree.chart.plot.CategoryPlot.class)",
                                    "(return.height one of { 23.96875, 43.9375 })  ==>  (this.backgroundPaint has only one value)",
                                    "(return.height one of { 23.96875, 43.9375 })  ==>  (this.items.padding has only one value)",
                                    "(return.height one of { 23.96875, 43.9375 })  ==>  (this.items.blocks[].getClass().getName() elements == org.jfree.chart.block.BlockContainer.class)",
                                    "(return.width == 0.0)  ==>  (this.items.blocks[] == orig(this.items.blocks[]))",
                                    "size(this.items.blocks[])-1 >= orig(size(this.items.blocks[]))-1",
                                    "(return.width == 0.0)  ==>  (constraint.heightRange.upper one of { 74.71875, 174.71875 })",
                                    "(return.width == 0.0)  ==>  (this.items.blocks[].getClass().getName() == [])",
                                    "(return.height one of { 23.96875, 43.9375 })  <==>  (size(this.items.blocks[])-1 >= orig(size(this.items.blocks[])))",
                                    "(return.width == 0.0)  ==>  (this.items.blocks[] == [])",
                                    "size(this.items.blocks[]) >= orig(size(this.items.blocks[]))",
                                    "(return.width == 0.0)  ==>  (constraint.height one of { 74.71875, 174.71875 })",
                                    "(return.width == 0.0)  <==>  (return.height == 0.0)",
                                    "return.width >= 0.0",
                                    "(return.height one of { 23.96875, 43.9375 })  ==>  (this.items.bounds.getClass().getName() == java.awt.geom.Rectangle2D$Float.class)",
                                    "(return.height one of { 23.96875, 43.9375 })  ==>  (this.padding has only one value)"
                                ]
                            }
                        }
                    ]
                },
                {
                    "EXITNN": [
                        {
                            "495": [
                                {
                                    "f.inv.output": {
                                        "invs": [
                                            "return.width == 0.0",
                                            "constraint.heightRange.upper one of { 74.71875, 174.71875 }",
                                            "this.items.blocks[] == []",
                                            "constraint.height one of { 74.71875, 174.71875 }",
                                            "this.items.blocks[] == orig(this.items.blocks[])",
                                            "this.items.blocks[].getClass().getName() == []",
                                            "this.sources[].getClass().getName() == [org.jfree.chart.plot.CategoryPlot]",
                                            "this.sources[].getClass().getName() elements == org.jfree.chart.plot.CategoryPlot.class",
                                            "return.height == 0.0"
                                        ]
                                    }
                                },
                                {
                                    "b.inv.output": {
                                        "invs": []
                                    }
                                },
                                {
                                    "Patch1.inv.output": {
                                        "invs": [
                                            "return.width == 0.0",
                                            "constraint.heightRange.upper one of { 74.71875, 174.71875 }",
                                            "this.items.blocks[] == []",
                                            "constraint.height one of { 74.71875, 174.71875 }",
                                            "this.items.blocks[] == orig(this.items.blocks[])",
                                            "this.items.blocks[].getClass().getName() == []",
                                            "this.sources[].getClass().getName() == [org.jfree.chart.plot.CategoryPlot]",
                                            "this.sources[].getClass().getName() elements == org.jfree.chart.plot.CategoryPlot.class",
                                            "return.height == 0.0"
                                        ]
                                    }
                                }
                            ]
                        },
                        {
                            "505": [
                                {
                                    "b.inv.output": "N/A"
                                },
                                {
                                    "f.inv.output": {
                                        "invs": [
                                            "this.items.bounds.getClass().getName() == java.awt.geom.Rectangle2D$Float.class",
                                            "size(this.items.blocks[])-1 >= orig(size(this.items.blocks[]))",
                                            "this.items.margin has only one value",
                                            "this.items.frame has only one value",
                                            "this.padding has only one value",
                                            "this.bounds.getClass().getName() == java.awt.geom.Rectangle2D$Float.class",
                                            "this.backgroundPaint has only one value",
                                            "this.items.padding has only one value",
                                            "return.height one of { 23.96875, 43.9375 }"
                                        ]
                                    }
                                },
                                {
                                    "Patch1.inv.output": {
                                        "invs": [
                                            "this.items.bounds.getClass().getName() == java.awt.geom.Rectangle2D$Float.class",
                                            "size(this.items.blocks[])-1 >= orig(size(this.items.blocks[]))",
                                            "this.items.margin has only one value",
                                            "this.items.frame has only one value",
                                            "this.padding has only one value",
                                            "this.bounds.getClass().getName() == java.awt.geom.Rectangle2D$Float.class",
                                            "this.backgroundPaint has only one value",
                                            "this.items.padding has only one value",
                                            "return.height one of { 23.96875, 43.9375 }"
                                        ]
                                    }
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}