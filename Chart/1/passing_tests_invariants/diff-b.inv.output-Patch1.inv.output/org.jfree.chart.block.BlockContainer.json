{"name": "org.jfree.chart.block.BlockContainer", "children": [{"name": "isEmpty()", "children": [{"name": "ENTER", "children": [{"name": "b.inv.output", "children": []}, {"name": "Patch1.inv.output", "children": [{"name": "this.arrangement.getClass().getName() == org.jfree.chart.block.FlowArrangement.class"}, {"name": "this.blocks[].getClass().getName() elements == org.jfree.chart.block.BlockContainer.class"}]}]}, {"name": "EXIT", "children": [{"name": "b.inv.output", "children": [{"name": "return == true"}]}, {"name": "Patch1.inv.output", "children": [{"name": "(return == false)  ==>  (this.frame has only one value)"}, {"name": "(return == false)  ==>  (this.blocks[].getClass().getName() elements == org.jfree.chart.block.BlockContainer.class)"}, {"name": "(return == false)  ==>  (this.margin has only one value)"}, {"name": "this.arrangement.getClass().getName() == org.jfree.chart.block.FlowArrangement.class"}, {"name": "(return == true)  ==>  (this.blocks[].getClass().getName() == [])"}, {"name": "(return == false)  ==>  (this.bounds.getClass().getName() == java.awt.geom.Rectangle2D$Float.class)"}, {"name": "this.blocks[].getClass().getName() elements == org.jfree.chart.block.BlockContainer.class"}, {"name": "(return == false)  ==>  (this.padding has only one value)"}, {"name": "(return == true)  ==>  (this.blocks[] == [])"}]}]}, {"name": "EXIT", "children": [{"name": "b.inv.output", "children": []}, {"name": "Patch1.inv.output", "children": [{"name": "(return == false)  ==>  (this.frame has only one value)"}, {"name": "(return == false)  ==>  (this.blocks[].getClass().getName() elements == org.jfree.chart.block.BlockContainer.class)"}, {"name": "(return == false)  ==>  (this.margin has only one value)"}, {"name": "this.arrangement.getClass().getName() == org.jfree.chart.block.FlowArrangement.class"}, {"name": "(return == true)  ==>  (this.blocks[].getClass().getName() == [])"}, {"name": "(return == false)  ==>  (this.bounds.getClass().getName() == java.awt.geom.Rectangle2D$Float.class)"}, {"name": "this.blocks[].getClass().getName() elements == org.jfree.chart.block.BlockContainer.class"}, {"name": "(return == false)  ==>  (this.padding has only one value)"}, {"name": "(return == true)  ==>  (this.blocks[] == [])"}]}]}]}, {"name": "draw(java.awt.Graphics2D, java.awt.geom.Rectangle2D, java.lang.Object)", "children": [{"name": "ENTER", "children": [{"name": "b.inv.output", "children": [{"name": "params != null"}]}, {"name": "Patch1.inv.output", "children": []}]}, {"name": "EXIT", "children": [{"name": "b.inv.output", "children": []}, {"name": "Patch1.inv.output", "children": []}]}]}, {"name": "BlockContainer(org.jfree.chart.block.Arrangement)", "children": [{"name": "ENTER", "children": [{"name": "b.inv.output", "children": [{"name": "arrangement.getClass().getName() == org.jfree.chart.block.FlowArrangement.class"}]}, {"name": "Patch1.inv.output", "children": []}]}, {"name": "EXIT", "children": [{"name": "b.inv.output", "children": []}, {"name": "Patch1.inv.output", "children": [{"name": "this.blocks[] == []"}, {"name": "this.blocks[].getClass().getName() == []"}]}]}]}, {"name": "setArrangement(org.jfree.chart.block.Arrangement)", "children": [{"name": "ENTER", "children": [{"name": "b.inv.output", "children": []}, {"name": "Patch1.inv.output", "children": [{"name": "this.blocks[] == []"}, {"name": "this.blocks[].getClass().getName() == []"}, {"name": "this.arrangement.getClass().getName() == org.jfree.chart.block.FlowArrangement.class"}]}]}, {"name": "EXIT", "children": [{"name": "b.inv.output", "children": []}, {"name": "Patch1.inv.output", "children": [{"name": "this.blocks[].getClass().getName() == []"}, {"name": "this.arrangement.getClass().getName() == org.jfree.chart.block.FlowArrangement.class"}, {"name": "this.blocks[] == []"}]}]}]}, {"name": "clear()", "children": [{"name": "ENTER", "children": [{"name": "b.inv.output", "children": []}, {"name": "Patch1.inv.output", "children": [{"name": "this.blocks[] == []"}, {"name": "this.blocks[].getClass().getName() == []"}, {"name": "this.arrangement.getClass().getName() == org.jfree.chart.block.FlowArrangement.class"}]}]}, {"name": "EXIT", "children": [{"name": "b.inv.output", "children": []}, {"name": "Patch1.inv.output", "children": [{"name": "this.blocks[].getClass().getName() == []"}, {"name": "this.arrangement.getClass().getName() == org.jfree.chart.block.FlowArrangement.class"}, {"name": "this.blocks[] == []"}]}]}]}]}
