{
    "org.jfree.chart.axis.NumberAxis": [
        {
            "getAutoRangeStickyZero()": [
                {
                    "ENTER": [
                        {
                            "Patch15.inv.output": {
                                "invs": []
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": [
                                    "this.tickUnit.size == 1.0"
                                ]
                            }
                        }
                    ]
                },
                {
                    "EXIT": [
                        {
                            "Patch15.inv.output": {
                                "invs": []
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": [
                                    "this.tickUnit.size == 1.0"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "configure()": [
                {
                    "ENTER": [
                        {
                            "Patch15.inv.output": {
                                "invs": []
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": [
                                    "this.tickUnit.size == 1.0"
                                ]
                            }
                        }
                    ]
                },
                {
                    "EXIT": [
                        {
                            "Patch15.inv.output": {
                                "invs": []
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": [
                                    "this.tickUnit.size == 1.0"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "selectAutoTickUnit(java.awt.Graphics2D, java.awt.geom.Rectangle2D, org.jfree.chart.util.RectangleEdge)": [
                {
                    "ENTER": [
                        {
                            "Patch15.inv.output": {
                                "invs": []
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": [
                                    "this.tickUnit.size == 1.0"
                                ]
                            }
                        }
                    ]
                },
                {
                    "EXIT": [
                        {
                            "Patch15.inv.output": {
                                "invs": [
                                    "this.tickUnit.size == orig(this.tickUnit.size)",
                                    "this.tickUnit.formatter has only one value",
                                    "this.tickUnit has only one value"
                                ]
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": []
                            }
                        }
                    ]
                }
            ]
        },
        {
            "calculateVisibleTickCount()": [
                {
                    "ENTER": [
                        {
                            "Patch15.inv.output": {
                                "invs": [
                                    "this.tickUnit.formatter has only one value",
                                    "this.tickUnit has only one value"
                                ]
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": []
                            }
                        }
                    ]
                },
                {
                    "EXIT": [
                        {
                            "Patch15.inv.output": {
                                "invs": [
                                    "return == 9",
                                    "this.tickUnit.formatter has only one value",
                                    "this.tickUnit has only one value"
                                ]
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": [
                                    "return one of { 3, 9 }"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "getTickUnit()": [
                {
                    "ENTER": [
                        {
                            "Patch15.inv.output": {
                                "invs": []
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": []
                            }
                        }
                    ]
                },
                {
                    "EXIT": [
                        {
                            "Patch15.inv.output": {
                                "invs": [
                                    "return.size == 1.0"
                                ]
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": [
                                    "return.size one of { 1.0, 2.5 }"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "selectVerticalAutoTickUnit(java.awt.Graphics2D, java.awt.geom.Rectangle2D, org.jfree.chart.util.RectangleEdge)": [
                {
                    "ENTER": [
                        {
                            "Patch15.inv.output": {
                                "invs": []
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": [
                                    "this.tickUnit.size == 1.0"
                                ]
                            }
                        }
                    ]
                },
                {
                    "EXIT": [
                        {
                            "Patch15.inv.output": {
                                "invs": [
                                    "this.tickUnit.size == orig(this.tickUnit.size)",
                                    "this.tickUnit.formatter has only one value",
                                    "this.tickUnit has only one value"
                                ]
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": []
                            }
                        }
                    ]
                }
            ]
        },
        {
            "valueToJava2D(double, java.awt.geom.Rectangle2D, org.jfree.chart.util.RectangleEdge)": [
                {
                    "ENTER": [
                        {
                            "Patch15.inv.output": {
                                "invs": [
                                    "value >= -1.0"
                                ]
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": []
                            }
                        }
                    ]
                },
                {
                    "EXIT": [
                        {
                            "Patch15.inv.output": {
                                "invs": []
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": []
                            }
                        }
                    ]
                },
                {
                    "EXITNN": [
                        {
                            "545": [
                                {
                                    "Patch15.inv.output": {
                                        "invs": []
                                    }
                                },
                                {
                                    "b.inv.output": {
                                        "invs": []
                                    }
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "hashCode()": [
                {
                    "ENTER": [
                        {
                            "Patch15.inv.output": {
                                "invs": []
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": [
                                    "this.tickUnit.size == 2.5"
                                ]
                            }
                        }
                    ]
                },
                {
                    "EXIT": [
                        {
                            "Patch15.inv.output": {
                                "invs": []
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": [
                                    "this.tickUnit.size == 2.5"
                                ]
                            }
                        }
                    ]
                },
                {
                    "EXITNN": [
                        {
                            "1371": [
                                {
                                    "Patch15.inv.output": {
                                        "invs": []
                                    }
                                },
                                {
                                    "b.inv.output": {
                                        "invs": []
                                    }
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "refreshTicksVertical(java.awt.Graphics2D, java.awt.geom.Rectangle2D, org.jfree.chart.util.RectangleEdge)": [
                {
                    "ENTER": [
                        {
                            "Patch15.inv.output": {
                                "invs": []
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": [
                                    "this.tickUnit.size == 1.0"
                                ]
                            }
                        }
                    ]
                },
                {
                    "EXIT": [
                        {
                            "Patch15.inv.output": {
                                "invs": [
                                    "this.tickUnit.size == orig(this.tickUnit.size)",
                                    "size(return[]) == 9",
                                    "return[].getClass().getName() == [org.jfree.chart.axis.NumberTick, org.jfree.chart.axis.NumberTick, org.jfree.chart.axis.NumberTick, org.jfree.chart.axis.NumberTick, org.jfree.chart.axis.NumberTick, org.jfree.chart.axis.NumberTick, org.jfree.chart.axis.NumberTick, org.jfree.chart.axis.NumberTick, org.jfree.chart.axis.NumberTick]",
                                    "this.tickUnit.formatter has only one value",
                                    "this.tickUnit has only one value"
                                ]
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": [
                                    "size(return[]) one of { 3, 9 }",
                                    "return[].getClass().getName() one of { [org.jfree.chart.axis.NumberTick, org.jfree.chart.axis.NumberTick, org.jfree.chart.axis.NumberTick], [org.jfree.chart.axis.NumberTick, org.jfree.chart.axis.NumberTick, org.jfree.chart.axis.NumberTick, org.jfree.chart.axis.NumberTick, org.jfree.chart.axis.NumberTick, org.jfree.chart.axis.NumberTick, org.jfree.chart.axis.NumberTick, org.jfree.chart.axis.NumberTick, org.jfree.chart.axis.NumberTick] }"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "autoAdjustRange()": [
                {
                    "ENTER": [
                        {
                            "Patch15.inv.output": {
                                "invs": []
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": [
                                    "this.tickUnit.size == 1.0"
                                ]
                            }
                        }
                    ]
                },
                {
                    "EXIT": [
                        {
                            "Patch15.inv.output": {
                                "invs": []
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": [
                                    "this.tickUnit.size == 1.0"
                                ]
                            }
                        }
                    ]
                },
                {
                    "EXITNN": [
                        {
                            "425": [
                                {
                                    "Patch15.inv.output": {
                                        "invs": []
                                    }
                                },
                                {
                                    "b.inv.output": {
                                        "invs": []
                                    }
                                }
                            ]
                        },
                        {
                            "507": [
                                {
                                    "Patch15.inv.output": {
                                        "invs": []
                                    }
                                },
                                {
                                    "b.inv.output": {
                                        "invs": []
                                    }
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "getAutoRangeIncludesZero()": [
                {
                    "ENTER": [
                        {
                            "Patch15.inv.output": {
                                "invs": []
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": [
                                    "this.tickUnit.size == 1.0"
                                ]
                            }
                        }
                    ]
                },
                {
                    "EXIT": [
                        {
                            "Patch15.inv.output": {
                                "invs": []
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": [
                                    "this.tickUnit.size == 1.0"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "draw(java.awt.Graphics2D, double, java.awt.geom.Rectangle2D, java.awt.geom.Rectangle2D, org.jfree.chart.util.RectangleEdge, org.jfree.chart.plot.PlotRenderingInfo)": [
                {
                    "ENTER": [
                        {
                            "Patch15.inv.output": {
                                "invs": []
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": [
                                    "this.tickUnit.size == 1.0"
                                ]
                            }
                        }
                    ]
                },
                {
                    "EXIT": [
                        {
                            "Patch15.inv.output": {
                                "invs": [
                                    "return.ticks[] contains no nulls and has only one value, of length 9",
                                    "return.cursor == 8.0",
                                    "return.ticks[].getClass().getName() == [org.jfree.chart.axis.NumberTick, org.jfree.chart.axis.NumberTick, org.jfree.chart.axis.NumberTick, org.jfree.chart.axis.NumberTick, org.jfree.chart.axis.NumberTick, org.jfree.chart.axis.NumberTick, org.jfree.chart.axis.NumberTick, org.jfree.chart.axis.NumberTick, org.jfree.chart.axis.NumberTick]",
                                    "this.tickUnit.size == orig(this.tickUnit.size)",
                                    "this.tickUnit == orig(this.tickUnit)",
                                    "this.tickUnit.formatter == orig(this.tickUnit.formatter)",
                                    "size(return.ticks[]) == 9"
                                ]
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": [
                                    "return.ticks[] contains no nulls and has only one value, of length 3",
                                    "size(return.ticks[]) == 3",
                                    "return.ticks[].getClass().getName() == [org.jfree.chart.axis.NumberTick, org.jfree.chart.axis.NumberTick, org.jfree.chart.axis.NumberTick]",
                                    "return.cursor == 3.0",
                                    "this.tickUnit.size == 2.5"
                                ]
                            }
                        }
                    ]
                },
                {
                    "EXITNN": [
                        {
                            "685": [
                                {
                                    "Patch15.inv.output": {
                                        "invs": []
                                    }
                                },
                                {
                                    "b.inv.output": {
                                        "invs": []
                                    }
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "estimateMaximumTickLabelHeight(java.awt.Graphics2D)": [
                {
                    "ENTER": [
                        {
                            "Patch15.inv.output": {
                                "invs": []
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": [
                                    "this.tickUnit.size == 1.0"
                                ]
                            }
                        }
                    ]
                },
                {
                    "EXIT": [
                        {
                            "Patch15.inv.output": {
                                "invs": []
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": [
                                    "this.tickUnit.size == 1.0"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "getNumberFormatOverride()": [
                {
                    "ENTER": [
                        {
                            "Patch15.inv.output": {
                                "invs": [
                                    "this.tickUnit.formatter has only one value",
                                    "this.tickUnit has only one value"
                                ]
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": []
                            }
                        }
                    ]
                },
                {
                    "EXIT": [
                        {
                            "Patch15.inv.output": {
                                "invs": [
                                    "this.tickUnit.formatter has only one value",
                                    "this.tickUnit has only one value"
                                ]
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": []
                            }
                        }
                    ]
                }
            ]
        },
        {
            "refreshTicks(java.awt.Graphics2D, org.jfree.chart.axis.AxisState, java.awt.geom.Rectangle2D, org.jfree.chart.util.RectangleEdge)": [
                {
                    "ENTER": [
                        {
                            "Patch15.inv.output": {
                                "invs": []
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": [
                                    "this.tickUnit.size == 1.0"
                                ]
                            }
                        }
                    ]
                },
                {
                    "EXIT": [
                        {
                            "Patch15.inv.output": {
                                "invs": [
                                    "this.tickUnit.size == orig(this.tickUnit.size)",
                                    "size(return[]) == 9",
                                    "return[].getClass().getName() == [org.jfree.chart.axis.NumberTick, org.jfree.chart.axis.NumberTick, org.jfree.chart.axis.NumberTick, org.jfree.chart.axis.NumberTick, org.jfree.chart.axis.NumberTick, org.jfree.chart.axis.NumberTick, org.jfree.chart.axis.NumberTick, org.jfree.chart.axis.NumberTick, org.jfree.chart.axis.NumberTick]",
                                    "this.tickUnit.formatter has only one value",
                                    "this.tickUnit has only one value"
                                ]
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": [
                                    "size(return[]) one of { 3, 9 }",
                                    "return[].getClass().getName() one of { [org.jfree.chart.axis.NumberTick, org.jfree.chart.axis.NumberTick, org.jfree.chart.axis.NumberTick], [org.jfree.chart.axis.NumberTick, org.jfree.chart.axis.NumberTick, org.jfree.chart.axis.NumberTick, org.jfree.chart.axis.NumberTick, org.jfree.chart.axis.NumberTick, org.jfree.chart.axis.NumberTick, org.jfree.chart.axis.NumberTick, org.jfree.chart.axis.NumberTick, org.jfree.chart.axis.NumberTick] }"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "NumberAxis(java.lang.String)": [
                {
                    "ENTER": [
                        {
                            "Patch15.inv.output": {
                                "invs": []
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": []
                            }
                        }
                    ]
                },
                {
                    "EXIT": [
                        {
                            "Patch15.inv.output": {
                                "invs": []
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": [
                                    "this.tickUnit.size == 1.0"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "calculateLowestVisibleTickValue()": [
                {
                    "ENTER": [
                        {
                            "Patch15.inv.output": {
                                "invs": [
                                    "this.tickUnit.formatter has only one value",
                                    "this.tickUnit has only one value"
                                ]
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": []
                            }
                        }
                    ]
                },
                {
                    "EXIT": [
                        {
                            "Patch15.inv.output": {
                                "invs": [
                                    "this.tickUnit.formatter has only one value",
                                    "return == -1.0",
                                    "this.tickUnit has only one value"
                                ]
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": [
                                    "return one of { -1.0, 0.0 }"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "setTickUnit(org.jfree.chart.axis.NumberTickUnit, boolean, boolean)": [
                {
                    "ENTER": [
                        {
                            "Patch15.inv.output": {
                                "invs": [
                                    "unit has only one value",
                                    "unit.formatter has only one value",
                                    "unit.size == 1.0"
                                ]
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": [
                                    "unit.size one of { 1.0, 2.5 }",
                                    "this.tickUnit.size == 1.0"
                                ]
                            }
                        }
                    ]
                },
                {
                    "EXIT": [
                        {
                            "Patch15.inv.output": {
                                "invs": [
                                    "this.tickUnit.size == orig(this.tickUnit.size)",
                                    "unit.formatter has only one value",
                                    "this.tickUnit.formatter has only one value",
                                    "unit.size == 1.0",
                                    "this.tickUnit has only one value"
                                ]
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": [
                                    "unit.size one of { 1.0, 2.5 }"
                                ]
                            }
                        }
                    ]
                }
            ]
        }
    ]
}