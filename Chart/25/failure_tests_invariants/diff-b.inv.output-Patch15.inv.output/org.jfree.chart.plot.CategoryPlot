{"org.jfree.chart.plot.CategoryPlot":[{"calculateRangeAxisSpace(java.awt.Graphics2D, java.awt.geom.Rectangle2D, org.jfree.chart.axis.AxisSpace)":[{"ENTER":[{"b.inv.output":{"invs":[]}},{"Patch15.inv.output":{"invs":[]}}]},{"EXIT":[{"b.inv.output":{"invs":["return.left one of { 0.0, 37.96875 }","space.left one of { 0.0, 37.96875 }"]}},{"Patch15.inv.output":{"invs":["space.left one of { 0.0, 37.96875, 46.96875 }","return.left one of { 0.0, 37.96875, 46.96875 }"]}}]}]},{"getCategoriesForAxis(org.jfree.chart.axis.CategoryAxis)":[{"ENTER":[{"b.inv.output":{"invs":[]}},{"Patch15.inv.output":{"invs":[]}}]},{"EXIT":[{"b.inv.output":{"invs":["return[].getClass().getName() == [java.lang.String, java.lang.String]","return[].getClass().getName() elements == java.lang.String.class","return[] contains no nulls and has only one value, of length 2","size(return[]) == 2"]}},{"Patch15.inv.output":{"invs":["return[].getClass().getName() == []","return[] == []"]}}]}]},{},{"drawRangeMarkers(java.awt.Graphics2D, java.awt.geom.Rectangle2D, int, org.jfree.chart.util.Layer)":[{"ENTER":[{"b.inv.output":{"invs":["layer has only one value","layer.name.toString == \"Layer.BACKGROUND\"","layer.name has only one value"]}},{"Patch15.inv.output":{"invs":["layer.name.toString one of { \"Layer.BACKGROUND\", \"Layer.FOREGROUND\" }"]}}]},{"EXIT":[{"b.inv.output":{"invs":["layer.name.toString == \"Layer.BACKGROUND\"","layer.name has only one value"]}},{"Patch15.inv.output":{"invs":["layer.name.toString one of { \"Layer.BACKGROUND\", \"Layer.FOREGROUND\" }"]}}]},{"EXITNN":[{"3057":[{"b.inv.output":{"invs":[]}},{"Patch15.inv.output":{"invs":[]}}]}]}]},{"getDomainMarkers(int, org.jfree.chart.util.Layer)":[{"ENTER":[{"b.inv.output":{"invs":["layer has only one value","layer.name.toString == \"Layer.BACKGROUND\"","layer.name has only one value"]}},{"Patch15.inv.output":{"invs":["layer.name.toString one of { \"Layer.BACKGROUND\", \"Layer.FOREGROUND\" }"]}}]},{"EXIT":[{"b.inv.output":{"invs":["layer.name.toString == \"Layer.BACKGROUND\"","layer.name has only one value"]}},{"Patch15.inv.output":{"invs":["layer.name.toString one of { \"Layer.BACKGROUND\", \"Layer.FOREGROUND\" }"]}}]}]},{"calculateDomainAxisSpace(java.awt.Graphics2D, java.awt.geom.Rectangle2D, org.jfree.chart.axis.AxisSpace)":[{"ENTER":[{"b.inv.output":{"invs":["space.left one of { 0.0, 37.96875 }"]}},{"Patch15.inv.output":{"invs":["space.left one of { 0.0, 37.96875, 46.96875 }"]}}]},{"EXIT":[{"b.inv.output":{"invs":["return.left one of { 37.96875, 41.96875 }","space.bottom one of { 0.0, 39.609375 }","return.bottom one of { 0.0, 39.609375 }","space.left one of { 37.96875, 41.96875 }"]}},{"Patch15.inv.output":{"invs":["space.bottom one of { 0.0, 23.96875 }","return.bottom one of { 0.0, 23.96875 }","return.left one of { 23.96875, 37.96875, 46.96875 }","space.left one of { 23.96875, 37.96875, 46.96875 }"]}}]}]},{"getRangeMarkers(int, org.jfree.chart.util.Layer)":[{"ENTER":[{"b.inv.output":{"invs":["layer has only one value","layer.name.toString == \"Layer.BACKGROUND\"","layer.name has only one value"]}},{"Patch15.inv.output":{"invs":["layer.name.toString one of { \"Layer.BACKGROUND\", \"Layer.FOREGROUND\" }"]}}]},{"EXIT":[{"b.inv.output":{"invs":["layer.name.toString == \"Layer.BACKGROUND\"","layer.name has only one value"]}},{"Patch15.inv.output":{"invs":["layer.name.toString one of { \"Layer.BACKGROUND\", \"Layer.FOREGROUND\" }"]}}]}]},{"calculateAxisSpace(java.awt.Graphics2D, java.awt.geom.Rectangle2D)":[{"ENTER":[{"b.inv.output":{"invs":[]}},{"Patch15.inv.output":{"invs":[]}}]},{"EXIT":[{"b.inv.output":{"invs":["return.left one of { 37.96875, 41.96875 }","return.bottom one of { 0.0, 39.609375 }"]}},{"Patch15.inv.output":{"invs":["return.bottom one of { 0.0, 23.96875 }","return.left one of { 23.96875, 37.96875, 46.96875 }"]}}]}]},{"drawRangeGridlines(java.awt.Graphics2D, java.awt.geom.Rectangle2D, java.util.List)":[{"ENTER":[{"b.inv.output":{"invs":["size(ticks[]) one of { 3, 6, 9 }"]}},{"Patch15.inv.output":{"invs":["size(ticks[]) one of { 6, 9 }","ticks[].getClass().getName() one of { [org.jfree.chart.axis.NumberTick, org.jfree.chart.axis.NumberTick, org.jfree.chart.axis.NumberTick, org.jfree.chart.axis.NumberTick, org.jfree.chart.axis.NumberTick, org.jfree.chart.axis.NumberTick], [org.jfree.chart.axis.NumberTick, org.jfree.chart.axis.NumberTick, org.jfree.chart.axis.NumberTick, org.jfree.chart.axis.NumberTick, org.jfree.chart.axis.NumberTick, org.jfree.chart.axis.NumberTick, org.jfree.chart.axis.NumberTick, org.jfree.chart.axis.NumberTick, org.jfree.chart.axis.NumberTick] }"]}}]},{"EXIT":[{"b.inv.output":{"invs":[]}},{"Patch15.inv.output":{"invs":["ticks[].getClass().getName() one of { [org.jfree.chart.axis.NumberTick, org.jfree.chart.axis.NumberTick, org.jfree.chart.axis.NumberTick, org.jfree.chart.axis.NumberTick, org.jfree.chart.axis.NumberTick, org.jfree.chart.axis.NumberTick], [org.jfree.chart.axis.NumberTick, org.jfree.chart.axis.NumberTick, org.jfree.chart.axis.NumberTick, org.jfree.chart.axis.NumberTick, org.jfree.chart.axis.NumberTick, org.jfree.chart.axis.NumberTick, org.jfree.chart.axis.NumberTick, org.jfree.chart.axis.NumberTick, org.jfree.chart.axis.NumberTick] }"]}}]}]},{"drawDomainMarkers(java.awt.Graphics2D, java.awt.geom.Rectangle2D, int, org.jfree.chart.util.Layer)":[{"ENTER":[{"b.inv.output":{"invs":["layer has only one value","layer.name.toString == \"Layer.BACKGROUND\"","layer.name has only one value"]}},{"Patch15.inv.output":{"invs":["layer.name.toString one of { \"Layer.BACKGROUND\", \"Layer.FOREGROUND\" }"]}}]},{"EXIT":[{"b.inv.output":{"invs":["layer.name.toString == \"Layer.BACKGROUND\"","layer.name has only one value"]}},{"Patch15.inv.output":{"invs":["layer.name.toString one of { \"Layer.BACKGROUND\", \"Layer.FOREGROUND\" }"]}}]},{"EXITNN":[{"3026":[{"b.inv.output":{"invs":[]}},{"Patch15.inv.output":{"invs":[]}}]}]}]},{"getDomainAxisEdge(int)":[{"ENTER":[{"b.inv.output":{"invs":["this.domainGridlineStroke != null","this.rangeCrosshairStroke != null","org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener != null","this.rangeCrosshairPaint != null","this.domainGridlinePosition != null","this.rangeGridlinePaint != null","this.backgroundDomainMarkers != null","this.annotations != null","this.domainGridlinePaint != null","this.foregroundDomainMarkers != null","this.backgroundRangeMarkers != null","this.rangeGridlineStroke != null","this.foregroundRangeMarkers != null"]}},{"Patch15.inv.output":{"invs":[]}}]},{"EXIT":[{"b.inv.output":{"invs":["this.domainGridlineStroke != null","org.jfree.chart.util.RectangleEdge.RIGHT != null","org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener != null","org.jfree.chart.util.RectangleEdge.LEFT != null","org.jfree.chart.util.RectangleEdge.LEFT.name != null","this.backgroundRangeMarkers != null","this.foregroundRangeMarkers != null","this.rangeCrosshairStroke != null","this.rangeGridlinePaint != null","org.jfree.chart.util.RectangleEdge.TOP.name != null","org.jfree.chart.util.RectangleEdge.TOP != null","return != null","org.jfree.chart.util.RectangleEdge.RIGHT.name != null","this.annotations != null","org.jfree.chart.util.RectangleEdge.BOTTOM != null","this.backgroundDomainMarkers != null","org.jfree.chart.util.RectangleEdge.BOTTOM.name != null","this.rangeGridlineStroke != null","this.rangeCrosshairPaint != null","return.name != null","this.foregroundDomainMarkers != null","this.domainGridlinePosition != null","this.domainGridlinePaint != null"]}},{"Patch15.inv.output":{"invs":[]}}]}]},{"getLegendItems()":[{"ENTER":[{"b.inv.output":{"invs":[]}},{"Patch15.inv.output":{"invs":[]}}]},{"EXIT":[{"b.inv.output":{"invs":["return.items[].getClass().getName() == [org.jfree.chart.LegendItem]","return.items[].getClass().getName() elements == org.jfree.chart.LegendItem.class","size(return.items[]) == 1"]}},{"Patch15.inv.output":{"invs":["return.items[].getClass().getName() == []","return.items[] == []"]}}]}]}]}