===========================================================================
org.apache.commons.lang3.StringUtils:::CLASS
===========================================================================
org.apache.commons.lang3.StringUtils.isBlank(java.lang.CharSequence):::ENTER
cs != null
cs.getClass().getName() == java.lang.String.class
===========================================================================
org.apache.commons.lang3.StringUtils.isBlank(java.lang.CharSequence):::EXIT236
return == true
orig(cs) has only one value
===========================================================================
org.apache.commons.lang3.StringUtils.isBlank(java.lang.CharSequence):::EXIT236;condition="return == true"
===========================================================================
org.apache.commons.lang3.StringUtils.isBlank(java.lang.CharSequence):::EXIT240
return == false
===========================================================================
org.apache.commons.lang3.StringUtils.isBlank(java.lang.CharSequence):::EXIT240;condition="not(return == true)"
===========================================================================
org.apache.commons.lang3.StringUtils.isBlank(java.lang.CharSequence):::EXIT243
return == true
orig(cs) has only one value
===========================================================================
org.apache.commons.lang3.StringUtils.isBlank(java.lang.CharSequence):::EXIT243;condition="return == true"
===========================================================================
org.apache.commons.lang3.StringUtils.isBlank(java.lang.CharSequence):::EXIT
===========================================================================
org.apache.commons.lang3.StringUtils.isBlank(java.lang.CharSequence):::EXIT;condition="return == true"
return == true
===========================================================================
org.apache.commons.lang3.StringUtils.isBlank(java.lang.CharSequence):::EXIT;condition="not(return == true)"
return == false
===========================================================================
org.apache.commons.lang3.StringUtils.isEmpty(java.lang.CharSequence):::ENTER
cs.getClass().getName() == java.lang.String.class
===========================================================================
org.apache.commons.lang3.StringUtils.isEmpty(java.lang.CharSequence):::EXIT
(return == false)  ==>  (orig(cs) != null)
===========================================================================
org.apache.commons.lang3.StringUtils.isEmpty(java.lang.CharSequence):::EXIT;condition="return == true"
return == true
===========================================================================
org.apache.commons.lang3.StringUtils.isEmpty(java.lang.CharSequence):::EXIT;condition="not(return == true)"
return == false
orig(cs) != null
===========================================================================
org.apache.commons.lang3.math.NumberUtilsTest:::OBJECT
===========================================================================
org.apache.commons.lang3.math.NumberUtilsTest.NumberUtilsTest():::EXIT
===========================================================================
org.apache.commons.lang3.math.NumberUtilsTest.checkCreateNumber(java.lang.String):::ENTER
this has only one value
===========================================================================
org.apache.commons.lang3.math.NumberUtilsTest.checkCreateNumber(java.lang.String):::EXIT1220
val.toString == "--2.3"
return == false
===========================================================================
org.apache.commons.lang3.math.NumberUtilsTest.checkCreateNumber(java.lang.String):::EXIT1220;condition="not(return == true)"
===========================================================================
org.apache.commons.lang3.math.NumberUtilsTest.checkCreateNumber(java.lang.String):::EXIT1222
return == true
orig(val) != null
===========================================================================
org.apache.commons.lang3.math.NumberUtilsTest.checkCreateNumber(java.lang.String):::EXIT1222;condition="return == true"
===========================================================================
org.apache.commons.lang3.math.NumberUtilsTest.checkCreateNumber(java.lang.String):::EXIT1224
return == false
orig(val) != null
===========================================================================
org.apache.commons.lang3.math.NumberUtilsTest.checkCreateNumber(java.lang.String):::EXIT1224;condition="not(return == true)"
===========================================================================
org.apache.commons.lang3.math.NumberUtilsTest.checkCreateNumber(java.lang.String):::EXIT
val.toString == orig(val.toString)
(return == true)  ==>  (orig(val) != null)
===========================================================================
org.apache.commons.lang3.math.NumberUtilsTest.checkCreateNumber(java.lang.String):::EXIT;condition="return == true"
return == true
orig(val) != null
===========================================================================
org.apache.commons.lang3.math.NumberUtilsTest.checkCreateNumber(java.lang.String):::EXIT;condition="not(return == true)"
return == false
===========================================================================
org.apache.commons.lang3.math.NumberUtilsTest.testCreateBigDecimal():::ENTER
this has only one value
===========================================================================
org.apache.commons.lang3.math.NumberUtilsTest.testCreateBigDecimal():::EXIT
===========================================================================
org.apache.commons.lang3.math.NumberUtilsTest.testCreateBigDecimalFailure(java.lang.String):::ENTER
this has only one value
===========================================================================
org.apache.commons.lang3.math.NumberUtilsTest.testCreateBigDecimalFailure(java.lang.String):::EXIT
str.toString == orig(str.toString)
===========================================================================
org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber():::ENTER
this has only one value
===========================================================================
org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber():::EXIT
===========================================================================
org.apache.commons.lang3.math.NumberUtilsTest.testLang300():::ENTER
this has only one value
===========================================================================
org.apache.commons.lang3.math.NumberUtilsTest.testLang300():::EXIT
