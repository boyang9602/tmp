{
    "org.apache.commons.lang.LocaleUtils": [
        {
            "CLASS": [
                {
                    "b.inv.output": "N/A"
                },
                {
                    "PatchHDRepair1.inv.output": {
                        "invs": [
                            "org.apache.commons.lang.LocaleUtils.cLanguagesByCountry != null",
                            "org.apache.commons.lang.LocaleUtils.cAvailableLocaleList.getClass().getName() != org.apache.commons.lang.LocaleUtils.cLanguagesByCountry.getClass().getName()",
                            "org.apache.commons.lang.LocaleUtils.cAvailableLocaleList.getClass().getName() != org.apache.commons.lang.LocaleUtils.cAvailableLocaleSet.getClass().getName()",
                            "org.apache.commons.lang.LocaleUtils.cCountriesByLanguage has only one value",
                            "org.apache.commons.lang.LocaleUtils.cAvailableLocaleList[].getClass().getName() == [java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale]",
                            "org.apache.commons.lang.LocaleUtils.cAvailableLocaleSet.getClass().getName() == java.util.Collections$UnmodifiableSet.class",
                            "org.apache.commons.lang.LocaleUtils.cAvailableLocaleList[] elements != null",
                            "org.apache.commons.lang.LocaleUtils.cAvailableLocaleList != null",
                            "org.apache.commons.lang.LocaleUtils.cAvailableLocaleList[].getClass().getName() elements == java.util.Locale.class",
                            "org.apache.commons.lang.LocaleUtils.cCountriesByLanguage != null",
                            "org.apache.commons.lang.LocaleUtils.cAvailableLocaleSet.getClass().getName() != org.apache.commons.lang.LocaleUtils.cLanguagesByCountry.getClass().getName()",
                            "org.apache.commons.lang.LocaleUtils.cAvailableLocaleList has only one value",
                            "org.apache.commons.lang.LocaleUtils.cAvailableLocaleList[] contains no nulls and has only one value, of length 160",
                            "org.apache.commons.lang.LocaleUtils.cAvailableLocaleList.getClass().getName() == java.util.Collections$UnmodifiableRandomAccessList.class",
                            "org.apache.commons.lang.LocaleUtils.cLanguagesByCountry.getClass().getName() == org.apache.commons.lang.LocaleUtils.cCountriesByLanguage.getClass().getName()",
                            "org.apache.commons.lang.LocaleUtils.cLanguagesByCountry.getClass().getName() == java.util.Collections$SynchronizedMap.class",
                            "size(org.apache.commons.lang.LocaleUtils.cAvailableLocaleList[]) == 160",
                            "org.apache.commons.lang.LocaleUtils.cLanguagesByCountry has only one value"
                        ]
                    }
                },
                {
                    "f.inv.output": {
                        "invs": [
                            "org.apache.commons.lang.LocaleUtils.cLanguagesByCountry != null",
                            "org.apache.commons.lang.LocaleUtils.cAvailableLocaleList.getClass().getName() != org.apache.commons.lang.LocaleUtils.cLanguagesByCountry.getClass().getName()",
                            "org.apache.commons.lang.LocaleUtils.cAvailableLocaleList.getClass().getName() != org.apache.commons.lang.LocaleUtils.cAvailableLocaleSet.getClass().getName()",
                            "org.apache.commons.lang.LocaleUtils.cCountriesByLanguage has only one value",
                            "org.apache.commons.lang.LocaleUtils.cAvailableLocaleList[].getClass().getName() == [java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale]",
                            "org.apache.commons.lang.LocaleUtils.cAvailableLocaleSet.getClass().getName() == java.util.Collections$UnmodifiableSet.class",
                            "org.apache.commons.lang.LocaleUtils.cAvailableLocaleList[] elements != null",
                            "org.apache.commons.lang.LocaleUtils.cAvailableLocaleList != null",
                            "org.apache.commons.lang.LocaleUtils.cAvailableLocaleList[].getClass().getName() elements == java.util.Locale.class",
                            "org.apache.commons.lang.LocaleUtils.cCountriesByLanguage != null",
                            "org.apache.commons.lang.LocaleUtils.cAvailableLocaleSet.getClass().getName() != org.apache.commons.lang.LocaleUtils.cLanguagesByCountry.getClass().getName()",
                            "org.apache.commons.lang.LocaleUtils.cAvailableLocaleList has only one value",
                            "org.apache.commons.lang.LocaleUtils.cAvailableLocaleList[] contains no nulls and has only one value, of length 160",
                            "org.apache.commons.lang.LocaleUtils.cAvailableLocaleList.getClass().getName() == java.util.Collections$UnmodifiableRandomAccessList.class",
                            "org.apache.commons.lang.LocaleUtils.cLanguagesByCountry.getClass().getName() == org.apache.commons.lang.LocaleUtils.cCountriesByLanguage.getClass().getName()",
                            "org.apache.commons.lang.LocaleUtils.cLanguagesByCountry.getClass().getName() == java.util.Collections$SynchronizedMap.class",
                            "size(org.apache.commons.lang.LocaleUtils.cAvailableLocaleList[]) == 160",
                            "org.apache.commons.lang.LocaleUtils.cLanguagesByCountry has only one value"
                        ]
                    }
                }
            ]
        },
        {
            "OBJECT": [
                {
                    "b.inv.output": "N/A"
                },
                {
                    "PatchHDRepair1.inv.output": {
                        "invs": [
                            "this has only one value",
                            "org.apache.commons.lang.LocaleUtils.cAvailableLocaleSet has only one value"
                        ]
                    }
                },
                {
                    "f.inv.output": {
                        "invs": [
                            "this has only one value",
                            "org.apache.commons.lang.LocaleUtils.cAvailableLocaleSet has only one value"
                        ]
                    }
                }
            ]
        },
        {
            "availableLocaleSet()": [
                {
                    "ENTER": [
                        {
                            "b.inv.output": "N/A"
                        },
                        {
                            "PatchHDRepair1.inv.output": {
                                "invs": []
                            }
                        },
                        {
                            "f.inv.output": {
                                "invs": []
                            }
                        }
                    ]
                },
                {
                    "EXIT": [
                        {
                            "b.inv.output": "N/A"
                        },
                        {
                            "PatchHDRepair1.inv.output": {
                                "invs": [
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleSet.getClass().getName() == orig(org.apache.commons.lang.LocaleUtils.cAvailableLocaleSet.getClass().getName())",
                                    "org.apache.commons.lang.LocaleUtils.cLanguagesByCountry.getClass().getName() == orig(org.apache.commons.lang.LocaleUtils.cLanguagesByCountry.getClass().getName())",
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleList[] == orig(org.apache.commons.lang.LocaleUtils.cAvailableLocaleList[])",
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleSet.getClass().getName() == return.getClass().getName()",
                                    "org.apache.commons.lang.LocaleUtils.cLanguagesByCountry.getClass().getName() == orig(org.apache.commons.lang.LocaleUtils.cCountriesByLanguage.getClass().getName())",
                                    "org.apache.commons.lang.LocaleUtils.cCountriesByLanguage == orig(org.apache.commons.lang.LocaleUtils.cCountriesByLanguage)",
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleSet has only one value",
                                    "org.apache.commons.lang.LocaleUtils.cLanguagesByCountry == orig(org.apache.commons.lang.LocaleUtils.cLanguagesByCountry)",
                                    "return has only one value",
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleList.getClass().getName() == orig(org.apache.commons.lang.LocaleUtils.cAvailableLocaleList.getClass().getName())",
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleList == orig(org.apache.commons.lang.LocaleUtils.cAvailableLocaleList)"
                                ]
                            }
                        },
                        {
                            "f.inv.output": {
                                "invs": [
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleSet.getClass().getName() == orig(org.apache.commons.lang.LocaleUtils.cAvailableLocaleSet.getClass().getName())",
                                    "org.apache.commons.lang.LocaleUtils.cLanguagesByCountry.getClass().getName() == orig(org.apache.commons.lang.LocaleUtils.cLanguagesByCountry.getClass().getName())",
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleList[] == orig(org.apache.commons.lang.LocaleUtils.cAvailableLocaleList[])",
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleSet.getClass().getName() == return.getClass().getName()",
                                    "org.apache.commons.lang.LocaleUtils.cLanguagesByCountry.getClass().getName() == orig(org.apache.commons.lang.LocaleUtils.cCountriesByLanguage.getClass().getName())",
                                    "org.apache.commons.lang.LocaleUtils.cCountriesByLanguage == orig(org.apache.commons.lang.LocaleUtils.cCountriesByLanguage)",
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleSet has only one value",
                                    "org.apache.commons.lang.LocaleUtils.cLanguagesByCountry == orig(org.apache.commons.lang.LocaleUtils.cLanguagesByCountry)",
                                    "return has only one value",
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleList.getClass().getName() == orig(org.apache.commons.lang.LocaleUtils.cAvailableLocaleList.getClass().getName())",
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleList == orig(org.apache.commons.lang.LocaleUtils.cAvailableLocaleList)"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "availableLocaleList()": [
                {
                    "ENTER": [
                        {
                            "b.inv.output": "N/A"
                        },
                        {
                            "PatchHDRepair1.inv.output": {
                                "invs": []
                            }
                        },
                        {
                            "f.inv.output": {
                                "invs": []
                            }
                        }
                    ]
                },
                {
                    "EXIT": [
                        {
                            "b.inv.output": "N/A"
                        },
                        {
                            "PatchHDRepair1.inv.output": {
                                "invs": [
                                    "return[] contains no nulls and has only one value, of length 160",
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleList == return",
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleSet.getClass().getName() == orig(org.apache.commons.lang.LocaleUtils.cAvailableLocaleSet.getClass().getName())",
                                    "return[].getClass().getName() elements == java.util.Locale.class",
                                    "size(return[]) == 160",
                                    "return[].getClass().getName() == [java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale]",
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleList[] == orig(org.apache.commons.lang.LocaleUtils.cAvailableLocaleList[])",
                                    "org.apache.commons.lang.LocaleUtils.cLanguagesByCountry.getClass().getName() == orig(org.apache.commons.lang.LocaleUtils.cLanguagesByCountry.getClass().getName())",
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleSet == orig(org.apache.commons.lang.LocaleUtils.cAvailableLocaleSet)",
                                    "org.apache.commons.lang.LocaleUtils.cLanguagesByCountry.getClass().getName() == orig(org.apache.commons.lang.LocaleUtils.cCountriesByLanguage.getClass().getName())",
                                    "org.apache.commons.lang.LocaleUtils.cCountriesByLanguage == orig(org.apache.commons.lang.LocaleUtils.cCountriesByLanguage)",
                                    "org.apache.commons.lang.LocaleUtils.cLanguagesByCountry == orig(org.apache.commons.lang.LocaleUtils.cLanguagesByCountry)",
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleList.getClass().getName() == orig(org.apache.commons.lang.LocaleUtils.cAvailableLocaleList.getClass().getName())",
                                    "return[] elements != null",
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleList == orig(org.apache.commons.lang.LocaleUtils.cAvailableLocaleList)",
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleList.getClass().getName() == return.getClass().getName()"
                                ]
                            }
                        },
                        {
                            "f.inv.output": {
                                "invs": [
                                    "return[] contains no nulls and has only one value, of length 160",
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleList == return",
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleSet.getClass().getName() == orig(org.apache.commons.lang.LocaleUtils.cAvailableLocaleSet.getClass().getName())",
                                    "return[].getClass().getName() elements == java.util.Locale.class",
                                    "size(return[]) == 160",
                                    "return[].getClass().getName() == [java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale]",
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleList[] == orig(org.apache.commons.lang.LocaleUtils.cAvailableLocaleList[])",
                                    "org.apache.commons.lang.LocaleUtils.cLanguagesByCountry.getClass().getName() == orig(org.apache.commons.lang.LocaleUtils.cLanguagesByCountry.getClass().getName())",
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleSet == orig(org.apache.commons.lang.LocaleUtils.cAvailableLocaleSet)",
                                    "org.apache.commons.lang.LocaleUtils.cLanguagesByCountry.getClass().getName() == orig(org.apache.commons.lang.LocaleUtils.cCountriesByLanguage.getClass().getName())",
                                    "org.apache.commons.lang.LocaleUtils.cCountriesByLanguage == orig(org.apache.commons.lang.LocaleUtils.cCountriesByLanguage)",
                                    "org.apache.commons.lang.LocaleUtils.cLanguagesByCountry == orig(org.apache.commons.lang.LocaleUtils.cLanguagesByCountry)",
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleList.getClass().getName() == orig(org.apache.commons.lang.LocaleUtils.cAvailableLocaleList.getClass().getName())",
                                    "return[] elements != null",
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleList == orig(org.apache.commons.lang.LocaleUtils.cAvailableLocaleList)",
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleList.getClass().getName() == return.getClass().getName()"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "languagesByCountry(java.lang.String)": [
                {
                    "ENTER": [
                        {
                            "b.inv.output": "N/A"
                        },
                        {
                            "PatchHDRepair1.inv.output": {
                                "invs": [
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleSet has only one value",
                                    "countryCode.toString one of { \"CH\", \"GB\", \"ZZ\" }"
                                ]
                            }
                        },
                        {
                            "f.inv.output": {
                                "invs": [
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleSet has only one value",
                                    "countryCode.toString one of { \"CH\", \"GB\", \"ZZ\" }"
                                ]
                            }
                        }
                    ]
                },
                {
                    "EXIT": [
                        {
                            "b.inv.output": "N/A"
                        },
                        {
                            "PatchHDRepair1.inv.output": {
                                "invs": [
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleSet.getClass().getName() == orig(org.apache.commons.lang.LocaleUtils.cAvailableLocaleSet.getClass().getName())",
                                    "return[].getClass().getName() elements == java.util.Locale.class",
                                    "size(return[]) one of { 0, 1, 3 }",
                                    "org.apache.commons.lang.LocaleUtils.cLanguagesByCountry.getClass().getName() != return.getClass().getName()",
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleList[] == orig(org.apache.commons.lang.LocaleUtils.cAvailableLocaleList[])",
                                    "org.apache.commons.lang.LocaleUtils.cLanguagesByCountry.getClass().getName() == orig(org.apache.commons.lang.LocaleUtils.cLanguagesByCountry.getClass().getName())",
                                    "countryCode.toString one of { \"CH\", \"GB\", \"ZZ\" }",
                                    "countryCode.toString == orig(countryCode.toString)",
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleSet == orig(org.apache.commons.lang.LocaleUtils.cAvailableLocaleSet)",
                                    "org.apache.commons.lang.LocaleUtils.cLanguagesByCountry.getClass().getName() == orig(org.apache.commons.lang.LocaleUtils.cCountriesByLanguage.getClass().getName())",
                                    "org.apache.commons.lang.LocaleUtils.cCountriesByLanguage == orig(org.apache.commons.lang.LocaleUtils.cCountriesByLanguage)",
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleSet has only one value",
                                    "org.apache.commons.lang.LocaleUtils.cLanguagesByCountry == orig(org.apache.commons.lang.LocaleUtils.cLanguagesByCountry)",
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleList.getClass().getName() == orig(org.apache.commons.lang.LocaleUtils.cAvailableLocaleList.getClass().getName())",
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleSet.getClass().getName() != return.getClass().getName()",
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleList == orig(org.apache.commons.lang.LocaleUtils.cAvailableLocaleList)"
                                ]
                            }
                        },
                        {
                            "f.inv.output": {
                                "invs": [
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleSet.getClass().getName() == orig(org.apache.commons.lang.LocaleUtils.cAvailableLocaleSet.getClass().getName())",
                                    "return[].getClass().getName() elements == java.util.Locale.class",
                                    "size(return[]) one of { 0, 1, 3 }",
                                    "org.apache.commons.lang.LocaleUtils.cLanguagesByCountry.getClass().getName() != return.getClass().getName()",
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleList[] == orig(org.apache.commons.lang.LocaleUtils.cAvailableLocaleList[])",
                                    "org.apache.commons.lang.LocaleUtils.cLanguagesByCountry.getClass().getName() == orig(org.apache.commons.lang.LocaleUtils.cLanguagesByCountry.getClass().getName())",
                                    "countryCode.toString one of { \"CH\", \"GB\", \"ZZ\" }",
                                    "countryCode.toString == orig(countryCode.toString)",
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleSet == orig(org.apache.commons.lang.LocaleUtils.cAvailableLocaleSet)",
                                    "org.apache.commons.lang.LocaleUtils.cLanguagesByCountry.getClass().getName() == orig(org.apache.commons.lang.LocaleUtils.cCountriesByLanguage.getClass().getName())",
                                    "org.apache.commons.lang.LocaleUtils.cCountriesByLanguage == orig(org.apache.commons.lang.LocaleUtils.cCountriesByLanguage)",
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleSet has only one value",
                                    "org.apache.commons.lang.LocaleUtils.cLanguagesByCountry == orig(org.apache.commons.lang.LocaleUtils.cLanguagesByCountry)",
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleList.getClass().getName() == orig(org.apache.commons.lang.LocaleUtils.cAvailableLocaleList.getClass().getName())",
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleSet.getClass().getName() != return.getClass().getName()",
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleList == orig(org.apache.commons.lang.LocaleUtils.cAvailableLocaleList)"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "toLocale(java.lang.String)": [
                {
                    "ENTER": [
                        {
                            "b.inv.output": "N/A"
                        },
                        {
                            "PatchHDRepair1.inv.output": {
                                "invs": [
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleSet has only one value"
                                ]
                            }
                        },
                        {
                            "f.inv.output": {
                                "invs": [
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleSet has only one value"
                                ]
                            }
                        }
                    ]
                },
                {
                    "EXIT": [
                        {
                            "b.inv.output": "N/A"
                        },
                        {
                            "PatchHDRepair1.inv.output": {
                                "invs": [
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleSet.getClass().getName() == orig(org.apache.commons.lang.LocaleUtils.cAvailableLocaleSet.getClass().getName())",
                                    "org.apache.commons.lang.LocaleUtils.cLanguagesByCountry.getClass().getName() == orig(org.apache.commons.lang.LocaleUtils.cLanguagesByCountry.getClass().getName())",
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleList[] == orig(org.apache.commons.lang.LocaleUtils.cAvailableLocaleList[])",
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleSet == orig(org.apache.commons.lang.LocaleUtils.cAvailableLocaleSet)",
                                    "org.apache.commons.lang.LocaleUtils.cLanguagesByCountry.getClass().getName() == orig(org.apache.commons.lang.LocaleUtils.cCountriesByLanguage.getClass().getName())",
                                    "org.apache.commons.lang.LocaleUtils.cCountriesByLanguage == orig(org.apache.commons.lang.LocaleUtils.cCountriesByLanguage)",
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleSet has only one value",
                                    "org.apache.commons.lang.LocaleUtils.cLanguagesByCountry == orig(org.apache.commons.lang.LocaleUtils.cLanguagesByCountry)",
                                    "str.toString == orig(str.toString)",
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleList.getClass().getName() == orig(org.apache.commons.lang.LocaleUtils.cAvailableLocaleList.getClass().getName())",
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleList == orig(org.apache.commons.lang.LocaleUtils.cAvailableLocaleList)"
                                ]
                            }
                        },
                        {
                            "f.inv.output": {
                                "invs": [
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleSet.getClass().getName() == orig(org.apache.commons.lang.LocaleUtils.cAvailableLocaleSet.getClass().getName())",
                                    "org.apache.commons.lang.LocaleUtils.cLanguagesByCountry.getClass().getName() == orig(org.apache.commons.lang.LocaleUtils.cLanguagesByCountry.getClass().getName())",
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleList[] == orig(org.apache.commons.lang.LocaleUtils.cAvailableLocaleList[])",
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleSet == orig(org.apache.commons.lang.LocaleUtils.cAvailableLocaleSet)",
                                    "org.apache.commons.lang.LocaleUtils.cLanguagesByCountry.getClass().getName() == orig(org.apache.commons.lang.LocaleUtils.cCountriesByLanguage.getClass().getName())",
                                    "org.apache.commons.lang.LocaleUtils.cCountriesByLanguage == orig(org.apache.commons.lang.LocaleUtils.cCountriesByLanguage)",
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleSet has only one value",
                                    "org.apache.commons.lang.LocaleUtils.cLanguagesByCountry == orig(org.apache.commons.lang.LocaleUtils.cLanguagesByCountry)",
                                    "str.toString == orig(str.toString)",
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleList.getClass().getName() == orig(org.apache.commons.lang.LocaleUtils.cAvailableLocaleList.getClass().getName())",
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleList == orig(org.apache.commons.lang.LocaleUtils.cAvailableLocaleList)"
                                ]
                            }
                        }
                    ]
                },
                {
                    "EXITNN": [
                        {
                            "108": [
                                {
                                    "b.inv.output": "N/A"
                                },
                                {
                                    "PatchHDRepair1.inv.output": {
                                        "invs": []
                                    }
                                },
                                {
                                    "f.inv.output": {
                                        "invs": []
                                    }
                                }
                            ]
                        },
                        {
                            "119": [
                                {
                                    "b.inv.output": "N/A"
                                },
                                {
                                    "PatchHDRepair1.inv.output": {
                                        "invs": [
                                            "str.toString one of { \"us_EN\", \"us_ZH\" }"
                                        ]
                                    }
                                },
                                {
                                    "f.inv.output": {
                                        "invs": [
                                            "str.toString one of { \"us_EN\", \"us_ZH\" }"
                                        ]
                                    }
                                }
                            ]
                        },
                        {
                            "124": [
                                {
                                    "b.inv.output": "N/A"
                                },
                                {
                                    "PatchHDRepair1.inv.output": {
                                        "invs": [
                                            "str.toString one of { \"us_EN_A\", \"us_EN_SFsafdFDsdfF\", \"us_EN_a\" }"
                                        ]
                                    }
                                },
                                {
                                    "f.inv.output": {
                                        "invs": [
                                            "str.toString one of { \"us_EN_A\", \"us_EN_SFsafdFDsdfF\", \"us_EN_a\" }"
                                        ]
                                    }
                                }
                            ]
                        },
                        {
                            "96": [
                                {
                                    "b.inv.output": "N/A"
                                },
                                {
                                    "PatchHDRepair1.inv.output": {
                                        "invs": [
                                            "return == null",
                                            "orig(str) == null"
                                        ]
                                    }
                                },
                                {
                                    "f.inv.output": {
                                        "invs": [
                                            "return == null",
                                            "orig(str) == null"
                                        ]
                                    }
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "localeLookupList(java.util.Locale, java.util.Locale)": [
                {
                    "ENTER": [
                        {
                            "b.inv.output": "N/A"
                        },
                        {
                            "PatchHDRepair1.inv.output": {
                                "invs": [
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleSet != null",
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleSet has only one value"
                                ]
                            }
                        },
                        {
                            "f.inv.output": {
                                "invs": [
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleSet != null",
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleSet has only one value"
                                ]
                            }
                        }
                    ]
                },
                {
                    "EXIT": [
                        {
                            "b.inv.output": "N/A"
                        },
                        {
                            "PatchHDRepair1.inv.output": {
                                "invs": [
                                    "return != null",
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleSet.getClass().getName() == orig(org.apache.commons.lang.LocaleUtils.cAvailableLocaleSet.getClass().getName())",
                                    "return[].getClass().getName() elements == java.util.Locale.class",
                                    "org.apache.commons.lang.LocaleUtils.cLanguagesByCountry.getClass().getName() == orig(org.apache.commons.lang.LocaleUtils.cLanguagesByCountry.getClass().getName())",
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleList[] == orig(org.apache.commons.lang.LocaleUtils.cAvailableLocaleList[])",
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleSet == orig(org.apache.commons.lang.LocaleUtils.cAvailableLocaleSet)",
                                    "org.apache.commons.lang.LocaleUtils.cLanguagesByCountry.getClass().getName() == orig(org.apache.commons.lang.LocaleUtils.cCountriesByLanguage.getClass().getName())",
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleSet != null",
                                    "org.apache.commons.lang.LocaleUtils.cCountriesByLanguage == orig(org.apache.commons.lang.LocaleUtils.cCountriesByLanguage)",
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleSet has only one value",
                                    "org.apache.commons.lang.LocaleUtils.cLanguagesByCountry == orig(org.apache.commons.lang.LocaleUtils.cLanguagesByCountry)",
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleList.getClass().getName() == orig(org.apache.commons.lang.LocaleUtils.cAvailableLocaleList.getClass().getName())",
                                    "return[] elements != null",
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleList == orig(org.apache.commons.lang.LocaleUtils.cAvailableLocaleList)",
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleList.getClass().getName() == return.getClass().getName()"
                                ]
                            }
                        },
                        {
                            "f.inv.output": {
                                "invs": [
                                    "return != null",
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleSet.getClass().getName() == orig(org.apache.commons.lang.LocaleUtils.cAvailableLocaleSet.getClass().getName())",
                                    "return[].getClass().getName() elements == java.util.Locale.class",
                                    "org.apache.commons.lang.LocaleUtils.cLanguagesByCountry.getClass().getName() == orig(org.apache.commons.lang.LocaleUtils.cLanguagesByCountry.getClass().getName())",
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleList[] == orig(org.apache.commons.lang.LocaleUtils.cAvailableLocaleList[])",
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleSet == orig(org.apache.commons.lang.LocaleUtils.cAvailableLocaleSet)",
                                    "org.apache.commons.lang.LocaleUtils.cLanguagesByCountry.getClass().getName() == orig(org.apache.commons.lang.LocaleUtils.cCountriesByLanguage.getClass().getName())",
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleSet != null",
                                    "org.apache.commons.lang.LocaleUtils.cCountriesByLanguage == orig(org.apache.commons.lang.LocaleUtils.cCountriesByLanguage)",
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleSet has only one value",
                                    "org.apache.commons.lang.LocaleUtils.cLanguagesByCountry == orig(org.apache.commons.lang.LocaleUtils.cLanguagesByCountry)",
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleList.getClass().getName() == orig(org.apache.commons.lang.LocaleUtils.cAvailableLocaleList.getClass().getName())",
                                    "return[] elements != null",
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleList == orig(org.apache.commons.lang.LocaleUtils.cAvailableLocaleList)",
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleList.getClass().getName() == return.getClass().getName()"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "countriesByLanguage(java.lang.String)": [
                {
                    "ENTER": [
                        {
                            "b.inv.output": "N/A"
                        },
                        {
                            "PatchHDRepair1.inv.output": {
                                "invs": [
                                    "languageCode.toString == \"de\"",
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleSet has only one value"
                                ]
                            }
                        },
                        {
                            "f.inv.output": {
                                "invs": [
                                    "languageCode.toString == \"de\"",
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleSet has only one value"
                                ]
                            }
                        }
                    ]
                },
                {
                    "EXIT": [
                        {
                            "b.inv.output": "N/A"
                        },
                        {
                            "PatchHDRepair1.inv.output": {
                                "invs": [
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleSet.getClass().getName() == orig(org.apache.commons.lang.LocaleUtils.cAvailableLocaleSet.getClass().getName())",
                                    "return[].getClass().getName() elements == java.util.Locale.class",
                                    "org.apache.commons.lang.LocaleUtils.cLanguagesByCountry.getClass().getName() == orig(org.apache.commons.lang.LocaleUtils.cLanguagesByCountry.getClass().getName())",
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleList[] == orig(org.apache.commons.lang.LocaleUtils.cAvailableLocaleList[])",
                                    "size(return[]) one of { 0, 5 }",
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleSet == orig(org.apache.commons.lang.LocaleUtils.cAvailableLocaleSet)",
                                    "org.apache.commons.lang.LocaleUtils.cLanguagesByCountry.getClass().getName() == orig(org.apache.commons.lang.LocaleUtils.cCountriesByLanguage.getClass().getName())",
                                    "org.apache.commons.lang.LocaleUtils.cCountriesByLanguage == orig(org.apache.commons.lang.LocaleUtils.cCountriesByLanguage)",
                                    "languageCode.toString == \"de\"",
                                    "return[].getClass().getName() one of { [], [java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale] }",
                                    "org.apache.commons.lang.LocaleUtils.cLanguagesByCountry == orig(org.apache.commons.lang.LocaleUtils.cLanguagesByCountry)",
                                    "languageCode.toString == orig(languageCode.toString)",
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleSet has only one value",
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleList.getClass().getName() == orig(org.apache.commons.lang.LocaleUtils.cAvailableLocaleList.getClass().getName())",
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleList == orig(org.apache.commons.lang.LocaleUtils.cAvailableLocaleList)"
                                ]
                            }
                        },
                        {
                            "f.inv.output": {
                                "invs": [
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleSet.getClass().getName() == orig(org.apache.commons.lang.LocaleUtils.cAvailableLocaleSet.getClass().getName())",
                                    "return[].getClass().getName() elements == java.util.Locale.class",
                                    "org.apache.commons.lang.LocaleUtils.cLanguagesByCountry.getClass().getName() == orig(org.apache.commons.lang.LocaleUtils.cLanguagesByCountry.getClass().getName())",
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleList[] == orig(org.apache.commons.lang.LocaleUtils.cAvailableLocaleList[])",
                                    "size(return[]) one of { 0, 5 }",
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleSet == orig(org.apache.commons.lang.LocaleUtils.cAvailableLocaleSet)",
                                    "org.apache.commons.lang.LocaleUtils.cLanguagesByCountry.getClass().getName() == orig(org.apache.commons.lang.LocaleUtils.cCountriesByLanguage.getClass().getName())",
                                    "org.apache.commons.lang.LocaleUtils.cCountriesByLanguage == orig(org.apache.commons.lang.LocaleUtils.cCountriesByLanguage)",
                                    "languageCode.toString == \"de\"",
                                    "return[].getClass().getName() one of { [], [java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale, java.util.Locale] }",
                                    "org.apache.commons.lang.LocaleUtils.cLanguagesByCountry == orig(org.apache.commons.lang.LocaleUtils.cLanguagesByCountry)",
                                    "languageCode.toString == orig(languageCode.toString)",
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleSet has only one value",
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleList.getClass().getName() == orig(org.apache.commons.lang.LocaleUtils.cAvailableLocaleList.getClass().getName())",
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleList == orig(org.apache.commons.lang.LocaleUtils.cAvailableLocaleList)"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "localeLookupList(java.util.Locale)": [
                {
                    "ENTER": [
                        {
                            "b.inv.output": "N/A"
                        },
                        {
                            "PatchHDRepair1.inv.output": {
                                "invs": [
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleSet has only one value"
                                ]
                            }
                        },
                        {
                            "f.inv.output": {
                                "invs": [
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleSet has only one value"
                                ]
                            }
                        }
                    ]
                },
                {
                    "EXIT": [
                        {
                            "b.inv.output": "N/A"
                        },
                        {
                            "PatchHDRepair1.inv.output": {
                                "invs": [
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleSet.getClass().getName() == orig(org.apache.commons.lang.LocaleUtils.cAvailableLocaleSet.getClass().getName())",
                                    "return[].getClass().getName() elements == java.util.Locale.class",
                                    "org.apache.commons.lang.LocaleUtils.cLanguagesByCountry.getClass().getName() == orig(org.apache.commons.lang.LocaleUtils.cLanguagesByCountry.getClass().getName())",
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleList[] == orig(org.apache.commons.lang.LocaleUtils.cAvailableLocaleList[])",
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleSet == orig(org.apache.commons.lang.LocaleUtils.cAvailableLocaleSet)",
                                    "org.apache.commons.lang.LocaleUtils.cLanguagesByCountry.getClass().getName() == orig(org.apache.commons.lang.LocaleUtils.cCountriesByLanguage.getClass().getName())",
                                    "org.apache.commons.lang.LocaleUtils.cCountriesByLanguage == orig(org.apache.commons.lang.LocaleUtils.cCountriesByLanguage)",
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleSet has only one value",
                                    "org.apache.commons.lang.LocaleUtils.cLanguagesByCountry == orig(org.apache.commons.lang.LocaleUtils.cLanguagesByCountry)",
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleList.getClass().getName() == orig(org.apache.commons.lang.LocaleUtils.cAvailableLocaleList.getClass().getName())",
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleList == orig(org.apache.commons.lang.LocaleUtils.cAvailableLocaleList)",
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleList.getClass().getName() == return.getClass().getName()"
                                ]
                            }
                        },
                        {
                            "f.inv.output": {
                                "invs": [
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleSet.getClass().getName() == orig(org.apache.commons.lang.LocaleUtils.cAvailableLocaleSet.getClass().getName())",
                                    "return[].getClass().getName() elements == java.util.Locale.class",
                                    "org.apache.commons.lang.LocaleUtils.cLanguagesByCountry.getClass().getName() == orig(org.apache.commons.lang.LocaleUtils.cLanguagesByCountry.getClass().getName())",
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleList[] == orig(org.apache.commons.lang.LocaleUtils.cAvailableLocaleList[])",
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleSet == orig(org.apache.commons.lang.LocaleUtils.cAvailableLocaleSet)",
                                    "org.apache.commons.lang.LocaleUtils.cLanguagesByCountry.getClass().getName() == orig(org.apache.commons.lang.LocaleUtils.cCountriesByLanguage.getClass().getName())",
                                    "org.apache.commons.lang.LocaleUtils.cCountriesByLanguage == orig(org.apache.commons.lang.LocaleUtils.cCountriesByLanguage)",
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleSet has only one value",
                                    "org.apache.commons.lang.LocaleUtils.cLanguagesByCountry == orig(org.apache.commons.lang.LocaleUtils.cLanguagesByCountry)",
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleList.getClass().getName() == orig(org.apache.commons.lang.LocaleUtils.cAvailableLocaleList.getClass().getName())",
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleList == orig(org.apache.commons.lang.LocaleUtils.cAvailableLocaleList)",
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleList.getClass().getName() == return.getClass().getName()"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "LocaleUtils()": [
                {
                    "EXIT": [
                        {
                            "b.inv.output": "N/A"
                        },
                        {
                            "PatchHDRepair1.inv.output": {
                                "invs": []
                            }
                        },
                        {
                            "f.inv.output": {
                                "invs": []
                            }
                        }
                    ]
                }
            ]
        },
        {
            "isAvailableLocale(java.util.Locale)": [
                {
                    "ENTER": [
                        {
                            "b.inv.output": "N/A"
                        },
                        {
                            "PatchHDRepair1.inv.output": {
                                "invs": [
                                    "locale != null"
                                ]
                            }
                        },
                        {
                            "f.inv.output": {
                                "invs": [
                                    "locale != null"
                                ]
                            }
                        }
                    ]
                },
                {
                    "EXIT": [
                        {
                            "b.inv.output": "N/A"
                        },
                        {
                            "PatchHDRepair1.inv.output": {
                                "invs": [
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleSet.getClass().getName() == orig(org.apache.commons.lang.LocaleUtils.cAvailableLocaleSet.getClass().getName())",
                                    "org.apache.commons.lang.LocaleUtils.cLanguagesByCountry.getClass().getName() == orig(org.apache.commons.lang.LocaleUtils.cLanguagesByCountry.getClass().getName())",
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleList[] == orig(org.apache.commons.lang.LocaleUtils.cAvailableLocaleList[])",
                                    "return == false",
                                    "(return == false)  ==>  (org.apache.commons.lang.LocaleUtils.cAvailableLocaleSet has only one value)",
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleSet == orig(org.apache.commons.lang.LocaleUtils.cAvailableLocaleSet)",
                                    "org.apache.commons.lang.LocaleUtils.cLanguagesByCountry.getClass().getName() == orig(org.apache.commons.lang.LocaleUtils.cCountriesByLanguage.getClass().getName())",
                                    "org.apache.commons.lang.LocaleUtils.cCountriesByLanguage == orig(org.apache.commons.lang.LocaleUtils.cCountriesByLanguage)",
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleSet has only one value",
                                    "org.apache.commons.lang.LocaleUtils.cLanguagesByCountry == orig(org.apache.commons.lang.LocaleUtils.cLanguagesByCountry)",
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleList.getClass().getName() == orig(org.apache.commons.lang.LocaleUtils.cAvailableLocaleList.getClass().getName())",
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleList == orig(org.apache.commons.lang.LocaleUtils.cAvailableLocaleList)",
                                    "return == true"
                                ]
                            }
                        },
                        {
                            "f.inv.output": {
                                "invs": [
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleSet.getClass().getName() == orig(org.apache.commons.lang.LocaleUtils.cAvailableLocaleSet.getClass().getName())",
                                    "org.apache.commons.lang.LocaleUtils.cLanguagesByCountry.getClass().getName() == orig(org.apache.commons.lang.LocaleUtils.cLanguagesByCountry.getClass().getName())",
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleList[] == orig(org.apache.commons.lang.LocaleUtils.cAvailableLocaleList[])",
                                    "return == false",
                                    "(return == false)  ==>  (org.apache.commons.lang.LocaleUtils.cAvailableLocaleSet has only one value)",
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleSet == orig(org.apache.commons.lang.LocaleUtils.cAvailableLocaleSet)",
                                    "org.apache.commons.lang.LocaleUtils.cLanguagesByCountry.getClass().getName() == orig(org.apache.commons.lang.LocaleUtils.cCountriesByLanguage.getClass().getName())",
                                    "org.apache.commons.lang.LocaleUtils.cCountriesByLanguage == orig(org.apache.commons.lang.LocaleUtils.cCountriesByLanguage)",
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleSet has only one value",
                                    "org.apache.commons.lang.LocaleUtils.cLanguagesByCountry == orig(org.apache.commons.lang.LocaleUtils.cLanguagesByCountry)",
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleList.getClass().getName() == orig(org.apache.commons.lang.LocaleUtils.cAvailableLocaleList.getClass().getName())",
                                    "org.apache.commons.lang.LocaleUtils.cAvailableLocaleList == orig(org.apache.commons.lang.LocaleUtils.cAvailableLocaleList)",
                                    "return == true"
                                ]
                            }
                        }
                    ]
                }
            ]
        }
    ]
}