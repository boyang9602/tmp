===========================================================================
org.apache.commons.lang.StringEscapeUtils:::CLASS
===========================================================================
org.apache.commons.lang.StringEscapeUtils.escapeJava(java.lang.String):::ENTER
str has only one value
str.toString == "String with a slash (/) in it"
===========================================================================
org.apache.commons.lang.StringEscapeUtils.escapeJava(java.lang.String):::EXIT
str.toString == orig(str.toString)
str.toString == "String with a slash (/) in it"
return has only one value
return.toString == "String with a slash (\\/) in it"
===========================================================================
org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(java.lang.String, boolean):::ENTER
str has only one value
str.toString == "String with a slash (/) in it"
escapeSingleQuotes == false
===========================================================================
org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(java.lang.String, boolean):::EXIT161
===========================================================================
org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(java.lang.String, boolean):::EXIT
str.toString == orig(str.toString)
str.toString == "String with a slash (/) in it"
return has only one value
return.toString == "String with a slash (\\/) in it"
===========================================================================
org.apache.commons.lang.StringEscapeUtilsTest:::CLASS
org.apache.commons.lang.StringEscapeUtilsTest.FOO has only one value
org.apache.commons.lang.StringEscapeUtilsTest.FOO != null
org.apache.commons.lang.StringEscapeUtilsTest.FOO.toString == "foo"
org.apache.commons.lang.StringEscapeUtilsTest.class$org$apache$commons$lang$StringEscapeUtils == null
===========================================================================
org.apache.commons.lang.StringEscapeUtilsTest:::OBJECT
this.htmlEscapes != null
this.htmlEscapes.getClass().getName() == java.lang.String[][].class
this.htmlEscapes[] elements != null
org.apache.commons.lang.StringEscapeUtilsTest.class$org$apache$commons$lang$StringEscapeUtilsTest has only one value
org.apache.commons.lang.StringEscapeUtilsTest.class$org$apache$commons$lang$StringEscapeUtilsTest != null
size(this.htmlEscapes[]) == 12
===========================================================================
org.apache.commons.lang.StringEscapeUtilsTest.StringEscapeUtilsTest(java.lang.String):::ENTER
name != null
===========================================================================
org.apache.commons.lang.StringEscapeUtilsTest.StringEscapeUtilsTest(java.lang.String):::EXIT
name.toString == orig(name.toString)
===========================================================================
org.apache.commons.lang.StringEscapeUtilsTest.class$(java.lang.String):::ENTER
org.apache.commons.lang.StringEscapeUtilsTest.class$org$apache$commons$lang$StringEscapeUtilsTest == null
x0 has only one value
x0.toString == "org.apache.commons.lang.StringEscapeUtilsTest"
===========================================================================
org.apache.commons.lang.StringEscapeUtilsTest.class$(java.lang.String):::EXIT
org.apache.commons.lang.StringEscapeUtilsTest.FOO == orig(org.apache.commons.lang.StringEscapeUtilsTest.FOO)
org.apache.commons.lang.StringEscapeUtilsTest.FOO.toString == orig(org.apache.commons.lang.StringEscapeUtilsTest.FOO.toString)
org.apache.commons.lang.StringEscapeUtilsTest.class$org$apache$commons$lang$StringEscapeUtilsTest == orig(org.apache.commons.lang.StringEscapeUtilsTest.class$org$apache$commons$lang$StringEscapeUtilsTest)
org.apache.commons.lang.StringEscapeUtilsTest.class$org$apache$commons$lang$StringEscapeUtils == orig(org.apache.commons.lang.StringEscapeUtilsTest.class$org$apache$commons$lang$StringEscapeUtils)
x0.toString == orig(x0.toString)
org.apache.commons.lang.StringEscapeUtilsTest.class$org$apache$commons$lang$StringEscapeUtilsTest == null
x0.toString == "org.apache.commons.lang.StringEscapeUtilsTest"
return has only one value
===========================================================================
org.apache.commons.lang.StringEscapeUtilsTest.suite():::ENTER
org.apache.commons.lang.StringEscapeUtilsTest.class$org$apache$commons$lang$StringEscapeUtilsTest == null
===========================================================================
org.apache.commons.lang.StringEscapeUtilsTest.suite():::EXIT
org.apache.commons.lang.StringEscapeUtilsTest.FOO == orig(org.apache.commons.lang.StringEscapeUtilsTest.FOO)
org.apache.commons.lang.StringEscapeUtilsTest.FOO.toString == orig(org.apache.commons.lang.StringEscapeUtilsTest.FOO.toString)
org.apache.commons.lang.StringEscapeUtilsTest.class$org$apache$commons$lang$StringEscapeUtils == orig(org.apache.commons.lang.StringEscapeUtilsTest.class$org$apache$commons$lang$StringEscapeUtils)
org.apache.commons.lang.StringEscapeUtilsTest.class$org$apache$commons$lang$StringEscapeUtilsTest has only one value
return has only one value
return.getClass().getName() == junit.framework.TestSuite.class
