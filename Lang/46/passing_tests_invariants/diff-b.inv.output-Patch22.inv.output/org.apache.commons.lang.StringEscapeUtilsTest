{"org.apache.commons.lang.StringEscapeUtilsTest":[{"assertEscapeJava(java.lang.String, java.lang.String)":[{"ENTER":[{"b.inv.output":{"invs":[]}},{"Patch22.inv.output":{"invs":["escaped has only one value","escaped.toString == \"foo\"","original.toString == \"foo\"","original has only one value"]}}]},{"EXIT":[{"b.inv.output":{"invs":[]}},{"Patch22.inv.output":{"invs":["escaped.toString == \"foo\"","original.toString == \"foo\""]}}]}]},{"assertEscapeJava(java.lang.String, java.lang.String, java.lang.String)":[{"ENTER":[{"b.inv.output":{"invs":["original != null","expected != null"]}},{"Patch22.inv.output":{"invs":["expected.toString one of { \"\", \"\\\\t\", \"foo\" }","message.toString one of { \"empty string\", \"tab\" }","original.toString one of { \"\", \"\\t\", \"foo\" }"]}}]},{"EXIT":[{"b.inv.output":{"invs":[]}},{"Patch22.inv.output":{"invs":["expected.toString one of { \"\", \"\\\\t\", \"foo\" }","original.toString one of { \"\", \"\\t\", \"foo\" }"]}}]}]},{}]}