===========================================================================
org.apache.commons.lang.SystemUtils:::CLASS
org.apache.commons.lang.SystemUtils.JAVA_VERSION == org.apache.commons.lang.SystemUtils.JAVA_VERSION_TRIMMED
org.apache.commons.lang.SystemUtils.OS_NAME_WINDOWS_PREFIX has only one value
org.apache.commons.lang.SystemUtils.OS_NAME_WINDOWS_PREFIX.toString == "Windows"
org.apache.commons.lang.SystemUtils.USER_HOME_KEY has only one value
org.apache.commons.lang.SystemUtils.USER_HOME_KEY.toString == "user.home"
org.apache.commons.lang.SystemUtils.USER_DIR_KEY has only one value
org.apache.commons.lang.SystemUtils.USER_DIR_KEY.toString == "user.dir"
org.apache.commons.lang.SystemUtils.JAVA_IO_TMPDIR_KEY has only one value
org.apache.commons.lang.SystemUtils.JAVA_IO_TMPDIR_KEY.toString == "java.io.tmpdir"
org.apache.commons.lang.SystemUtils.JAVA_HOME_KEY has only one value
org.apache.commons.lang.SystemUtils.JAVA_HOME_KEY.toString == "java.home"
org.apache.commons.lang.SystemUtils.AWT_TOOLKIT has only one value
org.apache.commons.lang.SystemUtils.AWT_TOOLKIT.toString == "sun.awt.X11.XToolkit"
org.apache.commons.lang.SystemUtils.FILE_ENCODING has only one value
org.apache.commons.lang.SystemUtils.FILE_ENCODING.toString == "UTF-8"
org.apache.commons.lang.SystemUtils.FILE_SEPARATOR has only one value
org.apache.commons.lang.SystemUtils.FILE_SEPARATOR.toString == "/"
org.apache.commons.lang.SystemUtils.JAVA_AWT_FONTS == null
org.apache.commons.lang.SystemUtils.JAVA_AWT_GRAPHICSENV has only one value
org.apache.commons.lang.SystemUtils.JAVA_AWT_GRAPHICSENV.toString == "sun.awt.X11GraphicsEnvironment"
org.apache.commons.lang.SystemUtils.JAVA_AWT_HEADLESS == null
org.apache.commons.lang.SystemUtils.JAVA_AWT_PRINTERJOB has only one value
org.apache.commons.lang.SystemUtils.JAVA_AWT_PRINTERJOB.toString == "sun.print.PSPrinterJob"
org.apache.commons.lang.SystemUtils.JAVA_CLASS_PATH has only one value
org.apache.commons.lang.SystemUtils.JAVA_CLASS_PATH.toString == "/home/users/byang/daikon-5.7.2/daikon.jar:/home/users/byang/defects4j/framework/projects/lib/junit-4.11.jar:/home/users/byang/launcher/:target/classes:target/tests:target/test-classes:/home/users/byang/daikon-5.7.2/java/ChicoryPremain.jar"
org.apache.commons.lang.SystemUtils.JAVA_CLASS_VERSION has only one value
org.apache.commons.lang.SystemUtils.JAVA_CLASS_VERSION.toString == "52.0"
org.apache.commons.lang.SystemUtils.JAVA_COMPILER == null
org.apache.commons.lang.SystemUtils.JAVA_ENDORSED_DIRS has only one value
org.apache.commons.lang.SystemUtils.JAVA_ENDORSED_DIRS.toString == "/usr/lib/jvm/java-8-oracle/jre/lib/endorsed"
org.apache.commons.lang.SystemUtils.JAVA_EXT_DIRS has only one value
org.apache.commons.lang.SystemUtils.JAVA_EXT_DIRS.toString == "/usr/lib/jvm/java-8-oracle/jre/lib/ext:/usr/java/packages/lib/ext"
org.apache.commons.lang.SystemUtils.JAVA_HOME has only one value
org.apache.commons.lang.SystemUtils.JAVA_HOME.toString == "/usr/lib/jvm/java-8-oracle/jre"
org.apache.commons.lang.SystemUtils.JAVA_IO_TMPDIR has only one value
org.apache.commons.lang.SystemUtils.JAVA_IO_TMPDIR.toString == "/tmp"
org.apache.commons.lang.SystemUtils.JAVA_LIBRARY_PATH has only one value
org.apache.commons.lang.SystemUtils.JAVA_LIBRARY_PATH.toString == "/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib"
org.apache.commons.lang.SystemUtils.JAVA_RUNTIME_NAME has only one value
org.apache.commons.lang.SystemUtils.JAVA_RUNTIME_NAME.toString == "Java(TM) SE Runtime Environment"
org.apache.commons.lang.SystemUtils.JAVA_RUNTIME_VERSION has only one value
org.apache.commons.lang.SystemUtils.JAVA_RUNTIME_VERSION.toString == "1.8.0_201-b09"
org.apache.commons.lang.SystemUtils.JAVA_SPECIFICATION_NAME has only one value
org.apache.commons.lang.SystemUtils.JAVA_SPECIFICATION_NAME.toString == "Java Platform API Specification"
org.apache.commons.lang.SystemUtils.JAVA_SPECIFICATION_VENDOR has only one value
org.apache.commons.lang.SystemUtils.JAVA_SPECIFICATION_VENDOR.toString == "Oracle Corporation"
org.apache.commons.lang.SystemUtils.JAVA_SPECIFICATION_VERSION has only one value
org.apache.commons.lang.SystemUtils.JAVA_SPECIFICATION_VERSION.toString == "1.8"
org.apache.commons.lang.SystemUtils.JAVA_UTIL_PREFS_PREFERENCES_FACTORY == null
org.apache.commons.lang.SystemUtils.JAVA_VENDOR has only one value
org.apache.commons.lang.SystemUtils.JAVA_VENDOR.toString == "Oracle Corporation"
org.apache.commons.lang.SystemUtils.JAVA_VENDOR_URL has only one value
org.apache.commons.lang.SystemUtils.JAVA_VENDOR_URL.toString == "http://java.oracle.com/"
org.apache.commons.lang.SystemUtils.JAVA_VERSION has only one value
org.apache.commons.lang.SystemUtils.JAVA_VERSION.toString == "1.8.0_201"
org.apache.commons.lang.SystemUtils.JAVA_VM_INFO has only one value
org.apache.commons.lang.SystemUtils.JAVA_VM_INFO.toString == "mixed mode"
org.apache.commons.lang.SystemUtils.JAVA_VM_NAME has only one value
org.apache.commons.lang.SystemUtils.JAVA_VM_NAME.toString == "Java HotSpot(TM) 64-Bit Server VM"
org.apache.commons.lang.SystemUtils.JAVA_VM_SPECIFICATION_NAME has only one value
org.apache.commons.lang.SystemUtils.JAVA_VM_SPECIFICATION_NAME.toString == "Java Virtual Machine Specification"
org.apache.commons.lang.SystemUtils.JAVA_VM_SPECIFICATION_VENDOR has only one value
org.apache.commons.lang.SystemUtils.JAVA_VM_SPECIFICATION_VENDOR.toString == "Oracle Corporation"
org.apache.commons.lang.SystemUtils.JAVA_VM_SPECIFICATION_VERSION has only one value
org.apache.commons.lang.SystemUtils.JAVA_VM_SPECIFICATION_VERSION.toString == "1.8"
org.apache.commons.lang.SystemUtils.JAVA_VM_VENDOR has only one value
org.apache.commons.lang.SystemUtils.JAVA_VM_VENDOR.toString == "Oracle Corporation"
org.apache.commons.lang.SystemUtils.JAVA_VM_VERSION has only one value
org.apache.commons.lang.SystemUtils.JAVA_VM_VERSION.toString == "25.201-b09"
org.apache.commons.lang.SystemUtils.LINE_SEPARATOR has only one value
org.apache.commons.lang.SystemUtils.LINE_SEPARATOR.toString == "\n"
org.apache.commons.lang.SystemUtils.OS_ARCH has only one value
org.apache.commons.lang.SystemUtils.OS_ARCH.toString == "amd64"
org.apache.commons.lang.SystemUtils.OS_NAME has only one value
org.apache.commons.lang.SystemUtils.OS_NAME.toString == "Linux"
org.apache.commons.lang.SystemUtils.OS_VERSION has only one value
org.apache.commons.lang.SystemUtils.OS_VERSION.toString == "4.15.0-45-generic"
org.apache.commons.lang.SystemUtils.PATH_SEPARATOR has only one value
org.apache.commons.lang.SystemUtils.PATH_SEPARATOR.toString == ":"
org.apache.commons.lang.SystemUtils.USER_COUNTRY has only one value
org.apache.commons.lang.SystemUtils.USER_COUNTRY.toString == "US"
org.apache.commons.lang.SystemUtils.USER_DIR has only one value
org.apache.commons.lang.SystemUtils.USER_DIR.toString == "/home/users/byang/Lang/53/Patch152"
org.apache.commons.lang.SystemUtils.USER_HOME has only one value
org.apache.commons.lang.SystemUtils.USER_HOME.toString == "/home/users/byang"
org.apache.commons.lang.SystemUtils.USER_LANGUAGE has only one value
org.apache.commons.lang.SystemUtils.USER_LANGUAGE.toString == "en"
org.apache.commons.lang.SystemUtils.USER_NAME has only one value
org.apache.commons.lang.SystemUtils.USER_NAME.toString == "byang"
org.apache.commons.lang.SystemUtils.USER_TIMEZONE has only one value
org.apache.commons.lang.SystemUtils.USER_TIMEZONE.toString == "America/Los_Angeles"
org.apache.commons.lang.SystemUtils.JAVA_VERSION_TRIMMED.toString == "1.8.0_201"
org.apache.commons.lang.SystemUtils.JAVA_VERSION_FLOAT == 1.8
org.apache.commons.lang.SystemUtils.JAVA_VERSION_INT == 180
org.apache.commons.lang.SystemUtils.IS_JAVA_1_1 == false
org.apache.commons.lang.SystemUtils.IS_JAVA_1_2 == false
org.apache.commons.lang.SystemUtils.IS_JAVA_1_3 == false
org.apache.commons.lang.SystemUtils.IS_JAVA_1_4 == false
org.apache.commons.lang.SystemUtils.IS_JAVA_1_5 == false
org.apache.commons.lang.SystemUtils.IS_JAVA_1_6 == false
org.apache.commons.lang.SystemUtils.IS_OS_AIX == false
org.apache.commons.lang.SystemUtils.IS_OS_HP_UX == false
org.apache.commons.lang.SystemUtils.IS_OS_IRIX == false
org.apache.commons.lang.SystemUtils.IS_OS_LINUX == true
org.apache.commons.lang.SystemUtils.IS_OS_MAC == false
org.apache.commons.lang.SystemUtils.IS_OS_MAC_OSX == false
org.apache.commons.lang.SystemUtils.IS_OS_OS2 == false
org.apache.commons.lang.SystemUtils.IS_OS_SOLARIS == false
org.apache.commons.lang.SystemUtils.IS_OS_SUN_OS == false
org.apache.commons.lang.SystemUtils.IS_OS_UNIX == true
org.apache.commons.lang.SystemUtils.IS_OS_WINDOWS == false
org.apache.commons.lang.SystemUtils.IS_OS_WINDOWS_2000 == false
org.apache.commons.lang.SystemUtils.IS_OS_WINDOWS_95 == false
org.apache.commons.lang.SystemUtils.IS_OS_WINDOWS_98 == false
org.apache.commons.lang.SystemUtils.IS_OS_WINDOWS_ME == false
org.apache.commons.lang.SystemUtils.IS_OS_WINDOWS_NT == false
org.apache.commons.lang.SystemUtils.IS_OS_WINDOWS_XP == false
===========================================================================
org.apache.commons.lang.SystemUtils.getJavaVersionAsFloat():::EXIT1127
===========================================================================
org.apache.commons.lang.SystemUtils.getJavaVersionAsFloat():::EXIT
return == 1.8
===========================================================================
org.apache.commons.lang.SystemUtils.getJavaVersionAsInt():::EXIT1159
===========================================================================
org.apache.commons.lang.SystemUtils.getJavaVersionAsInt():::EXIT
return == 180
===========================================================================
org.apache.commons.lang.SystemUtils.getJavaVersionMatches(java.lang.String):::ENTER
===========================================================================
org.apache.commons.lang.SystemUtils.getJavaVersionMatches(java.lang.String):::EXIT1192
===========================================================================
org.apache.commons.lang.SystemUtils.getJavaVersionMatches(java.lang.String):::EXIT1192;condition="not(return == true)"
===========================================================================
org.apache.commons.lang.SystemUtils.getJavaVersionMatches(java.lang.String):::EXIT
versionPrefix.toString == orig(versionPrefix.toString)
return == false
===========================================================================
org.apache.commons.lang.SystemUtils.getJavaVersionMatches(java.lang.String):::EXIT;condition="not(return == true)"
===========================================================================
org.apache.commons.lang.SystemUtils.getJavaVersionTrimmed():::EXIT1175
===========================================================================
org.apache.commons.lang.SystemUtils.getJavaVersionTrimmed():::EXIT
return has only one value
return.toString == "1.8.0_201"
===========================================================================
org.apache.commons.lang.SystemUtils.getOSMatches(java.lang.String):::ENTER
===========================================================================
org.apache.commons.lang.SystemUtils.getOSMatches(java.lang.String):::EXIT1205
(return == true)  ==>  (orig(osNamePrefix) has only one value)
(return == true)  ==>  (osNamePrefix.toString == "Linux")
===========================================================================
org.apache.commons.lang.SystemUtils.getOSMatches(java.lang.String):::EXIT1205;condition="return == true"
===========================================================================
org.apache.commons.lang.SystemUtils.getOSMatches(java.lang.String):::EXIT1205;condition="not(return == true)"
===========================================================================
org.apache.commons.lang.SystemUtils.getOSMatches(java.lang.String):::EXIT
osNamePrefix.toString == orig(osNamePrefix.toString)
(return == true)  ==>  (orig(osNamePrefix) has only one value)
(return == true)  ==>  (osNamePrefix.toString == "Linux")
===========================================================================
org.apache.commons.lang.SystemUtils.getOSMatches(java.lang.String):::EXIT;condition="return == true"
osNamePrefix.toString == "Linux"
return == true
orig(osNamePrefix) has only one value
===========================================================================
org.apache.commons.lang.SystemUtils.getOSMatches(java.lang.String):::EXIT;condition="not(return == true)"
return == false
===========================================================================
org.apache.commons.lang.SystemUtils.getOSMatches(java.lang.String, java.lang.String):::ENTER
osNamePrefix.toString one of { "Windows", "Windows 9" }
===========================================================================
org.apache.commons.lang.SystemUtils.getOSMatches(java.lang.String, java.lang.String):::EXIT1219
===========================================================================
org.apache.commons.lang.SystemUtils.getOSMatches(java.lang.String, java.lang.String):::EXIT1219;condition="not(return == true)"
===========================================================================
org.apache.commons.lang.SystemUtils.getOSMatches(java.lang.String, java.lang.String):::EXIT
osNamePrefix.toString == orig(osNamePrefix.toString)
osVersionPrefix.toString == orig(osVersionPrefix.toString)
osNamePrefix.toString one of { "Windows", "Windows 9" }
return == false
===========================================================================
org.apache.commons.lang.SystemUtils.getOSMatches(java.lang.String, java.lang.String):::EXIT;condition="not(return == true)"
===========================================================================
org.apache.commons.lang.SystemUtils.getSystemProperty(java.lang.String):::ENTER
property != null
===========================================================================
org.apache.commons.lang.SystemUtils.getSystemProperty(java.lang.String):::EXIT1235
===========================================================================
org.apache.commons.lang.SystemUtils.getSystemProperty(java.lang.String):::EXIT
property.toString == orig(property.toString)
===========================================================================
org.apache.commons.lang.SystemUtils.isJavaVersionAtLeast(float):::ENTER
requiredVersion == 1.4
===========================================================================
org.apache.commons.lang.SystemUtils.isJavaVersionAtLeast(float):::EXIT
org.apache.commons.lang.SystemUtils.OS_NAME_WINDOWS_PREFIX == orig(org.apache.commons.lang.SystemUtils.OS_NAME_WINDOWS_PREFIX)
org.apache.commons.lang.SystemUtils.OS_NAME_WINDOWS_PREFIX.toString == orig(org.apache.commons.lang.SystemUtils.OS_NAME_WINDOWS_PREFIX.toString)
org.apache.commons.lang.SystemUtils.USER_HOME_KEY == orig(org.apache.commons.lang.SystemUtils.USER_HOME_KEY)
org.apache.commons.lang.SystemUtils.USER_HOME_KEY.toString == orig(org.apache.commons.lang.SystemUtils.USER_HOME_KEY.toString)
org.apache.commons.lang.SystemUtils.USER_DIR_KEY == orig(org.apache.commons.lang.SystemUtils.USER_DIR_KEY)
org.apache.commons.lang.SystemUtils.USER_DIR_KEY.toString == orig(org.apache.commons.lang.SystemUtils.USER_DIR_KEY.toString)
org.apache.commons.lang.SystemUtils.JAVA_IO_TMPDIR_KEY == orig(org.apache.commons.lang.SystemUtils.JAVA_IO_TMPDIR_KEY)
org.apache.commons.lang.SystemUtils.JAVA_IO_TMPDIR_KEY.toString == orig(org.apache.commons.lang.SystemUtils.JAVA_IO_TMPDIR_KEY.toString)
org.apache.commons.lang.SystemUtils.JAVA_HOME_KEY == orig(org.apache.commons.lang.SystemUtils.JAVA_HOME_KEY)
org.apache.commons.lang.SystemUtils.JAVA_HOME_KEY.toString == orig(org.apache.commons.lang.SystemUtils.JAVA_HOME_KEY.toString)
org.apache.commons.lang.SystemUtils.AWT_TOOLKIT == orig(org.apache.commons.lang.SystemUtils.AWT_TOOLKIT)
org.apache.commons.lang.SystemUtils.AWT_TOOLKIT.toString == orig(org.apache.commons.lang.SystemUtils.AWT_TOOLKIT.toString)
org.apache.commons.lang.SystemUtils.FILE_ENCODING == orig(org.apache.commons.lang.SystemUtils.FILE_ENCODING)
org.apache.commons.lang.SystemUtils.FILE_ENCODING.toString == orig(org.apache.commons.lang.SystemUtils.FILE_ENCODING.toString)
org.apache.commons.lang.SystemUtils.FILE_SEPARATOR == orig(org.apache.commons.lang.SystemUtils.FILE_SEPARATOR)
org.apache.commons.lang.SystemUtils.FILE_SEPARATOR.toString == orig(org.apache.commons.lang.SystemUtils.FILE_SEPARATOR.toString)
org.apache.commons.lang.SystemUtils.JAVA_AWT_FONTS == orig(org.apache.commons.lang.SystemUtils.JAVA_AWT_FONTS)
org.apache.commons.lang.SystemUtils.JAVA_AWT_GRAPHICSENV == orig(org.apache.commons.lang.SystemUtils.JAVA_AWT_GRAPHICSENV)
org.apache.commons.lang.SystemUtils.JAVA_AWT_GRAPHICSENV.toString == orig(org.apache.commons.lang.SystemUtils.JAVA_AWT_GRAPHICSENV.toString)
org.apache.commons.lang.SystemUtils.JAVA_AWT_HEADLESS == orig(org.apache.commons.lang.SystemUtils.JAVA_AWT_HEADLESS)
org.apache.commons.lang.SystemUtils.JAVA_AWT_PRINTERJOB == orig(org.apache.commons.lang.SystemUtils.JAVA_AWT_PRINTERJOB)
org.apache.commons.lang.SystemUtils.JAVA_AWT_PRINTERJOB.toString == orig(org.apache.commons.lang.SystemUtils.JAVA_AWT_PRINTERJOB.toString)
org.apache.commons.lang.SystemUtils.JAVA_CLASS_PATH == orig(org.apache.commons.lang.SystemUtils.JAVA_CLASS_PATH)
org.apache.commons.lang.SystemUtils.JAVA_CLASS_PATH.toString == orig(org.apache.commons.lang.SystemUtils.JAVA_CLASS_PATH.toString)
org.apache.commons.lang.SystemUtils.JAVA_CLASS_VERSION == orig(org.apache.commons.lang.SystemUtils.JAVA_CLASS_VERSION)
org.apache.commons.lang.SystemUtils.JAVA_CLASS_VERSION.toString == orig(org.apache.commons.lang.SystemUtils.JAVA_CLASS_VERSION.toString)
org.apache.commons.lang.SystemUtils.JAVA_COMPILER == orig(org.apache.commons.lang.SystemUtils.JAVA_COMPILER)
org.apache.commons.lang.SystemUtils.JAVA_ENDORSED_DIRS == orig(org.apache.commons.lang.SystemUtils.JAVA_ENDORSED_DIRS)
org.apache.commons.lang.SystemUtils.JAVA_ENDORSED_DIRS.toString == orig(org.apache.commons.lang.SystemUtils.JAVA_ENDORSED_DIRS.toString)
org.apache.commons.lang.SystemUtils.JAVA_EXT_DIRS == orig(org.apache.commons.lang.SystemUtils.JAVA_EXT_DIRS)
org.apache.commons.lang.SystemUtils.JAVA_EXT_DIRS.toString == orig(org.apache.commons.lang.SystemUtils.JAVA_EXT_DIRS.toString)
org.apache.commons.lang.SystemUtils.JAVA_HOME == orig(org.apache.commons.lang.SystemUtils.JAVA_HOME)
org.apache.commons.lang.SystemUtils.JAVA_HOME.toString == orig(org.apache.commons.lang.SystemUtils.JAVA_HOME.toString)
org.apache.commons.lang.SystemUtils.JAVA_IO_TMPDIR == orig(org.apache.commons.lang.SystemUtils.JAVA_IO_TMPDIR)
org.apache.commons.lang.SystemUtils.JAVA_IO_TMPDIR.toString == orig(org.apache.commons.lang.SystemUtils.JAVA_IO_TMPDIR.toString)
org.apache.commons.lang.SystemUtils.JAVA_LIBRARY_PATH == orig(org.apache.commons.lang.SystemUtils.JAVA_LIBRARY_PATH)
org.apache.commons.lang.SystemUtils.JAVA_LIBRARY_PATH.toString == orig(org.apache.commons.lang.SystemUtils.JAVA_LIBRARY_PATH.toString)
org.apache.commons.lang.SystemUtils.JAVA_RUNTIME_NAME == orig(org.apache.commons.lang.SystemUtils.JAVA_RUNTIME_NAME)
org.apache.commons.lang.SystemUtils.JAVA_RUNTIME_NAME.toString == orig(org.apache.commons.lang.SystemUtils.JAVA_RUNTIME_NAME.toString)
org.apache.commons.lang.SystemUtils.JAVA_RUNTIME_VERSION == orig(org.apache.commons.lang.SystemUtils.JAVA_RUNTIME_VERSION)
org.apache.commons.lang.SystemUtils.JAVA_RUNTIME_VERSION.toString == orig(org.apache.commons.lang.SystemUtils.JAVA_RUNTIME_VERSION.toString)
org.apache.commons.lang.SystemUtils.JAVA_SPECIFICATION_NAME == orig(org.apache.commons.lang.SystemUtils.JAVA_SPECIFICATION_NAME)
org.apache.commons.lang.SystemUtils.JAVA_SPECIFICATION_NAME.toString == orig(org.apache.commons.lang.SystemUtils.JAVA_SPECIFICATION_NAME.toString)
org.apache.commons.lang.SystemUtils.JAVA_SPECIFICATION_VENDOR == orig(org.apache.commons.lang.SystemUtils.JAVA_SPECIFICATION_VENDOR)
org.apache.commons.lang.SystemUtils.JAVA_SPECIFICATION_VENDOR.toString == orig(org.apache.commons.lang.SystemUtils.JAVA_SPECIFICATION_VENDOR.toString)
org.apache.commons.lang.SystemUtils.JAVA_SPECIFICATION_VERSION == orig(org.apache.commons.lang.SystemUtils.JAVA_SPECIFICATION_VERSION)
org.apache.commons.lang.SystemUtils.JAVA_SPECIFICATION_VERSION.toString == orig(org.apache.commons.lang.SystemUtils.JAVA_SPECIFICATION_VERSION.toString)
org.apache.commons.lang.SystemUtils.JAVA_UTIL_PREFS_PREFERENCES_FACTORY == orig(org.apache.commons.lang.SystemUtils.JAVA_UTIL_PREFS_PREFERENCES_FACTORY)
org.apache.commons.lang.SystemUtils.JAVA_VENDOR == orig(org.apache.commons.lang.SystemUtils.JAVA_VENDOR)
org.apache.commons.lang.SystemUtils.JAVA_VENDOR.toString == orig(org.apache.commons.lang.SystemUtils.JAVA_VENDOR.toString)
org.apache.commons.lang.SystemUtils.JAVA_VENDOR_URL == orig(org.apache.commons.lang.SystemUtils.JAVA_VENDOR_URL)
org.apache.commons.lang.SystemUtils.JAVA_VENDOR_URL.toString == orig(org.apache.commons.lang.SystemUtils.JAVA_VENDOR_URL.toString)
org.apache.commons.lang.SystemUtils.JAVA_VERSION == orig(org.apache.commons.lang.SystemUtils.JAVA_VERSION)
org.apache.commons.lang.SystemUtils.JAVA_VERSION == orig(org.apache.commons.lang.SystemUtils.JAVA_VERSION_TRIMMED)
org.apache.commons.lang.SystemUtils.JAVA_VERSION.toString == orig(org.apache.commons.lang.SystemUtils.JAVA_VERSION.toString)
org.apache.commons.lang.SystemUtils.JAVA_VM_INFO == orig(org.apache.commons.lang.SystemUtils.JAVA_VM_INFO)
org.apache.commons.lang.SystemUtils.JAVA_VM_INFO.toString == orig(org.apache.commons.lang.SystemUtils.JAVA_VM_INFO.toString)
org.apache.commons.lang.SystemUtils.JAVA_VM_NAME == orig(org.apache.commons.lang.SystemUtils.JAVA_VM_NAME)
org.apache.commons.lang.SystemUtils.JAVA_VM_NAME.toString == orig(org.apache.commons.lang.SystemUtils.JAVA_VM_NAME.toString)
org.apache.commons.lang.SystemUtils.JAVA_VM_SPECIFICATION_NAME == orig(org.apache.commons.lang.SystemUtils.JAVA_VM_SPECIFICATION_NAME)
org.apache.commons.lang.SystemUtils.JAVA_VM_SPECIFICATION_NAME.toString == orig(org.apache.commons.lang.SystemUtils.JAVA_VM_SPECIFICATION_NAME.toString)
org.apache.commons.lang.SystemUtils.JAVA_VM_SPECIFICATION_VENDOR == orig(org.apache.commons.lang.SystemUtils.JAVA_VM_SPECIFICATION_VENDOR)
org.apache.commons.lang.SystemUtils.JAVA_VM_SPECIFICATION_VENDOR.toString == orig(org.apache.commons.lang.SystemUtils.JAVA_VM_SPECIFICATION_VENDOR.toString)
org.apache.commons.lang.SystemUtils.JAVA_VM_SPECIFICATION_VERSION == orig(org.apache.commons.lang.SystemUtils.JAVA_VM_SPECIFICATION_VERSION)
org.apache.commons.lang.SystemUtils.JAVA_VM_SPECIFICATION_VERSION.toString == orig(org.apache.commons.lang.SystemUtils.JAVA_VM_SPECIFICATION_VERSION.toString)
org.apache.commons.lang.SystemUtils.JAVA_VM_VENDOR == orig(org.apache.commons.lang.SystemUtils.JAVA_VM_VENDOR)
org.apache.commons.lang.SystemUtils.JAVA_VM_VENDOR.toString == orig(org.apache.commons.lang.SystemUtils.JAVA_VM_VENDOR.toString)
org.apache.commons.lang.SystemUtils.JAVA_VM_VERSION == orig(org.apache.commons.lang.SystemUtils.JAVA_VM_VERSION)
org.apache.commons.lang.SystemUtils.JAVA_VM_VERSION.toString == orig(org.apache.commons.lang.SystemUtils.JAVA_VM_VERSION.toString)
org.apache.commons.lang.SystemUtils.LINE_SEPARATOR == orig(org.apache.commons.lang.SystemUtils.LINE_SEPARATOR)
org.apache.commons.lang.SystemUtils.LINE_SEPARATOR.toString == orig(org.apache.commons.lang.SystemUtils.LINE_SEPARATOR.toString)
org.apache.commons.lang.SystemUtils.OS_ARCH == orig(org.apache.commons.lang.SystemUtils.OS_ARCH)
org.apache.commons.lang.SystemUtils.OS_ARCH.toString == orig(org.apache.commons.lang.SystemUtils.OS_ARCH.toString)
org.apache.commons.lang.SystemUtils.OS_NAME == orig(org.apache.commons.lang.SystemUtils.OS_NAME)
org.apache.commons.lang.SystemUtils.OS_NAME.toString == orig(org.apache.commons.lang.SystemUtils.OS_NAME.toString)
org.apache.commons.lang.SystemUtils.OS_VERSION == orig(org.apache.commons.lang.SystemUtils.OS_VERSION)
org.apache.commons.lang.SystemUtils.OS_VERSION.toString == orig(org.apache.commons.lang.SystemUtils.OS_VERSION.toString)
org.apache.commons.lang.SystemUtils.PATH_SEPARATOR == orig(org.apache.commons.lang.SystemUtils.PATH_SEPARATOR)
org.apache.commons.lang.SystemUtils.PATH_SEPARATOR.toString == orig(org.apache.commons.lang.SystemUtils.PATH_SEPARATOR.toString)
org.apache.commons.lang.SystemUtils.USER_COUNTRY == orig(org.apache.commons.lang.SystemUtils.USER_COUNTRY)
org.apache.commons.lang.SystemUtils.USER_COUNTRY.toString == orig(org.apache.commons.lang.SystemUtils.USER_COUNTRY.toString)
org.apache.commons.lang.SystemUtils.USER_DIR == orig(org.apache.commons.lang.SystemUtils.USER_DIR)
org.apache.commons.lang.SystemUtils.USER_DIR.toString == orig(org.apache.commons.lang.SystemUtils.USER_DIR.toString)
org.apache.commons.lang.SystemUtils.USER_HOME == orig(org.apache.commons.lang.SystemUtils.USER_HOME)
org.apache.commons.lang.SystemUtils.USER_HOME.toString == orig(org.apache.commons.lang.SystemUtils.USER_HOME.toString)
org.apache.commons.lang.SystemUtils.USER_LANGUAGE == orig(org.apache.commons.lang.SystemUtils.USER_LANGUAGE)
org.apache.commons.lang.SystemUtils.USER_LANGUAGE.toString == orig(org.apache.commons.lang.SystemUtils.USER_LANGUAGE.toString)
org.apache.commons.lang.SystemUtils.USER_NAME == orig(org.apache.commons.lang.SystemUtils.USER_NAME)
org.apache.commons.lang.SystemUtils.USER_NAME.toString == orig(org.apache.commons.lang.SystemUtils.USER_NAME.toString)
org.apache.commons.lang.SystemUtils.USER_TIMEZONE == orig(org.apache.commons.lang.SystemUtils.USER_TIMEZONE)
org.apache.commons.lang.SystemUtils.USER_TIMEZONE.toString == orig(org.apache.commons.lang.SystemUtils.USER_TIMEZONE.toString)
org.apache.commons.lang.SystemUtils.JAVA_VERSION_TRIMMED.toString == orig(org.apache.commons.lang.SystemUtils.JAVA_VERSION_TRIMMED.toString)
org.apache.commons.lang.SystemUtils.JAVA_VERSION_FLOAT == orig(org.apache.commons.lang.SystemUtils.JAVA_VERSION_FLOAT)
org.apache.commons.lang.SystemUtils.JAVA_VERSION_INT == orig(org.apache.commons.lang.SystemUtils.JAVA_VERSION_INT)
org.apache.commons.lang.SystemUtils.IS_JAVA_1_1 == orig(org.apache.commons.lang.SystemUtils.IS_JAVA_1_1)
org.apache.commons.lang.SystemUtils.IS_JAVA_1_2 == orig(org.apache.commons.lang.SystemUtils.IS_JAVA_1_2)
org.apache.commons.lang.SystemUtils.IS_JAVA_1_3 == orig(org.apache.commons.lang.SystemUtils.IS_JAVA_1_3)
org.apache.commons.lang.SystemUtils.IS_JAVA_1_4 == orig(org.apache.commons.lang.SystemUtils.IS_JAVA_1_4)
org.apache.commons.lang.SystemUtils.IS_JAVA_1_5 == orig(org.apache.commons.lang.SystemUtils.IS_JAVA_1_5)
org.apache.commons.lang.SystemUtils.IS_JAVA_1_6 == orig(org.apache.commons.lang.SystemUtils.IS_JAVA_1_6)
org.apache.commons.lang.SystemUtils.IS_OS_AIX == orig(org.apache.commons.lang.SystemUtils.IS_OS_AIX)
org.apache.commons.lang.SystemUtils.IS_OS_HP_UX == orig(org.apache.commons.lang.SystemUtils.IS_OS_HP_UX)
org.apache.commons.lang.SystemUtils.IS_OS_IRIX == orig(org.apache.commons.lang.SystemUtils.IS_OS_IRIX)
org.apache.commons.lang.SystemUtils.IS_OS_LINUX == orig(org.apache.commons.lang.SystemUtils.IS_OS_LINUX)
org.apache.commons.lang.SystemUtils.IS_OS_MAC == orig(org.apache.commons.lang.SystemUtils.IS_OS_MAC)
org.apache.commons.lang.SystemUtils.IS_OS_MAC_OSX == orig(org.apache.commons.lang.SystemUtils.IS_OS_MAC_OSX)
org.apache.commons.lang.SystemUtils.IS_OS_OS2 == orig(org.apache.commons.lang.SystemUtils.IS_OS_OS2)
org.apache.commons.lang.SystemUtils.IS_OS_SOLARIS == orig(org.apache.commons.lang.SystemUtils.IS_OS_SOLARIS)
org.apache.commons.lang.SystemUtils.IS_OS_SUN_OS == orig(org.apache.commons.lang.SystemUtils.IS_OS_SUN_OS)
org.apache.commons.lang.SystemUtils.IS_OS_UNIX == orig(org.apache.commons.lang.SystemUtils.IS_OS_UNIX)
org.apache.commons.lang.SystemUtils.IS_OS_WINDOWS == orig(org.apache.commons.lang.SystemUtils.IS_OS_WINDOWS)
org.apache.commons.lang.SystemUtils.IS_OS_WINDOWS_2000 == orig(org.apache.commons.lang.SystemUtils.IS_OS_WINDOWS_2000)
org.apache.commons.lang.SystemUtils.IS_OS_WINDOWS_95 == orig(org.apache.commons.lang.SystemUtils.IS_OS_WINDOWS_95)
org.apache.commons.lang.SystemUtils.IS_OS_WINDOWS_98 == orig(org.apache.commons.lang.SystemUtils.IS_OS_WINDOWS_98)
org.apache.commons.lang.SystemUtils.IS_OS_WINDOWS_ME == orig(org.apache.commons.lang.SystemUtils.IS_OS_WINDOWS_ME)
org.apache.commons.lang.SystemUtils.IS_OS_WINDOWS_NT == orig(org.apache.commons.lang.SystemUtils.IS_OS_WINDOWS_NT)
org.apache.commons.lang.SystemUtils.IS_OS_WINDOWS_XP == orig(org.apache.commons.lang.SystemUtils.IS_OS_WINDOWS_XP)
return == true
===========================================================================
org.apache.commons.lang.SystemUtils.isJavaVersionAtLeast(float):::EXIT;condition="return == true"
===========================================================================
org.apache.commons.lang.time.DateUtils$DateIterator:::OBJECT
this.endFinal != null
this.endFinal.getClass().getName() == java.util.GregorianCalendar.class
this.spot != null
this.spot.getClass().getName() == java.util.GregorianCalendar.class
===========================================================================
org.apache.commons.lang.time.DateUtils$DateIterator.DateIterator(java.util.Calendar, java.util.Calendar):::ENTER
startFinal != null
startFinal.getClass().getName() == java.util.GregorianCalendar.class
endFinal != null
endFinal.getClass().getName() == java.util.GregorianCalendar.class
===========================================================================
org.apache.commons.lang.time.DateUtils$DateIterator.DateIterator(java.util.Calendar, java.util.Calendar):::EXIT
===========================================================================
org.apache.commons.lang.time.DateUtils$DateIterator.hasNext():::ENTER
===========================================================================
org.apache.commons.lang.time.DateUtils$DateIterator.hasNext():::EXIT
this.endFinal == orig(this.endFinal)
this.endFinal.getClass().getName() == orig(this.endFinal.getClass().getName())
this.spot == orig(this.spot)
this.spot.getClass().getName() == orig(this.spot.getClass().getName())
===========================================================================
org.apache.commons.lang.time.DateUtils$DateIterator.hasNext():::EXIT;condition="return == true"
return == true
===========================================================================
org.apache.commons.lang.time.DateUtils$DateIterator.hasNext():::EXIT;condition="not(return == true)"
return == false
===========================================================================
org.apache.commons.lang.time.DateUtils$DateIterator.next():::ENTER
===========================================================================
org.apache.commons.lang.time.DateUtils$DateIterator.next():::EXIT
this.endFinal == orig(this.endFinal)
this.endFinal.getClass().getName() == orig(this.endFinal.getClass().getName())
this.spot == orig(this.spot)
this.spot.getClass().getName() == orig(this.spot.getClass().getName())
return != null
return.getClass().getName() == java.util.GregorianCalendar.class
===========================================================================
org.apache.commons.lang.time.DateUtils:::CLASS
===========================================================================
org.apache.commons.lang.time.DateUtils.round(java.lang.Object, int):::ENTER
date != null
===========================================================================
org.apache.commons.lang.time.DateUtils.round(java.lang.Object, int):::EXIT518
orig(date.getClass().getName()) == java.util.Date.class
===========================================================================
org.apache.commons.lang.time.DateUtils.round(java.lang.Object, int):::EXIT520
orig(date.getClass().getName()) == java.util.GregorianCalendar.class
===========================================================================
org.apache.commons.lang.time.DateUtils.round(java.lang.Object, int):::EXIT
return != null
===========================================================================
org.apache.commons.lang.time.DateUtils.round(java.util.Calendar, int):::ENTER
date != null
date.getClass().getName() == java.util.GregorianCalendar.class
===========================================================================
org.apache.commons.lang.time.DateUtils.round(java.util.Calendar, int):::EXIT
return.getClass().getName() == orig(date.getClass().getName())
return != null
return.getClass().getName() == java.util.GregorianCalendar.class
===========================================================================
org.apache.commons.lang.time.DateUtils.round(java.util.Date, int):::ENTER
date != null
field >= 1
===========================================================================
org.apache.commons.lang.time.DateUtils.round(java.util.Date, int):::EXIT
return != null
===========================================================================
org.apache.commons.lang.time.DateUtils.truncate(java.lang.Object, int):::ENTER
date != null
===========================================================================
org.apache.commons.lang.time.DateUtils.truncate(java.lang.Object, int):::EXIT603
orig(date.getClass().getName()) == java.util.Date.class
===========================================================================
org.apache.commons.lang.time.DateUtils.truncate(java.lang.Object, int):::EXIT605
orig(date.getClass().getName()) == java.util.GregorianCalendar.class
orig(field) one of { 5, 9, 13 }
===========================================================================
org.apache.commons.lang.time.DateUtils.truncate(java.lang.Object, int):::EXIT
(orig(date.getClass().getName()) == java.util.GregorianCalendar.class)  ==>  (orig(field) one of { 5, 9, 13 })
return != null
===========================================================================
org.apache.commons.lang.time.DateUtils.truncate(java.util.Calendar, int):::ENTER
date != null
date.getClass().getName() == java.util.GregorianCalendar.class
===========================================================================
org.apache.commons.lang.time.DateUtils.truncate(java.util.Calendar, int):::EXIT
return.getClass().getName() == orig(date.getClass().getName())
return != null
return.getClass().getName() == java.util.GregorianCalendar.class
===========================================================================
org.apache.commons.lang.time.DateUtils.truncate(java.util.Date, int):::ENTER
date != null
field >= 1
===========================================================================
org.apache.commons.lang.time.DateUtils.truncate(java.util.Date, int):::EXIT
return != null
===========================================================================
org.apache.commons.lang.time.DateUtilsTest:::CLASS
org.apache.commons.lang.time.DateUtilsTest.MILLIS_TEST == 962794982001L
org.apache.commons.lang.time.DateUtilsTest.class$org$apache$commons$lang$time$DateUtils == null
===========================================================================
org.apache.commons.lang.time.DateUtilsTest:::OBJECT
this.dateParser.getClass().getName() == this.dateTimeParser.getClass().getName()
this.calAmPm1.getClass().getName() == this.calAmPm2.getClass().getName()
this.calAmPm1.getClass().getName() == this.calAmPm3.getClass().getName()
this.calAmPm1.getClass().getName() == this.calAmPm4.getClass().getName()
this.calAmPm1.getClass().getName() == this.cal1.getClass().getName()
this.calAmPm1.getClass().getName() == this.cal2.getClass().getName()
this.calAmPm1.getClass().getName() == this.cal3.getClass().getName()
this.calAmPm1.getClass().getName() == this.cal4.getClass().getName()
this.calAmPm1.getClass().getName() == this.cal5.getClass().getName()
this.calAmPm1.getClass().getName() == this.cal6.getClass().getName()
this.calAmPm1.getClass().getName() == this.cal7.getClass().getName()
this.calAmPm1.getClass().getName() == this.cal8.getClass().getName()
this.zone.getClass().getName() == this.defaultZone.getClass().getName()
this.dateParser.getClass().getName() == java.text.SimpleDateFormat.class
this.timeZoneDateParser == null
this.calAmPm1.getClass().getName() == java.util.GregorianCalendar.class
this.zone.getClass().getName() == sun.util.calendar.ZoneInfo.class
org.apache.commons.lang.time.DateUtilsTest.class$org$apache$commons$lang$time$DateUtilsTest has only one value
org.apache.commons.lang.time.DateUtilsTest.class$org$apache$commons$lang$time$DateUtilsTest != null
this.dateParser.getClass().getName() != this.calAmPm1.getClass().getName()
this.dateParser.getClass().getName() != this.zone.getClass().getName()
this.calAmPm1.getClass().getName() != this.zone.getClass().getName()
===========================================================================
org.apache.commons.lang.time.DateUtilsTest.DateUtilsTest(java.lang.String):::ENTER
name != null
===========================================================================
org.apache.commons.lang.time.DateUtilsTest.DateUtilsTest(java.lang.String):::EXIT
name.toString == orig(name.toString)
this.dateParser == null
this.dateTimeParser == null
this.dateAmPm1 == null
this.dateAmPm2 == null
this.dateAmPm3 == null
this.dateAmPm4 == null
this.date0 == null
this.date1 == null
this.date2 == null
this.date3 == null
this.date4 == null
this.date5 == null
this.date6 == null
this.date7 == null
this.date8 == null
this.calAmPm1 == null
this.calAmPm2 == null
this.calAmPm3 == null
this.calAmPm4 == null
this.cal1 == null
this.cal2 == null
this.cal3 == null
this.cal4 == null
this.cal5 == null
this.cal6 == null
this.cal7 == null
this.cal8 == null
this.zone == null
this.defaultZone == null
===========================================================================
org.apache.commons.lang.time.DateUtilsTest.assertEquals(java.lang.String, java.util.Calendar, java.util.Calendar, long):::ENTER
cal1.getClass().getName() == cal2.getClass().getName()
org.apache.commons.lang.time.DateUtilsTest.class$org$apache$commons$lang$time$DateUtilsTest has only one value
org.apache.commons.lang.time.DateUtilsTest.class$org$apache$commons$lang$time$DateUtilsTest != null
message has only one value
message != null
message.toString == ""
cal1 != null
cal1.getClass().getName() == java.util.GregorianCalendar.class
cal2 != null
delta == 0
===========================================================================
org.apache.commons.lang.time.DateUtilsTest.assertEquals(java.lang.String, java.util.Calendar, java.util.Calendar, long):::EXIT
org.apache.commons.lang.time.DateUtilsTest.MILLIS_TEST == orig(org.apache.commons.lang.time.DateUtilsTest.MILLIS_TEST)
org.apache.commons.lang.time.DateUtilsTest.class$org$apache$commons$lang$time$DateUtilsTest == orig(org.apache.commons.lang.time.DateUtilsTest.class$org$apache$commons$lang$time$DateUtilsTest)
org.apache.commons.lang.time.DateUtilsTest.class$org$apache$commons$lang$time$DateUtils == orig(org.apache.commons.lang.time.DateUtilsTest.class$org$apache$commons$lang$time$DateUtils)
message.toString == orig(message.toString)
org.apache.commons.lang.time.DateUtilsTest.class$org$apache$commons$lang$time$DateUtilsTest has only one value
org.apache.commons.lang.time.DateUtilsTest.class$org$apache$commons$lang$time$DateUtilsTest != null
message.toString == ""
===========================================================================
org.apache.commons.lang.time.DateUtilsTest.assertWeekIterator(java.util.Iterator, java.util.Calendar):::ENTER
org.apache.commons.lang.time.DateUtilsTest.class$org$apache$commons$lang$time$DateUtilsTest has only one value
org.apache.commons.lang.time.DateUtilsTest.class$org$apache$commons$lang$time$DateUtilsTest != null
it != null
it.getClass().getName() == org.apache.commons.lang.time.DateUtils$DateIterator.class
start != null
start.getClass().getName() == java.util.GregorianCalendar.class
it.getClass().getName() != start.getClass().getName()
===========================================================================
org.apache.commons.lang.time.DateUtilsTest.assertWeekIterator(java.util.Iterator, java.util.Calendar):::EXIT
org.apache.commons.lang.time.DateUtilsTest.MILLIS_TEST == orig(org.apache.commons.lang.time.DateUtilsTest.MILLIS_TEST)
org.apache.commons.lang.time.DateUtilsTest.class$org$apache$commons$lang$time$DateUtilsTest == orig(org.apache.commons.lang.time.DateUtilsTest.class$org$apache$commons$lang$time$DateUtilsTest)
org.apache.commons.lang.time.DateUtilsTest.class$org$apache$commons$lang$time$DateUtils == orig(org.apache.commons.lang.time.DateUtilsTest.class$org$apache$commons$lang$time$DateUtils)
org.apache.commons.lang.time.DateUtilsTest.class$org$apache$commons$lang$time$DateUtilsTest has only one value
org.apache.commons.lang.time.DateUtilsTest.class$org$apache$commons$lang$time$DateUtilsTest != null
===========================================================================
org.apache.commons.lang.time.DateUtilsTest.assertWeekIterator(java.util.Iterator, java.util.Calendar, java.util.Calendar):::ENTER
start.getClass().getName() == end.getClass().getName()
org.apache.commons.lang.time.DateUtilsTest.class$org$apache$commons$lang$time$DateUtilsTest has only one value
org.apache.commons.lang.time.DateUtilsTest.class$org$apache$commons$lang$time$DateUtilsTest != null
it != null
it.getClass().getName() == org.apache.commons.lang.time.DateUtils$DateIterator.class
start != null
start.getClass().getName() == java.util.GregorianCalendar.class
end != null
it.getClass().getName() != start.getClass().getName()
===========================================================================
org.apache.commons.lang.time.DateUtilsTest.assertWeekIterator(java.util.Iterator, java.util.Calendar, java.util.Calendar):::EXIT
org.apache.commons.lang.time.DateUtilsTest.MILLIS_TEST == orig(org.apache.commons.lang.time.DateUtilsTest.MILLIS_TEST)
org.apache.commons.lang.time.DateUtilsTest.class$org$apache$commons$lang$time$DateUtilsTest == orig(org.apache.commons.lang.time.DateUtilsTest.class$org$apache$commons$lang$time$DateUtilsTest)
org.apache.commons.lang.time.DateUtilsTest.class$org$apache$commons$lang$time$DateUtils == orig(org.apache.commons.lang.time.DateUtilsTest.class$org$apache$commons$lang$time$DateUtils)
org.apache.commons.lang.time.DateUtilsTest.class$org$apache$commons$lang$time$DateUtilsTest has only one value
org.apache.commons.lang.time.DateUtilsTest.class$org$apache$commons$lang$time$DateUtilsTest != null
===========================================================================
org.apache.commons.lang.time.DateUtilsTest.assertWeekIterator(java.util.Iterator, java.util.Date, java.util.Date):::ENTER
org.apache.commons.lang.time.DateUtilsTest.class$org$apache$commons$lang$time$DateUtilsTest has only one value
it.getClass().getName() == org.apache.commons.lang.time.DateUtils$DateIterator.class
===========================================================================
org.apache.commons.lang.time.DateUtilsTest.assertWeekIterator(java.util.Iterator, java.util.Date, java.util.Date):::EXIT
org.apache.commons.lang.time.DateUtilsTest.MILLIS_TEST == orig(org.apache.commons.lang.time.DateUtilsTest.MILLIS_TEST)
org.apache.commons.lang.time.DateUtilsTest.class$org$apache$commons$lang$time$DateUtilsTest == orig(org.apache.commons.lang.time.DateUtilsTest.class$org$apache$commons$lang$time$DateUtilsTest)
org.apache.commons.lang.time.DateUtilsTest.class$org$apache$commons$lang$time$DateUtils == orig(org.apache.commons.lang.time.DateUtilsTest.class$org$apache$commons$lang$time$DateUtils)
org.apache.commons.lang.time.DateUtilsTest.class$org$apache$commons$lang$time$DateUtilsTest has only one value
===========================================================================
org.apache.commons.lang.time.DateUtilsTest.class$(java.lang.String):::ENTER
org.apache.commons.lang.time.DateUtilsTest.class$org$apache$commons$lang$time$DateUtilsTest == null
x0 has only one value
x0.toString == "org.apache.commons.lang.time.DateUtilsTest"
===========================================================================
org.apache.commons.lang.time.DateUtilsTest.class$(java.lang.String):::EXIT
org.apache.commons.lang.time.DateUtilsTest.MILLIS_TEST == orig(org.apache.commons.lang.time.DateUtilsTest.MILLIS_TEST)
org.apache.commons.lang.time.DateUtilsTest.class$org$apache$commons$lang$time$DateUtilsTest == orig(org.apache.commons.lang.time.DateUtilsTest.class$org$apache$commons$lang$time$DateUtilsTest)
org.apache.commons.lang.time.DateUtilsTest.class$org$apache$commons$lang$time$DateUtils == orig(org.apache.commons.lang.time.DateUtilsTest.class$org$apache$commons$lang$time$DateUtils)
x0.toString == orig(x0.toString)
org.apache.commons.lang.time.DateUtilsTest.class$org$apache$commons$lang$time$DateUtilsTest == null
x0.toString == "org.apache.commons.lang.time.DateUtilsTest"
return has only one value
===========================================================================
org.apache.commons.lang.time.DateUtilsTest.setUp():::ENTER
this.dateParser == null
this.dateTimeParser == null
this.dateAmPm1 == null
this.dateAmPm2 == null
this.dateAmPm3 == null
this.dateAmPm4 == null
this.date0 == null
this.date1 == null
this.date2 == null
this.date3 == null
this.date4 == null
this.date5 == null
this.date6 == null
this.date7 == null
this.date8 == null
this.calAmPm1 == null
this.calAmPm2 == null
this.calAmPm3 == null
this.calAmPm4 == null
this.cal1 == null
this.cal2 == null
this.cal3 == null
this.cal4 == null
this.cal5 == null
this.cal6 == null
this.cal7 == null
this.cal8 == null
this.zone == null
this.defaultZone == null
===========================================================================
org.apache.commons.lang.time.DateUtilsTest.setUp():::EXIT
org.apache.commons.lang.time.DateUtilsTest.MILLIS_TEST == orig(org.apache.commons.lang.time.DateUtilsTest.MILLIS_TEST)
this.timeZoneDateParser == orig(this.timeZoneDateParser)
org.apache.commons.lang.time.DateUtilsTest.class$org$apache$commons$lang$time$DateUtilsTest == orig(org.apache.commons.lang.time.DateUtilsTest.class$org$apache$commons$lang$time$DateUtilsTest)
org.apache.commons.lang.time.DateUtilsTest.class$org$apache$commons$lang$time$DateUtils == orig(org.apache.commons.lang.time.DateUtilsTest.class$org$apache$commons$lang$time$DateUtils)
===========================================================================
org.apache.commons.lang.time.DateUtilsTest.suite():::ENTER
===========================================================================
org.apache.commons.lang.time.DateUtilsTest.suite():::EXIT
org.apache.commons.lang.time.DateUtilsTest.MILLIS_TEST == orig(org.apache.commons.lang.time.DateUtilsTest.MILLIS_TEST)
org.apache.commons.lang.time.DateUtilsTest.class$org$apache$commons$lang$time$DateUtils == orig(org.apache.commons.lang.time.DateUtilsTest.class$org$apache$commons$lang$time$DateUtils)
org.apache.commons.lang.time.DateUtilsTest.class$org$apache$commons$lang$time$DateUtilsTest has only one value
return.getClass().getName() == junit.framework.TestSuite.class
===========================================================================
org.apache.commons.lang.time.DateUtilsTest.tearDown():::ENTER
===========================================================================
org.apache.commons.lang.time.DateUtilsTest.tearDown():::EXIT
org.apache.commons.lang.time.DateUtilsTest.MILLIS_TEST == orig(org.apache.commons.lang.time.DateUtilsTest.MILLIS_TEST)
this.dateParser == orig(this.dateParser)
this.dateParser.getClass().getName() == orig(this.dateParser.getClass().getName())
this.dateParser.getClass().getName() == orig(this.dateTimeParser.getClass().getName())
this.dateTimeParser == orig(this.dateTimeParser)
this.timeZoneDateParser == orig(this.timeZoneDateParser)
this.dateAmPm1 == orig(this.dateAmPm1)
this.dateAmPm2 == orig(this.dateAmPm2)
this.dateAmPm3 == orig(this.dateAmPm3)
this.dateAmPm4 == orig(this.dateAmPm4)
this.date0 == orig(this.date0)
this.date1 == orig(this.date1)
this.date2 == orig(this.date2)
this.date3 == orig(this.date3)
this.date4 == orig(this.date4)
this.date5 == orig(this.date5)
this.date6 == orig(this.date6)
this.date7 == orig(this.date7)
this.date8 == orig(this.date8)
this.calAmPm1 == orig(this.calAmPm1)
this.calAmPm1.getClass().getName() == orig(this.calAmPm1.getClass().getName())
this.calAmPm1.getClass().getName() == orig(this.calAmPm2.getClass().getName())
this.calAmPm1.getClass().getName() == orig(this.calAmPm3.getClass().getName())
this.calAmPm1.getClass().getName() == orig(this.calAmPm4.getClass().getName())
this.calAmPm1.getClass().getName() == orig(this.cal1.getClass().getName())
this.calAmPm1.getClass().getName() == orig(this.cal2.getClass().getName())
this.calAmPm1.getClass().getName() == orig(this.cal3.getClass().getName())
this.calAmPm1.getClass().getName() == orig(this.cal4.getClass().getName())
this.calAmPm1.getClass().getName() == orig(this.cal5.getClass().getName())
this.calAmPm1.getClass().getName() == orig(this.cal6.getClass().getName())
this.calAmPm1.getClass().getName() == orig(this.cal7.getClass().getName())
this.calAmPm1.getClass().getName() == orig(this.cal8.getClass().getName())
this.calAmPm2 == orig(this.calAmPm2)
this.calAmPm3 == orig(this.calAmPm3)
this.calAmPm4 == orig(this.calAmPm4)
this.cal1 == orig(this.cal1)
this.cal2 == orig(this.cal2)
this.cal3 == orig(this.cal3)
this.cal4 == orig(this.cal4)
this.cal5 == orig(this.cal5)
this.cal6 == orig(this.cal6)
this.cal7 == orig(this.cal7)
this.cal8 == orig(this.cal8)
this.zone == orig(this.zone)
this.zone.getClass().getName() == orig(this.zone.getClass().getName())
this.zone.getClass().getName() == orig(this.defaultZone.getClass().getName())
this.defaultZone == orig(this.defaultZone)
org.apache.commons.lang.time.DateUtilsTest.class$org$apache$commons$lang$time$DateUtilsTest == orig(org.apache.commons.lang.time.DateUtilsTest.class$org$apache$commons$lang$time$DateUtilsTest)
org.apache.commons.lang.time.DateUtilsTest.class$org$apache$commons$lang$time$DateUtils == orig(org.apache.commons.lang.time.DateUtilsTest.class$org$apache$commons$lang$time$DateUtils)
===========================================================================
org.apache.commons.lang.time.DateUtilsTest.testMonthIterator():::ENTER
this has only one value
this.dateParser has only one value
this.dateTimeParser has only one value
this.dateAmPm1 has only one value
this.dateAmPm2 has only one value
this.dateAmPm3 has only one value
this.dateAmPm4 has only one value
this.date0 has only one value
this.date1 has only one value
this.date2 has only one value
this.date3 has only one value
this.date4 has only one value
this.date5 has only one value
this.date6 has only one value
this.date7 has only one value
this.date8 has only one value
this.calAmPm1 has only one value
this.calAmPm2 has only one value
this.calAmPm3 has only one value
this.calAmPm4 has only one value
this.cal1 has only one value
this.cal2 has only one value
this.cal3 has only one value
this.cal4 has only one value
this.cal5 has only one value
this.cal6 has only one value
this.cal7 has only one value
this.cal8 has only one value
this.zone has only one value
this.defaultZone has only one value
===========================================================================
org.apache.commons.lang.time.DateUtilsTest.testMonthIterator():::EXIT
org.apache.commons.lang.time.DateUtilsTest.MILLIS_TEST == orig(org.apache.commons.lang.time.DateUtilsTest.MILLIS_TEST)
this.dateParser == orig(this.dateParser)
this.dateParser.getClass().getName() == orig(this.dateParser.getClass().getName())
this.dateParser.getClass().getName() == orig(this.dateTimeParser.getClass().getName())
this.dateTimeParser == orig(this.dateTimeParser)
this.timeZoneDateParser == orig(this.timeZoneDateParser)
this.dateAmPm1 == orig(this.dateAmPm1)
this.dateAmPm2 == orig(this.dateAmPm2)
this.dateAmPm3 == orig(this.dateAmPm3)
this.dateAmPm4 == orig(this.dateAmPm4)
this.date0 == orig(this.date0)
this.date1 == orig(this.date1)
this.date2 == orig(this.date2)
this.date3 == orig(this.date3)
this.date4 == orig(this.date4)
this.date5 == orig(this.date5)
this.date6 == orig(this.date6)
this.date7 == orig(this.date7)
this.date8 == orig(this.date8)
this.calAmPm1 == orig(this.calAmPm1)
this.calAmPm1.getClass().getName() == orig(this.calAmPm1.getClass().getName())
this.calAmPm1.getClass().getName() == orig(this.calAmPm2.getClass().getName())
this.calAmPm1.getClass().getName() == orig(this.calAmPm3.getClass().getName())
this.calAmPm1.getClass().getName() == orig(this.calAmPm4.getClass().getName())
this.calAmPm1.getClass().getName() == orig(this.cal1.getClass().getName())
this.calAmPm1.getClass().getName() == orig(this.cal2.getClass().getName())
this.calAmPm1.getClass().getName() == orig(this.cal3.getClass().getName())
this.calAmPm1.getClass().getName() == orig(this.cal4.getClass().getName())
this.calAmPm1.getClass().getName() == orig(this.cal5.getClass().getName())
this.calAmPm1.getClass().getName() == orig(this.cal6.getClass().getName())
this.calAmPm1.getClass().getName() == orig(this.cal7.getClass().getName())
this.calAmPm1.getClass().getName() == orig(this.cal8.getClass().getName())
this.calAmPm2 == orig(this.calAmPm2)
this.calAmPm3 == orig(this.calAmPm3)
this.calAmPm4 == orig(this.calAmPm4)
this.cal1 == orig(this.cal1)
this.cal2 == orig(this.cal2)
this.cal3 == orig(this.cal3)
this.cal4 == orig(this.cal4)
this.cal5 == orig(this.cal5)
this.cal6 == orig(this.cal6)
this.cal7 == orig(this.cal7)
this.cal8 == orig(this.cal8)
this.zone == orig(this.zone)
this.zone.getClass().getName() == orig(this.zone.getClass().getName())
this.zone.getClass().getName() == orig(this.defaultZone.getClass().getName())
this.defaultZone == orig(this.defaultZone)
org.apache.commons.lang.time.DateUtilsTest.class$org$apache$commons$lang$time$DateUtilsTest == orig(org.apache.commons.lang.time.DateUtilsTest.class$org$apache$commons$lang$time$DateUtilsTest)
org.apache.commons.lang.time.DateUtilsTest.class$org$apache$commons$lang$time$DateUtils == orig(org.apache.commons.lang.time.DateUtilsTest.class$org$apache$commons$lang$time$DateUtils)
this.dateParser has only one value
this.dateTimeParser has only one value
this.dateAmPm1 has only one value
this.dateAmPm2 has only one value
this.dateAmPm3 has only one value
this.dateAmPm4 has only one value
this.date0 has only one value
this.date1 has only one value
this.date2 has only one value
this.date3 has only one value
this.date4 has only one value
this.date5 has only one value
this.date6 has only one value
this.date7 has only one value
this.date8 has only one value
this.calAmPm1 has only one value
this.calAmPm2 has only one value
this.calAmPm3 has only one value
this.calAmPm4 has only one value
this.cal1 has only one value
this.cal2 has only one value
this.cal3 has only one value
this.cal4 has only one value
this.cal5 has only one value
this.cal6 has only one value
this.cal7 has only one value
this.cal8 has only one value
this.zone has only one value
this.defaultZone has only one value
===========================================================================
org.apache.commons.lang.time.DateUtilsTest.testRound():::ENTER
this has only one value
this.dateParser has only one value
this.dateTimeParser has only one value
this.dateAmPm1 has only one value
this.dateAmPm2 has only one value
this.dateAmPm3 has only one value
this.dateAmPm4 has only one value
this.date0 has only one value
this.date1 has only one value
this.date2 has only one value
this.date3 has only one value
this.date4 has only one value
this.date5 has only one value
this.date6 has only one value
this.date7 has only one value
this.date8 has only one value
this.calAmPm1 has only one value
this.calAmPm2 has only one value
this.calAmPm3 has only one value
this.calAmPm4 has only one value
this.cal1 has only one value
this.cal2 has only one value
this.cal3 has only one value
this.cal4 has only one value
this.cal5 has only one value
this.cal6 has only one value
this.cal7 has only one value
this.cal8 has only one value
this.zone has only one value
this.defaultZone has only one value
===========================================================================
org.apache.commons.lang.time.DateUtilsTest.testRound():::EXIT
org.apache.commons.lang.time.DateUtilsTest.MILLIS_TEST == orig(org.apache.commons.lang.time.DateUtilsTest.MILLIS_TEST)
this.dateParser == orig(this.dateParser)
this.dateParser.getClass().getName() == orig(this.dateParser.getClass().getName())
this.dateParser.getClass().getName() == orig(this.dateTimeParser.getClass().getName())
this.dateTimeParser == orig(this.dateTimeParser)
this.timeZoneDateParser == orig(this.timeZoneDateParser)
this.dateAmPm1 == orig(this.dateAmPm1)
this.dateAmPm2 == orig(this.dateAmPm2)
this.dateAmPm3 == orig(this.dateAmPm3)
this.dateAmPm4 == orig(this.dateAmPm4)
this.date0 == orig(this.date0)
this.date1 == orig(this.date1)
this.date2 == orig(this.date2)
this.date3 == orig(this.date3)
this.date4 == orig(this.date4)
this.date5 == orig(this.date5)
this.date6 == orig(this.date6)
this.date7 == orig(this.date7)
this.date8 == orig(this.date8)
this.calAmPm1 == orig(this.calAmPm1)
this.calAmPm1.getClass().getName() == orig(this.calAmPm1.getClass().getName())
this.calAmPm1.getClass().getName() == orig(this.calAmPm2.getClass().getName())
this.calAmPm1.getClass().getName() == orig(this.calAmPm3.getClass().getName())
this.calAmPm1.getClass().getName() == orig(this.calAmPm4.getClass().getName())
this.calAmPm1.getClass().getName() == orig(this.cal1.getClass().getName())
this.calAmPm1.getClass().getName() == orig(this.cal2.getClass().getName())
this.calAmPm1.getClass().getName() == orig(this.cal3.getClass().getName())
this.calAmPm1.getClass().getName() == orig(this.cal4.getClass().getName())
this.calAmPm1.getClass().getName() == orig(this.cal5.getClass().getName())
this.calAmPm1.getClass().getName() == orig(this.cal6.getClass().getName())
this.calAmPm1.getClass().getName() == orig(this.cal7.getClass().getName())
this.calAmPm1.getClass().getName() == orig(this.cal8.getClass().getName())
this.calAmPm2 == orig(this.calAmPm2)
this.calAmPm3 == orig(this.calAmPm3)
this.calAmPm4 == orig(this.calAmPm4)
this.cal1 == orig(this.cal1)
this.cal2 == orig(this.cal2)
this.cal3 == orig(this.cal3)
this.cal4 == orig(this.cal4)
this.cal5 == orig(this.cal5)
this.cal6 == orig(this.cal6)
this.cal7 == orig(this.cal7)
this.cal8 == orig(this.cal8)
this.zone == orig(this.zone)
this.zone.getClass().getName() == orig(this.zone.getClass().getName())
this.zone.getClass().getName() == orig(this.defaultZone.getClass().getName())
this.defaultZone == orig(this.defaultZone)
org.apache.commons.lang.time.DateUtilsTest.class$org$apache$commons$lang$time$DateUtilsTest == orig(org.apache.commons.lang.time.DateUtilsTest.class$org$apache$commons$lang$time$DateUtilsTest)
org.apache.commons.lang.time.DateUtilsTest.class$org$apache$commons$lang$time$DateUtils == orig(org.apache.commons.lang.time.DateUtilsTest.class$org$apache$commons$lang$time$DateUtils)
this.dateParser has only one value
this.dateTimeParser has only one value
this.dateAmPm1 has only one value
this.dateAmPm2 has only one value
this.dateAmPm3 has only one value
this.dateAmPm4 has only one value
this.date0 has only one value
this.date1 has only one value
this.date2 has only one value
this.date3 has only one value
this.date4 has only one value
this.date5 has only one value
this.date6 has only one value
this.date7 has only one value
this.date8 has only one value
this.calAmPm1 has only one value
this.calAmPm2 has only one value
this.calAmPm3 has only one value
this.calAmPm4 has only one value
this.cal1 has only one value
this.cal2 has only one value
this.cal3 has only one value
this.cal4 has only one value
this.cal5 has only one value
this.cal6 has only one value
this.cal7 has only one value
this.cal8 has only one value
this.zone has only one value
this.defaultZone has only one value
===========================================================================
org.apache.commons.lang.time.DateUtilsTest.testTruncate():::ENTER
this has only one value
this.dateParser has only one value
this.dateTimeParser has only one value
this.dateAmPm1 has only one value
this.dateAmPm2 has only one value
this.dateAmPm3 has only one value
this.dateAmPm4 has only one value
this.date0 has only one value
this.date1 has only one value
this.date2 has only one value
this.date3 has only one value
this.date4 has only one value
this.date5 has only one value
this.date6 has only one value
this.date7 has only one value
this.date8 has only one value
this.calAmPm1 has only one value
this.calAmPm2 has only one value
this.calAmPm3 has only one value
this.calAmPm4 has only one value
this.cal1 has only one value
this.cal2 has only one value
this.cal3 has only one value
this.cal4 has only one value
this.cal5 has only one value
this.cal6 has only one value
this.cal7 has only one value
this.cal8 has only one value
this.zone has only one value
this.defaultZone has only one value
===========================================================================
org.apache.commons.lang.time.DateUtilsTest.testTruncate():::EXIT
org.apache.commons.lang.time.DateUtilsTest.MILLIS_TEST == orig(org.apache.commons.lang.time.DateUtilsTest.MILLIS_TEST)
this.dateParser == orig(this.dateParser)
this.dateParser.getClass().getName() == orig(this.dateParser.getClass().getName())
this.dateParser.getClass().getName() == orig(this.dateTimeParser.getClass().getName())
this.dateTimeParser == orig(this.dateTimeParser)
this.timeZoneDateParser == orig(this.timeZoneDateParser)
this.dateAmPm1 == orig(this.dateAmPm1)
this.dateAmPm2 == orig(this.dateAmPm2)
this.dateAmPm3 == orig(this.dateAmPm3)
this.dateAmPm4 == orig(this.dateAmPm4)
this.date0 == orig(this.date0)
this.date1 == orig(this.date1)
this.date2 == orig(this.date2)
this.date3 == orig(this.date3)
this.date4 == orig(this.date4)
this.date5 == orig(this.date5)
this.date6 == orig(this.date6)
this.date7 == orig(this.date7)
this.date8 == orig(this.date8)
this.calAmPm1 == orig(this.calAmPm1)
this.calAmPm1.getClass().getName() == orig(this.calAmPm1.getClass().getName())
this.calAmPm1.getClass().getName() == orig(this.calAmPm2.getClass().getName())
this.calAmPm1.getClass().getName() == orig(this.calAmPm3.getClass().getName())
this.calAmPm1.getClass().getName() == orig(this.calAmPm4.getClass().getName())
this.calAmPm1.getClass().getName() == orig(this.cal1.getClass().getName())
this.calAmPm1.getClass().getName() == orig(this.cal2.getClass().getName())
this.calAmPm1.getClass().getName() == orig(this.cal3.getClass().getName())
this.calAmPm1.getClass().getName() == orig(this.cal4.getClass().getName())
this.calAmPm1.getClass().getName() == orig(this.cal5.getClass().getName())
this.calAmPm1.getClass().getName() == orig(this.cal6.getClass().getName())
this.calAmPm1.getClass().getName() == orig(this.cal7.getClass().getName())
this.calAmPm1.getClass().getName() == orig(this.cal8.getClass().getName())
this.calAmPm2 == orig(this.calAmPm2)
this.calAmPm3 == orig(this.calAmPm3)
this.calAmPm4 == orig(this.calAmPm4)
this.cal1 == orig(this.cal1)
this.cal2 == orig(this.cal2)
this.cal3 == orig(this.cal3)
this.cal4 == orig(this.cal4)
this.cal5 == orig(this.cal5)
this.cal6 == orig(this.cal6)
this.cal7 == orig(this.cal7)
this.cal8 == orig(this.cal8)
this.zone == orig(this.zone)
this.zone.getClass().getName() == orig(this.zone.getClass().getName())
this.zone.getClass().getName() == orig(this.defaultZone.getClass().getName())
this.defaultZone == orig(this.defaultZone)
org.apache.commons.lang.time.DateUtilsTest.class$org$apache$commons$lang$time$DateUtilsTest == orig(org.apache.commons.lang.time.DateUtilsTest.class$org$apache$commons$lang$time$DateUtilsTest)
org.apache.commons.lang.time.DateUtilsTest.class$org$apache$commons$lang$time$DateUtils == orig(org.apache.commons.lang.time.DateUtilsTest.class$org$apache$commons$lang$time$DateUtils)
this.dateParser has only one value
this.dateTimeParser has only one value
this.dateAmPm1 has only one value
this.dateAmPm2 has only one value
this.dateAmPm3 has only one value
this.dateAmPm4 has only one value
this.date0 has only one value
this.date1 has only one value
this.date2 has only one value
this.date3 has only one value
this.date4 has only one value
this.date5 has only one value
this.date6 has only one value
this.date7 has only one value
this.date8 has only one value
this.calAmPm1 has only one value
this.calAmPm2 has only one value
this.calAmPm3 has only one value
this.calAmPm4 has only one value
this.cal1 has only one value
this.cal2 has only one value
this.cal3 has only one value
this.cal4 has only one value
this.cal5 has only one value
this.cal6 has only one value
this.cal7 has only one value
this.cal8 has only one value
this.zone has only one value
this.defaultZone has only one value
===========================================================================
org.apache.commons.lang.time.DateUtilsTest.testTruncateLang59():::ENTER
this has only one value
this.dateParser has only one value
this.dateTimeParser has only one value
this.dateAmPm1 has only one value
this.dateAmPm2 has only one value
this.dateAmPm3 has only one value
this.dateAmPm4 has only one value
this.date0 has only one value
this.date1 has only one value
this.date2 has only one value
this.date3 has only one value
this.date4 has only one value
this.date5 has only one value
this.date6 has only one value
this.date7 has only one value
this.date8 has only one value
this.calAmPm1 has only one value
this.calAmPm2 has only one value
this.calAmPm3 has only one value
this.calAmPm4 has only one value
this.cal1 has only one value
this.cal2 has only one value
this.cal3 has only one value
this.cal4 has only one value
this.cal5 has only one value
this.cal6 has only one value
this.cal7 has only one value
this.cal8 has only one value
this.zone has only one value
this.defaultZone has only one value
===========================================================================
org.apache.commons.lang.time.DateUtilsTest.testTruncateLang59():::EXIT1032
===========================================================================
org.apache.commons.lang.time.DateUtilsTest.testTruncateLang59():::EXIT
org.apache.commons.lang.time.DateUtilsTest.MILLIS_TEST == orig(org.apache.commons.lang.time.DateUtilsTest.MILLIS_TEST)
this.dateParser == orig(this.dateParser)
this.dateParser.getClass().getName() == orig(this.dateParser.getClass().getName())
this.dateParser.getClass().getName() == orig(this.dateTimeParser.getClass().getName())
this.dateTimeParser == orig(this.dateTimeParser)
this.timeZoneDateParser == orig(this.timeZoneDateParser)
this.dateAmPm1 == orig(this.dateAmPm1)
this.dateAmPm2 == orig(this.dateAmPm2)
this.dateAmPm3 == orig(this.dateAmPm3)
this.dateAmPm4 == orig(this.dateAmPm4)
this.date0 == orig(this.date0)
this.date1 == orig(this.date1)
this.date2 == orig(this.date2)
this.date3 == orig(this.date3)
this.date4 == orig(this.date4)
this.date5 == orig(this.date5)
this.date6 == orig(this.date6)
this.date7 == orig(this.date7)
this.date8 == orig(this.date8)
this.calAmPm1 == orig(this.calAmPm1)
this.calAmPm1.getClass().getName() == orig(this.calAmPm1.getClass().getName())
this.calAmPm1.getClass().getName() == orig(this.calAmPm2.getClass().getName())
this.calAmPm1.getClass().getName() == orig(this.calAmPm3.getClass().getName())
this.calAmPm1.getClass().getName() == orig(this.calAmPm4.getClass().getName())
this.calAmPm1.getClass().getName() == orig(this.cal1.getClass().getName())
this.calAmPm1.getClass().getName() == orig(this.cal2.getClass().getName())
this.calAmPm1.getClass().getName() == orig(this.cal3.getClass().getName())
this.calAmPm1.getClass().getName() == orig(this.cal4.getClass().getName())
this.calAmPm1.getClass().getName() == orig(this.cal5.getClass().getName())
this.calAmPm1.getClass().getName() == orig(this.cal6.getClass().getName())
this.calAmPm1.getClass().getName() == orig(this.cal7.getClass().getName())
this.calAmPm1.getClass().getName() == orig(this.cal8.getClass().getName())
this.calAmPm2 == orig(this.calAmPm2)
this.calAmPm3 == orig(this.calAmPm3)
this.calAmPm4 == orig(this.calAmPm4)
this.cal1 == orig(this.cal1)
this.cal2 == orig(this.cal2)
this.cal3 == orig(this.cal3)
this.cal4 == orig(this.cal4)
this.cal5 == orig(this.cal5)
this.cal6 == orig(this.cal6)
this.cal7 == orig(this.cal7)
this.cal8 == orig(this.cal8)
this.zone == orig(this.zone)
this.zone.getClass().getName() == orig(this.zone.getClass().getName())
this.zone.getClass().getName() == orig(this.defaultZone.getClass().getName())
this.defaultZone == orig(this.defaultZone)
org.apache.commons.lang.time.DateUtilsTest.class$org$apache$commons$lang$time$DateUtilsTest == orig(org.apache.commons.lang.time.DateUtilsTest.class$org$apache$commons$lang$time$DateUtilsTest)
org.apache.commons.lang.time.DateUtilsTest.class$org$apache$commons$lang$time$DateUtils == orig(org.apache.commons.lang.time.DateUtilsTest.class$org$apache$commons$lang$time$DateUtils)
this.dateParser has only one value
this.dateTimeParser has only one value
this.dateAmPm1 has only one value
this.dateAmPm2 has only one value
this.dateAmPm3 has only one value
this.dateAmPm4 has only one value
this.date0 has only one value
this.date1 has only one value
this.date2 has only one value
this.date3 has only one value
this.date4 has only one value
this.date5 has only one value
this.date6 has only one value
this.date7 has only one value
this.date8 has only one value
this.calAmPm1 has only one value
this.calAmPm2 has only one value
this.calAmPm3 has only one value
this.calAmPm4 has only one value
this.cal1 has only one value
this.cal2 has only one value
this.cal3 has only one value
this.cal4 has only one value
this.cal5 has only one value
this.cal6 has only one value
this.cal7 has only one value
this.cal8 has only one value
this.zone has only one value
this.defaultZone has only one value
===========================================================================
org.apache.commons.lang.time.DateUtilsTest.testWeekIterator():::ENTER
this has only one value
this.dateParser has only one value
this.dateTimeParser has only one value
this.dateAmPm1 has only one value
this.dateAmPm2 has only one value
this.dateAmPm3 has only one value
this.dateAmPm4 has only one value
this.date0 has only one value
this.date1 has only one value
this.date2 has only one value
this.date3 has only one value
this.date4 has only one value
this.date5 has only one value
this.date6 has only one value
this.date7 has only one value
this.date8 has only one value
this.calAmPm1 has only one value
this.calAmPm2 has only one value
this.calAmPm3 has only one value
this.calAmPm4 has only one value
this.cal1 has only one value
this.cal2 has only one value
this.cal3 has only one value
this.cal4 has only one value
this.cal5 has only one value
this.cal6 has only one value
this.cal7 has only one value
this.cal8 has only one value
this.zone has only one value
this.defaultZone has only one value
===========================================================================
org.apache.commons.lang.time.DateUtilsTest.testWeekIterator():::EXIT
org.apache.commons.lang.time.DateUtilsTest.MILLIS_TEST == orig(org.apache.commons.lang.time.DateUtilsTest.MILLIS_TEST)
this.dateParser == orig(this.dateParser)
this.dateParser.getClass().getName() == orig(this.dateParser.getClass().getName())
this.dateParser.getClass().getName() == orig(this.dateTimeParser.getClass().getName())
this.dateTimeParser == orig(this.dateTimeParser)
this.timeZoneDateParser == orig(this.timeZoneDateParser)
this.dateAmPm1 == orig(this.dateAmPm1)
this.dateAmPm2 == orig(this.dateAmPm2)
this.dateAmPm3 == orig(this.dateAmPm3)
this.dateAmPm4 == orig(this.dateAmPm4)
this.date0 == orig(this.date0)
this.date1 == orig(this.date1)
this.date2 == orig(this.date2)
this.date3 == orig(this.date3)
this.date4 == orig(this.date4)
this.date5 == orig(this.date5)
this.date6 == orig(this.date6)
this.date7 == orig(this.date7)
this.date8 == orig(this.date8)
this.calAmPm1 == orig(this.calAmPm1)
this.calAmPm1.getClass().getName() == orig(this.calAmPm1.getClass().getName())
this.calAmPm1.getClass().getName() == orig(this.calAmPm2.getClass().getName())
this.calAmPm1.getClass().getName() == orig(this.calAmPm3.getClass().getName())
this.calAmPm1.getClass().getName() == orig(this.calAmPm4.getClass().getName())
this.calAmPm1.getClass().getName() == orig(this.cal1.getClass().getName())
this.calAmPm1.getClass().getName() == orig(this.cal2.getClass().getName())
this.calAmPm1.getClass().getName() == orig(this.cal3.getClass().getName())
this.calAmPm1.getClass().getName() == orig(this.cal4.getClass().getName())
this.calAmPm1.getClass().getName() == orig(this.cal5.getClass().getName())
this.calAmPm1.getClass().getName() == orig(this.cal6.getClass().getName())
this.calAmPm1.getClass().getName() == orig(this.cal7.getClass().getName())
this.calAmPm1.getClass().getName() == orig(this.cal8.getClass().getName())
this.calAmPm2 == orig(this.calAmPm2)
this.calAmPm3 == orig(this.calAmPm3)
this.calAmPm4 == orig(this.calAmPm4)
this.cal1 == orig(this.cal1)
this.cal2 == orig(this.cal2)
this.cal3 == orig(this.cal3)
this.cal4 == orig(this.cal4)
this.cal5 == orig(this.cal5)
this.cal6 == orig(this.cal6)
this.cal7 == orig(this.cal7)
this.cal8 == orig(this.cal8)
this.zone == orig(this.zone)
this.zone.getClass().getName() == orig(this.zone.getClass().getName())
this.zone.getClass().getName() == orig(this.defaultZone.getClass().getName())
this.defaultZone == orig(this.defaultZone)
org.apache.commons.lang.time.DateUtilsTest.class$org$apache$commons$lang$time$DateUtilsTest == orig(org.apache.commons.lang.time.DateUtilsTest.class$org$apache$commons$lang$time$DateUtilsTest)
org.apache.commons.lang.time.DateUtilsTest.class$org$apache$commons$lang$time$DateUtils == orig(org.apache.commons.lang.time.DateUtilsTest.class$org$apache$commons$lang$time$DateUtils)
this.dateParser has only one value
this.dateTimeParser has only one value
this.dateAmPm1 has only one value
this.dateAmPm2 has only one value
this.dateAmPm3 has only one value
this.dateAmPm4 has only one value
this.date0 has only one value
this.date1 has only one value
this.date2 has only one value
this.date3 has only one value
this.date4 has only one value
this.date5 has only one value
this.date6 has only one value
this.date7 has only one value
this.date8 has only one value
this.calAmPm1 has only one value
this.calAmPm2 has only one value
this.calAmPm3 has only one value
this.calAmPm4 has only one value
this.cal1 has only one value
this.cal2 has only one value
this.cal3 has only one value
this.cal4 has only one value
this.cal5 has only one value
this.cal6 has only one value
this.cal7 has only one value
this.cal8 has only one value
this.zone has only one value
this.defaultZone has only one value
