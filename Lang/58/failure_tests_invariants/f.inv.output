===========================================================================
org.apache.commons.lang.StringUtils:::CLASS
org.apache.commons.lang.StringUtils.EMPTY has only one value
org.apache.commons.lang.StringUtils.EMPTY != null
org.apache.commons.lang.StringUtils.EMPTY.toString == ""
===========================================================================
org.apache.commons.lang.StringUtils.isBlank(java.lang.String):::ENTER
str.toString one of { "-1l", "01l", "1l" }
===========================================================================
org.apache.commons.lang.StringUtils.isBlank(java.lang.String):::EXIT228
===========================================================================
org.apache.commons.lang.StringUtils.isBlank(java.lang.String):::EXIT228;condition="not(return == true)"
===========================================================================
org.apache.commons.lang.StringUtils.isBlank(java.lang.String):::EXIT
org.apache.commons.lang.StringUtils.EMPTY == orig(org.apache.commons.lang.StringUtils.EMPTY)
org.apache.commons.lang.StringUtils.EMPTY.toString == orig(org.apache.commons.lang.StringUtils.EMPTY.toString)
str.toString == orig(str.toString)
str.toString one of { "-1l", "01l", "1l" }
return == false
===========================================================================
org.apache.commons.lang.StringUtils.isBlank(java.lang.String):::EXIT;condition="not(return == true)"
===========================================================================
org.apache.commons.lang.StringUtils.isEmpty(java.lang.String):::ENTER
str.toString one of { "01", "1" }
===========================================================================
org.apache.commons.lang.StringUtils.isEmpty(java.lang.String):::EXIT
org.apache.commons.lang.StringUtils.EMPTY == orig(org.apache.commons.lang.StringUtils.EMPTY)
org.apache.commons.lang.StringUtils.EMPTY.toString == orig(org.apache.commons.lang.StringUtils.EMPTY.toString)
str.toString == orig(str.toString)
str.toString one of { "01", "1" }
return == false
===========================================================================
org.apache.commons.lang.StringUtils.isEmpty(java.lang.String):::EXIT;condition="not(return == true)"
===========================================================================
org.apache.commons.lang.math.NumberUtilsTest:::CLASS
org.apache.commons.lang.math.NumberUtilsTest.class$org$apache$commons$lang$math$NumberUtils == null
===========================================================================
org.apache.commons.lang.math.NumberUtilsTest:::OBJECT
org.apache.commons.lang.math.NumberUtilsTest.class$org$apache$commons$lang$math$NumberUtilsTest has only one value
org.apache.commons.lang.math.NumberUtilsTest.class$org$apache$commons$lang$math$NumberUtilsTest != null
===========================================================================
org.apache.commons.lang.math.NumberUtilsTest.NumberUtilsTest(java.lang.String):::ENTER
name != null
===========================================================================
org.apache.commons.lang.math.NumberUtilsTest.NumberUtilsTest(java.lang.String):::EXIT
name.toString == orig(name.toString)
===========================================================================
org.apache.commons.lang.math.NumberUtilsTest.class$(java.lang.String):::ENTER
org.apache.commons.lang.math.NumberUtilsTest.class$org$apache$commons$lang$math$NumberUtilsTest == null
x0 has only one value
x0.toString == "org.apache.commons.lang.math.NumberUtilsTest"
===========================================================================
org.apache.commons.lang.math.NumberUtilsTest.class$(java.lang.String):::EXIT
org.apache.commons.lang.math.NumberUtilsTest.class$org$apache$commons$lang$math$NumberUtilsTest == orig(org.apache.commons.lang.math.NumberUtilsTest.class$org$apache$commons$lang$math$NumberUtilsTest)
org.apache.commons.lang.math.NumberUtilsTest.class$org$apache$commons$lang$math$NumberUtils == orig(org.apache.commons.lang.math.NumberUtilsTest.class$org$apache$commons$lang$math$NumberUtils)
x0.toString == orig(x0.toString)
org.apache.commons.lang.math.NumberUtilsTest.class$org$apache$commons$lang$math$NumberUtilsTest == null
x0.toString == "org.apache.commons.lang.math.NumberUtilsTest"
return has only one value
===========================================================================
org.apache.commons.lang.math.NumberUtilsTest.suite():::ENTER
org.apache.commons.lang.math.NumberUtilsTest.class$org$apache$commons$lang$math$NumberUtilsTest == null
===========================================================================
org.apache.commons.lang.math.NumberUtilsTest.suite():::EXIT
org.apache.commons.lang.math.NumberUtilsTest.class$org$apache$commons$lang$math$NumberUtils == orig(org.apache.commons.lang.math.NumberUtilsTest.class$org$apache$commons$lang$math$NumberUtils)
org.apache.commons.lang.math.NumberUtilsTest.class$org$apache$commons$lang$math$NumberUtilsTest has only one value
return has only one value
return.getClass().getName() == junit.framework.TestSuite.class
===========================================================================
org.apache.commons.lang.math.NumberUtilsTest.testLang300():::ENTER
this has only one value
===========================================================================
org.apache.commons.lang.math.NumberUtilsTest.testLang300():::EXIT
org.apache.commons.lang.math.NumberUtilsTest.class$org$apache$commons$lang$math$NumberUtilsTest == orig(org.apache.commons.lang.math.NumberUtilsTest.class$org$apache$commons$lang$math$NumberUtilsTest)
org.apache.commons.lang.math.NumberUtilsTest.class$org$apache$commons$lang$math$NumberUtils == orig(org.apache.commons.lang.math.NumberUtilsTest.class$org$apache$commons$lang$math$NumberUtils)
