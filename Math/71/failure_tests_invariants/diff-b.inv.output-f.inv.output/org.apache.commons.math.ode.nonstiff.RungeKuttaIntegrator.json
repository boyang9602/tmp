{"name": "org.apache.commons.math.ode.nonstiff.RungeKuttaIntegrator", "children": [{"name": "integrate(org.apache.commons.math.ode.FirstOrderDifferentialEquations, double, double[], double, double[])", "children": [{"name": "ENTER", "children": [{"name": "b.inv.output", "children": [{"name": "this.equations == null"}, {"name": "this.evaluations == 0"}, {"name": "y[] elements == 0.0"}, {"name": "y[] == [0.0, 0.0, 0.0]"}]}, {"name": "f.inv.output", "children": [{"name": "this.evaluations one of { 0, 16 }"}, {"name": "y[] elements >= 0.0"}, {"name": "y[] one of { [0.0, 0.0, 0.0], [1.0060180351665424, 2.001200359895475, 3.000180005373642] }"}, {"name": "this.prototype.finalized == false"}]}]}, {"name": "EXIT", "children": [{"name": "b.inv.output", "children": [{"name": "y[] == [1.012072287973149, 2.002401440399531, 3.000360021574396]"}, {"name": "this.prototype.finalized == orig(this.prototype.finalized)"}, {"name": "this.evaluations == 16"}, {"name": "y[] elements one of { 1.012072287973149, 2.002401440399531, 3.000360021574396 }"}, {"name": "return == 1.878250439999994E9"}]}, {"name": "f.inv.output", "children": [{"name": "this.equations.getClass().getName() == orig(this.equations.getClass().getName())"}, {"name": "return == 1.878250379999994E9"}, {"name": "this.evaluations one of { 16, 28 }"}, {"name": "y[] one of { [1.0060180351665424, 2.001200359895475, 3.000180005373642], [1.0181629754914256, 2.0036032417681273, 3.0005400485764473] }"}]}]}]}, {"name": "RungeKuttaIntegrator(java.lang.String, double[], double[][], double[], org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator, double)", "children": [{"name": "ENTER", "children": [{"name": "b.inv.output", "children": []}, {"name": "f.inv.output", "children": []}]}, {"name": "EXIT", "children": [{"name": "b.inv.output", "children": []}, {"name": "f.inv.output", "children": [{"name": "this.eventsHandlersManager.states[].getClass().getName() == []"}, {"name": "this.eventsHandlersManager.states[] == []"}, {"name": "this.prototype.finalized == false"}]}]}]}]}
