{"org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator":[{"Iterator(org.apache.commons.math.util.OpenIntToDoubleHashMap)":[{"ENTER":[{"b.inv.output":{"invs":["org.apache.commons.math.util.OpenIntToDoubleHashMap.this has only one value","org.apache.commons.math.util.OpenIntToDoubleHashMap.this.keys has only one value","org.apache.commons.math.util.OpenIntToDoubleHashMap.this.values has only one value","org.apache.commons.math.util.OpenIntToDoubleHashMap.this.states has only one value"]}},{"Patch43.inv.output":{"invs":[]}}]},{"EXIT":[{"b.inv.output":{"invs":["org.apache.commons.math.util.OpenIntToDoubleHashMap.this.states[] == [1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]","org.apache.commons.math.util.OpenIntToDoubleHashMap.this.count == 2","org.apache.commons.math.util.OpenIntToDoubleHashMap.this.states[] elements one of { 0, 1 }","org.apache.commons.math.util.OpenIntToDoubleHashMap.this.size == 2"]}},{"Patch43.inv.output":{"invs":["org.apache.commons.math.util.OpenIntToDoubleHashMap.this.values[] elements one of { 0.0, 1.0, 2.0 }"]}}]}]},{"hasNext()":[{"ENTER":[{"b.inv.output":{"invs":["this.next one of { 0, 2 }"]}},{"Patch43.inv.output":{"invs":["this.next one of { -2, 0, 2 }"]}}]},{"EXIT":[{"b.inv.output":{"invs":["this.next one of { 0, 2 }","return == true"]}},{"Patch43.inv.output":{"invs":["(this.current == 2)  <==>  (return == false)","(this.current one of { -1, 0 })  ==>  (org.apache.commons.math.util.OpenIntToDoubleHashMap.this.values[] one of { [1.0, 0.0, 2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [Infinity, 0.0, 2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0] })","(this.current one of { -1, 0 })  <==>  (this.next one of { 0, 2 })","(this.current one of { -1, 0 })  <==>  (return == true)","this.next one of { -2, 0, 2 }","(this.current == 2)  <==>  (this.next == -2)","(this.current == 2)  ==>  (org.apache.commons.math.util.OpenIntToDoubleHashMap.this.values[] one of { [1.0, 0.0, 2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [Infinity, 0.0, Infinity, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0] })"]}}]},{"EXIT":[{"b.inv.output":{"invs":[]}},{"Patch43.inv.output":{"invs":["(this.current == 2)  <==>  (return == false)","(this.current one of { -1, 0 })  ==>  (org.apache.commons.math.util.OpenIntToDoubleHashMap.this.values[] one of { [1.0, 0.0, 2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [Infinity, 0.0, 2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0] })","(this.current one of { -1, 0 })  <==>  (this.next one of { 0, 2 })","(this.current one of { -1, 0 })  <==>  (return == true)","this.next one of { -2, 0, 2 }","(this.current == 2)  <==>  (this.next == -2)","(this.current == 2)  ==>  (org.apache.commons.math.util.OpenIntToDoubleHashMap.this.values[] one of { [1.0, 0.0, 2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [Infinity, 0.0, Infinity, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0] })"]}}]}]},{"key()":[{"ENTER":[{"b.inv.output":{"invs":["org.apache.commons.math.util.OpenIntToDoubleHashMap.this.states[] == [1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]","org.apache.commons.math.util.OpenIntToDoubleHashMap.this.values[] == [1.0, 0.0, 2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]","org.apache.commons.math.util.OpenIntToDoubleHashMap.this.states[] elements one of { 0, 1 }","this.current == 0","this.next == 2","org.apache.commons.math.util.OpenIntToDoubleHashMap.this.size == 2","org.apache.commons.math.util.OpenIntToDoubleHashMap.this.count == 2"]}},{"Patch43.inv.output":{"invs":["org.apache.commons.math.util.OpenIntToDoubleHashMap.this.values[] one of { [1.0, 0.0, 2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [Infinity, 0.0, 2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0] }","this.next one of { -2, 2 }","this.current one of { 0, 2 }"]}}]},{"EXIT":[{"b.inv.output":{"invs":["org.apache.commons.math.util.OpenIntToDoubleHashMap.this.states[] == [1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]","org.apache.commons.math.util.OpenIntToDoubleHashMap.this.values[] == [1.0, 0.0, 2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]","this.current == 0","this.next == 2","org.apache.commons.math.util.OpenIntToDoubleHashMap.this.count == 2","org.apache.commons.math.util.OpenIntToDoubleHashMap.this.states[] elements one of { 0, 1 }","return == 0","org.apache.commons.math.util.OpenIntToDoubleHashMap.this.size == 2"]}},{"Patch43.inv.output":{"invs":["org.apache.commons.math.util.OpenIntToDoubleHashMap.this.values[] one of { [1.0, 0.0, 2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [Infinity, 0.0, 2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0] }","this.next one of { -2, 2 }","this.current one of { 0, 2 }","return one of { 0, 2 }"]}}]}]},{"advance()":[{"ENTER":[{"b.inv.output":{"invs":["org.apache.commons.math.util.OpenIntToDoubleHashMap.this.states[] == [1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]","org.apache.commons.math.util.OpenIntToDoubleHashMap.this.values[] == [1.0, 0.0, 2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]","org.apache.commons.math.util.OpenIntToDoubleHashMap.this.states[] elements one of { 0, 1 }","this.next one of { -1, 0 }","org.apache.commons.math.util.OpenIntToDoubleHashMap.this.size == 2","org.apache.commons.math.util.OpenIntToDoubleHashMap.this.count == 2"]}},{"Patch43.inv.output":{"invs":["org.apache.commons.math.util.OpenIntToDoubleHashMap.this.values[] one of { [1.0, 0.0, 2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [Infinity, 0.0, 2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0] }","this.next one of { -1, 0, 2 }","this.current one of { -1, 0 }"]}}]},{"EXIT":[{"b.inv.output":{"invs":["org.apache.commons.math.util.OpenIntToDoubleHashMap.this.states[] == [1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]","org.apache.commons.math.util.OpenIntToDoubleHashMap.this.values[] == [1.0, 0.0, 2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]","org.apache.commons.math.util.OpenIntToDoubleHashMap.this.count == 2","this.next one of { 0, 2 }","org.apache.commons.math.util.OpenIntToDoubleHashMap.this.states[] elements one of { 0, 1 }","org.apache.commons.math.util.OpenIntToDoubleHashMap.this.size == 2"]}},{"Patch43.inv.output":{"invs":["org.apache.commons.math.util.OpenIntToDoubleHashMap.this.values[] one of { [1.0, 0.0, 2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [Infinity, 0.0, 2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0] }","this.next != orig(this.next)","this.current != orig(this.current)","this.next one of { -2, 0, 2 }"]}}]}]},{"value()":[{"ENTER":[{"b.inv.output":{"invs":["org.apache.commons.math.util.OpenIntToDoubleHashMap.this.states[] == [1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]","org.apache.commons.math.util.OpenIntToDoubleHashMap.this.values[] == [1.0, 0.0, 2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]","org.apache.commons.math.util.OpenIntToDoubleHashMap.this.states[] elements one of { 0, 1 }","this.current == 0","this.next == 2","org.apache.commons.math.util.OpenIntToDoubleHashMap.this.size == 2","org.apache.commons.math.util.OpenIntToDoubleHashMap.this.count == 2"]}},{"Patch43.inv.output":{"invs":["org.apache.commons.math.util.OpenIntToDoubleHashMap.this.values[] one of { [1.0, 0.0, 2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [Infinity, 0.0, 2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0] }","this.next one of { -2, 2 }","this.current one of { 0, 2 }"]}}]},{"EXIT":[{"b.inv.output":{"invs":["org.apache.commons.math.util.OpenIntToDoubleHashMap.this.states[] == [1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]","org.apache.commons.math.util.OpenIntToDoubleHashMap.this.values[] == [1.0, 0.0, 2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]","this.current == 0","return == 1.0","this.next == 2","org.apache.commons.math.util.OpenIntToDoubleHashMap.this.count == 2","org.apache.commons.math.util.OpenIntToDoubleHashMap.this.states[] elements one of { 0, 1 }","org.apache.commons.math.util.OpenIntToDoubleHashMap.this.size == 2"]}},{"Patch43.inv.output":{"invs":["org.apache.commons.math.util.OpenIntToDoubleHashMap.this.values[] one of { [1.0, 0.0, 2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [Infinity, 0.0, 2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0] }","return one of { 1.0, 2.0 }","this.next one of { -2, 2 }","this.current one of { 0, 2 }"]}}]}]}]}