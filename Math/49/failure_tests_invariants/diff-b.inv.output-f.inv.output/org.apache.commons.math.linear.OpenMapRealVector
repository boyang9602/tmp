{"org.apache.commons.math.linear.OpenMapRealVector":[{"setEntry(int, double)":[{"ENTER":[{"b.inv.output":{"invs":["this.entries.count one of { 0, 1, 2 }","this.entries.states[] elements one of { 0, 1 }"]}},{"f.inv.output":{"invs":[]}}]},{"EXIT":[{"b.inv.output":{"invs":["this.entries.keys[] >= orig(this.entries.keys[]) (elementwise)"]}},{"f.inv.output":{"invs":[]}}]}]},{"getEntry(int)":[{"ENTER":[{"b.inv.output":{"invs":["index == 0"]}},{"f.inv.output":{"invs":["index one of { 0, 2 }"]}}]},{"EXIT":[{"b.inv.output":{"invs":[]}},{"f.inv.output":{"invs":[]}}]}]},{"OpenMapRealVector(org.apache.commons.math.linear.OpenMapRealVector)":[{"ENTER":[{"b.inv.output":{"invs":[]}},{"f.inv.output":{"invs":[]}}]},{"EXIT":[{"b.inv.output":{"invs":["this.entries.states has only one value","this.entries has only one value","this.entries.values has only one value","this.entries.keys has only one value"]}},{"f.inv.output":{"invs":[]}}]}]},{"isDefaultValue(double)":[{"ENTER":[{"b.inv.output":{"invs":["this.entries.count one of { 0, 1, 2 }","this.entries.states[] elements one of { 0, 1 }"]}},{"f.inv.output":{"invs":[]}}]},{"EXIT":[{"b.inv.output":{"invs":["(return == false)  ==>  (this.entries.size one of { 0, 1 })","(return == true)  ==>  (this.entries.size one of { 0, 1, 2 })","(return == false)  ==>  (this.entries.values[] elements one of { 0.0, 1.0 })","(return == false)  <==>  (orig(value) one of { 1.0, 2.0, 3.0 })","(return == true)  ==>  (this.entries.count one of { 0, 1, 2 })","(return == false)  ==>  (this.entries.states[] one of { [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })","this.entries.states[] elements one of { 0, 1 }","(return == false)  ==>  (this.entries.count one of { 0, 1 })","this.entries.count one of { 0, 1, 2 }","(return == false)  ==>  (this.entries.keys[] elements == 0)","(return == false)  ==>  (this.entries.values[] one of { [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0] })","(return == false)  ==>  (this.entries.keys[] == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])"]}},{"f.inv.output":{"invs":["(return == true)  ==>  (this.entries.states[] elements one of { 0, 1, 2 })","(return == false)  ==>  (this.entries.keys[] one of { [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })","(return == false)  ==>  (this.entries.keys[] elements one of { 0, 2 })","(return == false)  ==>  (this.entries.states[] one of { [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })","(return == false)  ==>  (this.entries.count one of { 0, 1, 2 })","(return == false)  ==>  (this.entries.states[] elements one of { 0, 1 })"]}}]},{"EXIT":[{"b.inv.output":{"invs":[]}},{"f.inv.output":{"invs":["(return == true)  ==>  (this.entries.states[] elements one of { 0, 1, 2 })","(return == false)  ==>  (this.entries.keys[] one of { [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })","(return == false)  ==>  (this.entries.keys[] elements one of { 0, 2 })","(return == false)  ==>  (this.entries.states[] one of { [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })","(return == false)  ==>  (this.entries.count one of { 0, 1, 2 })","(return == false)  ==>  (this.entries.states[] elements one of { 0, 1 })"]}}]},{"EXIT":[{"b.inv.output":{"invs":["this.entries.values[] elements one of { 0.0, 1.0 }","this.entries.keys[] == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]","this.entries.keys[] elements == 0","this.entries.size one of { 0, 1 }","this.entries.values[] one of { [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0] }","this.entries.count one of { 0, 1 }","this.entries.states[] one of { [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }","orig(value) one of { 1.0, 2.0, 3.0 }"]}},{"f.inv.output":{"invs":["(return == true)  ==>  (this.entries.states[] elements one of { 0, 1, 2 })","(return == false)  ==>  (this.entries.keys[] one of { [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })","(return == false)  ==>  (this.entries.keys[] elements one of { 0, 2 })","(return == false)  ==>  (this.entries.states[] one of { [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })","(return == false)  ==>  (this.entries.count one of { 0, 1, 2 })","(return == false)  ==>  (this.entries.states[] elements one of { 0, 1 })"]}}]}]},{"getDimension()":[{"ENTER":[{"b.inv.output":{"invs":["this.entries.count one of { 0, 1, 2 }","this.entries.states[] elements one of { 0, 1 }"]}},{"f.inv.output":{"invs":[]}}]},{"EXIT":[{"b.inv.output":{"invs":["this.entries.states[] elements one of { 0, 1 }","this.entries.count one of { 0, 1, 2 }"]}},{"f.inv.output":{"invs":[]}}]}]}]}