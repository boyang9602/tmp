===========================================================================
org.apache.commons.math3.exception.MathIllegalArgumentException:::CLASS
===========================================================================
org.apache.commons.math3.exception.MathIllegalArgumentException:::OBJECT
this.context.msgPatterns[] contains no nulls and has only one value, of length 1
this.context.msgPatterns[] elements has only one value
this.context.msgPatterns[].getClass().getName() == [org.apache.commons.math3.exception.util.LocalizedFormats]
this.context.msgPatterns[].getClass().getName() elements == org.apache.commons.math3.exception.util.LocalizedFormats.class
this.context.msgPatterns.getClass().getName() == java.util.ArrayList.class
this.context.msgArguments[].getClass().getName() == [java.lang.Object[]]
this.context.msgArguments[].getClass().getName() elements == java.lang.Object[].class
this.context.msgArguments.getClass().getName() == java.util.ArrayList.class
this.context.context.getClass().getName() == java.util.HashMap.class
size(this.context.msgPatterns[]) == 1
size(this.context.msgArguments[]) == 1
===========================================================================
org.apache.commons.math3.exception.MathIllegalArgumentException.MathIllegalArgumentException(org.apache.commons.math3.exception.util.Localizable, java.lang.Object[]):::ENTER
pattern has only one value
pattern.getClass().getName() == org.apache.commons.math3.exception.util.LocalizedFormats.class
args.getClass().getName() == java.lang.Object[].class
size(args[]) == 2
===========================================================================
org.apache.commons.math3.exception.MathIllegalArgumentException.MathIllegalArgumentException(org.apache.commons.math3.exception.util.Localizable, java.lang.Object[]):::EXIT
args[] == orig(args[])
===========================================================================
org.apache.commons.math3.exception.MathIllegalNumberException:::CLASS
===========================================================================
org.apache.commons.math3.exception.MathIllegalNumberException:::OBJECT
this.argument.getClass().getName() == java.lang.Double.class
this.context.msgPatterns[] contains no nulls and has only one value, of length 1
this.context.msgPatterns[] elements has only one value
this.context.msgPatterns[].getClass().getName() == [org.apache.commons.math3.exception.util.LocalizedFormats]
this.context.msgPatterns[].getClass().getName() elements == org.apache.commons.math3.exception.util.LocalizedFormats.class
this.context.msgPatterns.getClass().getName() == java.util.ArrayList.class
this.context.msgArguments[].getClass().getName() == [java.lang.Object[]]
this.context.msgArguments[].getClass().getName() elements == java.lang.Object[].class
this.context.msgArguments.getClass().getName() == java.util.ArrayList.class
this.context.context.getClass().getName() == java.util.HashMap.class
size(this.context.msgPatterns[]) == 1
size(this.context.msgArguments[]) == 1
===========================================================================
org.apache.commons.math3.exception.MathIllegalNumberException.MathIllegalNumberException(org.apache.commons.math3.exception.util.Localizable, java.lang.Number, java.lang.Object[]):::ENTER
pattern has only one value
pattern.getClass().getName() == org.apache.commons.math3.exception.util.LocalizedFormats.class
wrong.getClass().getName() == java.lang.Double.class
arguments.getClass().getName() == java.lang.Object[].class
arguments[] contains no nulls and has only one value, of length 2
size(arguments[]) == 2
===========================================================================
org.apache.commons.math3.exception.MathIllegalNumberException.MathIllegalNumberException(org.apache.commons.math3.exception.util.Localizable, java.lang.Number, java.lang.Object[]):::EXIT
arguments[] == orig(arguments[])
arguments[] contains no nulls and has only one value, of length 2
===========================================================================
org.apache.commons.math3.exception.OutOfRangeException:::CLASS
===========================================================================
org.apache.commons.math3.exception.OutOfRangeException:::OBJECT
this.lo has only one value
this.lo.getClass().getName() == java.lang.Integer.class
this.hi has only one value
this.hi.getClass().getName() == java.lang.Integer.class
this.argument.getClass().getName() == java.lang.Double.class
this.context.msgPatterns[] contains no nulls and has only one value, of length 1
this.context.msgPatterns[] elements has only one value
this.context.msgPatterns[].getClass().getName() == [org.apache.commons.math3.exception.util.LocalizedFormats]
this.context.msgPatterns[].getClass().getName() elements == org.apache.commons.math3.exception.util.LocalizedFormats.class
this.context.msgPatterns.getClass().getName() == java.util.ArrayList.class
this.context.msgArguments[].getClass().getName() == [java.lang.Object[]]
this.context.msgArguments[].getClass().getName() elements == java.lang.Object[].class
this.context.msgArguments.getClass().getName() == java.util.ArrayList.class
this.context.context.getClass().getName() == java.util.HashMap.class
size(this.context.msgPatterns[]) == 1
size(this.context.msgArguments[]) == 1
===========================================================================
org.apache.commons.math3.exception.OutOfRangeException.OutOfRangeException(org.apache.commons.math3.exception.util.Localizable, java.lang.Number, java.lang.Number, java.lang.Number):::ENTER
specific has only one value
specific.getClass().getName() == org.apache.commons.math3.exception.util.LocalizedFormats.class
wrong.getClass().getName() == java.lang.Double.class
lo has only one value
lo.getClass().getName() == java.lang.Integer.class
hi has only one value
hi.getClass().getName() == java.lang.Integer.class
===========================================================================
org.apache.commons.math3.exception.OutOfRangeException.OutOfRangeException(org.apache.commons.math3.exception.util.Localizable, java.lang.Number, java.lang.Number, java.lang.Number):::EXIT
===========================================================================
org.apache.commons.math3.exception.util.ArgUtils.flatten(java.lang.Object[]):::ENTER
array.getClass().getName() == java.lang.Object[].class
size(array[]) == 2
===========================================================================
org.apache.commons.math3.exception.util.ArgUtils.flatten(java.lang.Object[]):::EXIT
array[] == orig(array[])
return.getClass().getName() == java.lang.Object[].class
size(return[]) one of { 2, 3 }
===========================================================================
org.apache.commons.math3.exception.util.ExceptionContext:::CLASS
===========================================================================
org.apache.commons.math3.exception.util.ExceptionContext:::OBJECT
this.msgPatterns[] elements has only one value
this.msgPatterns[].getClass().getName() elements == org.apache.commons.math3.exception.util.LocalizedFormats.class
this.msgPatterns[].getClass().getName() one of { [], [org.apache.commons.math3.exception.util.LocalizedFormats] }
this.msgPatterns.getClass().getName() == java.util.ArrayList.class
this.msgArguments[].getClass().getName() elements == java.lang.Object[].class
this.msgArguments[].getClass().getName() one of { [], [java.lang.Object[]] }
this.msgArguments.getClass().getName() == java.util.ArrayList.class
this.context.getClass().getName() == java.util.HashMap.class
size(this.msgPatterns[]) one of { 0, 1 }
size(this.msgArguments[]) one of { 0, 1 }
===========================================================================
org.apache.commons.math3.exception.util.ExceptionContext.ExceptionContext(java.lang.Throwable):::ENTER
===========================================================================
org.apache.commons.math3.exception.util.ExceptionContext.ExceptionContext(java.lang.Throwable):::EXIT
this.msgPatterns[] == []
this.msgPatterns[].getClass().getName() == []
this.msgArguments[] == []
this.msgArguments[].getClass().getName() == []
===========================================================================
org.apache.commons.math3.exception.util.ExceptionContext.addMessage(org.apache.commons.math3.exception.util.Localizable, java.lang.Object[]):::ENTER
this.msgPatterns[] == []
this.msgPatterns[].getClass().getName() == []
this.msgArguments[] == []
this.msgArguments[].getClass().getName() == []
pattern has only one value
pattern.getClass().getName() == org.apache.commons.math3.exception.util.LocalizedFormats.class
arguments.getClass().getName() == java.lang.Object[].class
size(arguments[]) == 2
===========================================================================
org.apache.commons.math3.exception.util.ExceptionContext.addMessage(org.apache.commons.math3.exception.util.Localizable, java.lang.Object[]):::EXIT
this.throwable == orig(this.throwable)
this.msgPatterns == orig(this.msgPatterns)
this.msgPatterns.getClass().getName() == orig(this.msgPatterns.getClass().getName())
this.msgArguments == orig(this.msgArguments)
this.msgArguments.getClass().getName() == orig(this.msgArguments.getClass().getName())
this.context == orig(this.context)
this.context.getClass().getName() == orig(this.context.getClass().getName())
arguments[] == orig(arguments[])
size(this.msgPatterns[])-1 == orig(size(this.msgPatterns[]))
size(this.msgArguments[])-1 == orig(size(this.msgArguments[]))
this.msgPatterns[] contains no nulls and has only one value, of length 1
this.msgPatterns[].getClass().getName() == [org.apache.commons.math3.exception.util.LocalizedFormats]
this.msgArguments[].getClass().getName() == [java.lang.Object[]]
size(this.msgPatterns[]) == 1
size(this.msgArguments[]) == 1
===========================================================================
org.apache.commons.math3.exception.util.LocalizedFormats:::OBJECT
this.sourceFormat != null
===========================================================================
org.apache.commons.math3.exception.util.LocalizedFormats.LocalizedFormats(java.lang.String, int, java.lang.String):::ENTER
$hidden$1 != null
sourceFormat != null
===========================================================================
org.apache.commons.math3.exception.util.LocalizedFormats.LocalizedFormats(java.lang.String, int, java.lang.String):::EXIT
$hidden$1.toString == orig($hidden$1.toString)
sourceFormat.toString == orig(sourceFormat.toString)
===========================================================================
org.apache.commons.math3.genetics.AbstractListChromosome:::CLASS
===========================================================================
org.apache.commons.math3.genetics.AbstractListChromosome:::OBJECT
this.getClass().getName() == org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary$FindOnes.class
this.representation != null
this.representation[] elements != null
this.representation[].getClass().getName() == [java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer]
this.representation[].getClass().getName() elements == java.lang.Integer.class
this.representation.getClass().getName() == java.util.Collections$UnmodifiableRandomAccessList.class
this.fitness != 0
size(this.representation[]) == 50
===========================================================================
org.apache.commons.math3.genetics.AbstractListChromosome.AbstractListChromosome(java.util.List):::ENTER
representation != null
representation[] elements != null
representation[].getClass().getName() == [java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer]
representation[].getClass().getName() elements == java.lang.Integer.class
representation.getClass().getName() == java.util.ArrayList.class
size(representation[]) == 50
===========================================================================
org.apache.commons.math3.genetics.AbstractListChromosome.AbstractListChromosome(java.util.List):::EXIT
representation[] == orig(representation[])
this.fitness == -Infinity
representation[] elements != null
representation[].getClass().getName() == [java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer]
representation[].getClass().getName() elements == java.lang.Integer.class
===========================================================================
org.apache.commons.math3.genetics.AbstractListChromosome.getLength():::ENTER
===========================================================================
org.apache.commons.math3.genetics.AbstractListChromosome.getLength():::EXIT
this.representation == orig(this.representation)
this.representation[] == orig(this.representation[])
this.representation.getClass().getName() == orig(this.representation.getClass().getName())
this.fitness == orig(this.fitness)
return == 50
===========================================================================
org.apache.commons.math3.genetics.AbstractListChromosome.getRepresentation():::ENTER
===========================================================================
org.apache.commons.math3.genetics.AbstractListChromosome.getRepresentation():::EXIT
this.representation == orig(this.representation)
this.representation[] == orig(this.representation[])
this.representation.getClass().getName() == orig(this.representation.getClass().getName())
this.fitness == orig(this.fitness)
return != null
return[] elements != null
return[].getClass().getName() == [java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer]
return[].getClass().getName() elements == java.lang.Integer.class
return.getClass().getName() == java.util.Collections$UnmodifiableRandomAccessList.class
size(return[]) == 50
===========================================================================
org.apache.commons.math3.genetics.BinaryChromosome:::CLASS
===========================================================================
org.apache.commons.math3.genetics.BinaryChromosome:::OBJECT
this.getClass().getName() == org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary$FindOnes.class
this.representation[] elements != null
this.representation[].getClass().getName() == [java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer]
this.representation[].getClass().getName() elements == java.lang.Integer.class
this.representation.getClass().getName() == java.util.Collections$UnmodifiableRandomAccessList.class
this.fitness == -Infinity
size(this.representation[]) == 50
===========================================================================
org.apache.commons.math3.genetics.BinaryChromosome.BinaryChromosome(java.util.List):::ENTER
representation[] elements != null
representation[].getClass().getName() == [java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer]
representation[].getClass().getName() elements == java.lang.Integer.class
representation.getClass().getName() == java.util.ArrayList.class
size(representation[]) == 50
===========================================================================
org.apache.commons.math3.genetics.BinaryChromosome.BinaryChromosome(java.util.List):::EXIT
representation[] == orig(representation[])
representation[] elements != null
representation[].getClass().getName() == [java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer]
representation[].getClass().getName() elements == java.lang.Integer.class
===========================================================================
org.apache.commons.math3.genetics.BinaryChromosome.checkValidity(java.util.List):::ENTER
this.representation == null
chromosomeRepresentation[] elements != null
chromosomeRepresentation[].getClass().getName() == [java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer]
chromosomeRepresentation[].getClass().getName() elements == java.lang.Integer.class
chromosomeRepresentation.getClass().getName() == java.util.ArrayList.class
size(chromosomeRepresentation[]) == 50
===========================================================================
org.apache.commons.math3.genetics.BinaryChromosome.checkValidity(java.util.List):::EXIT
this.representation == orig(this.representation)
this.fitness == orig(this.fitness)
chromosomeRepresentation[] == orig(chromosomeRepresentation[])
this.representation == null
chromosomeRepresentation[] elements != null
chromosomeRepresentation[].getClass().getName() == [java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer]
chromosomeRepresentation[].getClass().getName() elements == java.lang.Integer.class
===========================================================================
org.apache.commons.math3.genetics.BinaryChromosome.randomBinaryRepresentation(int):::ENTER
length == 50
===========================================================================
org.apache.commons.math3.genetics.BinaryChromosome.randomBinaryRepresentation(int):::EXIT
return[] elements != null
return[].getClass().getName() == [java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer]
return[].getClass().getName() elements == java.lang.Integer.class
return.getClass().getName() == java.util.ArrayList.class
size(return[]) == 50
===========================================================================
org.apache.commons.math3.genetics.BinaryMutation:::OBJECT
this has only one value
===========================================================================
org.apache.commons.math3.genetics.BinaryMutation.BinaryMutation():::EXIT
===========================================================================
org.apache.commons.math3.genetics.BinaryMutation.mutate(org.apache.commons.math3.genetics.Chromosome):::ENTER
original != null
original.getClass().getName() == org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary$FindOnes.class
original.fitness == -Infinity
===========================================================================
org.apache.commons.math3.genetics.BinaryMutation.mutate(org.apache.commons.math3.genetics.Chromosome):::EXIT
original.fitness == orig(original.fitness)
original.fitness == -Infinity
return != null
return.getClass().getName() == org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary$FindOnes.class
return.fitness == -Infinity
===========================================================================
org.apache.commons.math3.genetics.Chromosome:::CLASS
===========================================================================
org.apache.commons.math3.genetics.Chromosome:::OBJECT
===========================================================================
org.apache.commons.math3.genetics.Chromosome.Chromosome():::EXIT
this.fitness == -Infinity
===========================================================================
org.apache.commons.math3.genetics.Chromosome.compareTo(org.apache.commons.math3.genetics.Chromosome):::ENTER
this.fitness != 0
another != null
another.fitness != 0
===========================================================================
org.apache.commons.math3.genetics.Chromosome.compareTo(org.apache.commons.math3.genetics.Chromosome):::EXIT
return one of { -1, 0, 1 }
this.fitness >= orig(this.fitness)
another.fitness >= orig(another.fitness)
===========================================================================
org.apache.commons.math3.genetics.Chromosome.getFitness():::ENTER
this.fitness != 0
===========================================================================
org.apache.commons.math3.genetics.Chromosome.getFitness():::EXIT
this.fitness >= orig(this.fitness)
===========================================================================
org.apache.commons.math3.genetics.ChromosomePair:::OBJECT
this.first != null
this.first.getClass().getName() == org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary$FindOnes.class
this.first.fitness != 0
this.second != null
this.second.getClass().getName() == org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary$FindOnes.class
this.second.fitness != 0
===========================================================================
org.apache.commons.math3.genetics.ChromosomePair.ChromosomePair(org.apache.commons.math3.genetics.Chromosome, org.apache.commons.math3.genetics.Chromosome):::ENTER
c1 != null
c1.getClass().getName() == org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary$FindOnes.class
c1.fitness != 0
c2 != null
c2.getClass().getName() == org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary$FindOnes.class
c2.fitness != 0
===========================================================================
org.apache.commons.math3.genetics.ChromosomePair.ChromosomePair(org.apache.commons.math3.genetics.Chromosome, org.apache.commons.math3.genetics.Chromosome):::EXIT
c1.fitness == orig(c1.fitness)
c2.fitness == orig(c2.fitness)
c1.fitness != 0
c2.fitness != 0
===========================================================================
org.apache.commons.math3.genetics.ChromosomePair.getFirst():::ENTER
===========================================================================
org.apache.commons.math3.genetics.ChromosomePair.getFirst():::EXIT
this.first == orig(this.first)
this.first.getClass().getName() == orig(this.first.getClass().getName())
this.first.fitness == orig(this.first.fitness)
this.second == orig(this.second)
this.second.getClass().getName() == orig(this.second.getClass().getName())
this.second.fitness == orig(this.second.fitness)
return != null
return.getClass().getName() == org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary$FindOnes.class
return.fitness != 0
===========================================================================
org.apache.commons.math3.genetics.ChromosomePair.getSecond():::ENTER
===========================================================================
org.apache.commons.math3.genetics.ChromosomePair.getSecond():::EXIT
this.first == orig(this.first)
this.first.getClass().getName() == orig(this.first.getClass().getName())
this.first.fitness == orig(this.first.fitness)
this.second == orig(this.second)
this.second.getClass().getName() == orig(this.second.getClass().getName())
this.second.fitness == orig(this.second.fitness)
return != null
return.getClass().getName() == org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary$FindOnes.class
return.fitness != 0
===========================================================================
org.apache.commons.math3.genetics.ElitisticListPopulation:::OBJECT
this.elitismRate one of { 0.2, 0.203, 0.9 }
this.chromosomes != null
this.chromosomes[] elements != null
this.populationLimit one of { 50, 100 }
size(this.chromosomes[]) one of { 0, 50, 100 }
size(this.chromosomes[])-1 != 0
===========================================================================
org.apache.commons.math3.genetics.ElitisticListPopulation.ElitisticListPopulation(int, double):::ENTER
populationLimit one of { 50, 100 }
elitismRate one of { 0.2, 0.203 }
===========================================================================
org.apache.commons.math3.genetics.ElitisticListPopulation.ElitisticListPopulation(int, double):::EXIT
this.elitismRate one of { 0.2, 0.203 }
this.chromosomes[] == []
this.chromosomes[].getClass().getName() == []
this.chromosomes.getClass().getName() == java.util.ArrayList.class
===========================================================================
org.apache.commons.math3.genetics.ElitisticListPopulation.ElitisticListPopulation(java.util.List, int, double):::ENTER
chromosomes has only one value
chromosomes[] contains no nulls and has only one value, of length 50
chromosomes[].getClass().getName() == [org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes]
chromosomes[].getClass().getName() elements == org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes.class
chromosomes.getClass().getName() == java.util.LinkedList.class
populationLimit == 50
elitismRate == 0.2
size(chromosomes[]) == 50
===========================================================================
org.apache.commons.math3.genetics.ElitisticListPopulation.ElitisticListPopulation(java.util.List, int, double):::EXIT
chromosomes[] == orig(chromosomes[])
this.elitismRate == 0.2
this.chromosomes has only one value
this.chromosomes[] contains no nulls and has only one value, of length 50
this.chromosomes[].getClass().getName() == [org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes]
this.chromosomes[].getClass().getName() elements == org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes.class
this.chromosomes.getClass().getName() == java.util.LinkedList.class
this.populationLimit == 50
chromosomes[] contains no nulls and has only one value, of length 50
chromosomes[].getClass().getName() == [org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes]
chromosomes[].getClass().getName() elements == org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes.class
size(this.chromosomes[]) == 50
===========================================================================
org.apache.commons.math3.genetics.ElitisticListPopulation.getElitismRate():::ENTER
this.elitismRate one of { 0.2, 0.203 }
this.chromosomes[].getClass().getName() one of { [org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome], [org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes] }
size(this.chromosomes[]) one of { 50, 100 }
===========================================================================
org.apache.commons.math3.genetics.ElitisticListPopulation.getElitismRate():::EXIT
this.elitismRate == orig(this.elitismRate)
this.chromosomes == orig(this.chromosomes)
this.chromosomes[] == orig(this.chromosomes[])
this.chromosomes.getClass().getName() == orig(this.chromosomes.getClass().getName())
this.populationLimit == orig(this.populationLimit)
this.elitismRate one of { 0.2, 0.203 }
this.chromosomes[].getClass().getName() one of { [org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome], [org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes] }
return one of { 0.2, 0.203 }
size(this.chromosomes[]) one of { 50, 100 }
===========================================================================
org.apache.commons.math3.genetics.ElitisticListPopulation.nextGeneration():::ENTER
this.elitismRate one of { 0.2, 0.203 }
this.chromosomes[].getClass().getName() one of { [org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome], [org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes] }
size(this.chromosomes[]) one of { 50, 100 }
===========================================================================
org.apache.commons.math3.genetics.ElitisticListPopulation.nextGeneration():::EXIT
this.elitismRate == orig(this.elitismRate)
this.chromosomes == orig(this.chromosomes)
this.chromosomes.getClass().getName() == orig(this.chromosomes.getClass().getName())
this.populationLimit == orig(this.populationLimit)
size(this.chromosomes[]) == orig(size(this.chromosomes[]))
this.elitismRate one of { 0.2, 0.203 }
this.chromosomes[].getClass().getName() one of { [org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome], [org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes] }
return != null
return.getClass().getName() == org.apache.commons.math3.genetics.ElitisticListPopulation.class
size(this.chromosomes[]) one of { 50, 100 }
===========================================================================
org.apache.commons.math3.genetics.ElitisticListPopulation.setElitismRate(double):::ENTER
this.elitismRate == 0.9
this.chromosomes[].getClass().getName() elements == org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes.class
this.chromosomes[].getClass().getName() one of { [], [org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes] }
elitismRate one of { 0.2, 0.203 }
size(this.chromosomes[]) one of { 0, 50 }
===========================================================================
org.apache.commons.math3.genetics.ElitisticListPopulation.setElitismRate(double):::EXIT
this.chromosomes == orig(this.chromosomes)
this.chromosomes[] == orig(this.chromosomes[])
this.chromosomes.getClass().getName() == orig(this.chromosomes.getClass().getName())
this.populationLimit == orig(this.populationLimit)
this.elitismRate one of { 0.2, 0.203 }
this.chromosomes[].getClass().getName() elements == org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes.class
this.chromosomes[].getClass().getName() one of { [], [org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes] }
size(this.chromosomes[]) one of { 0, 50 }
this.elitismRate < orig(this.elitismRate)
===========================================================================
org.apache.commons.math3.genetics.ElitisticListPopulationTest$DummyChromosome:::CLASS
===========================================================================
org.apache.commons.math3.genetics.ElitisticListPopulationTest$DummyChromosome:::OBJECT
this.fitness >= 0
===========================================================================
org.apache.commons.math3.genetics.ElitisticListPopulationTest$DummyChromosome.DummyChromosome():::EXIT
===========================================================================
org.apache.commons.math3.genetics.ElitisticListPopulationTest$DummyChromosome.fitness():::ENTER
===========================================================================
org.apache.commons.math3.genetics.ElitisticListPopulationTest$DummyChromosome.fitness():::EXIT
this.fitness == orig(this.fitness)
===========================================================================
org.apache.commons.math3.genetics.ElitisticListPopulationTest:::CLASS
org.apache.commons.math3.genetics.ElitisticListPopulationTest.counter one of { 0, 100 }
===========================================================================
org.apache.commons.math3.genetics.ElitisticListPopulationTest:::OBJECT
===========================================================================
org.apache.commons.math3.genetics.ElitisticListPopulationTest.ElitisticListPopulationTest():::EXIT
===========================================================================
org.apache.commons.math3.genetics.ElitisticListPopulationTest.testNextGeneration():::ENTER
this has only one value
org.apache.commons.math3.genetics.ElitisticListPopulationTest.counter == 0
===========================================================================
org.apache.commons.math3.genetics.ElitisticListPopulationTest.testNextGeneration():::EXIT
org.apache.commons.math3.genetics.ElitisticListPopulationTest.counter == 100
===========================================================================
org.apache.commons.math3.genetics.FixedGenerationCount:::OBJECT
this has only one value
this.maxGenerations == 50
===========================================================================
org.apache.commons.math3.genetics.FixedGenerationCount.FixedGenerationCount(int):::ENTER
maxGenerations == 50
===========================================================================
org.apache.commons.math3.genetics.FixedGenerationCount.FixedGenerationCount(int):::EXIT
this.numGenerations == 0
===========================================================================
org.apache.commons.math3.genetics.FixedGenerationCount.isSatisfied(org.apache.commons.math3.genetics.Population):::ENTER
population.getClass().getName() == org.apache.commons.math3.genetics.ElitisticListPopulation.class
===========================================================================
org.apache.commons.math3.genetics.FixedGenerationCount.isSatisfied(org.apache.commons.math3.genetics.Population):::EXIT62
return == false
this.numGenerations - orig(this.numGenerations) - 1 == 0
===========================================================================
org.apache.commons.math3.genetics.FixedGenerationCount.isSatisfied(org.apache.commons.math3.genetics.Population):::EXIT62;condition="not(return == true)"
===========================================================================
org.apache.commons.math3.genetics.FixedGenerationCount.isSatisfied(org.apache.commons.math3.genetics.Population):::EXIT64
this.numGenerations == orig(this.numGenerations)
this.numGenerations == 50
return == true
orig(population) has only one value
===========================================================================
org.apache.commons.math3.genetics.FixedGenerationCount.isSatisfied(org.apache.commons.math3.genetics.Population):::EXIT64;condition="return == true"
===========================================================================
org.apache.commons.math3.genetics.FixedGenerationCount.isSatisfied(org.apache.commons.math3.genetics.Population):::EXIT
this.maxGenerations == orig(this.maxGenerations)
(return == false)  ==>  (this.numGenerations - orig(this.numGenerations) - 1 == 0)
(return == true)  <==>  (orig(this.numGenerations) == 50)
(return == true)  <==>  (this.numGenerations == orig(this.numGenerations))
(return == true)  ==>  (orig(population) has only one value)
(return == true)  ==>  (this.numGenerations == 50)
this.numGenerations >= orig(this.numGenerations)
===========================================================================
org.apache.commons.math3.genetics.FixedGenerationCount.isSatisfied(org.apache.commons.math3.genetics.Population):::EXIT;condition="return == true"
this.numGenerations == orig(this.numGenerations)
this.numGenerations == 50
return == true
orig(population) has only one value
===========================================================================
org.apache.commons.math3.genetics.FixedGenerationCount.isSatisfied(org.apache.commons.math3.genetics.Population):::EXIT;condition="not(return == true)"
return == false
this.numGenerations - orig(this.numGenerations) - 1 == 0
===========================================================================
org.apache.commons.math3.genetics.GeneticAlgorithm:::CLASS
org.apache.commons.math3.genetics.GeneticAlgorithm.randomGenerator has only one value
org.apache.commons.math3.genetics.GeneticAlgorithm.randomGenerator != null
org.apache.commons.math3.genetics.GeneticAlgorithm.randomGenerator.getClass().getName() == org.apache.commons.math3.random.JDKRandomGenerator.class
===========================================================================
org.apache.commons.math3.genetics.GeneticAlgorithm:::OBJECT
this has only one value
this.crossoverPolicy has only one value
this.crossoverPolicy != null
this.crossoverPolicy.getClass().getName() == org.apache.commons.math3.genetics.OnePointCrossover.class
this.crossoverRate == 1.0
this.mutationPolicy has only one value
this.mutationPolicy != null
this.mutationPolicy.getClass().getName() == org.apache.commons.math3.genetics.BinaryMutation.class
this.mutationRate == 0.1
this.selectionPolicy has only one value
this.selectionPolicy != null
this.selectionPolicy.getClass().getName() == org.apache.commons.math3.genetics.TournamentSelection.class
this.generationsEvolved >= 0
===========================================================================
org.apache.commons.math3.genetics.GeneticAlgorithm.GeneticAlgorithm(org.apache.commons.math3.genetics.CrossoverPolicy, double, org.apache.commons.math3.genetics.MutationPolicy, double, org.apache.commons.math3.genetics.SelectionPolicy):::ENTER
crossoverPolicy has only one value
crossoverPolicy.getClass().getName() == org.apache.commons.math3.genetics.OnePointCrossover.class
crossoverRate == 1.0
mutationPolicy has only one value
mutationPolicy.getClass().getName() == org.apache.commons.math3.genetics.BinaryMutation.class
mutationRate == 0.1
selectionPolicy has only one value
selectionPolicy.getClass().getName() == org.apache.commons.math3.genetics.TournamentSelection.class
===========================================================================
org.apache.commons.math3.genetics.GeneticAlgorithm.GeneticAlgorithm(org.apache.commons.math3.genetics.CrossoverPolicy, double, org.apache.commons.math3.genetics.MutationPolicy, double, org.apache.commons.math3.genetics.SelectionPolicy):::EXIT
this.generationsEvolved == 0
===========================================================================
org.apache.commons.math3.genetics.GeneticAlgorithm.evolve(org.apache.commons.math3.genetics.Population, org.apache.commons.math3.genetics.StoppingCondition):::ENTER
this.generationsEvolved == 0
initial has only one value
initial.getClass().getName() == org.apache.commons.math3.genetics.ElitisticListPopulation.class
condition has only one value
condition.getClass().getName() == org.apache.commons.math3.genetics.FixedGenerationCount.class
===========================================================================
org.apache.commons.math3.genetics.GeneticAlgorithm.evolve(org.apache.commons.math3.genetics.Population, org.apache.commons.math3.genetics.StoppingCondition):::EXIT
org.apache.commons.math3.genetics.GeneticAlgorithm.randomGenerator == orig(org.apache.commons.math3.genetics.GeneticAlgorithm.randomGenerator)
org.apache.commons.math3.genetics.GeneticAlgorithm.randomGenerator.getClass().getName() == orig(org.apache.commons.math3.genetics.GeneticAlgorithm.randomGenerator.getClass().getName())
this.crossoverPolicy == orig(this.crossoverPolicy)
this.crossoverPolicy.getClass().getName() == orig(this.crossoverPolicy.getClass().getName())
this.crossoverRate == orig(this.crossoverRate)
this.mutationPolicy == orig(this.mutationPolicy)
this.mutationPolicy.getClass().getName() == orig(this.mutationPolicy.getClass().getName())
this.mutationRate == orig(this.mutationRate)
this.selectionPolicy == orig(this.selectionPolicy)
this.selectionPolicy.getClass().getName() == orig(this.selectionPolicy.getClass().getName())
this.generationsEvolved == 50
return has only one value
return.getClass().getName() == org.apache.commons.math3.genetics.ElitisticListPopulation.class
===========================================================================
org.apache.commons.math3.genetics.GeneticAlgorithm.getCrossoverPolicy():::ENTER
===========================================================================
org.apache.commons.math3.genetics.GeneticAlgorithm.getCrossoverPolicy():::EXIT
org.apache.commons.math3.genetics.GeneticAlgorithm.randomGenerator == orig(org.apache.commons.math3.genetics.GeneticAlgorithm.randomGenerator)
org.apache.commons.math3.genetics.GeneticAlgorithm.randomGenerator.getClass().getName() == orig(org.apache.commons.math3.genetics.GeneticAlgorithm.randomGenerator.getClass().getName())
this.crossoverPolicy == orig(this.crossoverPolicy)
this.crossoverPolicy.getClass().getName() == orig(this.crossoverPolicy.getClass().getName())
this.crossoverRate == orig(this.crossoverRate)
this.mutationPolicy == orig(this.mutationPolicy)
this.mutationPolicy.getClass().getName() == orig(this.mutationPolicy.getClass().getName())
this.mutationRate == orig(this.mutationRate)
this.selectionPolicy == orig(this.selectionPolicy)
this.selectionPolicy.getClass().getName() == orig(this.selectionPolicy.getClass().getName())
this.generationsEvolved == orig(this.generationsEvolved)
return has only one value
return != null
return.getClass().getName() == org.apache.commons.math3.genetics.OnePointCrossover.class
===========================================================================
org.apache.commons.math3.genetics.GeneticAlgorithm.getCrossoverRate():::ENTER
===========================================================================
org.apache.commons.math3.genetics.GeneticAlgorithm.getCrossoverRate():::EXIT
org.apache.commons.math3.genetics.GeneticAlgorithm.randomGenerator == orig(org.apache.commons.math3.genetics.GeneticAlgorithm.randomGenerator)
org.apache.commons.math3.genetics.GeneticAlgorithm.randomGenerator.getClass().getName() == orig(org.apache.commons.math3.genetics.GeneticAlgorithm.randomGenerator.getClass().getName())
this.crossoverPolicy == orig(this.crossoverPolicy)
this.crossoverPolicy.getClass().getName() == orig(this.crossoverPolicy.getClass().getName())
this.crossoverRate == orig(this.crossoverRate)
this.mutationPolicy == orig(this.mutationPolicy)
this.mutationPolicy.getClass().getName() == orig(this.mutationPolicy.getClass().getName())
this.mutationRate == orig(this.mutationRate)
this.selectionPolicy == orig(this.selectionPolicy)
this.selectionPolicy.getClass().getName() == orig(this.selectionPolicy.getClass().getName())
this.generationsEvolved == orig(this.generationsEvolved)
return == 1.0
===========================================================================
org.apache.commons.math3.genetics.GeneticAlgorithm.getGenerationsEvolved():::ENTER
this.generationsEvolved one of { 0, 50 }
===========================================================================
org.apache.commons.math3.genetics.GeneticAlgorithm.getGenerationsEvolved():::EXIT
org.apache.commons.math3.genetics.GeneticAlgorithm.randomGenerator == orig(org.apache.commons.math3.genetics.GeneticAlgorithm.randomGenerator)
org.apache.commons.math3.genetics.GeneticAlgorithm.randomGenerator.getClass().getName() == orig(org.apache.commons.math3.genetics.GeneticAlgorithm.randomGenerator.getClass().getName())
this.crossoverPolicy == orig(this.crossoverPolicy)
this.crossoverPolicy.getClass().getName() == orig(this.crossoverPolicy.getClass().getName())
this.crossoverRate == orig(this.crossoverRate)
this.mutationPolicy == orig(this.mutationPolicy)
this.mutationPolicy.getClass().getName() == orig(this.mutationPolicy.getClass().getName())
this.mutationRate == orig(this.mutationRate)
this.selectionPolicy == orig(this.selectionPolicy)
this.selectionPolicy.getClass().getName() == orig(this.selectionPolicy.getClass().getName())
this.generationsEvolved == orig(this.generationsEvolved)
this.generationsEvolved one of { 0, 50 }
return one of { 0, 50 }
===========================================================================
org.apache.commons.math3.genetics.GeneticAlgorithm.getMutationPolicy():::ENTER
===========================================================================
org.apache.commons.math3.genetics.GeneticAlgorithm.getMutationPolicy():::EXIT
org.apache.commons.math3.genetics.GeneticAlgorithm.randomGenerator == orig(org.apache.commons.math3.genetics.GeneticAlgorithm.randomGenerator)
org.apache.commons.math3.genetics.GeneticAlgorithm.randomGenerator.getClass().getName() == orig(org.apache.commons.math3.genetics.GeneticAlgorithm.randomGenerator.getClass().getName())
this.crossoverPolicy == orig(this.crossoverPolicy)
this.crossoverPolicy.getClass().getName() == orig(this.crossoverPolicy.getClass().getName())
this.crossoverRate == orig(this.crossoverRate)
this.mutationPolicy == orig(this.mutationPolicy)
this.mutationPolicy.getClass().getName() == orig(this.mutationPolicy.getClass().getName())
this.mutationRate == orig(this.mutationRate)
this.selectionPolicy == orig(this.selectionPolicy)
this.selectionPolicy.getClass().getName() == orig(this.selectionPolicy.getClass().getName())
this.generationsEvolved == orig(this.generationsEvolved)
return has only one value
return != null
return.getClass().getName() == org.apache.commons.math3.genetics.BinaryMutation.class
===========================================================================
org.apache.commons.math3.genetics.GeneticAlgorithm.getMutationRate():::ENTER
===========================================================================
org.apache.commons.math3.genetics.GeneticAlgorithm.getMutationRate():::EXIT
org.apache.commons.math3.genetics.GeneticAlgorithm.randomGenerator == orig(org.apache.commons.math3.genetics.GeneticAlgorithm.randomGenerator)
org.apache.commons.math3.genetics.GeneticAlgorithm.randomGenerator.getClass().getName() == orig(org.apache.commons.math3.genetics.GeneticAlgorithm.randomGenerator.getClass().getName())
this.crossoverPolicy == orig(this.crossoverPolicy)
this.crossoverPolicy.getClass().getName() == orig(this.crossoverPolicy.getClass().getName())
this.crossoverRate == orig(this.crossoverRate)
this.mutationPolicy == orig(this.mutationPolicy)
this.mutationPolicy.getClass().getName() == orig(this.mutationPolicy.getClass().getName())
this.mutationRate == orig(this.mutationRate)
this.selectionPolicy == orig(this.selectionPolicy)
this.selectionPolicy.getClass().getName() == orig(this.selectionPolicy.getClass().getName())
this.generationsEvolved == orig(this.generationsEvolved)
return == 0.1
===========================================================================
org.apache.commons.math3.genetics.GeneticAlgorithm.getRandomGenerator():::ENTER
===========================================================================
org.apache.commons.math3.genetics.GeneticAlgorithm.getRandomGenerator():::EXIT
org.apache.commons.math3.genetics.GeneticAlgorithm.randomGenerator == orig(org.apache.commons.math3.genetics.GeneticAlgorithm.randomGenerator)
org.apache.commons.math3.genetics.GeneticAlgorithm.randomGenerator.getClass().getName() == orig(org.apache.commons.math3.genetics.GeneticAlgorithm.randomGenerator.getClass().getName())
return has only one value
return != null
return.getClass().getName() == org.apache.commons.math3.random.JDKRandomGenerator.class
===========================================================================
org.apache.commons.math3.genetics.GeneticAlgorithm.getSelectionPolicy():::ENTER
===========================================================================
org.apache.commons.math3.genetics.GeneticAlgorithm.getSelectionPolicy():::EXIT
org.apache.commons.math3.genetics.GeneticAlgorithm.randomGenerator == orig(org.apache.commons.math3.genetics.GeneticAlgorithm.randomGenerator)
org.apache.commons.math3.genetics.GeneticAlgorithm.randomGenerator.getClass().getName() == orig(org.apache.commons.math3.genetics.GeneticAlgorithm.randomGenerator.getClass().getName())
this.crossoverPolicy == orig(this.crossoverPolicy)
this.crossoverPolicy.getClass().getName() == orig(this.crossoverPolicy.getClass().getName())
this.crossoverRate == orig(this.crossoverRate)
this.mutationPolicy == orig(this.mutationPolicy)
this.mutationPolicy.getClass().getName() == orig(this.mutationPolicy.getClass().getName())
this.mutationRate == orig(this.mutationRate)
this.selectionPolicy == orig(this.selectionPolicy)
this.selectionPolicy.getClass().getName() == orig(this.selectionPolicy.getClass().getName())
this.generationsEvolved == orig(this.generationsEvolved)
return has only one value
return != null
return.getClass().getName() == org.apache.commons.math3.genetics.TournamentSelection.class
===========================================================================
org.apache.commons.math3.genetics.GeneticAlgorithm.nextGeneration(org.apache.commons.math3.genetics.Population):::ENTER
current != null
current.getClass().getName() == org.apache.commons.math3.genetics.ElitisticListPopulation.class
===========================================================================
org.apache.commons.math3.genetics.GeneticAlgorithm.nextGeneration(org.apache.commons.math3.genetics.Population):::EXIT
org.apache.commons.math3.genetics.GeneticAlgorithm.randomGenerator == orig(org.apache.commons.math3.genetics.GeneticAlgorithm.randomGenerator)
org.apache.commons.math3.genetics.GeneticAlgorithm.randomGenerator.getClass().getName() == orig(org.apache.commons.math3.genetics.GeneticAlgorithm.randomGenerator.getClass().getName())
this.crossoverPolicy == orig(this.crossoverPolicy)
this.crossoverPolicy.getClass().getName() == orig(this.crossoverPolicy.getClass().getName())
this.crossoverRate == orig(this.crossoverRate)
this.mutationPolicy == orig(this.mutationPolicy)
this.mutationPolicy.getClass().getName() == orig(this.mutationPolicy.getClass().getName())
this.mutationRate == orig(this.mutationRate)
this.selectionPolicy == orig(this.selectionPolicy)
this.selectionPolicy.getClass().getName() == orig(this.selectionPolicy.getClass().getName())
this.generationsEvolved == orig(this.generationsEvolved)
return != null
return.getClass().getName() == org.apache.commons.math3.genetics.ElitisticListPopulation.class
===========================================================================
org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary$FindOnes:::CLASS
===========================================================================
org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary$FindOnes:::OBJECT
this.representation[] elements != null
this.representation[].getClass().getName() == [java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer]
this.representation[].getClass().getName() elements == java.lang.Integer.class
this.representation.getClass().getName() == java.util.Collections$UnmodifiableRandomAccessList.class
size(this.representation[]) == 50
===========================================================================
org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary$FindOnes.FindOnes(java.util.List):::ENTER
representation[] elements != null
representation[].getClass().getName() == [java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer]
representation[].getClass().getName() elements == java.lang.Integer.class
representation.getClass().getName() == java.util.ArrayList.class
size(representation[]) == 50
===========================================================================
org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary$FindOnes.FindOnes(java.util.List):::EXIT
representation[] == orig(representation[])
this.fitness == -Infinity
representation[] elements != null
representation[].getClass().getName() == [java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer]
representation[].getClass().getName() elements == java.lang.Integer.class
===========================================================================
org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary$FindOnes.fitness():::ENTER
this.fitness == -Infinity
===========================================================================
org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary$FindOnes.fitness():::EXIT
this.representation == orig(this.representation)
this.representation[] == orig(this.representation[])
this.representation.getClass().getName() == orig(this.representation.getClass().getName())
this.fitness == orig(this.fitness)
this.fitness == -Infinity
===========================================================================
org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary$FindOnes.newFixedLengthChromosome(java.util.List):::ENTER
chromosomeRepresentation[] elements != null
chromosomeRepresentation[].getClass().getName() == [java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer]
chromosomeRepresentation[].getClass().getName() elements == java.lang.Integer.class
chromosomeRepresentation.getClass().getName() == java.util.ArrayList.class
size(chromosomeRepresentation[]) == 50
===========================================================================
org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary$FindOnes.newFixedLengthChromosome(java.util.List):::EXIT
this.representation == orig(this.representation)
this.representation[] == orig(this.representation[])
this.representation.getClass().getName() == orig(this.representation.getClass().getName())
this.fitness == orig(this.fitness)
chromosomeRepresentation[] == orig(chromosomeRepresentation[])
chromosomeRepresentation[] elements != null
chromosomeRepresentation[].getClass().getName() == [java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer]
chromosomeRepresentation[].getClass().getName() elements == java.lang.Integer.class
return.getClass().getName() == org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary$FindOnes.class
return.representation[] elements != null
return.representation[].getClass().getName() == [java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer]
return.representation[].getClass().getName() elements == java.lang.Integer.class
return.representation.getClass().getName() == java.util.Collections$UnmodifiableRandomAccessList.class
return.fitness == -Infinity
size(return.representation[]) == 50
===========================================================================
org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary:::CLASS
===========================================================================
org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary:::OBJECT
this has only one value
===========================================================================
org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.GeneticAlgorithmTestBinary():::EXIT
===========================================================================
org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.randomPopulation():::ENTER
===========================================================================
org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.randomPopulation():::EXIT
return has only one value
return.elitismRate == 0.2
return.chromosomes has only one value
return.chromosomes[] contains no nulls and has only one value, of length 50
return.chromosomes[].getClass().getName() == [org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes]
return.chromosomes[].getClass().getName() elements == org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes.class
return.chromosomes.getClass().getName() == java.util.LinkedList.class
return.populationLimit == 50
size(return.chromosomes[]) == 50
===========================================================================
org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.test():::ENTER
===========================================================================
org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.test():::EXIT
===========================================================================
org.apache.commons.math3.genetics.ListPopulation:::OBJECT
this.chromosomes != null
this.chromosomes[] elements != null
this.populationLimit one of { 2, 50, 100 }
===========================================================================
org.apache.commons.math3.genetics.ListPopulation.ListPopulation(int):::ENTER
populationLimit one of { 2, 50, 100 }
===========================================================================
org.apache.commons.math3.genetics.ListPopulation.ListPopulation(int):::EXIT
this.chromosomes[] == []
this.chromosomes[].getClass().getName() == []
this.chromosomes.getClass().getName() == java.util.ArrayList.class
===========================================================================
org.apache.commons.math3.genetics.ListPopulation.ListPopulation(java.util.List, int):::ENTER
chromosomes has only one value
chromosomes[] contains no nulls and has only one value, of length 50
chromosomes[].getClass().getName() == [org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes]
chromosomes[].getClass().getName() elements == org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes.class
chromosomes.getClass().getName() == java.util.LinkedList.class
populationLimit == 50
size(chromosomes[]) == 50
===========================================================================
org.apache.commons.math3.genetics.ListPopulation.ListPopulation(java.util.List, int):::EXIT
chromosomes[] == orig(chromosomes[])
this.chromosomes has only one value
this.chromosomes[] contains no nulls and has only one value, of length 50
this.chromosomes[].getClass().getName() == [org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes]
this.chromosomes[].getClass().getName() elements == org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes.class
this.chromosomes.getClass().getName() == java.util.LinkedList.class
this.populationLimit == 50
chromosomes[] contains no nulls and has only one value, of length 50
chromosomes[].getClass().getName() == [org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes]
chromosomes[].getClass().getName() elements == org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes.class
size(this.chromosomes[]) == 50
===========================================================================
org.apache.commons.math3.genetics.ListPopulation.addChromosome(org.apache.commons.math3.genetics.Chromosome):::ENTER
this.chromosomes.getClass().getName() == java.util.ArrayList.class
chromosome != null
chromosome.fitness != 0
===========================================================================
org.apache.commons.math3.genetics.ListPopulation.addChromosome(org.apache.commons.math3.genetics.Chromosome):::EXIT
this.chromosomes == orig(this.chromosomes)
this.chromosomes.getClass().getName() == orig(this.chromosomes.getClass().getName())
this.populationLimit == orig(this.populationLimit)
chromosome.fitness == orig(chromosome.fitness)
size(this.chromosomes[])-1 == orig(size(this.chromosomes[]))
this.chromosomes.getClass().getName() == java.util.ArrayList.class
chromosome.fitness != 0
size(this.chromosomes[]) >= 1
===========================================================================
org.apache.commons.math3.genetics.ListPopulation.getChromosomes():::ENTER
this.getClass().getName() == org.apache.commons.math3.genetics.ElitisticListPopulation.class
this.chromosomes[].getClass().getName() one of { [org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome], [org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes] }
this.populationLimit one of { 50, 100 }
size(this.chromosomes[]) one of { 50, 100 }
===========================================================================
org.apache.commons.math3.genetics.ListPopulation.getChromosomes():::EXIT
this.chromosomes == orig(this.chromosomes)
this.chromosomes[] == orig(this.chromosomes[])
this.chromosomes.getClass().getName() == orig(this.chromosomes.getClass().getName())
this.populationLimit == orig(this.populationLimit)
this.chromosomes[].getClass().getName() one of { [org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome], [org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes] }
this.populationLimit one of { 50, 100 }
return != null
return[] elements != null
return[].getClass().getName() one of { [org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome, org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome], [org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes] }
size(this.chromosomes[]) one of { 50, 100 }
size(return[]) one of { 50, 100 }
===========================================================================
org.apache.commons.math3.genetics.ListPopulation.getFittestChromosome():::ENTER
this.chromosomes[].getClass().getName() elements == org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes.class
this.chromosomes[].getClass().getName() one of { [org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes], [org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes] }
this.populationLimit one of { 2, 50 }
size(this.chromosomes[]) one of { 2, 50 }
===========================================================================
org.apache.commons.math3.genetics.ListPopulation.getFittestChromosome():::EXIT
this.chromosomes == orig(this.chromosomes)
this.chromosomes[] == orig(this.chromosomes[])
this.chromosomes.getClass().getName() == orig(this.chromosomes.getClass().getName())
this.populationLimit == orig(this.populationLimit)
this.chromosomes[].getClass().getName() elements == org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes.class
this.chromosomes[].getClass().getName() one of { [org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes], [org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes] }
this.populationLimit one of { 2, 50 }
return != null
return.getClass().getName() == org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary$FindOnes.class
size(this.chromosomes[]) one of { 2, 50 }
===========================================================================
org.apache.commons.math3.genetics.ListPopulation.getPopulationLimit():::ENTER
this.getClass().getName() == org.apache.commons.math3.genetics.ElitisticListPopulation.class
this.populationLimit one of { 50, 100 }
===========================================================================
org.apache.commons.math3.genetics.ListPopulation.getPopulationLimit():::EXIT
this.chromosomes == orig(this.chromosomes)
this.chromosomes[] == orig(this.chromosomes[])
this.chromosomes.getClass().getName() == orig(this.chromosomes.getClass().getName())
this.populationLimit == orig(this.populationLimit)
this.populationLimit one of { 50, 100 }
return one of { 50, 100 }
===========================================================================
org.apache.commons.math3.genetics.ListPopulation.getPopulationSize():::ENTER
this.getClass().getName() == org.apache.commons.math3.genetics.ElitisticListPopulation.class
this.populationLimit one of { 50, 100 }
===========================================================================
org.apache.commons.math3.genetics.ListPopulation.getPopulationSize():::EXIT
this.chromosomes == orig(this.chromosomes)
this.chromosomes[] == orig(this.chromosomes[])
this.chromosomes.getClass().getName() == orig(this.chromosomes.getClass().getName())
this.populationLimit == orig(this.populationLimit)
this.populationLimit one of { 50, 100 }
===========================================================================
org.apache.commons.math3.genetics.OnePointCrossover:::OBJECT
this has only one value
===========================================================================
org.apache.commons.math3.genetics.OnePointCrossover.OnePointCrossover():::EXIT
===========================================================================
org.apache.commons.math3.genetics.OnePointCrossover.crossover(org.apache.commons.math3.genetics.AbstractListChromosome, org.apache.commons.math3.genetics.AbstractListChromosome):::ENTER
first != null
first.getClass().getName() == org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary$FindOnes.class
first.representation != null
first.representation[] elements != null
first.representation[].getClass().getName() == [java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer]
first.representation[].getClass().getName() elements == java.lang.Integer.class
first.representation.getClass().getName() == java.util.Collections$UnmodifiableRandomAccessList.class
second != null
second.getClass().getName() == org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary$FindOnes.class
second.representation != null
second.representation[] elements != null
second.representation[].getClass().getName() == [java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer]
second.representation[].getClass().getName() elements == java.lang.Integer.class
second.representation.getClass().getName() == java.util.Collections$UnmodifiableRandomAccessList.class
size(first.representation[]) == 50
size(second.representation[]) == 50
===========================================================================
org.apache.commons.math3.genetics.OnePointCrossover.crossover(org.apache.commons.math3.genetics.AbstractListChromosome, org.apache.commons.math3.genetics.AbstractListChromosome):::EXIT
first.representation == orig(first.representation)
first.representation[] == orig(first.representation[])
first.representation.getClass().getName() == orig(first.representation.getClass().getName())
first.fitness == orig(first.fitness)
second.representation == orig(second.representation)
second.representation[] == orig(second.representation[])
second.representation.getClass().getName() == orig(second.representation.getClass().getName())
second.fitness == orig(second.fitness)
first.representation != null
first.representation[] elements != null
first.representation[].getClass().getName() == [java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer]
first.representation[].getClass().getName() elements == java.lang.Integer.class
first.representation.getClass().getName() == java.util.Collections$UnmodifiableRandomAccessList.class
second.representation != null
second.representation[] elements != null
second.representation[].getClass().getName() == [java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer]
second.representation[].getClass().getName() elements == java.lang.Integer.class
second.representation.getClass().getName() == java.util.Collections$UnmodifiableRandomAccessList.class
return != null
return.first != null
return.first.getClass().getName() == org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary$FindOnes.class
return.first.fitness == -Infinity
return.second != null
return.second.getClass().getName() == org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary$FindOnes.class
return.second.fitness == -Infinity
size(first.representation[]) == 50
size(second.representation[]) == 50
===========================================================================
org.apache.commons.math3.genetics.OnePointCrossover.crossover(org.apache.commons.math3.genetics.Chromosome, org.apache.commons.math3.genetics.Chromosome):::ENTER
first != null
first.getClass().getName() == org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary$FindOnes.class
second != null
second.getClass().getName() == org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary$FindOnes.class
===========================================================================
org.apache.commons.math3.genetics.OnePointCrossover.crossover(org.apache.commons.math3.genetics.Chromosome, org.apache.commons.math3.genetics.Chromosome):::EXIT
first.fitness == orig(first.fitness)
second.fitness == orig(second.fitness)
return != null
return.first != null
return.first.getClass().getName() == org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary$FindOnes.class
return.first.fitness == -Infinity
return.second != null
return.second.getClass().getName() == org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary$FindOnes.class
return.second.fitness == -Infinity
===========================================================================
org.apache.commons.math3.genetics.TournamentSelection$1:::OBJECT
org.apache.commons.math3.genetics.TournamentSelection.this has only one value
org.apache.commons.math3.genetics.TournamentSelection.this.arity == 2
this.chromosomes[] == []
this.chromosomes[].getClass().getName() == []
this.chromosomes.getClass().getName() == java.util.ArrayList.class
this.populationLimit == 2
===========================================================================
org.apache.commons.math3.genetics.TournamentSelection$1.(org.apache.commons.math3.genetics.TournamentSelection, int):::ENTER
org.apache.commons.math3.genetics.TournamentSelection.this has only one value
org.apache.commons.math3.genetics.TournamentSelection.this != null
org.apache.commons.math3.genetics.TournamentSelection.this.arity == 2
x0 == 2
===========================================================================
org.apache.commons.math3.genetics.TournamentSelection$1.(org.apache.commons.math3.genetics.TournamentSelection, int):::EXIT
org.apache.commons.math3.genetics.TournamentSelection.this == orig(org.apache.commons.math3.genetics.TournamentSelection.this)
org.apache.commons.math3.genetics.TournamentSelection.this.arity == orig(org.apache.commons.math3.genetics.TournamentSelection.this.arity)
===========================================================================
org.apache.commons.math3.genetics.TournamentSelection:::OBJECT
this has only one value
this.arity == 2
===========================================================================
org.apache.commons.math3.genetics.TournamentSelection.TournamentSelection(int):::ENTER
arity == 2
===========================================================================
org.apache.commons.math3.genetics.TournamentSelection.TournamentSelection(int):::EXIT
===========================================================================
org.apache.commons.math3.genetics.TournamentSelection.select(org.apache.commons.math3.genetics.Population):::ENTER
population != null
population.getClass().getName() == org.apache.commons.math3.genetics.ElitisticListPopulation.class
===========================================================================
org.apache.commons.math3.genetics.TournamentSelection.select(org.apache.commons.math3.genetics.Population):::EXIT
this.arity == orig(this.arity)
return != null
return.first != null
return.first.getClass().getName() == org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary$FindOnes.class
return.second != null
return.second.getClass().getName() == org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary$FindOnes.class
===========================================================================
org.apache.commons.math3.genetics.TournamentSelection.tournament(org.apache.commons.math3.genetics.ListPopulation):::ENTER
population != null
population.getClass().getName() == org.apache.commons.math3.genetics.ElitisticListPopulation.class
population.chromosomes != null
population.chromosomes[] elements != null
population.chromosomes[].getClass().getName() == [org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes]
population.chromosomes[].getClass().getName() elements == org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes.class
population.populationLimit == 50
size(population.chromosomes[]) == 50
===========================================================================
org.apache.commons.math3.genetics.TournamentSelection.tournament(org.apache.commons.math3.genetics.ListPopulation):::EXIT
this.arity == orig(this.arity)
population.chromosomes == orig(population.chromosomes)
population.chromosomes[] == orig(population.chromosomes[])
population.chromosomes.getClass().getName() == orig(population.chromosomes.getClass().getName())
population.populationLimit == orig(population.populationLimit)
population.chromosomes != null
population.chromosomes[] elements != null
population.chromosomes[].getClass().getName() == [org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes]
population.chromosomes[].getClass().getName() elements == org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes.class
population.populationLimit == 50
return != null
return.getClass().getName() == org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary$FindOnes.class
size(population.chromosomes[]) == 50
===========================================================================
org.apache.commons.math3.random.JDKRandomGenerator:::CLASS
===========================================================================
org.apache.commons.math3.random.JDKRandomGenerator:::OBJECT
this has only one value
===========================================================================
org.apache.commons.math3.random.JDKRandomGenerator.JDKRandomGenerator():::EXIT
