===========================================================================
org.apache.commons.math.complex.Complex:::CLASS
org.apache.commons.math.complex.Complex.I has only one value
org.apache.commons.math.complex.Complex.I != null
org.apache.commons.math.complex.Complex.NaN has only one value
org.apache.commons.math.complex.Complex.NaN != null
org.apache.commons.math.complex.Complex.INF has only one value
org.apache.commons.math.complex.Complex.INF != null
org.apache.commons.math.complex.Complex.ONE has only one value
org.apache.commons.math.complex.Complex.ONE != null
org.apache.commons.math.complex.Complex.ZERO has only one value
org.apache.commons.math.complex.Complex.ZERO != null
org.apache.commons.math.complex.Complex.I.imaginary == 1.0
org.apache.commons.math.complex.Complex.I.real == 0.0
org.apache.commons.math.complex.Complex.I.isNaN == false
org.apache.commons.math.complex.Complex.I.isInfinite == false
org.apache.commons.math.complex.Complex.NaN.imaginary == Double.NaN
org.apache.commons.math.complex.Complex.NaN.real == Double.NaN
org.apache.commons.math.complex.Complex.NaN.isNaN == true
org.apache.commons.math.complex.Complex.NaN.isInfinite == false
org.apache.commons.math.complex.Complex.INF.imaginary == Infinity
org.apache.commons.math.complex.Complex.INF.real == Infinity
org.apache.commons.math.complex.Complex.INF.isNaN == false
org.apache.commons.math.complex.Complex.INF.isInfinite == true
org.apache.commons.math.complex.Complex.ONE.imaginary == 0.0
org.apache.commons.math.complex.Complex.ONE.real == 1.0
org.apache.commons.math.complex.Complex.ONE.isNaN == false
org.apache.commons.math.complex.Complex.ONE.isInfinite == false
org.apache.commons.math.complex.Complex.ZERO.imaginary == 0.0
org.apache.commons.math.complex.Complex.ZERO.real == 0.0
org.apache.commons.math.complex.Complex.ZERO.isNaN == false
org.apache.commons.math.complex.Complex.ZERO.isInfinite == false
===========================================================================
org.apache.commons.math.complex.Complex:::OBJECT
===========================================================================
org.apache.commons.math.complex.Complex.Complex(double, double):::ENTER
===========================================================================
org.apache.commons.math.complex.Complex.Complex(double, double):::EXIT
===========================================================================
org.apache.commons.math.complex.Complex.add(org.apache.commons.math.complex.Complex):::ENTER
this has only one value
this.imaginary == 4.0
this.real == 3.0
this.isNaN == false
this.isInfinite == false
rhs.imaginary == Double.NaN
rhs.real one of { 1.0, Double.NaN }
rhs.isNaN == true
rhs.isInfinite == false
===========================================================================
org.apache.commons.math.complex.Complex.add(org.apache.commons.math.complex.Complex):::EXIT
org.apache.commons.math.complex.Complex.I == orig(org.apache.commons.math.complex.Complex.I)
org.apache.commons.math.complex.Complex.NaN == orig(org.apache.commons.math.complex.Complex.NaN)
org.apache.commons.math.complex.Complex.INF == orig(org.apache.commons.math.complex.Complex.INF)
org.apache.commons.math.complex.Complex.ONE == orig(org.apache.commons.math.complex.Complex.ONE)
org.apache.commons.math.complex.Complex.ZERO == orig(org.apache.commons.math.complex.Complex.ZERO)
org.apache.commons.math.complex.Complex.I.imaginary == orig(org.apache.commons.math.complex.Complex.I.imaginary)
org.apache.commons.math.complex.Complex.I.real == orig(org.apache.commons.math.complex.Complex.I.real)
org.apache.commons.math.complex.Complex.I.isNaN == orig(org.apache.commons.math.complex.Complex.I.isNaN)
org.apache.commons.math.complex.Complex.I.isInfinite == orig(org.apache.commons.math.complex.Complex.I.isInfinite)
org.apache.commons.math.complex.Complex.NaN.isNaN == orig(org.apache.commons.math.complex.Complex.NaN.isNaN)
org.apache.commons.math.complex.Complex.NaN.isInfinite == orig(org.apache.commons.math.complex.Complex.NaN.isInfinite)
org.apache.commons.math.complex.Complex.INF.imaginary == orig(org.apache.commons.math.complex.Complex.INF.imaginary)
org.apache.commons.math.complex.Complex.INF.real == orig(org.apache.commons.math.complex.Complex.INF.real)
org.apache.commons.math.complex.Complex.INF.isNaN == orig(org.apache.commons.math.complex.Complex.INF.isNaN)
org.apache.commons.math.complex.Complex.INF.isInfinite == orig(org.apache.commons.math.complex.Complex.INF.isInfinite)
org.apache.commons.math.complex.Complex.ONE.imaginary == orig(org.apache.commons.math.complex.Complex.ONE.imaginary)
org.apache.commons.math.complex.Complex.ONE.real == orig(org.apache.commons.math.complex.Complex.ONE.real)
org.apache.commons.math.complex.Complex.ONE.isNaN == orig(org.apache.commons.math.complex.Complex.ONE.isNaN)
org.apache.commons.math.complex.Complex.ONE.isInfinite == orig(org.apache.commons.math.complex.Complex.ONE.isInfinite)
org.apache.commons.math.complex.Complex.ZERO.imaginary == orig(org.apache.commons.math.complex.Complex.ZERO.imaginary)
org.apache.commons.math.complex.Complex.ZERO.real == orig(org.apache.commons.math.complex.Complex.ZERO.real)
org.apache.commons.math.complex.Complex.ZERO.isNaN == orig(org.apache.commons.math.complex.Complex.ZERO.isNaN)
org.apache.commons.math.complex.Complex.ZERO.isInfinite == orig(org.apache.commons.math.complex.Complex.ZERO.isInfinite)
this.imaginary == orig(this.imaginary)
this.real == orig(this.real)
this.isNaN == orig(this.isNaN)
this.isInfinite == orig(this.isInfinite)
rhs.isNaN == orig(rhs.isNaN)
rhs.isInfinite == orig(rhs.isInfinite)
this.imaginary == 4.0
this.real == 3.0
this.isNaN == false
this.isInfinite == false
rhs.imaginary == Double.NaN
rhs.real one of { 1.0, Double.NaN }
rhs.isNaN == true
rhs.isInfinite == false
return.imaginary == Double.NaN
return.real == Double.NaN
return.isNaN == true
return.isInfinite == false
===========================================================================
org.apache.commons.math.complex.Complex.createComplex(double, double):::ENTER
this has only one value
this.imaginary == 4.0
this.real == 3.0
this.isNaN == false
this.isInfinite == false
realPart == Double.NaN
imaginaryPart == Double.NaN
===========================================================================
org.apache.commons.math.complex.Complex.createComplex(double, double):::EXIT
org.apache.commons.math.complex.Complex.I == orig(org.apache.commons.math.complex.Complex.I)
org.apache.commons.math.complex.Complex.NaN == orig(org.apache.commons.math.complex.Complex.NaN)
org.apache.commons.math.complex.Complex.INF == orig(org.apache.commons.math.complex.Complex.INF)
org.apache.commons.math.complex.Complex.ONE == orig(org.apache.commons.math.complex.Complex.ONE)
org.apache.commons.math.complex.Complex.ZERO == orig(org.apache.commons.math.complex.Complex.ZERO)
org.apache.commons.math.complex.Complex.I.imaginary == orig(org.apache.commons.math.complex.Complex.I.imaginary)
org.apache.commons.math.complex.Complex.I.real == orig(org.apache.commons.math.complex.Complex.I.real)
org.apache.commons.math.complex.Complex.I.isNaN == orig(org.apache.commons.math.complex.Complex.I.isNaN)
org.apache.commons.math.complex.Complex.I.isInfinite == orig(org.apache.commons.math.complex.Complex.I.isInfinite)
org.apache.commons.math.complex.Complex.NaN.isNaN == orig(org.apache.commons.math.complex.Complex.NaN.isNaN)
org.apache.commons.math.complex.Complex.NaN.isInfinite == orig(org.apache.commons.math.complex.Complex.NaN.isInfinite)
org.apache.commons.math.complex.Complex.INF.imaginary == orig(org.apache.commons.math.complex.Complex.INF.imaginary)
org.apache.commons.math.complex.Complex.INF.real == orig(org.apache.commons.math.complex.Complex.INF.real)
org.apache.commons.math.complex.Complex.INF.isNaN == orig(org.apache.commons.math.complex.Complex.INF.isNaN)
org.apache.commons.math.complex.Complex.INF.isInfinite == orig(org.apache.commons.math.complex.Complex.INF.isInfinite)
org.apache.commons.math.complex.Complex.ONE.imaginary == orig(org.apache.commons.math.complex.Complex.ONE.imaginary)
org.apache.commons.math.complex.Complex.ONE.real == orig(org.apache.commons.math.complex.Complex.ONE.real)
org.apache.commons.math.complex.Complex.ONE.isNaN == orig(org.apache.commons.math.complex.Complex.ONE.isNaN)
org.apache.commons.math.complex.Complex.ONE.isInfinite == orig(org.apache.commons.math.complex.Complex.ONE.isInfinite)
org.apache.commons.math.complex.Complex.ZERO.imaginary == orig(org.apache.commons.math.complex.Complex.ZERO.imaginary)
org.apache.commons.math.complex.Complex.ZERO.real == orig(org.apache.commons.math.complex.Complex.ZERO.real)
org.apache.commons.math.complex.Complex.ZERO.isNaN == orig(org.apache.commons.math.complex.Complex.ZERO.isNaN)
org.apache.commons.math.complex.Complex.ZERO.isInfinite == orig(org.apache.commons.math.complex.Complex.ZERO.isInfinite)
this.imaginary == orig(this.imaginary)
this.real == orig(this.real)
this.isNaN == orig(this.isNaN)
this.isInfinite == orig(this.isInfinite)
this.imaginary == 4.0
this.real == 3.0
this.isNaN == false
this.isInfinite == false
return.imaginary == Double.NaN
return.real == Double.NaN
return.isNaN == true
return.isInfinite == false
===========================================================================
org.apache.commons.math.complex.Complex.getArgument():::ENTER
this.imaginary == Double.NaN
this.real one of { 1.0, Double.NaN }
this.isNaN == true
this.isInfinite == false
===========================================================================
org.apache.commons.math.complex.Complex.getArgument():::EXIT
org.apache.commons.math.complex.Complex.I == orig(org.apache.commons.math.complex.Complex.I)
org.apache.commons.math.complex.Complex.NaN == orig(org.apache.commons.math.complex.Complex.NaN)
org.apache.commons.math.complex.Complex.INF == orig(org.apache.commons.math.complex.Complex.INF)
org.apache.commons.math.complex.Complex.ONE == orig(org.apache.commons.math.complex.Complex.ONE)
org.apache.commons.math.complex.Complex.ZERO == orig(org.apache.commons.math.complex.Complex.ZERO)
org.apache.commons.math.complex.Complex.I.imaginary == orig(org.apache.commons.math.complex.Complex.I.imaginary)
org.apache.commons.math.complex.Complex.I.real == orig(org.apache.commons.math.complex.Complex.I.real)
org.apache.commons.math.complex.Complex.I.isNaN == orig(org.apache.commons.math.complex.Complex.I.isNaN)
org.apache.commons.math.complex.Complex.I.isInfinite == orig(org.apache.commons.math.complex.Complex.I.isInfinite)
org.apache.commons.math.complex.Complex.NaN.isNaN == orig(org.apache.commons.math.complex.Complex.NaN.isNaN)
org.apache.commons.math.complex.Complex.NaN.isInfinite == orig(org.apache.commons.math.complex.Complex.NaN.isInfinite)
org.apache.commons.math.complex.Complex.INF.imaginary == orig(org.apache.commons.math.complex.Complex.INF.imaginary)
org.apache.commons.math.complex.Complex.INF.real == orig(org.apache.commons.math.complex.Complex.INF.real)
org.apache.commons.math.complex.Complex.INF.isNaN == orig(org.apache.commons.math.complex.Complex.INF.isNaN)
org.apache.commons.math.complex.Complex.INF.isInfinite == orig(org.apache.commons.math.complex.Complex.INF.isInfinite)
org.apache.commons.math.complex.Complex.ONE.imaginary == orig(org.apache.commons.math.complex.Complex.ONE.imaginary)
org.apache.commons.math.complex.Complex.ONE.real == orig(org.apache.commons.math.complex.Complex.ONE.real)
org.apache.commons.math.complex.Complex.ONE.isNaN == orig(org.apache.commons.math.complex.Complex.ONE.isNaN)
org.apache.commons.math.complex.Complex.ONE.isInfinite == orig(org.apache.commons.math.complex.Complex.ONE.isInfinite)
org.apache.commons.math.complex.Complex.ZERO.imaginary == orig(org.apache.commons.math.complex.Complex.ZERO.imaginary)
org.apache.commons.math.complex.Complex.ZERO.real == orig(org.apache.commons.math.complex.Complex.ZERO.real)
org.apache.commons.math.complex.Complex.ZERO.isNaN == orig(org.apache.commons.math.complex.Complex.ZERO.isNaN)
org.apache.commons.math.complex.Complex.ZERO.isInfinite == orig(org.apache.commons.math.complex.Complex.ZERO.isInfinite)
this.isNaN == orig(this.isNaN)
this.isInfinite == orig(this.isInfinite)
this.imaginary == Double.NaN
this.real one of { 1.0, Double.NaN }
this.isNaN == true
this.isInfinite == false
return == Double.NaN
===========================================================================
org.apache.commons.math.complex.Complex.getImaginary():::ENTER
this.imaginary == Double.NaN
this.real one of { 1.0, Double.NaN }
this.isNaN == true
this.isInfinite == false
===========================================================================
org.apache.commons.math.complex.Complex.getImaginary():::EXIT
org.apache.commons.math.complex.Complex.I == orig(org.apache.commons.math.complex.Complex.I)
org.apache.commons.math.complex.Complex.NaN == orig(org.apache.commons.math.complex.Complex.NaN)
org.apache.commons.math.complex.Complex.INF == orig(org.apache.commons.math.complex.Complex.INF)
org.apache.commons.math.complex.Complex.ONE == orig(org.apache.commons.math.complex.Complex.ONE)
org.apache.commons.math.complex.Complex.ZERO == orig(org.apache.commons.math.complex.Complex.ZERO)
org.apache.commons.math.complex.Complex.I.imaginary == orig(org.apache.commons.math.complex.Complex.I.imaginary)
org.apache.commons.math.complex.Complex.I.real == orig(org.apache.commons.math.complex.Complex.I.real)
org.apache.commons.math.complex.Complex.I.isNaN == orig(org.apache.commons.math.complex.Complex.I.isNaN)
org.apache.commons.math.complex.Complex.I.isInfinite == orig(org.apache.commons.math.complex.Complex.I.isInfinite)
org.apache.commons.math.complex.Complex.NaN.isNaN == orig(org.apache.commons.math.complex.Complex.NaN.isNaN)
org.apache.commons.math.complex.Complex.NaN.isInfinite == orig(org.apache.commons.math.complex.Complex.NaN.isInfinite)
org.apache.commons.math.complex.Complex.INF.imaginary == orig(org.apache.commons.math.complex.Complex.INF.imaginary)
org.apache.commons.math.complex.Complex.INF.real == orig(org.apache.commons.math.complex.Complex.INF.real)
org.apache.commons.math.complex.Complex.INF.isNaN == orig(org.apache.commons.math.complex.Complex.INF.isNaN)
org.apache.commons.math.complex.Complex.INF.isInfinite == orig(org.apache.commons.math.complex.Complex.INF.isInfinite)
org.apache.commons.math.complex.Complex.ONE.imaginary == orig(org.apache.commons.math.complex.Complex.ONE.imaginary)
org.apache.commons.math.complex.Complex.ONE.real == orig(org.apache.commons.math.complex.Complex.ONE.real)
org.apache.commons.math.complex.Complex.ONE.isNaN == orig(org.apache.commons.math.complex.Complex.ONE.isNaN)
org.apache.commons.math.complex.Complex.ONE.isInfinite == orig(org.apache.commons.math.complex.Complex.ONE.isInfinite)
org.apache.commons.math.complex.Complex.ZERO.imaginary == orig(org.apache.commons.math.complex.Complex.ZERO.imaginary)
org.apache.commons.math.complex.Complex.ZERO.real == orig(org.apache.commons.math.complex.Complex.ZERO.real)
org.apache.commons.math.complex.Complex.ZERO.isNaN == orig(org.apache.commons.math.complex.Complex.ZERO.isNaN)
org.apache.commons.math.complex.Complex.ZERO.isInfinite == orig(org.apache.commons.math.complex.Complex.ZERO.isInfinite)
this.isNaN == orig(this.isNaN)
this.isInfinite == orig(this.isInfinite)
this.imaginary == Double.NaN
this.real one of { 1.0, Double.NaN }
this.isNaN == true
this.isInfinite == false
return == Double.NaN
===========================================================================
org.apache.commons.math.complex.Complex.getReal():::ENTER
this.imaginary == Double.NaN
this.real one of { 1.0, Double.NaN }
this.isNaN == true
this.isInfinite == false
===========================================================================
org.apache.commons.math.complex.Complex.getReal():::EXIT
org.apache.commons.math.complex.Complex.I == orig(org.apache.commons.math.complex.Complex.I)
org.apache.commons.math.complex.Complex.NaN == orig(org.apache.commons.math.complex.Complex.NaN)
org.apache.commons.math.complex.Complex.INF == orig(org.apache.commons.math.complex.Complex.INF)
org.apache.commons.math.complex.Complex.ONE == orig(org.apache.commons.math.complex.Complex.ONE)
org.apache.commons.math.complex.Complex.ZERO == orig(org.apache.commons.math.complex.Complex.ZERO)
org.apache.commons.math.complex.Complex.I.imaginary == orig(org.apache.commons.math.complex.Complex.I.imaginary)
org.apache.commons.math.complex.Complex.I.real == orig(org.apache.commons.math.complex.Complex.I.real)
org.apache.commons.math.complex.Complex.I.isNaN == orig(org.apache.commons.math.complex.Complex.I.isNaN)
org.apache.commons.math.complex.Complex.I.isInfinite == orig(org.apache.commons.math.complex.Complex.I.isInfinite)
org.apache.commons.math.complex.Complex.NaN.isNaN == orig(org.apache.commons.math.complex.Complex.NaN.isNaN)
org.apache.commons.math.complex.Complex.NaN.isInfinite == orig(org.apache.commons.math.complex.Complex.NaN.isInfinite)
org.apache.commons.math.complex.Complex.INF.imaginary == orig(org.apache.commons.math.complex.Complex.INF.imaginary)
org.apache.commons.math.complex.Complex.INF.real == orig(org.apache.commons.math.complex.Complex.INF.real)
org.apache.commons.math.complex.Complex.INF.isNaN == orig(org.apache.commons.math.complex.Complex.INF.isNaN)
org.apache.commons.math.complex.Complex.INF.isInfinite == orig(org.apache.commons.math.complex.Complex.INF.isInfinite)
org.apache.commons.math.complex.Complex.ONE.imaginary == orig(org.apache.commons.math.complex.Complex.ONE.imaginary)
org.apache.commons.math.complex.Complex.ONE.real == orig(org.apache.commons.math.complex.Complex.ONE.real)
org.apache.commons.math.complex.Complex.ONE.isNaN == orig(org.apache.commons.math.complex.Complex.ONE.isNaN)
org.apache.commons.math.complex.Complex.ONE.isInfinite == orig(org.apache.commons.math.complex.Complex.ONE.isInfinite)
org.apache.commons.math.complex.Complex.ZERO.imaginary == orig(org.apache.commons.math.complex.Complex.ZERO.imaginary)
org.apache.commons.math.complex.Complex.ZERO.real == orig(org.apache.commons.math.complex.Complex.ZERO.real)
org.apache.commons.math.complex.Complex.ZERO.isNaN == orig(org.apache.commons.math.complex.Complex.ZERO.isNaN)
org.apache.commons.math.complex.Complex.ZERO.isInfinite == orig(org.apache.commons.math.complex.Complex.ZERO.isInfinite)
this.isNaN == orig(this.isNaN)
this.isInfinite == orig(this.isInfinite)
this.imaginary == Double.NaN
this.real one of { 1.0, Double.NaN }
this.isNaN == true
this.isInfinite == false
return one of { 1.0, Double.NaN }
===========================================================================
org.apache.commons.math.complex.Complex.isNaN():::ENTER
this has only one value
this.imaginary == Double.NaN
this.real == Double.NaN
this.isNaN == true
this.isInfinite == false
===========================================================================
org.apache.commons.math.complex.Complex.isNaN():::EXIT
org.apache.commons.math.complex.Complex.I == orig(org.apache.commons.math.complex.Complex.I)
org.apache.commons.math.complex.Complex.NaN == orig(org.apache.commons.math.complex.Complex.NaN)
org.apache.commons.math.complex.Complex.INF == orig(org.apache.commons.math.complex.Complex.INF)
org.apache.commons.math.complex.Complex.ONE == orig(org.apache.commons.math.complex.Complex.ONE)
org.apache.commons.math.complex.Complex.ZERO == orig(org.apache.commons.math.complex.Complex.ZERO)
org.apache.commons.math.complex.Complex.I.imaginary == orig(org.apache.commons.math.complex.Complex.I.imaginary)
org.apache.commons.math.complex.Complex.I.real == orig(org.apache.commons.math.complex.Complex.I.real)
org.apache.commons.math.complex.Complex.I.isNaN == orig(org.apache.commons.math.complex.Complex.I.isNaN)
org.apache.commons.math.complex.Complex.I.isInfinite == orig(org.apache.commons.math.complex.Complex.I.isInfinite)
org.apache.commons.math.complex.Complex.NaN.isNaN == orig(org.apache.commons.math.complex.Complex.NaN.isNaN)
org.apache.commons.math.complex.Complex.NaN.isInfinite == orig(org.apache.commons.math.complex.Complex.NaN.isInfinite)
org.apache.commons.math.complex.Complex.INF.imaginary == orig(org.apache.commons.math.complex.Complex.INF.imaginary)
org.apache.commons.math.complex.Complex.INF.real == orig(org.apache.commons.math.complex.Complex.INF.real)
org.apache.commons.math.complex.Complex.INF.isNaN == orig(org.apache.commons.math.complex.Complex.INF.isNaN)
org.apache.commons.math.complex.Complex.INF.isInfinite == orig(org.apache.commons.math.complex.Complex.INF.isInfinite)
org.apache.commons.math.complex.Complex.ONE.imaginary == orig(org.apache.commons.math.complex.Complex.ONE.imaginary)
org.apache.commons.math.complex.Complex.ONE.real == orig(org.apache.commons.math.complex.Complex.ONE.real)
org.apache.commons.math.complex.Complex.ONE.isNaN == orig(org.apache.commons.math.complex.Complex.ONE.isNaN)
org.apache.commons.math.complex.Complex.ONE.isInfinite == orig(org.apache.commons.math.complex.Complex.ONE.isInfinite)
org.apache.commons.math.complex.Complex.ZERO.imaginary == orig(org.apache.commons.math.complex.Complex.ZERO.imaginary)
org.apache.commons.math.complex.Complex.ZERO.real == orig(org.apache.commons.math.complex.Complex.ZERO.real)
org.apache.commons.math.complex.Complex.ZERO.isNaN == orig(org.apache.commons.math.complex.Complex.ZERO.isNaN)
org.apache.commons.math.complex.Complex.ZERO.isInfinite == orig(org.apache.commons.math.complex.Complex.ZERO.isInfinite)
this.isNaN == orig(this.isNaN)
this.isInfinite == orig(this.isInfinite)
this.imaginary == Double.NaN
this.real == Double.NaN
this.isNaN == true
this.isInfinite == false
return == true
===========================================================================
org.apache.commons.math.complex.Complex.isNaN():::EXIT;condition="return == true"
===========================================================================
org.apache.commons.math.complex.ComplexTest:::OBJECT
this has only one value
this.inf == Infinity
this.neginf == -Infinity
this.nan == Double.NaN
this.pi == 3.141592653589793
this.oneInf has only one value
org.apache.commons.math.complex.Complex.I has only one value
org.apache.commons.math.complex.Complex.NaN has only one value
org.apache.commons.math.complex.Complex.INF has only one value
org.apache.commons.math.complex.Complex.ONE has only one value
org.apache.commons.math.complex.Complex.ZERO has only one value
org.apache.commons.math.complex.Complex.I.imaginary == 1.0
org.apache.commons.math.complex.Complex.I.real == 0.0
org.apache.commons.math.complex.Complex.I.isNaN == false
org.apache.commons.math.complex.Complex.I.isInfinite == false
org.apache.commons.math.complex.Complex.NaN.imaginary == Double.NaN
org.apache.commons.math.complex.Complex.NaN.real == Double.NaN
org.apache.commons.math.complex.Complex.NaN.isNaN == true
org.apache.commons.math.complex.Complex.NaN.isInfinite == false
org.apache.commons.math.complex.Complex.INF.imaginary == Infinity
org.apache.commons.math.complex.Complex.INF.real == Infinity
org.apache.commons.math.complex.Complex.INF.isNaN == false
org.apache.commons.math.complex.Complex.INF.isInfinite == true
org.apache.commons.math.complex.Complex.ONE.imaginary == 0.0
org.apache.commons.math.complex.Complex.ONE.real == 1.0
org.apache.commons.math.complex.Complex.ONE.isNaN == false
org.apache.commons.math.complex.Complex.ONE.isInfinite == false
org.apache.commons.math.complex.Complex.ZERO.imaginary == 0.0
org.apache.commons.math.complex.Complex.ZERO.real == 0.0
org.apache.commons.math.complex.Complex.ZERO.isNaN == false
org.apache.commons.math.complex.Complex.ZERO.isInfinite == false
this.oneInf.imaginary == Infinity
this.oneInf.real == 1.0
this.oneInf.isNaN == false
this.oneInf.isInfinite == true
this.oneNegInf has only one value
this.oneNegInf.imaginary == -Infinity
this.oneNegInf.real == 1.0
this.oneNegInf.isNaN == false
this.oneNegInf.isInfinite == true
this.infOne has only one value
this.infOne.imaginary == 1.0
this.infOne.real == Infinity
this.infOne.isNaN == false
this.infOne.isInfinite == true
this.infZero has only one value
this.infZero.imaginary == 0.0
this.infZero.real == Infinity
this.infZero.isNaN == false
this.infZero.isInfinite == true
this.infNaN has only one value
this.infNaN.imaginary == Double.NaN
this.infNaN.real == Infinity
this.infNaN.isNaN == true
this.infNaN.isInfinite == false
this.infNegInf has only one value
this.infNegInf.imaginary == -Infinity
this.infNegInf.real == Infinity
this.infNegInf.isNaN == false
this.infNegInf.isInfinite == true
this.infInf has only one value
this.infInf.imaginary == Infinity
this.infInf.real == Infinity
this.infInf.isNaN == false
this.infInf.isInfinite == true
this.negInfInf has only one value
this.negInfInf.imaginary == Infinity
this.negInfInf.real == -Infinity
this.negInfInf.isNaN == false
this.negInfInf.isInfinite == true
this.negInfZero has only one value
this.negInfZero.imaginary == 0.0
this.negInfZero.real == -Infinity
this.negInfZero.isNaN == false
this.negInfZero.isInfinite == true
this.negInfOne has only one value
this.negInfOne.imaginary == 1.0
this.negInfOne.real == -Infinity
this.negInfOne.isNaN == false
this.negInfOne.isInfinite == true
this.negInfNaN has only one value
this.negInfNaN.imaginary == Double.NaN
this.negInfNaN.real == -Infinity
this.negInfNaN.isNaN == true
this.negInfNaN.isInfinite == false
this.negInfNegInf has only one value
this.negInfNegInf.imaginary == -Infinity
this.negInfNegInf.real == -Infinity
this.negInfNegInf.isNaN == false
this.negInfNegInf.isInfinite == true
this.oneNaN has only one value
this.oneNaN.imaginary == Double.NaN
this.oneNaN.real == 1.0
this.oneNaN.isNaN == true
this.oneNaN.isInfinite == false
this.zeroInf has only one value
this.zeroInf.imaginary == Infinity
this.zeroInf.real == 0.0
this.zeroInf.isNaN == false
this.zeroInf.isInfinite == true
this.zeroNaN has only one value
this.zeroNaN.imaginary == Double.NaN
this.zeroNaN.real == 0.0
this.zeroNaN.isNaN == true
this.zeroNaN.isInfinite == false
this.nanInf has only one value
this.nanInf.imaginary == Infinity
this.nanInf.real == Double.NaN
this.nanInf.isNaN == true
this.nanInf.isInfinite == false
this.nanNegInf has only one value
this.nanNegInf.imaginary == -Infinity
this.nanNegInf.real == Double.NaN
this.nanNegInf.isNaN == true
this.nanNegInf.isInfinite == false
this.nanZero has only one value
this.nanZero.imaginary == 0.0
this.nanZero.real == Double.NaN
this.nanZero.isNaN == true
this.nanZero.isInfinite == false
===========================================================================
org.apache.commons.math.complex.ComplexTest.ComplexTest():::EXIT
===========================================================================
org.apache.commons.math.complex.ComplexTest.testAddNaN():::ENTER
===========================================================================
org.apache.commons.math.complex.ComplexTest.testAddNaN():::EXIT
this.inf == orig(this.inf)
this.neginf == orig(this.neginf)
this.pi == orig(this.pi)
this.oneInf == orig(this.oneInf)
org.apache.commons.math.complex.Complex.I == orig(org.apache.commons.math.complex.Complex.I)
org.apache.commons.math.complex.Complex.NaN == orig(org.apache.commons.math.complex.Complex.NaN)
org.apache.commons.math.complex.Complex.INF == orig(org.apache.commons.math.complex.Complex.INF)
org.apache.commons.math.complex.Complex.ONE == orig(org.apache.commons.math.complex.Complex.ONE)
org.apache.commons.math.complex.Complex.ZERO == orig(org.apache.commons.math.complex.Complex.ZERO)
org.apache.commons.math.complex.Complex.I.imaginary == orig(org.apache.commons.math.complex.Complex.I.imaginary)
org.apache.commons.math.complex.Complex.I.real == orig(org.apache.commons.math.complex.Complex.I.real)
org.apache.commons.math.complex.Complex.I.isNaN == orig(org.apache.commons.math.complex.Complex.I.isNaN)
org.apache.commons.math.complex.Complex.I.isInfinite == orig(org.apache.commons.math.complex.Complex.I.isInfinite)
org.apache.commons.math.complex.Complex.NaN.isNaN == orig(org.apache.commons.math.complex.Complex.NaN.isNaN)
org.apache.commons.math.complex.Complex.NaN.isInfinite == orig(org.apache.commons.math.complex.Complex.NaN.isInfinite)
org.apache.commons.math.complex.Complex.INF.imaginary == orig(org.apache.commons.math.complex.Complex.INF.imaginary)
org.apache.commons.math.complex.Complex.INF.real == orig(org.apache.commons.math.complex.Complex.INF.real)
org.apache.commons.math.complex.Complex.INF.isNaN == orig(org.apache.commons.math.complex.Complex.INF.isNaN)
org.apache.commons.math.complex.Complex.INF.isInfinite == orig(org.apache.commons.math.complex.Complex.INF.isInfinite)
org.apache.commons.math.complex.Complex.ONE.imaginary == orig(org.apache.commons.math.complex.Complex.ONE.imaginary)
org.apache.commons.math.complex.Complex.ONE.real == orig(org.apache.commons.math.complex.Complex.ONE.real)
org.apache.commons.math.complex.Complex.ONE.isNaN == orig(org.apache.commons.math.complex.Complex.ONE.isNaN)
org.apache.commons.math.complex.Complex.ONE.isInfinite == orig(org.apache.commons.math.complex.Complex.ONE.isInfinite)
org.apache.commons.math.complex.Complex.ZERO.imaginary == orig(org.apache.commons.math.complex.Complex.ZERO.imaginary)
org.apache.commons.math.complex.Complex.ZERO.real == orig(org.apache.commons.math.complex.Complex.ZERO.real)
org.apache.commons.math.complex.Complex.ZERO.isNaN == orig(org.apache.commons.math.complex.Complex.ZERO.isNaN)
org.apache.commons.math.complex.Complex.ZERO.isInfinite == orig(org.apache.commons.math.complex.Complex.ZERO.isInfinite)
this.oneInf.imaginary == orig(this.oneInf.imaginary)
this.oneInf.real == orig(this.oneInf.real)
this.oneInf.isNaN == orig(this.oneInf.isNaN)
this.oneInf.isInfinite == orig(this.oneInf.isInfinite)
this.oneNegInf == orig(this.oneNegInf)
this.oneNegInf.imaginary == orig(this.oneNegInf.imaginary)
this.oneNegInf.real == orig(this.oneNegInf.real)
this.oneNegInf.isNaN == orig(this.oneNegInf.isNaN)
this.oneNegInf.isInfinite == orig(this.oneNegInf.isInfinite)
this.infOne == orig(this.infOne)
this.infOne.imaginary == orig(this.infOne.imaginary)
this.infOne.real == orig(this.infOne.real)
this.infOne.isNaN == orig(this.infOne.isNaN)
this.infOne.isInfinite == orig(this.infOne.isInfinite)
this.infZero == orig(this.infZero)
this.infZero.imaginary == orig(this.infZero.imaginary)
this.infZero.real == orig(this.infZero.real)
this.infZero.isNaN == orig(this.infZero.isNaN)
this.infZero.isInfinite == orig(this.infZero.isInfinite)
this.infNaN == orig(this.infNaN)
this.infNaN.real == orig(this.infNaN.real)
this.infNaN.isNaN == orig(this.infNaN.isNaN)
this.infNaN.isInfinite == orig(this.infNaN.isInfinite)
this.infNegInf == orig(this.infNegInf)
this.infNegInf.imaginary == orig(this.infNegInf.imaginary)
this.infNegInf.real == orig(this.infNegInf.real)
this.infNegInf.isNaN == orig(this.infNegInf.isNaN)
this.infNegInf.isInfinite == orig(this.infNegInf.isInfinite)
this.infInf == orig(this.infInf)
this.infInf.imaginary == orig(this.infInf.imaginary)
this.infInf.real == orig(this.infInf.real)
this.infInf.isNaN == orig(this.infInf.isNaN)
this.infInf.isInfinite == orig(this.infInf.isInfinite)
this.negInfInf == orig(this.negInfInf)
this.negInfInf.imaginary == orig(this.negInfInf.imaginary)
this.negInfInf.real == orig(this.negInfInf.real)
this.negInfInf.isNaN == orig(this.negInfInf.isNaN)
this.negInfInf.isInfinite == orig(this.negInfInf.isInfinite)
this.negInfZero == orig(this.negInfZero)
this.negInfZero.imaginary == orig(this.negInfZero.imaginary)
this.negInfZero.real == orig(this.negInfZero.real)
this.negInfZero.isNaN == orig(this.negInfZero.isNaN)
this.negInfZero.isInfinite == orig(this.negInfZero.isInfinite)
this.negInfOne == orig(this.negInfOne)
this.negInfOne.imaginary == orig(this.negInfOne.imaginary)
this.negInfOne.real == orig(this.negInfOne.real)
this.negInfOne.isNaN == orig(this.negInfOne.isNaN)
this.negInfOne.isInfinite == orig(this.negInfOne.isInfinite)
this.negInfNaN == orig(this.negInfNaN)
this.negInfNaN.real == orig(this.negInfNaN.real)
this.negInfNaN.isNaN == orig(this.negInfNaN.isNaN)
this.negInfNaN.isInfinite == orig(this.negInfNaN.isInfinite)
this.negInfNegInf == orig(this.negInfNegInf)
this.negInfNegInf.imaginary == orig(this.negInfNegInf.imaginary)
this.negInfNegInf.real == orig(this.negInfNegInf.real)
this.negInfNegInf.isNaN == orig(this.negInfNegInf.isNaN)
this.negInfNegInf.isInfinite == orig(this.negInfNegInf.isInfinite)
this.oneNaN == orig(this.oneNaN)
this.oneNaN.real == orig(this.oneNaN.real)
this.oneNaN.isNaN == orig(this.oneNaN.isNaN)
this.oneNaN.isInfinite == orig(this.oneNaN.isInfinite)
this.zeroInf == orig(this.zeroInf)
this.zeroInf.imaginary == orig(this.zeroInf.imaginary)
this.zeroInf.real == orig(this.zeroInf.real)
this.zeroInf.isNaN == orig(this.zeroInf.isNaN)
this.zeroInf.isInfinite == orig(this.zeroInf.isInfinite)
this.zeroNaN == orig(this.zeroNaN)
this.zeroNaN.real == orig(this.zeroNaN.real)
this.zeroNaN.isNaN == orig(this.zeroNaN.isNaN)
this.zeroNaN.isInfinite == orig(this.zeroNaN.isInfinite)
this.nanInf == orig(this.nanInf)
this.nanInf.imaginary == orig(this.nanInf.imaginary)
this.nanInf.isNaN == orig(this.nanInf.isNaN)
this.nanInf.isInfinite == orig(this.nanInf.isInfinite)
this.nanNegInf == orig(this.nanNegInf)
this.nanNegInf.imaginary == orig(this.nanNegInf.imaginary)
this.nanNegInf.isNaN == orig(this.nanNegInf.isNaN)
this.nanNegInf.isInfinite == orig(this.nanNegInf.isInfinite)
this.nanZero == orig(this.nanZero)
this.nanZero.imaginary == orig(this.nanZero.imaginary)
this.nanZero.isNaN == orig(this.nanZero.isNaN)
this.nanZero.isInfinite == orig(this.nanZero.isInfinite)
===========================================================================
org.apache.commons.math.util.FastMath:::CLASS
===========================================================================
org.apache.commons.math.util.FastMath.buildSinCosTables():::ENTER
===========================================================================
org.apache.commons.math.util.FastMath.buildSinCosTables():::EXIT
===========================================================================
org.apache.commons.math.util.FastMath.expint(int, double[]):::ENTER
result has only one value
result != null
size(result[]) == 2
===========================================================================
org.apache.commons.math.util.FastMath.expint(int, double[]):::EXIT
===========================================================================
org.apache.commons.math.util.FastMath.quadMult(double[], double[], double[]):::ENTER
a != null
a[] sorted by >
b != null
b[] sorted by >
result != null
size(a[]) == 2
size(b[]) == 2
size(result[]) == 2
===========================================================================
org.apache.commons.math.util.FastMath.quadMult(double[], double[], double[]):::EXIT
a[] == orig(a[])
b[] == orig(b[])
a[] sorted by >
b[] sorted by >
===========================================================================
org.apache.commons.math.util.FastMath.resplit(double[]):::ENTER
a != null
size(a[]) == 2
===========================================================================
org.apache.commons.math.util.FastMath.resplit(double[]):::EXIT
===========================================================================
org.apache.commons.math.util.FastMath.slowCos(double, double[]):::ENTER
result has only one value
result[] sorted by >=
size(result[]) == 2
===========================================================================
org.apache.commons.math.util.FastMath.slowCos(double, double[]):::EXIT
result[] sorted by >
result[] > orig(result[]) (lexically)
result[] >= orig(result[]) (lexically)
===========================================================================
org.apache.commons.math.util.FastMath.slowLog(double):::ENTER
===========================================================================
org.apache.commons.math.util.FastMath.slowLog(double):::EXIT
return != null
return[] sorted by >=
size(return[]) == 2
===========================================================================
org.apache.commons.math.util.FastMath.slowSin(double, double[]):::ENTER
result has only one value
result[] sorted by >=
size(result[]) == 2
===========================================================================
org.apache.commons.math.util.FastMath.slowSin(double, double[]):::EXIT
result[] sorted by >=
result[] <= orig(result[]) (lexically)
===========================================================================
org.apache.commons.math.util.FastMath.slowexp(double, double[]):::ENTER
result has only one value
result != null
size(result[]) == 2
===========================================================================
org.apache.commons.math.util.FastMath.slowexp(double, double[]):::EXIT
result[] sorted by >
===========================================================================
org.apache.commons.math.util.FastMath.split(double, double[]):::ENTER
split != null
size(split[]) == 2
===========================================================================
org.apache.commons.math.util.FastMath.split(double, double[]):::EXIT
===========================================================================
org.apache.commons.math.util.FastMath.splitAdd(double[], double[], double[]):::ENTER
a != null
b != null
b[] elements <= 2.0
ans != null
ans[] sorted by >=
size(a[]) == 2
size(b[]) == 2
size(ans[]) == 2
===========================================================================
org.apache.commons.math.util.FastMath.splitAdd(double[], double[], double[]):::EXIT
b[] == orig(b[])
b[] elements <= 2.0
===========================================================================
org.apache.commons.math.util.FastMath.splitMult(double[], double[], double[]):::ENTER
a != null
b != null
ans != null
size(a[]) == 2
size(b[]) == 2
size(ans[]) == 2
===========================================================================
org.apache.commons.math.util.FastMath.splitMult(double[], double[], double[]):::EXIT
a[] == orig(a[])
b[] == orig(b[])
===========================================================================
org.apache.commons.math.util.FastMath.splitReciprocal(double[], double[]):::ENTER
in != null
result != null
result[] elements <= 1.0
size(in[]) == 2
size(result[]) == 2
===========================================================================
org.apache.commons.math.util.FastMath.splitReciprocal(double[], double[]):::EXIT
in[] == orig(in[])
