===========================================================================
org.apache.commons.math.util.MathUtils:::CLASS
org.apache.commons.math.util.MathUtils.factorials has only one value
org.apache.commons.math.util.MathUtils.factorials != null
org.apache.commons.math.util.MathUtils.factorials[] == [1, 1, 2, 6, 24, 120, 720, 5040, 40320, 362880, 3628800, 39916800, 479001600, 6227020800, 87178291200, 1307674368000, 20922789888000, 355687428096000, 6402373705728000, 121645100408832000, 2432902008176640000]
org.apache.commons.math.util.MathUtils.factorials[] elements >= 1
org.apache.commons.math.util.MathUtils.factorials[] sorted by <=
size(org.apache.commons.math.util.MathUtils.factorials[]) == 21
===========================================================================
org.apache.commons.math.util.MathUtils.factorial(int):::ENTER
===========================================================================
org.apache.commons.math.util.MathUtils.factorial(int):::EXIT
org.apache.commons.math.util.MathUtils.factorials == orig(org.apache.commons.math.util.MathUtils.factorials)
org.apache.commons.math.util.MathUtils.factorials[] == orig(org.apache.commons.math.util.MathUtils.factorials[])
===========================================================================
org.apache.commons.math.util.MathUtils.factorialDouble(int):::ENTER
===========================================================================
org.apache.commons.math.util.MathUtils.factorialDouble(int):::EXIT
org.apache.commons.math.util.MathUtils.factorials == orig(org.apache.commons.math.util.MathUtils.factorials)
org.apache.commons.math.util.MathUtils.factorials[] == orig(org.apache.commons.math.util.MathUtils.factorials[])
===========================================================================
org.apache.commons.math.util.MathUtils.factorialLog(int):::ENTER
n >= 1
===========================================================================
org.apache.commons.math.util.MathUtils.factorialLog(int):::EXIT
org.apache.commons.math.util.MathUtils.factorials == orig(org.apache.commons.math.util.MathUtils.factorials)
org.apache.commons.math.util.MathUtils.factorials[] == orig(org.apache.commons.math.util.MathUtils.factorials[])
===========================================================================
org.apache.commons.math.util.MathUtilsTest:::OBJECT
===========================================================================
org.apache.commons.math.util.MathUtilsTest.MathUtilsTest(java.lang.String):::ENTER
name != null
===========================================================================
org.apache.commons.math.util.MathUtilsTest.MathUtilsTest(java.lang.String):::EXIT
name.toString == orig(name.toString)
===========================================================================
org.apache.commons.math.util.MathUtilsTest.factorial(int):::ENTER
this has only one value
n >= 1
===========================================================================
org.apache.commons.math.util.MathUtilsTest.factorial(int):::EXIT
return >= 1
===========================================================================
org.apache.commons.math.util.MathUtilsTest.suite():::EXIT
return has only one value
return.getClass().getName() == junit.framework.TestSuite.class
