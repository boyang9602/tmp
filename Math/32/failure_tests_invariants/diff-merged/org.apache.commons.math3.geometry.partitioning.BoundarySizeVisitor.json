{"name": "org.apache.commons.math3.geometry.partitioning.BoundarySizeVisitor", "children": [{"name": "OBJECT", "children": [{"name": "b.inv.output", "children": [{"name": "b.inv.output", "children": [{"name": "N/A"}]}]}, {"name": "Patch34.inv.output", "children": [{"name": "this has only one value"}, {"name": "this.boundarySize >= 0.0"}]}, {"name": "f.inv.output", "children": [{"name": "this has only one value"}, {"name": "this.boundarySize >= 0.0"}]}, {"name": "Patch35.inv.output", "children": [{"name": "this has only one value"}, {"name": "this.boundarySize >= 0.0"}]}]}, {"name": "visitOrder(org.apache.commons.math3.geometry.partitioning.BSPTree)", "children": [{"name": "ENTER", "children": [{"name": "b.inv.output", "children": [{"name": "b.inv.output", "children": [{"name": "N/A"}]}]}, {"name": "Patch34.inv.output", "children": [{"name": "this.boundarySize one of { 0.0, 21.99999594688441 }"}, {"name": "node.parent.cut.getClass().getName() == org.apache.commons.math3.geometry.euclidean.threed.SubPlane.class"}, {"name": "node.plus.cut == null"}, {"name": "node.plus.attribute.getClass().getName() == java.lang.Boolean.class"}, {"name": "this.boundarySize == 0.0"}, {"name": "node.plus.attribute has only one value"}, {"name": "node.parent.attribute.getClass().getName() == org.apache.commons.math3.geometry.partitioning.BoundaryAttribute.class"}, {"name": "node.plus.plus == null"}, {"name": "node.attribute.getClass().getName() == org.apache.commons.math3.geometry.partitioning.BoundaryAttribute.class"}, {"name": "node.minus.cut.getClass().getName() == org.apache.commons.math3.geometry.euclidean.threed.SubPlane.class"}, {"name": "node.cut.getClass().getName() == org.apache.commons.math3.geometry.euclidean.threed.SubPlane.class"}, {"name": "node.plus.minus == null"}, {"name": "node.plus.cut.getClass().getName() == org.apache.commons.math3.geometry.euclidean.threed.SubPlane.class"}]}, {"name": "f.inv.output", "children": [{"name": "this.boundarySize one of { 0.0, 21.99999594688441 }"}, {"name": "node.parent.cut.getClass().getName() == org.apache.commons.math3.geometry.euclidean.threed.SubPlane.class"}, {"name": "node.plus.cut == null"}, {"name": "node.plus.attribute.getClass().getName() == java.lang.Boolean.class"}, {"name": "this.boundarySize == 0.0"}, {"name": "node.plus.attribute has only one value"}, {"name": "node.parent.attribute.getClass().getName() == org.apache.commons.math3.geometry.partitioning.BoundaryAttribute.class"}, {"name": "node.plus.plus == null"}, {"name": "node.attribute.getClass().getName() == org.apache.commons.math3.geometry.partitioning.BoundaryAttribute.class"}, {"name": "node.minus.cut.getClass().getName() == org.apache.commons.math3.geometry.euclidean.threed.SubPlane.class"}, {"name": "node.cut.getClass().getName() == org.apache.commons.math3.geometry.euclidean.threed.SubPlane.class"}, {"name": "node.plus.minus == null"}, {"name": "node.plus.cut.getClass().getName() == org.apache.commons.math3.geometry.euclidean.threed.SubPlane.class"}]}, {"name": "Patch35.inv.output", "children": [{"name": "this.boundarySize one of { 0.0, 21.99999594688441 }"}, {"name": "node.parent.cut.getClass().getName() == org.apache.commons.math3.geometry.euclidean.threed.SubPlane.class"}, {"name": "node.plus.cut == null"}, {"name": "node.plus.attribute.getClass().getName() == java.lang.Boolean.class"}, {"name": "this.boundarySize == 0.0"}, {"name": "node.plus.attribute has only one value"}, {"name": "node.parent.attribute.getClass().getName() == org.apache.commons.math3.geometry.partitioning.BoundaryAttribute.class"}, {"name": "node.plus.plus == null"}, {"name": "node.attribute.getClass().getName() == org.apache.commons.math3.geometry.partitioning.BoundaryAttribute.class"}, {"name": "node.minus.cut.getClass().getName() == org.apache.commons.math3.geometry.euclidean.threed.SubPlane.class"}, {"name": "node.cut.getClass().getName() == org.apache.commons.math3.geometry.euclidean.threed.SubPlane.class"}, {"name": "node.plus.minus == null"}, {"name": "node.plus.cut.getClass().getName() == org.apache.commons.math3.geometry.euclidean.threed.SubPlane.class"}]}]}, {"name": "EXIT", "children": [{"name": "b.inv.output", "children": [{"name": "b.inv.output", "children": [{"name": "N/A"}]}]}, {"name": "Patch34.inv.output", "children": [{"name": "this.boundarySize one of { 0.0, 21.99999594688441 }"}, {"name": "node.minus.parent == orig(node.minus.parent)"}, {"name": "node.parent.attribute == orig(node.parent.attribute)"}, {"name": "node.attribute == orig(node.attribute)"}, {"name": "node.plus.attribute.getClass().getName() == java.lang.Boolean.class"}, {"name": "node.plus.cut.getClass().getName() == orig(node.plus.cut.getClass().getName())"}, {"name": "org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.MINUS_SUB_PLUS has only one value"}, {"name": "node.parent.cut == orig(node.parent.cut)"}, {"name": "org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.$VALUES[].getClass().getName() elements == org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor.Order.class"}, {"name": "node.plus.cut == orig(node.plus.cut)"}, {"name": "node.plus.cut.getClass().getName() == org.apache.commons.math3.geometry.euclidean.threed.SubPlane.class"}, {"name": "node.parent.attribute.getClass().getName() == orig(node.parent.attribute.getClass().getName())"}, {"name": "node.minus.attribute.getClass().getName() == orig(node.minus.attribute.getClass().getName())"}, {"name": "org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.PLUS_SUB_MINUS has only one value"}, {"name": "return has only one value"}, {"name": "node.parent.cut.getClass().getName() == orig(node.parent.cut.getClass().getName())"}, {"name": "node.minus == orig(node.minus)"}, {"name": "node.minus.plus == orig(node.minus.plus)"}, {"name": "org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.SUB_PLUS_MINUS has only one value"}, {"name": "org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.$VALUES[] contains no nulls and has only one value, of length 6"}, {"name": "node.cut.getClass().getName() == orig(node.cut.getClass().getName())"}, {"name": "node.minus.cut.getClass().getName() == org.apache.commons.math3.geometry.euclidean.threed.SubPlane.class"}, {"name": "node.parent == orig(node.parent)"}, {"name": "node.plus.plus == null"}, {"name": "size(org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.$VALUES[]) == 6"}, {"name": "org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.$VALUES.getClass().getName() == org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order[].class"}, {"name": "node.parent.minus == orig(node.parent.minus)"}, {"name": "org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.MINUS_PLUS_SUB has only one value"}, {"name": "node.plus.parent == orig(node.plus.parent)"}, {"name": "node.plus.attribute == orig(node.plus.attribute)"}, {"name": "node.minus.attribute == orig(node.minus.attribute)"}, {"name": "node.parent.plus == orig(node.parent.plus)"}, {"name": "node.plus.cut == null"}, {"name": "this.boundarySize == 0.0"}, {"name": "org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.$VALUES[].getClass().getName() == [org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor.Order, org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor.Order, org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor.Order, org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor.Order, org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor.Order, org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor.Order]"}, {"name": "this.boundarySize == orig(this.boundarySize)"}, {"name": "node.plus.minus == orig(node.plus.minus)"}, {"name": "node.minus.cut.getClass().getName() == orig(node.minus.cut.getClass().getName())"}, {"name": "node.cut.getClass().getName() == org.apache.commons.math3.geometry.euclidean.threed.SubPlane.class"}, {"name": "node.minus.minus == orig(node.minus.minus)"}, {"name": "node.attribute.getClass().getName() == orig(node.attribute.getClass().getName())"}, {"name": "node.plus.attribute.getClass().getName() == orig(node.plus.attribute.getClass().getName())"}, {"name": "node.cut == orig(node.cut)"}, {"name": "node.plus.plus == orig(node.plus.plus)"}, {"name": "node.parent.cut.getClass().getName() == org.apache.commons.math3.geometry.euclidean.threed.SubPlane.class"}, {"name": "node.parent.parent == orig(node.parent.parent)"}, {"name": "node.plus.attribute has only one value"}, {"name": "org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.SUB_MINUS_PLUS has only one value"}, {"name": "org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.$VALUES has only one value"}, {"name": "node.parent.attribute.getClass().getName() == org.apache.commons.math3.geometry.partitioning.BoundaryAttribute.class"}, {"name": "node.attribute.getClass().getName() == org.apache.commons.math3.geometry.partitioning.BoundaryAttribute.class"}, {"name": "org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.PLUS_MINUS_SUB has only one value"}, {"name": "node.plus == orig(node.plus)"}, {"name": "node.plus.minus == null"}, {"name": "node.minus.cut == orig(node.minus.cut)"}]}, {"name": "f.inv.output", "children": [{"name": "this.boundarySize one of { 0.0, 21.99999594688441 }"}, {"name": "node.minus.parent == orig(node.minus.parent)"}, {"name": "node.parent.attribute == orig(node.parent.attribute)"}, {"name": "node.attribute == orig(node.attribute)"}, {"name": "node.plus.attribute.getClass().getName() == java.lang.Boolean.class"}, {"name": "node.plus.cut.getClass().getName() == orig(node.plus.cut.getClass().getName())"}, {"name": "org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.MINUS_SUB_PLUS has only one value"}, {"name": "node.parent.cut == orig(node.parent.cut)"}, {"name": "org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.$VALUES[].getClass().getName() elements == org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor.Order.class"}, {"name": "node.plus.cut == orig(node.plus.cut)"}, {"name": "node.plus.cut.getClass().getName() == org.apache.commons.math3.geometry.euclidean.threed.SubPlane.class"}, {"name": "node.parent.attribute.getClass().getName() == orig(node.parent.attribute.getClass().getName())"}, {"name": "node.minus.attribute.getClass().getName() == orig(node.minus.attribute.getClass().getName())"}, {"name": "org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.PLUS_SUB_MINUS has only one value"}, {"name": "return has only one value"}, {"name": "node.parent.cut.getClass().getName() == orig(node.parent.cut.getClass().getName())"}, {"name": "node.minus == orig(node.minus)"}, {"name": "node.minus.plus == orig(node.minus.plus)"}, {"name": "org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.SUB_PLUS_MINUS has only one value"}, {"name": "org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.$VALUES[] contains no nulls and has only one value, of length 6"}, {"name": "node.cut.getClass().getName() == orig(node.cut.getClass().getName())"}, {"name": "node.minus.cut.getClass().getName() == org.apache.commons.math3.geometry.euclidean.threed.SubPlane.class"}, {"name": "node.parent == orig(node.parent)"}, {"name": "node.plus.plus == null"}, {"name": "size(org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.$VALUES[]) == 6"}, {"name": "org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.$VALUES.getClass().getName() == org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order[].class"}, {"name": "node.parent.minus == orig(node.parent.minus)"}, {"name": "org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.MINUS_PLUS_SUB has only one value"}, {"name": "node.plus.parent == orig(node.plus.parent)"}, {"name": "node.plus.attribute == orig(node.plus.attribute)"}, {"name": "node.minus.attribute == orig(node.minus.attribute)"}, {"name": "node.parent.plus == orig(node.parent.plus)"}, {"name": "node.plus.cut == null"}, {"name": "this.boundarySize == 0.0"}, {"name": "org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.$VALUES[].getClass().getName() == [org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor.Order, org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor.Order, org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor.Order, org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor.Order, org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor.Order, org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor.Order]"}, {"name": "this.boundarySize == orig(this.boundarySize)"}, {"name": "node.plus.minus == orig(node.plus.minus)"}, {"name": "node.minus.cut.getClass().getName() == orig(node.minus.cut.getClass().getName())"}, {"name": "node.cut.getClass().getName() == org.apache.commons.math3.geometry.euclidean.threed.SubPlane.class"}, {"name": "node.minus.minus == orig(node.minus.minus)"}, {"name": "node.attribute.getClass().getName() == orig(node.attribute.getClass().getName())"}, {"name": "node.plus.attribute.getClass().getName() == orig(node.plus.attribute.getClass().getName())"}, {"name": "node.cut == orig(node.cut)"}, {"name": "node.plus.plus == orig(node.plus.plus)"}, {"name": "node.parent.cut.getClass().getName() == org.apache.commons.math3.geometry.euclidean.threed.SubPlane.class"}, {"name": "node.parent.parent == orig(node.parent.parent)"}, {"name": "node.plus.attribute has only one value"}, {"name": "org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.SUB_MINUS_PLUS has only one value"}, {"name": "org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.$VALUES has only one value"}, {"name": "node.parent.attribute.getClass().getName() == org.apache.commons.math3.geometry.partitioning.BoundaryAttribute.class"}, {"name": "node.attribute.getClass().getName() == org.apache.commons.math3.geometry.partitioning.BoundaryAttribute.class"}, {"name": "org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.PLUS_MINUS_SUB has only one value"}, {"name": "node.plus == orig(node.plus)"}, {"name": "node.plus.minus == null"}, {"name": "node.minus.cut == orig(node.minus.cut)"}]}, {"name": "Patch35.inv.output", "children": [{"name": "this.boundarySize one of { 0.0, 21.99999594688441 }"}, {"name": "node.minus.parent == orig(node.minus.parent)"}, {"name": "node.parent.attribute == orig(node.parent.attribute)"}, {"name": "node.attribute == orig(node.attribute)"}, {"name": "node.plus.attribute.getClass().getName() == java.lang.Boolean.class"}, {"name": "node.plus.cut.getClass().getName() == orig(node.plus.cut.getClass().getName())"}, {"name": "org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.MINUS_SUB_PLUS has only one value"}, {"name": "node.parent.cut == orig(node.parent.cut)"}, {"name": "org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.$VALUES[].getClass().getName() elements == org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor.Order.class"}, {"name": "node.plus.cut == orig(node.plus.cut)"}, {"name": "node.plus.cut.getClass().getName() == org.apache.commons.math3.geometry.euclidean.threed.SubPlane.class"}, {"name": "node.parent.attribute.getClass().getName() == orig(node.parent.attribute.getClass().getName())"}, {"name": "node.minus.attribute.getClass().getName() == orig(node.minus.attribute.getClass().getName())"}, {"name": "org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.PLUS_SUB_MINUS has only one value"}, {"name": "return has only one value"}, {"name": "node.parent.cut.getClass().getName() == orig(node.parent.cut.getClass().getName())"}, {"name": "node.minus == orig(node.minus)"}, {"name": "node.minus.plus == orig(node.minus.plus)"}, {"name": "org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.SUB_PLUS_MINUS has only one value"}, {"name": "org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.$VALUES[] contains no nulls and has only one value, of length 6"}, {"name": "node.cut.getClass().getName() == orig(node.cut.getClass().getName())"}, {"name": "node.minus.cut.getClass().getName() == org.apache.commons.math3.geometry.euclidean.threed.SubPlane.class"}, {"name": "node.parent == orig(node.parent)"}, {"name": "node.plus.plus == null"}, {"name": "size(org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.$VALUES[]) == 6"}, {"name": "org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.$VALUES.getClass().getName() == org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order[].class"}, {"name": "node.parent.minus == orig(node.parent.minus)"}, {"name": "org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.MINUS_PLUS_SUB has only one value"}, {"name": "node.plus.parent == orig(node.plus.parent)"}, {"name": "node.plus.attribute == orig(node.plus.attribute)"}, {"name": "node.minus.attribute == orig(node.minus.attribute)"}, {"name": "node.parent.plus == orig(node.parent.plus)"}, {"name": "node.plus.cut == null"}, {"name": "this.boundarySize == 0.0"}, {"name": "org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.$VALUES[].getClass().getName() == [org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor.Order, org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor.Order, org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor.Order, org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor.Order, org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor.Order, org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor.Order]"}, {"name": "this.boundarySize == orig(this.boundarySize)"}, {"name": "node.plus.minus == orig(node.plus.minus)"}, {"name": "node.minus.cut.getClass().getName() == orig(node.minus.cut.getClass().getName())"}, {"name": "node.cut.getClass().getName() == org.apache.commons.math3.geometry.euclidean.threed.SubPlane.class"}, {"name": "node.minus.minus == orig(node.minus.minus)"}, {"name": "node.attribute.getClass().getName() == orig(node.attribute.getClass().getName())"}, {"name": "node.plus.attribute.getClass().getName() == orig(node.plus.attribute.getClass().getName())"}, {"name": "node.cut == orig(node.cut)"}, {"name": "node.plus.plus == orig(node.plus.plus)"}, {"name": "node.parent.cut.getClass().getName() == org.apache.commons.math3.geometry.euclidean.threed.SubPlane.class"}, {"name": "node.parent.parent == orig(node.parent.parent)"}, {"name": "node.plus.attribute has only one value"}, {"name": "org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.SUB_MINUS_PLUS has only one value"}, {"name": "org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.$VALUES has only one value"}, {"name": "node.parent.attribute.getClass().getName() == org.apache.commons.math3.geometry.partitioning.BoundaryAttribute.class"}, {"name": "node.attribute.getClass().getName() == org.apache.commons.math3.geometry.partitioning.BoundaryAttribute.class"}, {"name": "org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.PLUS_MINUS_SUB has only one value"}, {"name": "node.plus == orig(node.plus)"}, {"name": "node.plus.minus == null"}, {"name": "node.minus.cut == orig(node.minus.cut)"}]}]}]}, {"name": "visitLeafNode(org.apache.commons.math3.geometry.partitioning.BSPTree)", "children": [{"name": "ENTER", "children": [{"name": "b.inv.output", "children": [{"name": "b.inv.output", "children": [{"name": "N/A"}]}]}, {"name": "Patch34.inv.output", "children": [{"name": "node.minus == null"}, {"name": "node.attribute.getClass().getName() == java.lang.Boolean.class"}, {"name": "node.parent.cut.getClass().getName() == org.apache.commons.math3.geometry.euclidean.threed.SubPlane.class"}, {"name": "node.parent.attribute.getClass().getName() == org.apache.commons.math3.geometry.partitioning.BoundaryAttribute.class"}, {"name": "node.cut == null"}, {"name": "node.plus == null"}]}, {"name": "f.inv.output", "children": [{"name": "node.minus == null"}, {"name": "node.attribute.getClass().getName() == java.lang.Boolean.class"}, {"name": "node.parent.cut.getClass().getName() == org.apache.commons.math3.geometry.euclidean.threed.SubPlane.class"}, {"name": "node.parent.attribute.getClass().getName() == org.apache.commons.math3.geometry.partitioning.BoundaryAttribute.class"}, {"name": "node.cut == null"}, {"name": "node.plus == null"}]}, {"name": "Patch35.inv.output", "children": [{"name": "node.minus == null"}, {"name": "node.attribute.getClass().getName() == java.lang.Boolean.class"}, {"name": "node.parent.cut.getClass().getName() == org.apache.commons.math3.geometry.euclidean.threed.SubPlane.class"}, {"name": "node.parent.attribute.getClass().getName() == org.apache.commons.math3.geometry.partitioning.BoundaryAttribute.class"}, {"name": "node.cut == null"}, {"name": "node.plus == null"}]}]}, {"name": "EXIT", "children": [{"name": "b.inv.output", "children": [{"name": "b.inv.output", "children": [{"name": "N/A"}]}]}, {"name": "Patch34.inv.output", "children": [{"name": "node.cut == orig(node.cut)"}, {"name": "node.minus == null"}, {"name": "node.attribute.getClass().getName() == java.lang.Boolean.class"}, {"name": "node.attribute == orig(node.attribute)"}, {"name": "node.parent.cut.getClass().getName() == org.apache.commons.math3.geometry.euclidean.threed.SubPlane.class"}, {"name": "node.parent.parent == orig(node.parent.parent)"}, {"name": "node.parent.plus == orig(node.parent.plus)"}, {"name": "node.parent.cut.getClass().getName() == orig(node.parent.cut.getClass().getName())"}, {"name": "this.boundarySize == orig(this.boundarySize)"}, {"name": "node.parent.attribute.getClass().getName() == org.apache.commons.math3.geometry.partitioning.BoundaryAttribute.class"}, {"name": "node.parent.attribute == orig(node.parent.attribute)"}, {"name": "node.cut == null"}, {"name": "node.plus == orig(node.plus)"}, {"name": "node.minus == orig(node.minus)"}, {"name": "node.parent.cut == orig(node.parent.cut)"}, {"name": "node.plus == null"}, {"name": "node.parent == orig(node.parent)"}, {"name": "node.parent.minus == orig(node.parent.minus)"}, {"name": "node.attribute.getClass().getName() == orig(node.attribute.getClass().getName())"}, {"name": "node.parent.attribute.getClass().getName() == orig(node.parent.attribute.getClass().getName())"}]}, {"name": "f.inv.output", "children": [{"name": "node.cut == orig(node.cut)"}, {"name": "node.minus == null"}, {"name": "node.attribute.getClass().getName() == java.lang.Boolean.class"}, {"name": "node.attribute == orig(node.attribute)"}, {"name": "node.parent.cut.getClass().getName() == org.apache.commons.math3.geometry.euclidean.threed.SubPlane.class"}, {"name": "node.parent.parent == orig(node.parent.parent)"}, {"name": "node.parent.plus == orig(node.parent.plus)"}, {"name": "node.parent.cut.getClass().getName() == orig(node.parent.cut.getClass().getName())"}, {"name": "this.boundarySize == orig(this.boundarySize)"}, {"name": "node.parent.attribute.getClass().getName() == org.apache.commons.math3.geometry.partitioning.BoundaryAttribute.class"}, {"name": "node.parent.attribute == orig(node.parent.attribute)"}, {"name": "node.cut == null"}, {"name": "node.plus == orig(node.plus)"}, {"name": "node.minus == orig(node.minus)"}, {"name": "node.parent.cut == orig(node.parent.cut)"}, {"name": "node.plus == null"}, {"name": "node.parent == orig(node.parent)"}, {"name": "node.parent.minus == orig(node.parent.minus)"}, {"name": "node.attribute.getClass().getName() == orig(node.attribute.getClass().getName())"}, {"name": "node.parent.attribute.getClass().getName() == orig(node.parent.attribute.getClass().getName())"}]}, {"name": "Patch35.inv.output", "children": [{"name": "node.cut == orig(node.cut)"}, {"name": "node.minus == null"}, {"name": "node.attribute.getClass().getName() == java.lang.Boolean.class"}, {"name": "node.attribute == orig(node.attribute)"}, {"name": "node.parent.cut.getClass().getName() == org.apache.commons.math3.geometry.euclidean.threed.SubPlane.class"}, {"name": "node.parent.parent == orig(node.parent.parent)"}, {"name": "node.parent.plus == orig(node.parent.plus)"}, {"name": "node.parent.cut.getClass().getName() == orig(node.parent.cut.getClass().getName())"}, {"name": "this.boundarySize == orig(this.boundarySize)"}, {"name": "node.parent.attribute.getClass().getName() == org.apache.commons.math3.geometry.partitioning.BoundaryAttribute.class"}, {"name": "node.parent.attribute == orig(node.parent.attribute)"}, {"name": "node.cut == null"}, {"name": "node.plus == orig(node.plus)"}, {"name": "node.minus == orig(node.minus)"}, {"name": "node.parent.cut == orig(node.parent.cut)"}, {"name": "node.plus == null"}, {"name": "node.parent == orig(node.parent)"}, {"name": "node.parent.minus == orig(node.parent.minus)"}, {"name": "node.attribute.getClass().getName() == orig(node.attribute.getClass().getName())"}, {"name": "node.parent.attribute.getClass().getName() == orig(node.parent.attribute.getClass().getName())"}]}]}]}, {"name": "getSize()", "children": [{"name": "ENTER", "children": [{"name": "b.inv.output", "children": [{"name": "b.inv.output", "children": [{"name": "N/A"}]}]}, {"name": "Patch34.inv.output", "children": [{"name": "this.boundarySize == 23.999995946884667"}]}, {"name": "f.inv.output", "children": [{"name": "this.boundarySize == 23.999995946884667"}]}, {"name": "Patch35.inv.output", "children": [{"name": "this.boundarySize == 23.999995946884667"}]}]}, {"name": "EXIT", "children": [{"name": "b.inv.output", "children": [{"name": "b.inv.output", "children": [{"name": "N/A"}]}]}, {"name": "Patch34.inv.output", "children": [{"name": "this.boundarySize == orig(this.boundarySize)"}, {"name": "return == 23.999995946884667"}, {"name": "this.boundarySize == 23.999995946884667"}]}, {"name": "f.inv.output", "children": [{"name": "this.boundarySize == orig(this.boundarySize)"}, {"name": "return == 23.999995946884667"}, {"name": "this.boundarySize == 23.999995946884667"}]}, {"name": "Patch35.inv.output", "children": [{"name": "this.boundarySize == orig(this.boundarySize)"}, {"name": "return == 23.999995946884667"}, {"name": "this.boundarySize == 23.999995946884667"}]}]}]}, {"name": "BoundarySizeVisitor()", "children": [{"name": "EXIT", "children": [{"name": "b.inv.output", "children": [{"name": "b.inv.output", "children": [{"name": "N/A"}]}]}, {"name": "Patch34.inv.output", "children": [{"name": "this.boundarySize == 0.0"}]}, {"name": "f.inv.output", "children": [{"name": "this.boundarySize == 0.0"}]}, {"name": "Patch35.inv.output", "children": [{"name": "this.boundarySize == 0.0"}]}]}]}, {"name": "visitInternalNode(org.apache.commons.math3.geometry.partitioning.BSPTree)", "children": [{"name": "ENTER", "children": [{"name": "b.inv.output", "children": [{"name": "b.inv.output", "children": [{"name": "N/A"}]}]}, {"name": "Patch34.inv.output", "children": [{"name": "node.parent.cut.getClass().getName() == org.apache.commons.math3.geometry.euclidean.threed.SubPlane.class"}, {"name": "node.plus.cut == null"}, {"name": "node.plus.attribute.getClass().getName() == java.lang.Boolean.class"}, {"name": "node.plus.attribute has only one value"}, {"name": "node.parent.attribute.getClass().getName() == org.apache.commons.math3.geometry.partitioning.BoundaryAttribute.class"}, {"name": "node.plus.plus == null"}, {"name": "node.attribute.getClass().getName() == org.apache.commons.math3.geometry.partitioning.BoundaryAttribute.class"}, {"name": "node.cut.getClass().getName() == org.apache.commons.math3.geometry.euclidean.threed.SubPlane.class"}, {"name": "node.minus.cut.getClass().getName() == org.apache.commons.math3.geometry.euclidean.threed.SubPlane.class"}, {"name": "node.plus.minus == null"}, {"name": "node.plus.cut.getClass().getName() == org.apache.commons.math3.geometry.euclidean.threed.SubPlane.class"}]}, {"name": "f.inv.output", "children": [{"name": "node.parent.cut.getClass().getName() == org.apache.commons.math3.geometry.euclidean.threed.SubPlane.class"}, {"name": "node.plus.cut == null"}, {"name": "node.plus.attribute.getClass().getName() == java.lang.Boolean.class"}, {"name": "node.plus.attribute has only one value"}, {"name": "node.parent.attribute.getClass().getName() == org.apache.commons.math3.geometry.partitioning.BoundaryAttribute.class"}, {"name": "node.plus.plus == null"}, {"name": "node.attribute.getClass().getName() == org.apache.commons.math3.geometry.partitioning.BoundaryAttribute.class"}, {"name": "node.cut.getClass().getName() == org.apache.commons.math3.geometry.euclidean.threed.SubPlane.class"}, {"name": "node.minus.cut.getClass().getName() == org.apache.commons.math3.geometry.euclidean.threed.SubPlane.class"}, {"name": "node.plus.minus == null"}, {"name": "node.plus.cut.getClass().getName() == org.apache.commons.math3.geometry.euclidean.threed.SubPlane.class"}]}, {"name": "Patch35.inv.output", "children": [{"name": "node.parent.cut.getClass().getName() == org.apache.commons.math3.geometry.euclidean.threed.SubPlane.class"}, {"name": "node.plus.cut == null"}, {"name": "node.plus.attribute.getClass().getName() == java.lang.Boolean.class"}, {"name": "node.plus.attribute has only one value"}, {"name": "node.parent.attribute.getClass().getName() == org.apache.commons.math3.geometry.partitioning.BoundaryAttribute.class"}, {"name": "node.plus.plus == null"}, {"name": "node.attribute.getClass().getName() == org.apache.commons.math3.geometry.partitioning.BoundaryAttribute.class"}, {"name": "node.cut.getClass().getName() == org.apache.commons.math3.geometry.euclidean.threed.SubPlane.class"}, {"name": "node.minus.cut.getClass().getName() == org.apache.commons.math3.geometry.euclidean.threed.SubPlane.class"}, {"name": "node.plus.minus == null"}, {"name": "node.plus.cut.getClass().getName() == org.apache.commons.math3.geometry.euclidean.threed.SubPlane.class"}]}]}, {"name": "EXIT", "children": [{"name": "b.inv.output", "children": [{"name": "b.inv.output", "children": [{"name": "N/A"}]}]}, {"name": "Patch34.inv.output", "children": [{"name": "node.minus.parent == orig(node.minus.parent)"}, {"name": "node.parent.attribute == orig(node.parent.attribute)"}, {"name": "node.attribute == orig(node.attribute)"}, {"name": "node.plus.attribute.getClass().getName() == java.lang.Boolean.class"}, {"name": "node.plus.cut.getClass().getName() == orig(node.plus.cut.getClass().getName())"}, {"name": "node.parent.cut == orig(node.parent.cut)"}, {"name": "node.plus.cut.getClass().getName() == org.apache.commons.math3.geometry.euclidean.threed.SubPlane.class"}, {"name": "node.plus.cut == orig(node.plus.cut)"}, {"name": "node.parent.attribute.getClass().getName() == orig(node.parent.attribute.getClass().getName())"}, {"name": "node.minus.attribute.getClass().getName() == orig(node.minus.attribute.getClass().getName())"}, {"name": "this.boundarySize >= orig(this.boundarySize)"}, {"name": "node.parent.cut.getClass().getName() == orig(node.parent.cut.getClass().getName())"}, {"name": "node.minus.plus == orig(node.minus.plus)"}, {"name": "node.minus == orig(node.minus)"}, {"name": "node.plus.plus == null"}, {"name": "node.cut.getClass().getName() == orig(node.cut.getClass().getName())"}, {"name": "node.minus.cut.getClass().getName() == org.apache.commons.math3.geometry.euclidean.threed.SubPlane.class"}, {"name": "node.parent == orig(node.parent)"}, {"name": "node.parent.minus == orig(node.parent.minus)"}, {"name": "node.plus.parent == orig(node.plus.parent)"}, {"name": "node.plus.attribute == orig(node.plus.attribute)"}, {"name": "node.minus.attribute == orig(node.minus.attribute)"}, {"name": "node.parent.plus == orig(node.parent.plus)"}, {"name": "node.plus.cut == null"}, {"name": "node.plus.minus == orig(node.plus.minus)"}, {"name": "node.minus.cut.getClass().getName() == orig(node.minus.cut.getClass().getName())"}, {"name": "node.cut.getClass().getName() == org.apache.commons.math3.geometry.euclidean.threed.SubPlane.class"}, {"name": "node.minus.minus == orig(node.minus.minus)"}, {"name": "node.attribute.getClass().getName() == orig(node.attribute.getClass().getName())"}, {"name": "node.plus.attribute.getClass().getName() == orig(node.plus.attribute.getClass().getName())"}, {"name": "node.cut == orig(node.cut)"}, {"name": "node.plus.plus == orig(node.plus.plus)"}, {"name": "node.parent.cut.getClass().getName() == org.apache.commons.math3.geometry.euclidean.threed.SubPlane.class"}, {"name": "node.parent.parent == orig(node.parent.parent)"}, {"name": "node.plus.attribute has only one value"}, {"name": "201326558 * this.boundarySize - 201326541 * orig(this.boundarySize) - 805306232 == 0"}, {"name": "node.parent.attribute.getClass().getName() == org.apache.commons.math3.geometry.partitioning.BoundaryAttribute.class"}, {"name": "node.attribute.getClass().getName() == org.apache.commons.math3.geometry.partitioning.BoundaryAttribute.class"}, {"name": "node.plus == orig(node.plus)"}, {"name": "node.plus.minus == null"}, {"name": "node.minus.cut == orig(node.minus.cut)"}]}, {"name": "f.inv.output", "children": [{"name": "node.minus.parent == orig(node.minus.parent)"}, {"name": "node.parent.attribute == orig(node.parent.attribute)"}, {"name": "node.attribute == orig(node.attribute)"}, {"name": "node.plus.attribute.getClass().getName() == java.lang.Boolean.class"}, {"name": "node.plus.cut.getClass().getName() == orig(node.plus.cut.getClass().getName())"}, {"name": "node.parent.cut == orig(node.parent.cut)"}, {"name": "node.plus.cut.getClass().getName() == org.apache.commons.math3.geometry.euclidean.threed.SubPlane.class"}, {"name": "node.plus.cut == orig(node.plus.cut)"}, {"name": "node.parent.attribute.getClass().getName() == orig(node.parent.attribute.getClass().getName())"}, {"name": "node.minus.attribute.getClass().getName() == orig(node.minus.attribute.getClass().getName())"}, {"name": "this.boundarySize >= orig(this.boundarySize)"}, {"name": "node.parent.cut.getClass().getName() == orig(node.parent.cut.getClass().getName())"}, {"name": "node.minus.plus == orig(node.minus.plus)"}, {"name": "node.minus == orig(node.minus)"}, {"name": "node.plus.plus == null"}, {"name": "node.cut.getClass().getName() == orig(node.cut.getClass().getName())"}, {"name": "node.minus.cut.getClass().getName() == org.apache.commons.math3.geometry.euclidean.threed.SubPlane.class"}, {"name": "node.parent == orig(node.parent)"}, {"name": "node.parent.minus == orig(node.parent.minus)"}, {"name": "node.plus.parent == orig(node.plus.parent)"}, {"name": "node.plus.attribute == orig(node.plus.attribute)"}, {"name": "node.minus.attribute == orig(node.minus.attribute)"}, {"name": "node.parent.plus == orig(node.parent.plus)"}, {"name": "node.plus.cut == null"}, {"name": "node.plus.minus == orig(node.plus.minus)"}, {"name": "node.minus.cut.getClass().getName() == orig(node.minus.cut.getClass().getName())"}, {"name": "node.cut.getClass().getName() == org.apache.commons.math3.geometry.euclidean.threed.SubPlane.class"}, {"name": "node.minus.minus == orig(node.minus.minus)"}, {"name": "node.attribute.getClass().getName() == orig(node.attribute.getClass().getName())"}, {"name": "node.plus.attribute.getClass().getName() == orig(node.plus.attribute.getClass().getName())"}, {"name": "node.cut == orig(node.cut)"}, {"name": "node.plus.plus == orig(node.plus.plus)"}, {"name": "node.parent.cut.getClass().getName() == org.apache.commons.math3.geometry.euclidean.threed.SubPlane.class"}, {"name": "node.parent.parent == orig(node.parent.parent)"}, {"name": "node.plus.attribute has only one value"}, {"name": "201326558 * this.boundarySize - 201326541 * orig(this.boundarySize) - 805306232 == 0"}, {"name": "node.parent.attribute.getClass().getName() == org.apache.commons.math3.geometry.partitioning.BoundaryAttribute.class"}, {"name": "node.attribute.getClass().getName() == org.apache.commons.math3.geometry.partitioning.BoundaryAttribute.class"}, {"name": "node.plus == orig(node.plus)"}, {"name": "node.plus.minus == null"}, {"name": "node.minus.cut == orig(node.minus.cut)"}]}, {"name": "Patch35.inv.output", "children": [{"name": "node.minus.parent == orig(node.minus.parent)"}, {"name": "node.parent.attribute == orig(node.parent.attribute)"}, {"name": "node.attribute == orig(node.attribute)"}, {"name": "node.plus.attribute.getClass().getName() == java.lang.Boolean.class"}, {"name": "node.plus.cut.getClass().getName() == orig(node.plus.cut.getClass().getName())"}, {"name": "node.parent.cut == orig(node.parent.cut)"}, {"name": "node.plus.cut.getClass().getName() == org.apache.commons.math3.geometry.euclidean.threed.SubPlane.class"}, {"name": "node.plus.cut == orig(node.plus.cut)"}, {"name": "node.parent.attribute.getClass().getName() == orig(node.parent.attribute.getClass().getName())"}, {"name": "node.minus.attribute.getClass().getName() == orig(node.minus.attribute.getClass().getName())"}, {"name": "this.boundarySize >= orig(this.boundarySize)"}, {"name": "node.parent.cut.getClass().getName() == orig(node.parent.cut.getClass().getName())"}, {"name": "node.minus.plus == orig(node.minus.plus)"}, {"name": "node.minus == orig(node.minus)"}, {"name": "node.plus.plus == null"}, {"name": "node.cut.getClass().getName() == orig(node.cut.getClass().getName())"}, {"name": "node.minus.cut.getClass().getName() == org.apache.commons.math3.geometry.euclidean.threed.SubPlane.class"}, {"name": "node.parent == orig(node.parent)"}, {"name": "node.parent.minus == orig(node.parent.minus)"}, {"name": "node.plus.parent == orig(node.plus.parent)"}, {"name": "node.plus.attribute == orig(node.plus.attribute)"}, {"name": "node.minus.attribute == orig(node.minus.attribute)"}, {"name": "node.parent.plus == orig(node.parent.plus)"}, {"name": "node.plus.cut == null"}, {"name": "node.plus.minus == orig(node.plus.minus)"}, {"name": "node.minus.cut.getClass().getName() == orig(node.minus.cut.getClass().getName())"}, {"name": "node.cut.getClass().getName() == org.apache.commons.math3.geometry.euclidean.threed.SubPlane.class"}, {"name": "node.minus.minus == orig(node.minus.minus)"}, {"name": "node.attribute.getClass().getName() == orig(node.attribute.getClass().getName())"}, {"name": "node.plus.attribute.getClass().getName() == orig(node.plus.attribute.getClass().getName())"}, {"name": "node.cut == orig(node.cut)"}, {"name": "node.plus.plus == orig(node.plus.plus)"}, {"name": "node.parent.cut.getClass().getName() == org.apache.commons.math3.geometry.euclidean.threed.SubPlane.class"}, {"name": "node.parent.parent == orig(node.parent.parent)"}, {"name": "node.plus.attribute has only one value"}, {"name": "201326558 * this.boundarySize - 201326541 * orig(this.boundarySize) - 805306232 == 0"}, {"name": "node.parent.attribute.getClass().getName() == org.apache.commons.math3.geometry.partitioning.BoundaryAttribute.class"}, {"name": "node.attribute.getClass().getName() == org.apache.commons.math3.geometry.partitioning.BoundaryAttribute.class"}, {"name": "node.plus == orig(node.plus)"}, {"name": "node.plus.minus == null"}, {"name": "node.minus.cut == orig(node.minus.cut)"}]}]}]}]}
