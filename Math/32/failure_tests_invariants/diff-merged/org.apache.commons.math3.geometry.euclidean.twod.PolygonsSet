{
    "org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet": [
        {
            "followLoop(org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node, org.apache.commons.math3.geometry.partitioning.utilities.AVLTree)": [
                {
                    "ENTER": [
                        {
                            "Patch34.inv.output": {
                                "invs": []
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": []
                            }
                        },
                        {
                            "f.inv.output": {
                                "invs": []
                            }
                        },
                        {
                            "Patch35.inv.output": {
                                "invs": []
                            }
                        }
                    ]
                },
                {
                    "EXIT": [
                        {
                            "Patch34.inv.output": {
                                "invs": [
                                    "sorted.top.parent == orig(sorted.top.parent)",
                                    "sorted.top.left == null",
                                    "sorted.top.parent == null",
                                    "sorted.top.element.getClass().getName() == org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$ComparableSegment.class",
                                    "sorted.top == null",
                                    "sorted.top.element.getClass().getName() == orig(sorted.top.element.getClass().getName())"
                                ]
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": [
                                    "sorted.top.parent == orig(sorted.top.parent)",
                                    "sorted.top.left == null",
                                    "sorted.top.parent == null",
                                    "sorted.top.element.getClass().getName() == org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$ComparableSegment.class",
                                    "sorted.top.element.getClass().getName() == orig(sorted.top.element.getClass().getName())"
                                ]
                            }
                        },
                        {
                            "f.inv.output": {
                                "invs": [
                                    "sorted.top.parent == orig(sorted.top.parent)",
                                    "sorted.top.left == null",
                                    "sorted.top.parent == null",
                                    "sorted.top.element.getClass().getName() == org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$ComparableSegment.class",
                                    "sorted.top == null",
                                    "sorted.top.element.getClass().getName() == orig(sorted.top.element.getClass().getName())"
                                ]
                            }
                        },
                        {
                            "Patch35.inv.output": {
                                "invs": [
                                    "sorted.top == null"
                                ]
                            }
                        }
                    ]
                },
                {
                    "EXITNN": [
                        {
                            "330": [
                                {
                                    "Patch34.inv.output": {
                                        "invs": [
                                            "return == null",
                                            "orig(node.parent.skew) has only one value",
                                            "orig(node.right.parent) has only one value",
                                            "orig(node.right.element) has only one value",
                                            "orig(node.parent.parent) == null"
                                        ]
                                    }
                                },
                                {
                                    "b.inv.output": {
                                        "invs": [
                                            "orig(sorted.top) has only one value",
                                            "this.tree.plus has only one value",
                                            "orig(this.tree.plus.parent) has only one value",
                                            "this.tree.minus.plus has only one value",
                                            "return == null",
                                            "orig(this.tree.minus.parent) has only one value",
                                            "orig(this.tree) has only one value",
                                            "this.tree.plus.parent has only one value",
                                            "orig(node.parent.skew) has only one value",
                                            "orig(sorted) has only one value",
                                            "orig(node.right.parent) has only one value",
                                            "orig(node.right.element) has only one value",
                                            "orig(this.tree.minus.plus) has only one value",
                                            "orig(node.parent.parent) == null",
                                            "this.tree.minus.minus has only one value",
                                            "orig(node.parent.left) has only one value",
                                            "orig(this.tree.minus) has only one value",
                                            "orig(this.tree.minus.minus) has only one value",
                                            "this.tree.cut has only one value",
                                            "orig(org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.this.top) has only one value",
                                            "this.tree has only one value",
                                            "this.tree.minus.parent has only one value",
                                            "orig(this.tree.cut) has only one value",
                                            "orig(this.tree.minus.attribute) has only one value",
                                            "orig(node.parent.element) has only one value",
                                            "orig(this.tree.attribute) has only one value",
                                            "this.tree.attribute has only one value",
                                            "orig(this.tree.plus) has only one value",
                                            "this.tree.minus has only one value",
                                            "this.tree.minus.attribute has only one value",
                                            "this.tree.minus.cut has only one value",
                                            "orig(this.tree.minus.cut) has only one value",
                                            "orig(node.parent.right) has only one value",
                                            "orig(this) has only one value"
                                        ]
                                    }
                                },
                                {
                                    "f.inv.output": {
                                        "invs": [
                                            "return == null",
                                            "orig(node.parent.skew) has only one value",
                                            "orig(node.right.parent) has only one value",
                                            "orig(node.right.element) has only one value",
                                            "orig(node.parent.parent) == null"
                                        ]
                                    }
                                },
                                {
                                    "Patch35.inv.output": "N/A"
                                }
                            ]
                        },
                        {
                            "348": [
                                {
                                    "Patch34.inv.output": {
                                        "invs": [
                                            "orig(node.right.parent) has only one value",
                                            "sorted.top == null",
                                            "orig(node.right.element) has only one value"
                                        ]
                                    }
                                },
                                {
                                    "b.inv.output": {
                                        "invs": [
                                            "orig(node.right.parent) has only one value",
                                            "sorted.top == null",
                                            "orig(node.right.element) has only one value"
                                        ]
                                    }
                                },
                                {
                                    "f.inv.output": {
                                        "invs": [
                                            "orig(node.right.parent) has only one value",
                                            "sorted.top == null",
                                            "orig(node.right.element) has only one value"
                                        ]
                                    }
                                },
                                {
                                    "Patch35.inv.output": {
                                        "invs": []
                                    }
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "computeGeometricalProperties()": [
                {
                    "ENTER": [
                        {
                            "Patch34.inv.output": {
                                "invs": []
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": []
                            }
                        },
                        {
                            "f.inv.output": {
                                "invs": []
                            }
                        },
                        {
                            "Patch35.inv.output": {
                                "invs": []
                            }
                        }
                    ]
                },
                {
                    "EXIT": [
                        {
                            "Patch34.inv.output": {
                                "invs": [
                                    "this.size >= orig(this.size)"
                                ]
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": [
                                    "size(this.vertices[]) == 1",
                                    "this.size one of { 2.0, 4.0 }",
                                    "this.size > orig(this.size)"
                                ]
                            }
                        },
                        {
                            "f.inv.output": {
                                "invs": [
                                    "this.size >= orig(this.size)"
                                ]
                            }
                        },
                        {
                            "Patch35.inv.output": {
                                "invs": [
                                    "this.size >= orig(this.size)",
                                    "this.size one of { 2.0, 4.0 }",
                                    "this.size > orig(this.size)"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "getVertices()": [
                {
                    "ENTER": [
                        {
                            "Patch35.inv.output": {
                                "invs": []
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": []
                            }
                        }
                    ]
                },
                {
                    "EXIT": [
                        {
                            "Patch35.inv.output": {
                                "invs": [
                                    "size(return[]) == 1"
                                ]
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": [
                                    "size(return[]) one of { 0, 1 }"
                                ]
                            }
                        }
                    ]
                }
            ]
        }
    ]
}