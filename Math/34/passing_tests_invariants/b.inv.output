===========================================================================
org.apache.commons.math3.genetics.Chromosome:::CLASS
===========================================================================
org.apache.commons.math3.genetics.Chromosome:::OBJECT
this.fitness one of { -Infinity, 1.0 }
===========================================================================
org.apache.commons.math3.genetics.Chromosome.Chromosome():::EXIT
this.fitness == -Infinity
===========================================================================
org.apache.commons.math3.genetics.Chromosome.findSameChromosome(org.apache.commons.math3.genetics.Population):::ENTER
this.fitness == -Infinity
population has only one value
population.getClass().getName() == org.apache.commons.math3.genetics.ChromosomeTest$9.class
===========================================================================
org.apache.commons.math3.genetics.Chromosome.findSameChromosome(org.apache.commons.math3.genetics.Population):::EXIT91
return has only one value
orig(this) has only one value
orig(this.getClass().getName()) == org.apache.commons.math3.genetics.ChromosomeTest$7.class
===========================================================================
org.apache.commons.math3.genetics.Chromosome.findSameChromosome(org.apache.commons.math3.genetics.Population):::EXIT94
return == null
orig(this) has only one value
orig(this.getClass().getName()) == org.apache.commons.math3.genetics.ChromosomeTest$8.class
===========================================================================
org.apache.commons.math3.genetics.Chromosome.findSameChromosome(org.apache.commons.math3.genetics.Population):::EXIT
this.fitness == orig(this.fitness)
(return == null)  <==>  (orig(this.getClass().getName()) == org.apache.commons.math3.genetics.ChromosomeTest$8.class)
(return has only one value)  <==>  (orig(this.getClass().getName()) == org.apache.commons.math3.genetics.ChromosomeTest$7.class)
(return has only one value)  ==>  (return.getClass().getName() == org.apache.commons.math3.genetics.ChromosomeTest$4.class)
this.fitness == -Infinity
return.getClass().getName() == org.apache.commons.math3.genetics.ChromosomeTest$4.class
return.fitness == -Infinity
===========================================================================
org.apache.commons.math3.genetics.Chromosome.getFitness():::ENTER
===========================================================================
org.apache.commons.math3.genetics.Chromosome.getFitness():::EXIT
this.fitness == 1.0
return == 1.0
===========================================================================
org.apache.commons.math3.genetics.Chromosome.searchForFitnessUpdate(org.apache.commons.math3.genetics.Population):::ENTER
this has only one value
this.getClass().getName() == org.apache.commons.math3.genetics.ChromosomeTest$7.class
this.fitness == -Infinity
population has only one value
population.getClass().getName() == org.apache.commons.math3.genetics.ChromosomeTest$9.class
===========================================================================
org.apache.commons.math3.genetics.Chromosome.searchForFitnessUpdate(org.apache.commons.math3.genetics.Population):::EXIT
this.fitness == 1.0
===========================================================================
org.apache.commons.math3.genetics.ChromosomeTest$4:::CLASS
===========================================================================
org.apache.commons.math3.genetics.ChromosomeTest$4:::OBJECT
this has only one value
org.apache.commons.math3.genetics.ChromosomeTest.this has only one value
this.repr == 1
this.fitness == -Infinity
===========================================================================
org.apache.commons.math3.genetics.ChromosomeTest$4.(org.apache.commons.math3.genetics.ChromosomeTest, int):::ENTER
org.apache.commons.math3.genetics.ChromosomeTest.this has only one value
x0 == 1
===========================================================================
org.apache.commons.math3.genetics.ChromosomeTest$4.(org.apache.commons.math3.genetics.ChromosomeTest, int):::EXIT
org.apache.commons.math3.genetics.ChromosomeTest.this == orig(org.apache.commons.math3.genetics.ChromosomeTest.this)
===========================================================================
org.apache.commons.math3.genetics.ChromosomeTest$4.fitness():::ENTER
===========================================================================
org.apache.commons.math3.genetics.ChromosomeTest$4.fitness():::EXIT
org.apache.commons.math3.genetics.ChromosomeTest.this == orig(org.apache.commons.math3.genetics.ChromosomeTest.this)
this.repr == orig(this.repr)
this.fitness == orig(this.fitness)
return == 1.0
===========================================================================
org.apache.commons.math3.genetics.ChromosomeTest$5:::CLASS
===========================================================================
org.apache.commons.math3.genetics.ChromosomeTest$5:::OBJECT
this has only one value
org.apache.commons.math3.genetics.ChromosomeTest.this has only one value
this.repr == 2
this.fitness == -Infinity
===========================================================================
org.apache.commons.math3.genetics.ChromosomeTest$5.(org.apache.commons.math3.genetics.ChromosomeTest, int):::ENTER
org.apache.commons.math3.genetics.ChromosomeTest.this has only one value
x0 == 2
===========================================================================
org.apache.commons.math3.genetics.ChromosomeTest$5.(org.apache.commons.math3.genetics.ChromosomeTest, int):::EXIT
org.apache.commons.math3.genetics.ChromosomeTest.this == orig(org.apache.commons.math3.genetics.ChromosomeTest.this)
===========================================================================
org.apache.commons.math3.genetics.ChromosomeTest$6:::CLASS
===========================================================================
org.apache.commons.math3.genetics.ChromosomeTest$6:::OBJECT
this has only one value
org.apache.commons.math3.genetics.ChromosomeTest.this has only one value
this.repr == 3
this.fitness == -Infinity
===========================================================================
org.apache.commons.math3.genetics.ChromosomeTest$6.(org.apache.commons.math3.genetics.ChromosomeTest, int):::ENTER
org.apache.commons.math3.genetics.ChromosomeTest.this has only one value
x0 == 3
===========================================================================
org.apache.commons.math3.genetics.ChromosomeTest$6.(org.apache.commons.math3.genetics.ChromosomeTest, int):::EXIT
org.apache.commons.math3.genetics.ChromosomeTest.this == orig(org.apache.commons.math3.genetics.ChromosomeTest.this)
===========================================================================
org.apache.commons.math3.genetics.ChromosomeTest$7:::CLASS
===========================================================================
org.apache.commons.math3.genetics.ChromosomeTest$7:::OBJECT
this has only one value
org.apache.commons.math3.genetics.ChromosomeTest.this has only one value
this.repr == 1
this.fitness == -Infinity
===========================================================================
org.apache.commons.math3.genetics.ChromosomeTest$7.(org.apache.commons.math3.genetics.ChromosomeTest, int):::ENTER
org.apache.commons.math3.genetics.ChromosomeTest.this has only one value
x0 == 1
===========================================================================
org.apache.commons.math3.genetics.ChromosomeTest$7.(org.apache.commons.math3.genetics.ChromosomeTest, int):::EXIT
org.apache.commons.math3.genetics.ChromosomeTest.this == orig(org.apache.commons.math3.genetics.ChromosomeTest.this)
===========================================================================
org.apache.commons.math3.genetics.ChromosomeTest$8:::CLASS
===========================================================================
org.apache.commons.math3.genetics.ChromosomeTest$8:::OBJECT
this has only one value
org.apache.commons.math3.genetics.ChromosomeTest.this has only one value
this.repr == 15
this.fitness == -Infinity
===========================================================================
org.apache.commons.math3.genetics.ChromosomeTest$8.(org.apache.commons.math3.genetics.ChromosomeTest, int):::ENTER
org.apache.commons.math3.genetics.ChromosomeTest.this has only one value
x0 == 15
===========================================================================
org.apache.commons.math3.genetics.ChromosomeTest$8.(org.apache.commons.math3.genetics.ChromosomeTest, int):::EXIT
org.apache.commons.math3.genetics.ChromosomeTest.this == orig(org.apache.commons.math3.genetics.ChromosomeTest.this)
===========================================================================
org.apache.commons.math3.genetics.ChromosomeTest$9:::OBJECT
this has only one value
org.apache.commons.math3.genetics.ChromosomeTest.this has only one value
this.chromosomes has only one value
this.chromosomes[] contains no nulls and has only one value, of length 3
this.chromosomes[].getClass().getName() == [null, null, null]
this.chromosomes[].getClass().getName() elements == null
this.chromosomes.getClass().getName() == java.util.ArrayList.class
this.populationLimit == 3
size(this.chromosomes[]) == 3
===========================================================================
org.apache.commons.math3.genetics.ChromosomeTest$9.(org.apache.commons.math3.genetics.ChromosomeTest, java.util.List, int):::ENTER
org.apache.commons.math3.genetics.ChromosomeTest.this has only one value
x0 has only one value
x0[] contains no nulls and has only one value, of length 3
x0[].getClass().getName() == [null, null, null]
x0[].getClass().getName() elements == null
x0.getClass().getName() == java.util.ArrayList.class
x1 == 3
size(x0[]) == 3
===========================================================================
org.apache.commons.math3.genetics.ChromosomeTest$9.(org.apache.commons.math3.genetics.ChromosomeTest, java.util.List, int):::EXIT
org.apache.commons.math3.genetics.ChromosomeTest.this == orig(org.apache.commons.math3.genetics.ChromosomeTest.this)
x0[] == orig(x0[])
x0[] contains no nulls and has only one value, of length 3
x0[].getClass().getName() == [null, null, null]
x0[].getClass().getName() elements == null
===========================================================================
org.apache.commons.math3.genetics.ChromosomeTest$DummyChromosome:::CLASS
===========================================================================
org.apache.commons.math3.genetics.ChromosomeTest$DummyChromosome:::OBJECT
this.repr >= 1
this.fitness == -Infinity
===========================================================================
org.apache.commons.math3.genetics.ChromosomeTest$DummyChromosome.DummyChromosome(int):::ENTER
===========================================================================
org.apache.commons.math3.genetics.ChromosomeTest$DummyChromosome.DummyChromosome(int):::EXIT
===========================================================================
org.apache.commons.math3.genetics.ChromosomeTest$DummyChromosome.isSame(org.apache.commons.math3.genetics.Chromosome):::ENTER
this.repr one of { 1, 15 }
another.fitness == -Infinity
===========================================================================
org.apache.commons.math3.genetics.ChromosomeTest$DummyChromosome.isSame(org.apache.commons.math3.genetics.Chromosome):::EXIT
this.repr == orig(this.repr)
this.fitness == orig(this.fitness)
another.fitness == orig(another.fitness)
(this.repr == 1)  <==>  (orig(this.getClass().getName()) == org.apache.commons.math3.genetics.ChromosomeTest$7.class)
(this.repr == 1)  <==>  (return == true)
(this.repr == 1)  ==>  (orig(another) has only one value)
(this.repr == 1)  ==>  (orig(another.getClass().getName()) == org.apache.commons.math3.genetics.ChromosomeTest$4.class)
(this.repr == 15)  <==>  (orig(this.getClass().getName()) == org.apache.commons.math3.genetics.ChromosomeTest$8.class)
(this.repr == 15)  <==>  (return == false)
this.repr one of { 1, 15 }
another.fitness == -Infinity
===========================================================================
org.apache.commons.math3.genetics.ChromosomeTest$DummyChromosome.isSame(org.apache.commons.math3.genetics.Chromosome):::EXIT;condition="return == true"
this.repr == 1
return == true
orig(this) has only one value
orig(this.getClass().getName()) == org.apache.commons.math3.genetics.ChromosomeTest$7.class
orig(another) has only one value
orig(another.getClass().getName()) == org.apache.commons.math3.genetics.ChromosomeTest$4.class
===========================================================================
org.apache.commons.math3.genetics.ChromosomeTest$DummyChromosome.isSame(org.apache.commons.math3.genetics.Chromosome):::EXIT;condition="not(return == true)"
this.repr == 15
return == false
orig(this) has only one value
orig(this.getClass().getName()) == org.apache.commons.math3.genetics.ChromosomeTest$8.class
===========================================================================
org.apache.commons.math3.genetics.ChromosomeTest:::OBJECT
this has only one value
===========================================================================
org.apache.commons.math3.genetics.ChromosomeTest.ChromosomeTest():::EXIT
===========================================================================
org.apache.commons.math3.genetics.ChromosomeTest.testFindSameChromosome():::ENTER
===========================================================================
org.apache.commons.math3.genetics.ChromosomeTest.testFindSameChromosome():::EXIT
===========================================================================
org.apache.commons.math3.genetics.ListPopulation:::OBJECT
this has only one value
this.getClass().getName() == org.apache.commons.math3.genetics.ChromosomeTest$9.class
this.chromosomes has only one value
this.chromosomes[] contains no nulls and has only one value, of length 3
this.chromosomes[].getClass().getName() == [null, null, null]
this.chromosomes[].getClass().getName() elements == null
this.chromosomes.getClass().getName() == java.util.ArrayList.class
this.populationLimit == 3
size(this.chromosomes[]) == 3
===========================================================================
org.apache.commons.math3.genetics.ListPopulation.ListPopulation(java.util.List, int):::ENTER
chromosomes has only one value
chromosomes[] contains no nulls and has only one value, of length 3
chromosomes[].getClass().getName() == [null, null, null]
chromosomes[].getClass().getName() elements == null
chromosomes.getClass().getName() == java.util.ArrayList.class
populationLimit == 3
size(chromosomes[]) == 3
===========================================================================
org.apache.commons.math3.genetics.ListPopulation.ListPopulation(java.util.List, int):::EXIT
chromosomes[] == orig(chromosomes[])
chromosomes[] contains no nulls and has only one value, of length 3
chromosomes[].getClass().getName() == [null, null, null]
chromosomes[].getClass().getName() elements == null
===========================================================================
org.apache.commons.math3.genetics.ListPopulation.iterator():::ENTER
===========================================================================
org.apache.commons.math3.genetics.ListPopulation.iterator():::EXIT
this.chromosomes == orig(this.chromosomes)
this.chromosomes[] == orig(this.chromosomes[])
this.chromosomes.getClass().getName() == orig(this.chromosomes.getClass().getName())
this.populationLimit == orig(this.populationLimit)
return.getClass().getName() == java.util.ArrayList$Itr.class
