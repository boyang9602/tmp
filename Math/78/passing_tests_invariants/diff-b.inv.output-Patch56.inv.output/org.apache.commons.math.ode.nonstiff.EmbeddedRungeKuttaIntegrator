{"org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator":[{"setMaxGrowth(double)":[{"ENTER":[{"b.inv.output":{"invs":["this.eventsHandlersManager.states[] == []","this.eventsHandlersManager.states[].getClass().getName() == []"]}},{"Patch56.inv.output":{"invs":[]}}]},{"EXIT":[{"b.inv.output":{"invs":["this.eventsHandlersManager.states[] == []","this.eventsHandlersManager.states[].getClass().getName() == []"]}},{"Patch56.inv.output":{"invs":[]}}]}]},{"getMaxGrowth()":[{"ENTER":[{"b.inv.output":{"invs":["this.eventsHandlersManager.states[].getClass().getName() == []","this.eventsHandlersManager.states[] == []"]}},{"Patch56.inv.output":{"invs":[]}}]},{"EXIT":[{"b.inv.output":{"invs":["this.eventsHandlersManager.states[] == []","this.eventsHandlersManager.states[].getClass().getName() == []"]}},{"Patch56.inv.output":{"invs":[]}}]}]},{"integrate(org.apache.commons.math.ode.FirstOrderDifferentialEquations, double, double[], double, double[])":[{"ENTER":[{"b.inv.output":{"invs":["size(y[]) one of { 1, 2, 4 }","y[] elements one of { 0.0, Double.NaN }","y[] sorted by ==","y[] one of { [0.0, 0.0], [0.0, 0.0, 0.0, 0.0], [NaN] }","size(y0[]) one of { 1, 2, 4 }"]}},{"Patch56.inv.output":{"invs":["size(y[]) one of { 2, 4 }","y[] one of { [0.0, 0.0], [0.0, 0.0, 0.0, 0.0] }","this.minStep one of { 0.0, 0.4, 1.25 }","this.stepSize one of { 0.0, 1.2649110640673518, 2.23606797749979 }","size(y0[]) one of { 2, 4 }","y[] elements == 0.0"]}}]},{"EXIT":[{"b.inv.output":{"invs":[]}},{"Patch56.inv.output":{"invs":["this.stepSize one of { 0.0, 1.2649110640673518, 2.23606797749979 }","this.minStep one of { 0.0, 0.4, 1.25 }"]}}]}]},{"EmbeddedRungeKuttaIntegrator(java.lang.String, boolean, double[], double[][], double[], org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator, double, double, double, double)":[{"ENTER":[{"b.inv.output":{"invs":[]}},{"Patch56.inv.output":{"invs":[]}}]},{"EXIT":[{"b.inv.output":{"invs":["this.eventsHandlersManager.states[].getClass().getName() == []","this.eventsHandlersManager.states[] == []"]}},{"Patch56.inv.output":{"invs":[]}}]}]},{"getMinReduction()":[{"ENTER":[{"b.inv.output":{"invs":["this.eventsHandlersManager.states[].getClass().getName() == []","this.eventsHandlersManager.states[] == []"]}},{"Patch56.inv.output":{"invs":[]}}]},{"EXIT":[{"b.inv.output":{"invs":["this.eventsHandlersManager.states[] == []","this.eventsHandlersManager.states[].getClass().getName() == []"]}},{"Patch56.inv.output":{"invs":[]}}]}]},{"getSafety()":[{"ENTER":[{"b.inv.output":{"invs":["this.eventsHandlersManager.states[].getClass().getName() == []","this.eventsHandlersManager.states[] == []"]}},{"Patch56.inv.output":{"invs":[]}}]},{"EXIT":[{"b.inv.output":{"invs":["this.eventsHandlersManager.states[] == []","this.eventsHandlersManager.states[].getClass().getName() == []"]}},{"Patch56.inv.output":{"invs":[]}}]}]},{"setSafety(double)":[{"ENTER":[{"b.inv.output":{"invs":["this.eventsHandlersManager.states[] == []","this.eventsHandlersManager.states[].getClass().getName() == []"]}},{"Patch56.inv.output":{"invs":[]}}]},{"EXIT":[{"b.inv.output":{"invs":["this.eventsHandlersManager.states[] == []","this.eventsHandlersManager.states[].getClass().getName() == []"]}},{"Patch56.inv.output":{"invs":[]}}]}]},{"setMinReduction(double)":[{"ENTER":[{"b.inv.output":{"invs":["this.eventsHandlersManager.states[] == []","this.eventsHandlersManager.states[].getClass().getName() == []"]}},{"Patch56.inv.output":{"invs":[]}}]},{"EXIT":[{"b.inv.output":{"invs":["this.eventsHandlersManager.states[] == []","this.eventsHandlersManager.states[].getClass().getName() == []"]}},{"Patch56.inv.output":{"invs":[]}}]}]},{"EmbeddedRungeKuttaIntegrator(java.lang.String, boolean, double[], double[][], double[], org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator, double, double, double[], double[])":[{"ENTER":[{"b.inv.output":{"invs":[]}},{"Patch56.inv.output":{"invs":[]}}]},{"EXIT":[{"b.inv.output":{"invs":["this.eventsHandlersManager.states[] == []","this.eventsHandlersManager.states[].getClass().getName() == []"]}},{"Patch56.inv.output":{"invs":[]}}]}]}]}