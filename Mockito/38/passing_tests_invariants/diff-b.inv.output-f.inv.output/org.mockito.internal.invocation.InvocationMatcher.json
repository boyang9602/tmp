{"name": "org.mockito.internal.invocation.InvocationMatcher", "children": [{"name": "safelyArgumentsMatch(java.lang.Object[])", "children": [{"name": "ENTER", "children": [{"name": "b.inv.output", "children": []}, {"name": "f.inv.output", "children": []}]}, {"name": "EXIT", "children": [{"name": "b.inv.output", "children": [{"name": "(this.invocation.sequenceNumber one of { 29, 34, 46 })  <==>  (this.invocation.arguments[].getClass().getName() one of { [java.lang.Object[]], [java.lang.String] })"}, {"name": "(this.invocation.sequenceNumber one of { 29, 34, 46 })  <==>  (this.matchers[].getClass().getName() one of { [org.mockito.internal.matchers.ArrayEquals], [org.mockito.internal.matchers.Equals] })"}, {"name": "(this.invocation.sequenceNumber one of { 29, 34, 46 })  <==>  (this.invocation.rawArguments[].getClass().getName() one of { [java.lang.Object[]], [java.lang.String] })"}, {"name": "(this.invocation.sequenceNumber one of { 29, 34, 46 })  ==>  (orig(size(actualArgs[])) one of { 0, 1 })"}, {"name": "(this.invocation.sequenceNumber == 89)  ==>  (this.invocation.mock.getClass().getName() == org.mockitousage.IMethods$$EnhancerByMockitoWithCGLIB$$423a82d8.class)"}]}, {"name": "f.inv.output", "children": [{"name": "(this.invocation.sequenceNumber one of { 29, 34, 45 })  <==>  (this.invocation.rawArguments[].getClass().getName() one of { [java.lang.Object[]], [java.lang.String] })"}, {"name": "(this.invocation.sequenceNumber == 89)  ==>  (this.invocation.mock.getClass().getName() == org.mockitousage.IMethods$$EnhancerByMockitoWithCGLIB$$ab4be51.class)"}, {"name": "(this.invocation.sequenceNumber one of { 29, 34, 45 })  ==>  (orig(size(actualArgs[])) one of { 0, 1 })"}, {"name": "(this.invocation.sequenceNumber one of { 29, 34, 45 })  <==>  (this.invocation.arguments[].getClass().getName() one of { [java.lang.Object[]], [java.lang.String] })"}, {"name": "(this.invocation.sequenceNumber one of { 29, 34, 45 })  <==>  (this.matchers[].getClass().getName() one of { [org.mockito.internal.matchers.ArrayEquals], [org.mockito.internal.matchers.Equals] })"}]}]}, {"name": "EXIT", "children": [{"name": "b.inv.output", "children": []}, {"name": "f.inv.output", "children": [{"name": "(this.invocation.sequenceNumber one of { 29, 34, 45 })  <==>  (this.invocation.rawArguments[].getClass().getName() one of { [java.lang.Object[]], [java.lang.String] })"}, {"name": "(this.invocation.sequenceNumber == 89)  ==>  (this.invocation.mock.getClass().getName() == org.mockitousage.IMethods$$EnhancerByMockitoWithCGLIB$$ab4be51.class)"}, {"name": "(this.invocation.sequenceNumber one of { 29, 34, 45 })  ==>  (orig(size(actualArgs[])) one of { 0, 1 })"}, {"name": "(this.invocation.sequenceNumber one of { 29, 34, 45 })  <==>  (this.invocation.arguments[].getClass().getName() one of { [java.lang.Object[]], [java.lang.String] })"}, {"name": "(this.invocation.sequenceNumber one of { 29, 34, 45 })  <==>  (this.matchers[].getClass().getName() one of { [org.mockito.internal.matchers.ArrayEquals], [org.mockito.internal.matchers.Equals] })"}]}]}, {"name": "EXITNN", "children": [{"name": "72", "children": [{"name": "b.inv.output", "children": [{"name": "this.invocation.sequenceNumber one of { 29, 34, 46 }"}]}, {"name": "f.inv.output", "children": [{"name": "this.invocation.sequenceNumber one of { 29, 34, 45 }"}]}]}]}, {"name": "EXITNN", "children": [{"name": "72", "children": [{"name": "b.inv.output", "children": []}, {"name": "f.inv.output", "children": [{"name": "this.invocation.sequenceNumber one of { 29, 34, 45 }"}]}]}]}, {"name": "EXITNN", "children": [{"name": "74", "children": [{"name": "b.inv.output", "children": [{"name": "this.invocation.mock.getClass().getName() == org.mockitousage.IMethods$$EnhancerByMockitoWithCGLIB$$423a82d8.class"}]}, {"name": "f.inv.output", "children": [{"name": "this.invocation.mock.getClass().getName() == org.mockitousage.IMethods$$EnhancerByMockitoWithCGLIB$$ab4be51.class"}]}]}]}, {"name": "EXITNN", "children": [{"name": "74", "children": [{"name": "b.inv.output", "children": []}, {"name": "f.inv.output", "children": [{"name": "this.invocation.mock.getClass().getName() == org.mockitousage.IMethods$$EnhancerByMockitoWithCGLIB$$ab4be51.class"}]}]}]}]}]}
