{
    "org.mockito.internal.invocation.InvocationMatcher": [
        {
            "safelyArgumentsMatch(java.lang.Object[])": [
                {
                    "ENTER": [
                        {
                            "f.inv.output": {
                                "invs": []
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": []
                            }
                        },
                        {
                            "Patch179.inv.output": {
                                "invs": []
                            }
                        }
                    ]
                },
                {
                    "EXIT": [
                        {
                            "f.inv.output": {
                                "invs": [
                                    "(this.invocation.sequenceNumber == 88)  ==>  (this.invocation.rawArguments[].getClass().getName() elements == null)",
                                    "(this.invocation.sequenceNumber == 89)  ==>  (this.matchers[] contains no nulls and has only one value, of length 1)",
                                    "(this.invocation.sequenceNumber == 88)  ==>  (this.invocation.rawArguments has only one value)",
                                    "(this.invocation.sequenceNumber == 89)  ==>  (this.invocation.realMethod has only one value)",
                                    "(this.invocation.sequenceNumber == 88)  ==>  (this.invocation.realMethod has only one value)",
                                    "(this.invocation.sequenceNumber one of { 28, 36, 46 })  <==>  (this.invocation.arguments[].getClass().getName() one of { [java.lang.Object[]], [java.lang.String] })",
                                    "(this.invocation.sequenceNumber == 89)  ==>  (this.invocation.arguments[] == [null])",
                                    "(this.invocation.sequenceNumber == 89)  ==>  (orig(this) has only one value)",
                                    "(this.invocation.sequenceNumber == 89)  ==>  (this.invocation.rawArguments has only one value)",
                                    "(this.invocation.sequenceNumber == 88)  <==>  (this.invocation.arguments[] elements == null)",
                                    "(this.invocation.sequenceNumber == 89)  ==>  (this.matchers[] elements has only one value)",
                                    "(this.invocation.sequenceNumber == 89)  <==>  (this.matchers[].getClass().getName() == [org.mockito.internal.matchers.LocalizedMatcher])",
                                    "(this.invocation.sequenceNumber == 89)  ==>  (this.invocation.mock has only one value)",
                                    "(this.invocation.sequenceNumber == 89)  <==>  (this.invocation.arguments[] elements == null)",
                                    "(this.invocation.sequenceNumber == 89)  ==>  (this.invocation.rawArguments[] == [null])",
                                    "(this.invocation.sequenceNumber == 89)  ==>  (orig(actualArgs) has only one value)",
                                    "(this.invocation.sequenceNumber == 89)  ==>  (this.invocation.location has only one value)",
                                    "(this.invocation.sequenceNumber one of { 29, 34, 45 })  <==>  (this.invocation.rawArguments[].getClass().getName() one of { [java.lang.Object[]], [java.lang.String] })",
                                    "(this.invocation.sequenceNumber one of { 29, 34, 45 })  <==>  (this.invocation.arguments[].getClass().getName() one of { [java.lang.Object[]], [java.lang.String] })",
                                    "(this.invocation.sequenceNumber == 89)  <==>  (this.invocation.rawArguments[] elements == null)",
                                    "(this.invocation.sequenceNumber == 88)  ==>  (this.matchers has only one value)",
                                    "(this.invocation.sequenceNumber == 89)  ==>  (this.invocation.mock.getClass().getName() == org.mockitousage.IMethods$$EnhancerByMockitoWithCGLIB$$ab4be51.class)",
                                    "(this.invocation.sequenceNumber == 88)  ==>  (this.invocation.rawArguments[] == [null])",
                                    "(this.invocation.sequenceNumber == 89)  ==>  (this.invocation.rawArguments[].getClass().getName() elements == null)",
                                    "(this.invocation.sequenceNumber one of { 28, 36, 46 })  <==>  (this.matchers[].getClass().getName() one of { [org.mockito.internal.matchers.ArrayEquals], [org.mockito.internal.matchers.Equals] })",
                                    "(this.invocation.sequenceNumber == 89)  ==>  (actualArgs[] elements has only one value)",
                                    "(this.invocation.sequenceNumber == 88)  ==>  (orig(actualArgs) has only one value)",
                                    "(this.invocation.sequenceNumber == 88)  ==>  (this.matchers[] contains no nulls and has only one value, of length 1)",
                                    "(this.invocation.sequenceNumber one of { 28, 36, 46 })  ==>  (orig(size(actualArgs[])) one of { 0, 1 })",
                                    "(this.invocation.sequenceNumber one of { 28, 36, 46 })  <==>  (this.invocation.rawArguments[].getClass().getName() one of { [java.lang.Object[]], [java.lang.String] })",
                                    "(this.invocation.sequenceNumber == 88)  ==>  (this.invocation.method has only one value)",
                                    "(this.invocation.sequenceNumber == 89)  ==>  (this.matchers[].getClass().getName() elements == org.mockito.internal.matchers.LocalizedMatcher.class)",
                                    "(this.invocation.sequenceNumber one of { 29, 34, 45 })  ==>  (orig(size(actualArgs[])) one of { 0, 1 })",
                                    "(this.invocation.sequenceNumber == 88)  ==>  (this.invocation.location.firstTraceElement has only one value)",
                                    "(this.invocation.sequenceNumber == 89)  ==>  (this.invocation has only one value)",
                                    "(this.invocation.sequenceNumber == 89)  ==>  (orig(size(actualArgs[])) == 1)",
                                    "(this.invocation.sequenceNumber == 89)  <==>  (this.invocation.arguments[].getClass().getName() == [null])",
                                    "(this.invocation.sequenceNumber == 88)  ==>  (this.matchers[].getClass().getName() elements == org.mockito.internal.matchers.LocalizedMatcher.class)",
                                    "(this.invocation.sequenceNumber == 88)  ==>  (this.invocation.mock has only one value)",
                                    "(this.invocation.sequenceNumber == 88)  <==>  (this.invocation.arguments[].getClass().getName() == [null])",
                                    "(this.invocation.sequenceNumber == 88)  <==>  (this.invocation.rawArguments[].getClass().getName() == [null])",
                                    "(this.invocation.sequenceNumber == 88)  ==>  (this.matchers[] elements has only one value)",
                                    "(this.invocation.sequenceNumber == 88)  ==>  (this.invocation.arguments has only one value)",
                                    "(this.invocation.sequenceNumber == 89)  ==>  (this.invocation.location.firstTraceElement has only one value)",
                                    "(this.invocation.sequenceNumber == 88)  <==>  (this.matchers[].getClass().getName() == [org.mockito.internal.matchers.LocalizedMatcher])",
                                    "(this.invocation.sequenceNumber == 88)  ==>  (this.invocation.arguments[].getClass().getName() elements == null)",
                                    "(this.invocation.sequenceNumber one of { 29, 34, 45 })  <==>  (this.matchers[].getClass().getName() one of { [org.mockito.internal.matchers.ArrayEquals], [org.mockito.internal.matchers.Equals] })",
                                    "(this.invocation.sequenceNumber == 88)  ==>  (actualArgs[] elements has only one value)",
                                    "(this.invocation.sequenceNumber == 88)  ==>  (orig(this) has only one value)",
                                    "(this.invocation.sequenceNumber == 88)  ==>  (this.invocation.mock.getClass().getName() == org.mockitousage.IMethods$$EnhancerByMockitoWithCGLIB$$b3f341fe.class)",
                                    "(this.invocation.sequenceNumber == 89)  ==>  (this.invocation.method has only one value)",
                                    "(this.invocation.sequenceNumber == 88)  ==>  (this.invocation.arguments[] == [null])",
                                    "(this.invocation.sequenceNumber == 88)  ==>  (actualArgs[] contains no nulls and has only one value, of length 1)",
                                    "(this.invocation.sequenceNumber == 88)  <==>  (this.invocation.rawArguments[] elements == null)",
                                    "(this.invocation.sequenceNumber == 89)  ==>  (this.invocation.arguments[].getClass().getName() elements == null)",
                                    "(this.invocation.sequenceNumber == 89)  <==>  (this.invocation.rawArguments[].getClass().getName() == [null])",
                                    "(this.invocation.sequenceNumber == 89)  ==>  (actualArgs[] contains no nulls and has only one value, of length 1)",
                                    "(this.invocation.sequenceNumber == 88)  ==>  (orig(size(actualArgs[])) == 1)",
                                    "(this.invocation.sequenceNumber == 88)  ==>  (this.invocation.location has only one value)",
                                    "(this.invocation.sequenceNumber == 89)  ==>  (this.matchers has only one value)",
                                    "(this.invocation.sequenceNumber == 89)  ==>  (this.invocation.arguments has only one value)",
                                    "(this.invocation.sequenceNumber == 88)  ==>  (this.invocation has only one value)"
                                ]
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": [
                                    "(this.invocation.sequenceNumber == 89)  ==>  (this.matchers[] contains no nulls and has only one value, of length 1)",
                                    "(this.invocation.sequenceNumber one of { 29, 34, 46 })  <==>  (this.invocation.arguments[].getClass().getName() one of { [java.lang.Object[]], [java.lang.String] })",
                                    "(this.invocation.sequenceNumber == 89)  ==>  (this.invocation.realMethod has only one value)",
                                    "(this.invocation.sequenceNumber one of { 29, 34, 46 })  ==>  (orig(size(actualArgs[])) one of { 0, 1 })",
                                    "(this.invocation.sequenceNumber == 89)  ==>  (this.invocation.arguments[] == [null])",
                                    "(this.invocation.sequenceNumber == 89)  ==>  (orig(this) has only one value)",
                                    "(this.invocation.sequenceNumber == 89)  ==>  (this.invocation.rawArguments has only one value)",
                                    "(this.invocation.sequenceNumber == 89)  ==>  (this.matchers[] elements has only one value)",
                                    "(this.invocation.sequenceNumber == 89)  <==>  (this.matchers[].getClass().getName() == [org.mockito.internal.matchers.LocalizedMatcher])",
                                    "(this.invocation.sequenceNumber == 89)  ==>  (this.invocation.mock has only one value)",
                                    "(this.invocation.sequenceNumber == 89)  <==>  (this.invocation.arguments[] elements == null)",
                                    "(this.invocation.sequenceNumber == 89)  ==>  (this.invocation.rawArguments[] == [null])",
                                    "(this.invocation.sequenceNumber == 89)  ==>  (orig(actualArgs) has only one value)",
                                    "(this.invocation.sequenceNumber == 89)  ==>  (this.invocation.location has only one value)",
                                    "(this.invocation.sequenceNumber one of { 29, 34, 46 })  <==>  (this.invocation.rawArguments[].getClass().getName() one of { [java.lang.Object[]], [java.lang.String] })",
                                    "(this.invocation.sequenceNumber == 89)  <==>  (this.invocation.rawArguments[] elements == null)",
                                    "(this.invocation.sequenceNumber == 89)  ==>  (this.invocation.rawArguments[].getClass().getName() elements == null)",
                                    "(this.invocation.sequenceNumber == 89)  ==>  (actualArgs[] elements has only one value)",
                                    "(this.invocation.sequenceNumber == 89)  ==>  (this.matchers[].getClass().getName() elements == org.mockito.internal.matchers.LocalizedMatcher.class)",
                                    "(this.invocation.sequenceNumber == 89)  ==>  (this.invocation has only one value)",
                                    "(this.invocation.sequenceNumber == 89)  ==>  (orig(size(actualArgs[])) == 1)",
                                    "(this.invocation.sequenceNumber == 89)  <==>  (this.invocation.arguments[].getClass().getName() == [null])",
                                    "(this.invocation.sequenceNumber == 89)  ==>  (this.invocation.mock.getClass().getName() == org.mockitousage.IMethods$$EnhancerByMockitoWithCGLIB$$423a82d8.class)",
                                    "(this.invocation.sequenceNumber == 89)  ==>  (this.invocation.location.firstTraceElement has only one value)",
                                    "(this.invocation.sequenceNumber one of { 29, 34, 46 })  <==>  (this.matchers[].getClass().getName() one of { [org.mockito.internal.matchers.ArrayEquals], [org.mockito.internal.matchers.Equals] })",
                                    "(this.invocation.sequenceNumber == 89)  ==>  (this.invocation.method has only one value)",
                                    "(this.invocation.sequenceNumber == 89)  ==>  (this.invocation.arguments[].getClass().getName() elements == null)",
                                    "(this.invocation.sequenceNumber == 89)  <==>  (this.invocation.rawArguments[].getClass().getName() == [null])",
                                    "(this.invocation.sequenceNumber == 89)  ==>  (actualArgs[] contains no nulls and has only one value, of length 1)",
                                    "(this.invocation.sequenceNumber == 89)  ==>  (this.matchers has only one value)",
                                    "(this.invocation.sequenceNumber == 89)  ==>  (this.invocation.arguments has only one value)"
                                ]
                            }
                        },
                        {
                            "Patch179.inv.output": {
                                "invs": [
                                    "(this.invocation.sequenceNumber == 88)  ==>  (this.invocation.rawArguments[].getClass().getName() elements == null)",
                                    "(this.invocation.sequenceNumber == 88)  ==>  (this.invocation.rawArguments has only one value)",
                                    "(this.invocation.sequenceNumber == 88)  ==>  (this.invocation.realMethod has only one value)",
                                    "(this.invocation.sequenceNumber one of { 28, 36, 46 })  <==>  (this.invocation.arguments[].getClass().getName() one of { [java.lang.Object[]], [java.lang.String] })",
                                    "(this.invocation.sequenceNumber == 88)  <==>  (this.invocation.arguments[] elements == null)",
                                    "(this.invocation.sequenceNumber one of { 29, 34, 45 })  <==>  (this.invocation.rawArguments[].getClass().getName() one of { [java.lang.Object[]], [java.lang.String] })",
                                    "(this.invocation.sequenceNumber one of { 29, 34, 45 })  <==>  (this.invocation.arguments[].getClass().getName() one of { [java.lang.Object[]], [java.lang.String] })",
                                    "(this.invocation.sequenceNumber == 88)  ==>  (this.matchers has only one value)",
                                    "(this.invocation.sequenceNumber == 89)  ==>  (this.invocation.mock.getClass().getName() == org.mockitousage.IMethods$$EnhancerByMockitoWithCGLIB$$ab4be51.class)",
                                    "(this.invocation.sequenceNumber == 88)  ==>  (this.invocation.rawArguments[] == [null])",
                                    "(this.invocation.sequenceNumber one of { 28, 36, 46 })  <==>  (this.matchers[].getClass().getName() one of { [org.mockito.internal.matchers.ArrayEquals], [org.mockito.internal.matchers.Equals] })",
                                    "(this.invocation.sequenceNumber == 88)  ==>  (orig(actualArgs) has only one value)",
                                    "(this.invocation.sequenceNumber == 88)  ==>  (this.matchers[] contains no nulls and has only one value, of length 1)",
                                    "(this.invocation.sequenceNumber one of { 28, 36, 46 })  ==>  (orig(size(actualArgs[])) one of { 0, 1 })",
                                    "(this.invocation.sequenceNumber one of { 28, 36, 46 })  <==>  (this.invocation.rawArguments[].getClass().getName() one of { [java.lang.Object[]], [java.lang.String] })",
                                    "(this.invocation.sequenceNumber == 88)  ==>  (this.invocation.method has only one value)",
                                    "(this.invocation.sequenceNumber one of { 29, 34, 45 })  ==>  (orig(size(actualArgs[])) one of { 0, 1 })",
                                    "(this.invocation.sequenceNumber == 88)  ==>  (this.invocation.location.firstTraceElement has only one value)",
                                    "(this.invocation.sequenceNumber == 88)  ==>  (this.matchers[].getClass().getName() elements == org.mockito.internal.matchers.LocalizedMatcher.class)",
                                    "(this.invocation.sequenceNumber == 88)  ==>  (this.invocation.mock has only one value)",
                                    "(this.invocation.sequenceNumber == 88)  <==>  (this.invocation.arguments[].getClass().getName() == [null])",
                                    "(this.invocation.sequenceNumber == 88)  <==>  (this.invocation.rawArguments[].getClass().getName() == [null])",
                                    "(this.invocation.sequenceNumber == 88)  ==>  (this.matchers[] elements has only one value)",
                                    "(this.invocation.sequenceNumber == 88)  ==>  (this.invocation.arguments has only one value)",
                                    "(this.invocation.sequenceNumber == 88)  <==>  (this.matchers[].getClass().getName() == [org.mockito.internal.matchers.LocalizedMatcher])",
                                    "(this.invocation.sequenceNumber == 88)  ==>  (this.invocation.arguments[].getClass().getName() elements == null)",
                                    "(this.invocation.sequenceNumber one of { 29, 34, 45 })  <==>  (this.matchers[].getClass().getName() one of { [org.mockito.internal.matchers.ArrayEquals], [org.mockito.internal.matchers.Equals] })",
                                    "(this.invocation.sequenceNumber == 88)  ==>  (actualArgs[] elements has only one value)",
                                    "(this.invocation.sequenceNumber == 88)  ==>  (orig(this) has only one value)",
                                    "(this.invocation.sequenceNumber == 88)  ==>  (this.invocation.mock.getClass().getName() == org.mockitousage.IMethods$$EnhancerByMockitoWithCGLIB$$b3f341fe.class)",
                                    "(this.invocation.sequenceNumber == 88)  ==>  (this.invocation.arguments[] == [null])",
                                    "(this.invocation.sequenceNumber == 88)  ==>  (actualArgs[] contains no nulls and has only one value, of length 1)",
                                    "(this.invocation.sequenceNumber == 88)  <==>  (this.invocation.rawArguments[] elements == null)",
                                    "(this.invocation.sequenceNumber == 88)  ==>  (orig(size(actualArgs[])) == 1)",
                                    "(this.invocation.sequenceNumber == 88)  ==>  (this.invocation.location has only one value)",
                                    "(this.invocation.sequenceNumber == 88)  ==>  (this.invocation has only one value)"
                                ]
                            }
                        }
                    ]
                },
                {
                    "EXITNN": [
                        {
                            "72": [
                                {
                                    "f.inv.output": {
                                        "invs": [
                                            "this.invocation.sequenceNumber one of { 29, 34, 45 }",
                                            "this.invocation.sequenceNumber one of { 28, 36, 46 }"
                                        ]
                                    }
                                },
                                {
                                    "b.inv.output": {
                                        "invs": [
                                            "this.invocation.sequenceNumber one of { 29, 34, 46 }"
                                        ]
                                    }
                                },
                                {
                                    "Patch179.inv.output": {
                                        "invs": [
                                            "this.invocation.sequenceNumber one of { 29, 34, 45 }",
                                            "this.invocation.sequenceNumber one of { 28, 36, 46 }"
                                        ]
                                    }
                                }
                            ]
                        },
                        {
                            "74": [
                                {
                                    "f.inv.output": {
                                        "invs": [
                                            "this.invocation.mock.getClass().getName() == org.mockitousage.IMethods$$EnhancerByMockitoWithCGLIB$$ab4be51.class",
                                            "this.invocation.sequenceNumber == 89",
                                            "this.invocation.mock.getClass().getName() == org.mockitousage.IMethods$$EnhancerByMockitoWithCGLIB$$b3f341fe.class",
                                            "this.invocation.sequenceNumber == 88"
                                        ]
                                    }
                                },
                                {
                                    "b.inv.output": {
                                        "invs": [
                                            "this.invocation.sequenceNumber == 89",
                                            "this.invocation.mock.getClass().getName() == org.mockitousage.IMethods$$EnhancerByMockitoWithCGLIB$$423a82d8.class"
                                        ]
                                    }
                                },
                                {
                                    "Patch179.inv.output": {
                                        "invs": [
                                            "this.invocation.mock.getClass().getName() == org.mockitousage.IMethods$$EnhancerByMockitoWithCGLIB$$ab4be51.class",
                                            "this.invocation.mock.getClass().getName() == org.mockitousage.IMethods$$EnhancerByMockitoWithCGLIB$$b3f341fe.class",
                                            "this.invocation.sequenceNumber == 88"
                                        ]
                                    }
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}