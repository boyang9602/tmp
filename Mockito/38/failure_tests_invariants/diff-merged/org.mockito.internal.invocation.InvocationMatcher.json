{"name": "org.mockito.internal.invocation.InvocationMatcher", "children": [{"name": "hasSimilarMethod(org.mockito.internal.invocation.Invocation)", "children": [{"name": "ENTER", "children": [{"name": "f.inv.output", "children": [{"name": "candidate.mock.getClass().getName() == org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest$Fun$$EnhancerByMockitoWithCGLIB$$b7c20c68.class"}]}, {"name": "b.inv.output", "children": [{"name": "candidate.mock.getClass().getName() == org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest$Fun$$EnhancerByMockitoWithCGLIB$$abb6c88.class"}]}]}, {"name": "EXIT", "children": [{"name": "f.inv.output", "children": [{"name": "candidate.mock.getClass().getName() == org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest$Fun$$EnhancerByMockitoWithCGLIB$$b7c20c68.class"}]}, {"name": "b.inv.output", "children": [{"name": "candidate.mock.getClass().getName() == org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest$Fun$$EnhancerByMockitoWithCGLIB$$abb6c88.class"}]}]}, {"name": "EXITNN", "children": [{"name": "93", "children": [{"name": "f.inv.output", "children": []}, {"name": "b.inv.output", "children": []}, {"name": "Patch179.inv.output", "children": [{"name": "Patch179.inv.output", "children": [{"name": "N/A"}]}]}]}]}]}, {"name": "InvocationMatcher(org.mockito.internal.invocation.Invocation, java.util.List)", "children": [{"name": "ENTER", "children": [{"name": "f.inv.output", "children": [{"name": "invocation.mock.getClass().getName() == org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest$Fun$$EnhancerByMockitoWithCGLIB$$b7c20c68.class"}, {"name": "invocation.mock.getClass().getName() == org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest$Fun$$EnhancerByMockitoWithCGLIB$$4038d86a.class"}]}, {"name": "b.inv.output", "children": [{"name": "invocation.mock.getClass().getName() == org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest$Fun$$EnhancerByMockitoWithCGLIB$$abb6c88.class"}]}, {"name": "Patch179.inv.output", "children": [{"name": "invocation.mock.getClass().getName() == org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest$Fun$$EnhancerByMockitoWithCGLIB$$b7c20c68.class"}, {"name": "invocation.mock.getClass().getName() == org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest$Fun$$EnhancerByMockitoWithCGLIB$$4038d86a.class"}]}]}, {"name": "EXIT", "children": [{"name": "f.inv.output", "children": [{"name": "invocation.mock.getClass().getName() == org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest$Fun$$EnhancerByMockitoWithCGLIB$$b7c20c68.class"}, {"name": "invocation.mock.getClass().getName() == org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest$Fun$$EnhancerByMockitoWithCGLIB$$4038d86a.class"}]}, {"name": "b.inv.output", "children": [{"name": "invocation.mock.getClass().getName() == org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest$Fun$$EnhancerByMockitoWithCGLIB$$abb6c88.class"}]}, {"name": "Patch179.inv.output", "children": [{"name": "invocation.mock.getClass().getName() == org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest$Fun$$EnhancerByMockitoWithCGLIB$$b7c20c68.class"}, {"name": "invocation.mock.getClass().getName() == org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest$Fun$$EnhancerByMockitoWithCGLIB$$4038d86a.class"}]}]}]}, {"name": "hasSameMethod(org.mockito.internal.invocation.Invocation)", "children": [{"name": "ENTER", "children": [{"name": "f.inv.output", "children": [{"name": "candidate.mock.getClass().getName() == org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest$Fun$$EnhancerByMockitoWithCGLIB$$4038d86a.class"}, {"name": "candidate.mock.getClass().getName() == org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest$Fun$$EnhancerByMockitoWithCGLIB$$b7c20c68.class"}]}, {"name": "b.inv.output", "children": [{"name": "candidate.mock.getClass().getName() == org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest$Fun$$EnhancerByMockitoWithCGLIB$$abb6c88.class"}]}, {"name": "Patch179.inv.output", "children": [{"name": "candidate.mock.getClass().getName() == org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest$Fun$$EnhancerByMockitoWithCGLIB$$4038d86a.class"}, {"name": "candidate.mock.getClass().getName() == org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest$Fun$$EnhancerByMockitoWithCGLIB$$b7c20c68.class"}]}]}, {"name": "EXIT", "children": [{"name": "f.inv.output", "children": [{"name": "candidate.mock.getClass().getName() == org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest$Fun$$EnhancerByMockitoWithCGLIB$$4038d86a.class"}, {"name": "candidate.mock.getClass().getName() == org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest$Fun$$EnhancerByMockitoWithCGLIB$$b7c20c68.class"}]}, {"name": "b.inv.output", "children": [{"name": "candidate.mock.getClass().getName() == org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest$Fun$$EnhancerByMockitoWithCGLIB$$abb6c88.class"}]}, {"name": "Patch179.inv.output", "children": [{"name": "candidate.mock.getClass().getName() == org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest$Fun$$EnhancerByMockitoWithCGLIB$$4038d86a.class"}, {"name": "candidate.mock.getClass().getName() == org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest$Fun$$EnhancerByMockitoWithCGLIB$$b7c20c68.class"}]}]}]}, {"name": "matches(org.mockito.internal.invocation.Invocation)", "children": [{"name": "ENTER", "children": [{"name": "f.inv.output", "children": [{"name": "actual.mock.getClass().getName() == org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest$Fun$$EnhancerByMockitoWithCGLIB$$4038d86a.class"}, {"name": "actual.mock.getClass().getName() == org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest$Fun$$EnhancerByMockitoWithCGLIB$$b7c20c68.class"}]}, {"name": "b.inv.output", "children": [{"name": "actual.mock.getClass().getName() == org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest$Fun$$EnhancerByMockitoWithCGLIB$$abb6c88.class"}]}, {"name": "Patch179.inv.output", "children": [{"name": "actual.mock.getClass().getName() == org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest$Fun$$EnhancerByMockitoWithCGLIB$$4038d86a.class"}, {"name": "actual.mock.getClass().getName() == org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest$Fun$$EnhancerByMockitoWithCGLIB$$b7c20c68.class"}]}]}, {"name": "EXIT", "children": [{"name": "f.inv.output", "children": [{"name": "(this.invocation.sequenceNumber == 1)  <==>  (this.invocation.rawArguments[].getClass().getName() elements == null)"}, {"name": "(this.invocation.sequenceNumber == 3)  <==>  (this.invocation.arguments[] elements has only one value)"}, {"name": "return == false"}, {"name": "this.invocation has only one value"}, {"name": "(this.invocation.sequenceNumber == 1)  <==>  (this.invocation.rawArguments[] elements == null)"}, {"name": "(this.invocation.sequenceNumber == 3)  <==>  (this.invocation.arguments[].getClass().getName() elements == java.lang.String.class)"}, {"name": "(this.invocation.sequenceNumber == 1)  <==>  (this.invocation.arguments[].getClass().getName() == [null])"}, {"name": "actual.mock.getClass().getName() == org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest$Fun$$EnhancerByMockitoWithCGLIB$$4038d86a.class"}, {"name": "this.invocation.rawArguments[] == [null]"}, {"name": "(this.invocation.sequenceNumber == 3)  <==>  (this.matchers[] contains no nulls and has only one value, of length 1)"}, {"name": "this.invocation.arguments has only one value"}, {"name": "this.invocation.arguments[] elements has only one value"}, {"name": "this.invocation.arguments[].getClass().getName() == [java.lang.String]"}, {"name": "(this.invocation.sequenceNumber == 3)  <==>  (this.invocation.rawArguments[].getClass().getName() == [java.lang.String])"}, {"name": "this.invocation.realMethod has only one value"}, {"name": "this.matchers[].getClass().getName() elements == org.mockito.internal.matchers.Equals.class"}, {"name": "this.matchers[].getClass().getName() elements == org.mockito.internal.matchers.LocalizedMatcher.class"}, {"name": "(this.invocation.sequenceNumber == 1)  <==>  (this.invocation.arguments[] == [null])"}, {"name": "return == true"}, {"name": "this.invocation.rawArguments[] contains no nulls and has only one value, of length 1"}, {"name": "(this.invocation.sequenceNumber == 3)  <==>  (return == false)"}, {"name": "(this.invocation.sequenceNumber == 3)  <==>  (this.invocation.rawArguments[] contains no nulls and has only one value, of length 1)"}, {"name": "this.invocation.arguments[] elements == null"}, {"name": "this.invocation.arguments[].getClass().getName() == [null]"}, {"name": "this.invocation.rawArguments[] elements has only one value"}, {"name": "(this.invocation.sequenceNumber == 1)  <==>  (this.invocation.arguments[].getClass().getName() elements == null)"}, {"name": "this.invocation.rawArguments[].getClass().getName() elements == null"}, {"name": "(this.invocation.sequenceNumber == 3)  <==>  (this.invocation.arguments[] contains no nulls and has only one value, of length 1)"}, {"name": "this.invocation.rawArguments has only one value"}, {"name": "this.invocation.sequenceNumber == 1"}, {"name": "(this.invocation.sequenceNumber == 3)  <==>  (this.matchers[].getClass().getName() == [org.mockito.internal.matchers.Equals])"}, {"name": "this.invocation.arguments[].getClass().getName() elements == null"}, {"name": "(this.invocation.sequenceNumber == 1)  <==>  (this.matchers[].getClass().getName() elements == org.mockito.internal.matchers.LocalizedMatcher.class)"}, {"name": "(this.invocation.sequenceNumber == 1)  <==>  (this.invocation.rawArguments[].getClass().getName() == [null])"}, {"name": "(this.invocation.sequenceNumber == 1)  <==>  (this.invocation.rawArguments[] == [null])"}, {"name": "(this.invocation.sequenceNumber == 1)  <==>  (this.invocation.arguments[] elements == null)"}, {"name": "(this.invocation.sequenceNumber == 3)  <==>  (this.invocation.arguments[].getClass().getName() == [java.lang.String])"}, {"name": "this.invocation.sequenceNumber == 3"}, {"name": "this.invocation.rawArguments[] elements == null"}, {"name": "this.matchers[].getClass().getName() == [org.mockito.internal.matchers.LocalizedMatcher]"}, {"name": "this.invocation.rawArguments[].getClass().getName() == [null]"}, {"name": "this.invocation.location has only one value"}, {"name": "(this.invocation.sequenceNumber == 1)  <==>  (return == true)"}, {"name": "this.invocation.arguments[] contains no nulls and has only one value, of length 1"}, {"name": "actual.mock.getClass().getName() == org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest$Fun$$EnhancerByMockitoWithCGLIB$$b7c20c68.class"}, {"name": "this.matchers has only one value"}, {"name": "orig(this) has only one value"}, {"name": "(this.invocation.sequenceNumber == 1)  <==>  (this.matchers[] contains no nulls and has only one value, of length 1)"}, {"name": "this.invocation.location.firstTraceElement has only one value"}, {"name": "(this.invocation.sequenceNumber == 3)  <==>  (this.invocation.rawArguments[] elements has only one value)"}, {"name": "this.invocation.rawArguments[].getClass().getName() == [java.lang.String]"}, {"name": "this.invocation.arguments[] == [null]"}, {"name": "this.matchers[] elements has only one value"}, {"name": "this.invocation.arguments[].getClass().getName() elements == java.lang.String.class"}, {"name": "(this.invocation.sequenceNumber == 1)  <==>  (this.matchers[].getClass().getName() == [org.mockito.internal.matchers.LocalizedMatcher])"}, {"name": "this.invocation.rawArguments[].getClass().getName() elements == java.lang.String.class"}, {"name": "this.matchers[].getClass().getName() == [org.mockito.internal.matchers.Equals]"}, {"name": "(this.invocation.sequenceNumber == 3)  <==>  (this.matchers[].getClass().getName() elements == org.mockito.internal.matchers.Equals.class)"}, {"name": "(this.invocation.sequenceNumber == 3)  <==>  (this.invocation.rawArguments[].getClass().getName() elements == java.lang.String.class)"}, {"name": "this.matchers[] contains no nulls and has only one value, of length 1"}]}, {"name": "b.inv.output", "children": [{"name": "(this.invocation.sequenceNumber == 1)  <==>  (this.invocation.rawArguments[].getClass().getName() elements == null)"}, {"name": "(this.invocation.sequenceNumber == 3)  <==>  (this.invocation.arguments[] elements has only one value)"}, {"name": "return == false"}, {"name": "this.invocation has only one value"}, {"name": "(this.invocation.sequenceNumber == 1)  <==>  (this.invocation.rawArguments[] elements == null)"}, {"name": "(this.invocation.sequenceNumber == 3)  <==>  (this.invocation.arguments[].getClass().getName() elements == java.lang.String.class)"}, {"name": "(this.invocation.sequenceNumber == 1)  <==>  (this.invocation.arguments[].getClass().getName() == [null])"}, {"name": "this.invocation.rawArguments[] == [null]"}, {"name": "(this.invocation.sequenceNumber == 3)  <==>  (this.matchers[] contains no nulls and has only one value, of length 1)"}, {"name": "this.invocation.arguments has only one value"}, {"name": "this.invocation.arguments[] elements has only one value"}, {"name": "actual.mock.getClass().getName() == org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest$Fun$$EnhancerByMockitoWithCGLIB$$abb6c88.class"}, {"name": "this.invocation.arguments[].getClass().getName() == [java.lang.String]"}, {"name": "(this.invocation.sequenceNumber == 3)  <==>  (this.invocation.rawArguments[].getClass().getName() == [java.lang.String])"}, {"name": "this.invocation.realMethod has only one value"}, {"name": "this.matchers[].getClass().getName() elements == org.mockito.internal.matchers.Equals.class"}, {"name": "this.matchers[].getClass().getName() elements == org.mockito.internal.matchers.LocalizedMatcher.class"}, {"name": "(this.invocation.sequenceNumber == 1)  <==>  (this.invocation.arguments[] == [null])"}, {"name": "this.invocation.rawArguments[] contains no nulls and has only one value, of length 1"}, {"name": "(this.invocation.sequenceNumber == 3)  <==>  (return == false)"}, {"name": "(this.invocation.sequenceNumber == 3)  <==>  (this.invocation.rawArguments[] contains no nulls and has only one value, of length 1)"}, {"name": "this.invocation.arguments[] elements == null"}, {"name": "this.invocation.arguments[].getClass().getName() == [null]"}, {"name": "this.invocation.rawArguments[] elements has only one value"}, {"name": "(this.invocation.sequenceNumber == 1)  <==>  (this.invocation.arguments[].getClass().getName() elements == null)"}, {"name": "this.invocation.rawArguments[].getClass().getName() elements == null"}, {"name": "(this.invocation.sequenceNumber == 3)  <==>  (this.invocation.arguments[] contains no nulls and has only one value, of length 1)"}, {"name": "this.invocation.rawArguments has only one value"}, {"name": "this.invocation.sequenceNumber == 1"}, {"name": "(this.invocation.sequenceNumber == 3)  <==>  (this.matchers[].getClass().getName() == [org.mockito.internal.matchers.Equals])"}, {"name": "this.invocation.arguments[].getClass().getName() elements == null"}, {"name": "(this.invocation.sequenceNumber == 1)  <==>  (this.matchers[].getClass().getName() elements == org.mockito.internal.matchers.LocalizedMatcher.class)"}, {"name": "(this.invocation.sequenceNumber == 1)  <==>  (this.invocation.rawArguments[].getClass().getName() == [null])"}, {"name": "(this.invocation.sequenceNumber == 1)  <==>  (this.invocation.rawArguments[] == [null])"}, {"name": "(this.invocation.sequenceNumber == 1)  <==>  (this.invocation.arguments[] elements == null)"}, {"name": "(this.invocation.sequenceNumber == 3)  <==>  (this.invocation.arguments[].getClass().getName() == [java.lang.String])"}, {"name": "this.invocation.sequenceNumber == 3"}, {"name": "this.invocation.rawArguments[] elements == null"}, {"name": "this.matchers[].getClass().getName() == [org.mockito.internal.matchers.LocalizedMatcher]"}, {"name": "this.invocation.rawArguments[].getClass().getName() == [null]"}, {"name": "this.invocation.location has only one value"}, {"name": "(this.invocation.sequenceNumber == 1)  <==>  (return == true)"}, {"name": "this.invocation.arguments[] contains no nulls and has only one value, of length 1"}, {"name": "this.matchers has only one value"}, {"name": "orig(this) has only one value"}, {"name": "(this.invocation.sequenceNumber == 1)  <==>  (this.matchers[] contains no nulls and has only one value, of length 1)"}, {"name": "this.invocation.location.firstTraceElement has only one value"}, {"name": "(this.invocation.sequenceNumber == 3)  <==>  (this.invocation.rawArguments[] elements has only one value)"}, {"name": "this.invocation.rawArguments[].getClass().getName() == [java.lang.String]"}, {"name": "this.invocation.arguments[] == [null]"}, {"name": "this.matchers[] elements has only one value"}, {"name": "this.invocation.arguments[].getClass().getName() elements == java.lang.String.class"}, {"name": "(this.invocation.sequenceNumber == 1)  <==>  (this.matchers[].getClass().getName() == [org.mockito.internal.matchers.LocalizedMatcher])"}, {"name": "this.invocation.rawArguments[].getClass().getName() elements == java.lang.String.class"}, {"name": "this.matchers[].getClass().getName() == [org.mockito.internal.matchers.Equals]"}, {"name": "(this.invocation.sequenceNumber == 3)  <==>  (this.matchers[].getClass().getName() elements == org.mockito.internal.matchers.Equals.class)"}, {"name": "(this.invocation.sequenceNumber == 3)  <==>  (this.invocation.rawArguments[].getClass().getName() elements == java.lang.String.class)"}, {"name": "this.matchers[] contains no nulls and has only one value, of length 1"}]}, {"name": "Patch179.inv.output", "children": [{"name": "actual.mock.getClass().getName() == org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest$Fun$$EnhancerByMockitoWithCGLIB$$4038d86a.class"}, {"name": "actual.mock.getClass().getName() == org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest$Fun$$EnhancerByMockitoWithCGLIB$$b7c20c68.class"}]}]}]}, {"name": "getInvocation()", "children": [{"name": "ENTER", "children": [{"name": "f.inv.output", "children": [{"name": "this.invocation.rawArguments[].getClass().getName() elements == null"}, {"name": "this.invocation.sequenceNumber one of { 1, 2 }"}, {"name": "this.invocation.arguments[] == [null]"}, {"name": "this.invocation.arguments[].getClass().getName() elements == null"}, {"name": "this.invocation.arguments[] elements == null"}, {"name": "this.invocation.rawArguments[] elements == null"}, {"name": "this.invocation.rawArguments[] == [null]"}, {"name": "this.invocation.arguments[].getClass().getName() == [null]"}, {"name": "this.invocation.rawArguments[].getClass().getName() == [null]"}]}, {"name": "b.inv.output", "children": []}, {"name": "Patch179.inv.output", "children": [{"name": "this.invocation.rawArguments[].getClass().getName() elements == null"}, {"name": "this.invocation.sequenceNumber one of { 1, 2 }"}, {"name": "this.invocation.arguments[] == [null]"}, {"name": "this.invocation.arguments[].getClass().getName() elements == null"}, {"name": "this.invocation.arguments[] elements == null"}, {"name": "this.invocation.rawArguments[] elements == null"}, {"name": "this.invocation.rawArguments[] == [null]"}, {"name": "this.invocation.arguments[].getClass().getName() == [null]"}, {"name": "this.invocation.rawArguments[].getClass().getName() == [null]"}]}]}, {"name": "EXIT", "children": [{"name": "f.inv.output", "children": [{"name": "return.rawArguments[] elements == null"}, {"name": "this.invocation.sequenceNumber one of { 1, 2 }"}, {"name": "return.arguments[].getClass().getName() one of { [null], [java.lang.String] }"}, {"name": "this.invocation.rawArguments[] == [null]"}, {"name": "return.sequenceNumber one of { 1, 2 }"}, {"name": "return.rawArguments[].getClass().getName() == [null]"}, {"name": "return.rawArguments[].getClass().getName() elements == null"}, {"name": "this.invocation.arguments[] elements == null"}, {"name": "return.mock.getClass().getName() == org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest$Fun$$EnhancerByMockitoWithCGLIB$$b7c20c68.class"}, {"name": "this.invocation.arguments[].getClass().getName() == [null]"}, {"name": "this.invocation.rawArguments[].getClass().getName() elements == null"}, {"name": "return.arguments[].getClass().getName() == [null]"}, {"name": "this.invocation.arguments[].getClass().getName() elements == null"}, {"name": "this.invocation.rawArguments[] elements == null"}, {"name": "this.invocation.rawArguments[].getClass().getName() == [null]"}, {"name": "return.arguments[] == [null]"}, {"name": "return.arguments[] elements == null"}, {"name": "return.sequenceNumber one of { 1, 2, 3 }"}, {"name": "this.invocation.arguments[] == [null]"}, {"name": "return.mock.getClass().getName() == org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest$Fun$$EnhancerByMockitoWithCGLIB$$4038d86a.class"}, {"name": "return.arguments[].getClass().getName() elements == null"}, {"name": "return.rawArguments[].getClass().getName() one of { [null], [java.lang.String] }"}, {"name": "return.rawArguments[] == [null]"}]}, {"name": "b.inv.output", "children": [{"name": "return.arguments[].getClass().getName() one of { [null], [java.lang.String] }"}, {"name": "return.mock.getClass().getName() == org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest$Fun$$EnhancerByMockitoWithCGLIB$$abb6c88.class"}, {"name": "return.sequenceNumber one of { 1, 2, 3 }"}, {"name": "return.rawArguments[].getClass().getName() one of { [null], [java.lang.String] }"}]}, {"name": "Patch179.inv.output", "children": [{"name": "return.rawArguments[] elements == null"}, {"name": "this.invocation.sequenceNumber one of { 1, 2 }"}, {"name": "this.invocation.rawArguments[] == [null]"}, {"name": "return.sequenceNumber one of { 1, 2 }"}, {"name": "return.rawArguments[].getClass().getName() == [null]"}, {"name": "return.rawArguments[].getClass().getName() elements == null"}, {"name": "this.invocation.arguments[] elements == null"}, {"name": "return.mock.getClass().getName() == org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest$Fun$$EnhancerByMockitoWithCGLIB$$b7c20c68.class"}, {"name": "this.invocation.arguments[].getClass().getName() == [null]"}, {"name": "this.invocation.rawArguments[].getClass().getName() elements == null"}, {"name": "return.arguments[].getClass().getName() == [null]"}, {"name": "this.invocation.arguments[].getClass().getName() elements == null"}, {"name": "this.invocation.rawArguments[] elements == null"}, {"name": "this.invocation.rawArguments[].getClass().getName() == [null]"}, {"name": "return.arguments[] == [null]"}, {"name": "return.arguments[] elements == null"}, {"name": "this.invocation.arguments[] == [null]"}, {"name": "return.mock.getClass().getName() == org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest$Fun$$EnhancerByMockitoWithCGLIB$$4038d86a.class"}, {"name": "return.arguments[].getClass().getName() elements == null"}, {"name": "return.rawArguments[] == [null]"}]}]}]}, {"name": "getMatchers()", "children": [{"name": "ENTER", "children": [{"name": "Patch179.inv.output", "children": [{"name": "this.invocation has only one value"}, {"name": "this.invocation.rawArguments[] == [null]"}, {"name": "this.invocation.arguments has only one value"}, {"name": "this.invocation.realMethod has only one value"}, {"name": "this.matchers[].getClass().getName() elements == org.mockito.internal.matchers.LocalizedMatcher.class"}, {"name": "this.invocation.arguments[] elements == null"}, {"name": "this.invocation.arguments[].getClass().getName() == [null]"}, {"name": "this.invocation.rawArguments[].getClass().getName() elements == null"}, {"name": "this.invocation.rawArguments has only one value"}, {"name": "this.invocation.sequenceNumber == 1"}, {"name": "this.invocation.arguments[].getClass().getName() elements == null"}, {"name": "this.invocation.rawArguments[] elements == null"}, {"name": "this.matchers[].getClass().getName() == [org.mockito.internal.matchers.LocalizedMatcher]"}, {"name": "this.invocation.rawArguments[].getClass().getName() == [null]"}, {"name": "this.invocation.location has only one value"}, {"name": "this.matchers has only one value"}, {"name": "this.invocation.location.firstTraceElement has only one value"}, {"name": "this has only one value"}, {"name": "this.invocation.arguments[] == [null]"}, {"name": "this.matchers[] elements has only one value"}, {"name": "this.matchers[] contains no nulls and has only one value, of length 1"}]}, {"name": "b.inv.output", "children": [{"name": "this.invocation.sequenceNumber one of { 1, 3 }"}]}]}, {"name": "EXIT", "children": [{"name": "Patch179.inv.output", "children": [{"name": "this.invocation has only one value"}, {"name": "this.invocation.rawArguments[] == [null]"}, {"name": "return[].getClass().getName() == [org.mockito.internal.matchers.LocalizedMatcher]"}, {"name": "this.invocation.arguments has only one value"}, {"name": "this.invocation.realMethod has only one value"}, {"name": "this.matchers[].getClass().getName() elements == org.mockito.internal.matchers.LocalizedMatcher.class"}, {"name": "this.invocation.arguments[] elements == null"}, {"name": "this.invocation.arguments[].getClass().getName() == [null]"}, {"name": "this.invocation.rawArguments[].getClass().getName() elements == null"}, {"name": "this.invocation.rawArguments has only one value"}, {"name": "this.invocation.sequenceNumber == 1"}, {"name": "return has only one value"}, {"name": "this.invocation.arguments[].getClass().getName() elements == null"}, {"name": "return[] contains no nulls and has only one value, of length 1"}, {"name": "this.invocation.rawArguments[] elements == null"}, {"name": "this.matchers[].getClass().getName() == [org.mockito.internal.matchers.LocalizedMatcher]"}, {"name": "return[] elements has only one value"}, {"name": "this.invocation.rawArguments[].getClass().getName() == [null]"}, {"name": "this.invocation.location has only one value"}, {"name": "this.matchers has only one value"}, {"name": "this.invocation.location.firstTraceElement has only one value"}, {"name": "return[].getClass().getName() elements == org.mockito.internal.matchers.LocalizedMatcher.class"}, {"name": "this.invocation.arguments[] == [null]"}, {"name": "this.matchers[] elements has only one value"}, {"name": "this.matchers[] contains no nulls and has only one value, of length 1"}]}, {"name": "b.inv.output", "children": [{"name": "return[].getClass().getName() one of { [org.mockito.internal.matchers.Equals], [org.mockito.internal.matchers.LocalizedMatcher] }"}, {"name": "this.invocation.sequenceNumber one of { 1, 3 }"}]}]}]}, {"name": "argumentsMatch(java.lang.Object[])", "children": [{"name": "ENTER", "children": [{"name": "Patch179.inv.output", "children": []}, {"name": "b.inv.output", "children": []}]}, {"name": "EXIT", "children": [{"name": "Patch179.inv.output", "children": []}, {"name": "b.inv.output", "children": [{"name": "(this.invocation.sequenceNumber == 1)  <==>  (this.invocation.rawArguments[].getClass().getName() elements == null)"}, {"name": "(this.invocation.sequenceNumber == 3)  <==>  (this.invocation.arguments[] elements has only one value)"}, {"name": "return == false"}, {"name": "this.invocation has only one value"}, {"name": "(this.invocation.sequenceNumber == 1)  <==>  (this.invocation.rawArguments[] elements == null)"}, {"name": "(this.invocation.sequenceNumber == 3)  <==>  (this.invocation.arguments[].getClass().getName() elements == java.lang.String.class)"}, {"name": "(this.invocation.sequenceNumber == 1)  <==>  (this.invocation.arguments[].getClass().getName() == [null])"}, {"name": "this.invocation.rawArguments[] == [null]"}, {"name": "(this.invocation.sequenceNumber == 3)  <==>  (this.matchers[] contains no nulls and has only one value, of length 1)"}, {"name": "this.invocation.arguments has only one value"}, {"name": "this.invocation.arguments[] elements has only one value"}, {"name": "this.invocation.arguments[].getClass().getName() == [java.lang.String]"}, {"name": "(this.invocation.sequenceNumber == 3)  <==>  (this.invocation.rawArguments[].getClass().getName() == [java.lang.String])"}, {"name": "this.invocation.realMethod has only one value"}, {"name": "this.matchers[].getClass().getName() elements == org.mockito.internal.matchers.Equals.class"}, {"name": "this.matchers[].getClass().getName() elements == org.mockito.internal.matchers.LocalizedMatcher.class"}, {"name": "(this.invocation.sequenceNumber == 1)  <==>  (this.invocation.arguments[] == [null])"}, {"name": "this.invocation.rawArguments[] contains no nulls and has only one value, of length 1"}, {"name": "(this.invocation.sequenceNumber == 3)  <==>  (return == false)"}, {"name": "(this.invocation.sequenceNumber == 3)  <==>  (this.invocation.rawArguments[] contains no nulls and has only one value, of length 1)"}, {"name": "this.invocation.arguments[] elements == null"}, {"name": "this.invocation.arguments[].getClass().getName() == [null]"}, {"name": "this.invocation.rawArguments[] elements has only one value"}, {"name": "(this.invocation.sequenceNumber == 1)  <==>  (this.invocation.arguments[].getClass().getName() elements == null)"}, {"name": "this.invocation.rawArguments[].getClass().getName() elements == null"}, {"name": "(this.invocation.sequenceNumber == 3)  <==>  (this.invocation.arguments[] contains no nulls and has only one value, of length 1)"}, {"name": "this.invocation.rawArguments has only one value"}, {"name": "this.invocation.sequenceNumber == 1"}, {"name": "(this.invocation.sequenceNumber == 3)  <==>  (this.matchers[].getClass().getName() == [org.mockito.internal.matchers.Equals])"}, {"name": "this.invocation.arguments[].getClass().getName() elements == null"}, {"name": "(this.invocation.sequenceNumber == 1)  <==>  (this.matchers[].getClass().getName() elements == org.mockito.internal.matchers.LocalizedMatcher.class)"}, {"name": "(this.invocation.sequenceNumber == 1)  <==>  (this.invocation.rawArguments[].getClass().getName() == [null])"}, {"name": "(this.invocation.sequenceNumber == 1)  <==>  (this.invocation.rawArguments[] == [null])"}, {"name": "(this.invocation.sequenceNumber == 1)  <==>  (this.invocation.arguments[] elements == null)"}, {"name": "(this.invocation.sequenceNumber == 3)  <==>  (this.invocation.arguments[].getClass().getName() == [java.lang.String])"}, {"name": "this.invocation.sequenceNumber == 3"}, {"name": "this.invocation.rawArguments[] elements == null"}, {"name": "this.matchers[].getClass().getName() == [org.mockito.internal.matchers.LocalizedMatcher]"}, {"name": "this.invocation.rawArguments[].getClass().getName() == [null]"}, {"name": "this.invocation.location has only one value"}, {"name": "(this.invocation.sequenceNumber == 1)  <==>  (return == true)"}, {"name": "this.invocation.arguments[] contains no nulls and has only one value, of length 1"}, {"name": "this.matchers has only one value"}, {"name": "this.invocation.rawArguments[].getClass().getName() == [java.lang.String]"}, {"name": "orig(this) has only one value"}, {"name": "(this.invocation.sequenceNumber == 1)  <==>  (this.matchers[] contains no nulls and has only one value, of length 1)"}, {"name": "this.invocation.location.firstTraceElement has only one value"}, {"name": "(this.invocation.sequenceNumber == 3)  <==>  (this.invocation.rawArguments[] elements has only one value)"}, {"name": "this.invocation.arguments[] == [null]"}, {"name": "this.matchers[] elements has only one value"}, {"name": "this.invocation.arguments[].getClass().getName() elements == java.lang.String.class"}, {"name": "(this.invocation.sequenceNumber == 1)  <==>  (this.matchers[].getClass().getName() == [org.mockito.internal.matchers.LocalizedMatcher])"}, {"name": "this.invocation.rawArguments[].getClass().getName() elements == java.lang.String.class"}, {"name": "this.matchers[].getClass().getName() == [org.mockito.internal.matchers.Equals]"}, {"name": "(this.invocation.sequenceNumber == 3)  <==>  (this.matchers[].getClass().getName() elements == org.mockito.internal.matchers.Equals.class)"}, {"name": "(this.invocation.sequenceNumber == 3)  <==>  (this.invocation.rawArguments[].getClass().getName() elements == java.lang.String.class)"}, {"name": "this.matchers[] contains no nulls and has only one value, of length 1"}]}]}, {"name": "EXITNN", "children": [{"name": "67", "children": [{"name": "Patch179.inv.output", "children": []}, {"name": "b.inv.output", "children": [{"name": "this.invocation has only one value"}, {"name": "this.invocation.rawArguments[] == [null]"}, {"name": "this.invocation.arguments has only one value"}, {"name": "this.invocation.realMethod has only one value"}, {"name": "this.matchers[].getClass().getName() elements == org.mockito.internal.matchers.LocalizedMatcher.class"}, {"name": "return == true"}, {"name": "this.invocation.arguments[] elements == null"}, {"name": "this.invocation.arguments[].getClass().getName() == [null]"}, {"name": "this.invocation.rawArguments[].getClass().getName() elements == null"}, {"name": "this.invocation.rawArguments has only one value"}, {"name": "this.invocation.sequenceNumber == 1"}, {"name": "this.invocation.arguments[].getClass().getName() elements == null"}, {"name": "this.invocation.rawArguments[] elements == null"}, {"name": "this.matchers[].getClass().getName() == [org.mockito.internal.matchers.LocalizedMatcher]"}, {"name": "this.invocation.rawArguments[].getClass().getName() == [null]"}, {"name": "this.invocation.location has only one value"}, {"name": "this.matchers has only one value"}, {"name": "orig(this) has only one value"}, {"name": "this.invocation.location.firstTraceElement has only one value"}, {"name": "this.invocation.arguments[] == [null]"}, {"name": "this.matchers[] elements has only one value"}, {"name": "this.matchers[] contains no nulls and has only one value, of length 1"}]}]}, {"name": "64", "children": [{"name": "Patch179.inv.output", "children": [{"name": "Patch179.inv.output", "children": [{"name": "N/A"}]}]}, {"name": "b.inv.output", "children": [{"name": "return == false"}, {"name": "this.invocation has only one value"}, {"name": "this.invocation.arguments has only one value"}, {"name": "this.invocation.arguments[] elements has only one value"}, {"name": "this.invocation.arguments[].getClass().getName() == [java.lang.String]"}, {"name": "this.invocation.realMethod has only one value"}, {"name": "this.matchers[].getClass().getName() elements == org.mockito.internal.matchers.Equals.class"}, {"name": "this.invocation.rawArguments[] contains no nulls and has only one value, of length 1"}, {"name": "this.invocation.rawArguments[] elements has only one value"}, {"name": "this.invocation.rawArguments has only one value"}, {"name": "this.invocation.sequenceNumber == 3"}, {"name": "this.invocation.location has only one value"}, {"name": "this.invocation.arguments[] contains no nulls and has only one value, of length 1"}, {"name": "this.invocation.rawArguments[].getClass().getName() == [java.lang.String]"}, {"name": "this.matchers has only one value"}, {"name": "orig(this) has only one value"}, {"name": "this.invocation.location.firstTraceElement has only one value"}, {"name": "this.invocation.arguments[].getClass().getName() elements == java.lang.String.class"}, {"name": "this.matchers[] elements has only one value"}, {"name": "this.invocation.rawArguments[].getClass().getName() elements == java.lang.String.class"}, {"name": "this.matchers[].getClass().getName() == [org.mockito.internal.matchers.Equals]"}, {"name": "this.matchers[] contains no nulls and has only one value, of length 1"}]}]}]}]}]}
