{
    "org.mockito.internal.MockHandler": [
        {
            "intercept(java.lang.Object, java.lang.reflect.Method, java.lang.Object[], org.mockito.cglib.proxy.MethodProxy)": [
                {
                    "ENTER": [
                        {
                            "f.inv.output": {
                                "invs": [
                                    "this.registeredInvocations.invocations[] elements has only one value",
                                    "proxy.getClass().getName() == org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest$Fun$$EnhancerByMockitoWithCGLIB$$4038d86a.class",
                                    "this.mockitoStubber.invocationForStubbing.invocation has only one value",
                                    "this.mockitoStubber.invocationForStubbing.matchers[].getClass().getName() elements == org.mockito.internal.matchers.LocalizedMatcher.class",
                                    "this.registeredInvocations.invocations[].getClass().getName() == []",
                                    "proxy.getClass().getName() == org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest$Fun$$EnhancerByMockitoWithCGLIB$$b7c20c68.class",
                                    "args[] elements == null",
                                    "this.mockitoStubber.invocationForStubbing.matchers[] elements has only one value",
                                    "this.mockitoStubber.invocationForStubbing.matchers has only one value",
                                    "this.registeredInvocations.invocations[] == []",
                                    "this.mockitoStubber.invocationForStubbing.matchers[].getClass().getName() == [org.mockito.internal.matchers.LocalizedMatcher]",
                                    "args[] == [null]",
                                    "this.mockitoStubber.invocationForStubbing.matchers[] contains no nulls and has only one value, of length 1"
                                ]
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": [
                                    "this.mockitoStubber.invocationForStubbing.invocation has only one value",
                                    "this.mockitoStubber.invocationForStubbing.matchers[].getClass().getName() elements == org.mockito.internal.matchers.LocalizedMatcher.class",
                                    "this.registeredInvocations.invocations[].getClass().getName() == []",
                                    "args[] elements == null",
                                    "this.mockitoStubber.invocationForStubbing.matchers[] elements has only one value",
                                    "this.mockitoStubber.invocationForStubbing.matchers has only one value",
                                    "proxy.getClass().getName() == org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest$Fun$$EnhancerByMockitoWithCGLIB$$abb6c88.class",
                                    "this.registeredInvocations.invocations[] == []",
                                    "this.mockitoStubber.invocationForStubbing.matchers[].getClass().getName() == [org.mockito.internal.matchers.LocalizedMatcher]",
                                    "args[] == [null]",
                                    "this.mockitoStubber.invocationForStubbing.matchers[] contains no nulls and has only one value, of length 1"
                                ]
                            }
                        },
                        {
                            "Patch179.inv.output": {
                                "invs": [
                                    "this.registeredInvocations.invocations[] elements has only one value",
                                    "proxy.getClass().getName() == org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest$Fun$$EnhancerByMockitoWithCGLIB$$4038d86a.class",
                                    "proxy.getClass().getName() == org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest$Fun$$EnhancerByMockitoWithCGLIB$$b7c20c68.class"
                                ]
                            }
                        }
                    ]
                },
                {
                    "EXIT": [
                        {
                            "f.inv.output": {
                                "invs": [
                                    "args[] == [null]",
                                    "size(this.registeredInvocations.invocations[])-1 == orig(size(this.registeredInvocations.invocations[]))",
                                    "args[] elements == null"
                                ]
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": [
                                    "args[] == [null]",
                                    "size(this.registeredInvocations.invocations[])-1 == orig(size(this.registeredInvocations.invocations[]))",
                                    "args[] elements == null"
                                ]
                            }
                        },
                        {
                            "Patch179.inv.output": {
                                "invs": []
                            }
                        }
                    ]
                },
                {
                    "EXITNN": [
                        {
                            "91": [
                                {
                                    "f.inv.output": {
                                        "invs": [
                                            "orig(this.mockitoStubber.invocationForStubbing.matchers[].getClass().getName()) elements == org.mockito.internal.matchers.LocalizedMatcher.class",
                                            "orig(this.registeredInvocations.invocations[].getClass().getName()) == []",
                                            "orig(this.mockitoStubber.invocationForStubbing.matchers[]) elements has only one value",
                                            "args[] elements == null",
                                            "orig(this.mockitoStubber.invocationForStubbing.matchers) has only one value",
                                            "orig(this.mockitoStubber.invocationForStubbing.matchers[].getClass().getName()) == [org.mockito.internal.matchers.LocalizedMatcher]",
                                            "args[] == [null]",
                                            "size(this.registeredInvocations.invocations[])-1 == orig(size(this.registeredInvocations.invocations[]))",
                                            "orig(this.mockitoStubber.invocationForStubbing.matchers[]) contains no nulls and has only one value, of length 1",
                                            "orig(this.mockitoStubber.invocationForStubbing.invocation) has only one value",
                                            "orig(this.registeredInvocations.invocations[]) == []"
                                        ]
                                    }
                                },
                                {
                                    "b.inv.output": {
                                        "invs": []
                                    }
                                },
                                {
                                    "Patch179.inv.output": {
                                        "invs": [
                                            "orig(this.mockitoStubber.invocationForStubbing.matchers[].getClass().getName()) elements == org.mockito.internal.matchers.LocalizedMatcher.class",
                                            "orig(this.registeredInvocations.invocations[].getClass().getName()) == []",
                                            "orig(this.mockitoStubber.invocationForStubbing.matchers[]) elements has only one value",
                                            "args[] elements == null",
                                            "orig(this.mockitoStubber.invocationForStubbing.matchers) has only one value",
                                            "orig(this.mockitoStubber.invocationForStubbing.matchers[].getClass().getName()) == [org.mockito.internal.matchers.LocalizedMatcher]",
                                            "args[] == [null]",
                                            "size(this.registeredInvocations.invocations[])-1 == orig(size(this.registeredInvocations.invocations[]))",
                                            "orig(this.mockitoStubber.invocationForStubbing.matchers[]) contains no nulls and has only one value, of length 1",
                                            "orig(this.mockitoStubber.invocationForStubbing.invocation) has only one value",
                                            "orig(this.registeredInvocations.invocations[]) == []"
                                        ]
                                    }
                                }
                            ]
                        },
                        {
                            "99": [
                                {
                                    "f.inv.output": {
                                        "invs": [
                                            "orig(this.registeredInvocations.invocations[].getClass().getName()) == []",
                                            "args[] elements == null",
                                            "args[] == [null]",
                                            "size(this.registeredInvocations.invocations[])-1 == orig(size(this.registeredInvocations.invocations[]))",
                                            "orig(this.registeredInvocations.invocations[]) == []"
                                        ]
                                    }
                                },
                                {
                                    "b.inv.output": {
                                        "invs": []
                                    }
                                },
                                {
                                    "Patch179.inv.output": {
                                        "invs": [
                                            "orig(this.registeredInvocations.invocations[].getClass().getName()) == []",
                                            "args[] elements == null",
                                            "args[] == [null]",
                                            "size(this.registeredInvocations.invocations[])-1 == orig(size(this.registeredInvocations.invocations[]))",
                                            "orig(this.registeredInvocations.invocations[]) == []"
                                        ]
                                    }
                                }
                            ]
                        },
                        {
                            "75": [
                                {
                                    "b.inv.output": "N/A"
                                },
                                {
                                    "Patch179.inv.output": {
                                        "invs": [
                                            "this.mockitoStubber.invocationForStubbing.invocation == orig(this.mockitoStubber.invocationForStubbing.invocation)",
                                            "return == null",
                                            "this.mockitoStubber.invocationForStubbing.matchers == orig(this.mockitoStubber.invocationForStubbing.matchers)",
                                            "this.mockitoStubber.invocationForStubbing.matchers[].getClass().getName() == [org.mockito.internal.matchers.Equals]",
                                            "args[] elements has only one value",
                                            "this.mockitoStubber.invocationForStubbing.matchers[] elements has only one value",
                                            "this.registeredInvocations.invocations[] == orig(this.registeredInvocations.invocations[])",
                                            "this.mockitoStubber.stubbed[].getClass().getName() == [org.mockito.internal.stubbing.StubbedInvocationMatcher]",
                                            "this.mockitoStubber.invocationForStubbing has only one value",
                                            "this.registeredInvocations.invocations[] contains no nulls and has only one value, of length 1",
                                            "this.mockitoStubber.invocationForStubbing.matchers has only one value",
                                            "this.mockitoStubber.invocationForStubbing == orig(this.mockitoStubber.invocationForStubbing)",
                                            "orig(args) has only one value",
                                            "args[] contains no nulls and has only one value, of length 1",
                                            "this.mockitoStubber.invocationForStubbing.matchers[] == orig(this.mockitoStubber.invocationForStubbing.matchers[])",
                                            "this.registeredInvocations.invocations[] elements has only one value",
                                            "this.mockitoStubber.invocationForStubbing.matchers[].getClass().getName() elements == org.mockito.internal.matchers.Equals.class",
                                            "this.mockitoStubber.invocationForStubbing.invocation has only one value",
                                            "size(this.mockitoStubber.stubbed[]) == 1",
                                            "this.mockitoStubber.stubbed[] contains no nulls and has only one value, of length 1",
                                            "this.mockitoStubber.invocationForStubbing.matchers[] contains no nulls and has only one value, of length 1"
                                        ]
                                    }
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}