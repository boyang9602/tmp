{
    "org.mockito.internal.invocation.InvocationMatcher": [
        {
            "hasSimilarMethod(org.mockito.internal.invocation.Invocation)": [
                {
                    "ENTER": [
                        {
                            "f.inv.output": {
                                "invs": [
                                    "candidate.mock.getClass().getName() == org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest$Fun$$EnhancerByMockitoWithCGLIB$$b7c20c68.class"
                                ]
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": [
                                    "candidate.mock.getClass().getName() == org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest$Fun$$EnhancerByMockitoWithCGLIB$$abb6c88.class"
                                ]
                            }
                        }
                    ]
                },
                {
                    "EXIT": [
                        {
                            "f.inv.output": {
                                "invs": [
                                    "candidate.mock.getClass().getName() == org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest$Fun$$EnhancerByMockitoWithCGLIB$$b7c20c68.class"
                                ]
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": [
                                    "candidate.mock.getClass().getName() == org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest$Fun$$EnhancerByMockitoWithCGLIB$$abb6c88.class"
                                ]
                            }
                        }
                    ]
                },
                {
                    "EXITNN": [
                        {
                            "93": [
                                {
                                    "f.inv.output": {
                                        "invs": []
                                    }
                                },
                                {
                                    "b.inv.output": {
                                        "invs": []
                                    }
                                },
                                {
                                    "Patch179.inv.output": "N/A"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "InvocationMatcher(org.mockito.internal.invocation.Invocation, java.util.List)": [
                {
                    "ENTER": [
                        {
                            "f.inv.output": {
                                "invs": [
                                    "invocation.mock.getClass().getName() == org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest$Fun$$EnhancerByMockitoWithCGLIB$$b7c20c68.class",
                                    "invocation.mock.getClass().getName() == org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest$Fun$$EnhancerByMockitoWithCGLIB$$4038d86a.class"
                                ]
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": [
                                    "invocation.mock.getClass().getName() == org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest$Fun$$EnhancerByMockitoWithCGLIB$$abb6c88.class"
                                ]
                            }
                        },
                        {
                            "Patch179.inv.output": {
                                "invs": [
                                    "invocation.mock.getClass().getName() == org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest$Fun$$EnhancerByMockitoWithCGLIB$$b7c20c68.class",
                                    "invocation.mock.getClass().getName() == org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest$Fun$$EnhancerByMockitoWithCGLIB$$4038d86a.class"
                                ]
                            }
                        }
                    ]
                },
                {
                    "EXIT": [
                        {
                            "f.inv.output": {
                                "invs": [
                                    "invocation.mock.getClass().getName() == org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest$Fun$$EnhancerByMockitoWithCGLIB$$b7c20c68.class",
                                    "invocation.mock.getClass().getName() == org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest$Fun$$EnhancerByMockitoWithCGLIB$$4038d86a.class"
                                ]
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": [
                                    "invocation.mock.getClass().getName() == org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest$Fun$$EnhancerByMockitoWithCGLIB$$abb6c88.class"
                                ]
                            }
                        },
                        {
                            "Patch179.inv.output": {
                                "invs": [
                                    "invocation.mock.getClass().getName() == org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest$Fun$$EnhancerByMockitoWithCGLIB$$b7c20c68.class",
                                    "invocation.mock.getClass().getName() == org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest$Fun$$EnhancerByMockitoWithCGLIB$$4038d86a.class"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "hasSameMethod(org.mockito.internal.invocation.Invocation)": [
                {
                    "ENTER": [
                        {
                            "f.inv.output": {
                                "invs": [
                                    "candidate.mock.getClass().getName() == org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest$Fun$$EnhancerByMockitoWithCGLIB$$4038d86a.class",
                                    "candidate.mock.getClass().getName() == org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest$Fun$$EnhancerByMockitoWithCGLIB$$b7c20c68.class"
                                ]
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": [
                                    "candidate.mock.getClass().getName() == org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest$Fun$$EnhancerByMockitoWithCGLIB$$abb6c88.class"
                                ]
                            }
                        },
                        {
                            "Patch179.inv.output": {
                                "invs": [
                                    "candidate.mock.getClass().getName() == org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest$Fun$$EnhancerByMockitoWithCGLIB$$4038d86a.class",
                                    "candidate.mock.getClass().getName() == org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest$Fun$$EnhancerByMockitoWithCGLIB$$b7c20c68.class"
                                ]
                            }
                        }
                    ]
                },
                {
                    "EXIT": [
                        {
                            "f.inv.output": {
                                "invs": [
                                    "candidate.mock.getClass().getName() == org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest$Fun$$EnhancerByMockitoWithCGLIB$$4038d86a.class",
                                    "candidate.mock.getClass().getName() == org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest$Fun$$EnhancerByMockitoWithCGLIB$$b7c20c68.class"
                                ]
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": [
                                    "candidate.mock.getClass().getName() == org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest$Fun$$EnhancerByMockitoWithCGLIB$$abb6c88.class"
                                ]
                            }
                        },
                        {
                            "Patch179.inv.output": {
                                "invs": [
                                    "candidate.mock.getClass().getName() == org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest$Fun$$EnhancerByMockitoWithCGLIB$$4038d86a.class",
                                    "candidate.mock.getClass().getName() == org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest$Fun$$EnhancerByMockitoWithCGLIB$$b7c20c68.class"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "matches(org.mockito.internal.invocation.Invocation)": [
                {
                    "ENTER": [
                        {
                            "f.inv.output": {
                                "invs": [
                                    "actual.mock.getClass().getName() == org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest$Fun$$EnhancerByMockitoWithCGLIB$$4038d86a.class",
                                    "actual.mock.getClass().getName() == org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest$Fun$$EnhancerByMockitoWithCGLIB$$b7c20c68.class"
                                ]
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": [
                                    "actual.mock.getClass().getName() == org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest$Fun$$EnhancerByMockitoWithCGLIB$$abb6c88.class"
                                ]
                            }
                        },
                        {
                            "Patch179.inv.output": {
                                "invs": [
                                    "actual.mock.getClass().getName() == org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest$Fun$$EnhancerByMockitoWithCGLIB$$4038d86a.class",
                                    "actual.mock.getClass().getName() == org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest$Fun$$EnhancerByMockitoWithCGLIB$$b7c20c68.class"
                                ]
                            }
                        }
                    ]
                },
                {
                    "EXIT": [
                        {
                            "f.inv.output": {
                                "invs": [
                                    "(this.invocation.sequenceNumber == 1)  <==>  (this.invocation.rawArguments[].getClass().getName() elements == null)",
                                    "(this.invocation.sequenceNumber == 3)  <==>  (this.invocation.arguments[] elements has only one value)",
                                    "return == false",
                                    "this.invocation has only one value",
                                    "(this.invocation.sequenceNumber == 1)  <==>  (this.invocation.rawArguments[] elements == null)",
                                    "(this.invocation.sequenceNumber == 3)  <==>  (this.invocation.arguments[].getClass().getName() elements == java.lang.String.class)",
                                    "(this.invocation.sequenceNumber == 1)  <==>  (this.invocation.arguments[].getClass().getName() == [null])",
                                    "actual.mock.getClass().getName() == org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest$Fun$$EnhancerByMockitoWithCGLIB$$4038d86a.class",
                                    "this.invocation.rawArguments[] == [null]",
                                    "(this.invocation.sequenceNumber == 3)  <==>  (this.matchers[] contains no nulls and has only one value, of length 1)",
                                    "this.invocation.arguments has only one value",
                                    "this.invocation.arguments[] elements has only one value",
                                    "this.invocation.arguments[].getClass().getName() == [java.lang.String]",
                                    "(this.invocation.sequenceNumber == 3)  <==>  (this.invocation.rawArguments[].getClass().getName() == [java.lang.String])",
                                    "this.invocation.realMethod has only one value",
                                    "this.matchers[].getClass().getName() elements == org.mockito.internal.matchers.Equals.class",
                                    "this.matchers[].getClass().getName() elements == org.mockito.internal.matchers.LocalizedMatcher.class",
                                    "(this.invocation.sequenceNumber == 1)  <==>  (this.invocation.arguments[] == [null])",
                                    "return == true",
                                    "this.invocation.rawArguments[] contains no nulls and has only one value, of length 1",
                                    "(this.invocation.sequenceNumber == 3)  <==>  (return == false)",
                                    "(this.invocation.sequenceNumber == 3)  <==>  (this.invocation.rawArguments[] contains no nulls and has only one value, of length 1)",
                                    "this.invocation.arguments[] elements == null",
                                    "this.invocation.arguments[].getClass().getName() == [null]",
                                    "this.invocation.rawArguments[] elements has only one value",
                                    "(this.invocation.sequenceNumber == 1)  <==>  (this.invocation.arguments[].getClass().getName() elements == null)",
                                    "this.invocation.rawArguments[].getClass().getName() elements == null",
                                    "(this.invocation.sequenceNumber == 3)  <==>  (this.invocation.arguments[] contains no nulls and has only one value, of length 1)",
                                    "this.invocation.rawArguments has only one value",
                                    "this.invocation.sequenceNumber == 1",
                                    "(this.invocation.sequenceNumber == 3)  <==>  (this.matchers[].getClass().getName() == [org.mockito.internal.matchers.Equals])",
                                    "this.invocation.arguments[].getClass().getName() elements == null",
                                    "(this.invocation.sequenceNumber == 1)  <==>  (this.matchers[].getClass().getName() elements == org.mockito.internal.matchers.LocalizedMatcher.class)",
                                    "(this.invocation.sequenceNumber == 1)  <==>  (this.invocation.rawArguments[].getClass().getName() == [null])",
                                    "(this.invocation.sequenceNumber == 1)  <==>  (this.invocation.rawArguments[] == [null])",
                                    "(this.invocation.sequenceNumber == 1)  <==>  (this.invocation.arguments[] elements == null)",
                                    "(this.invocation.sequenceNumber == 3)  <==>  (this.invocation.arguments[].getClass().getName() == [java.lang.String])",
                                    "this.invocation.sequenceNumber == 3",
                                    "this.invocation.rawArguments[] elements == null",
                                    "this.matchers[].getClass().getName() == [org.mockito.internal.matchers.LocalizedMatcher]",
                                    "this.invocation.rawArguments[].getClass().getName() == [null]",
                                    "this.invocation.location has only one value",
                                    "(this.invocation.sequenceNumber == 1)  <==>  (return == true)",
                                    "this.invocation.arguments[] contains no nulls and has only one value, of length 1",
                                    "actual.mock.getClass().getName() == org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest$Fun$$EnhancerByMockitoWithCGLIB$$b7c20c68.class",
                                    "this.matchers has only one value",
                                    "orig(this) has only one value",
                                    "(this.invocation.sequenceNumber == 1)  <==>  (this.matchers[] contains no nulls and has only one value, of length 1)",
                                    "this.invocation.location.firstTraceElement has only one value",
                                    "(this.invocation.sequenceNumber == 3)  <==>  (this.invocation.rawArguments[] elements has only one value)",
                                    "this.invocation.rawArguments[].getClass().getName() == [java.lang.String]",
                                    "this.invocation.arguments[] == [null]",
                                    "this.matchers[] elements has only one value",
                                    "this.invocation.arguments[].getClass().getName() elements == java.lang.String.class",
                                    "(this.invocation.sequenceNumber == 1)  <==>  (this.matchers[].getClass().getName() == [org.mockito.internal.matchers.LocalizedMatcher])",
                                    "this.invocation.rawArguments[].getClass().getName() elements == java.lang.String.class",
                                    "this.matchers[].getClass().getName() == [org.mockito.internal.matchers.Equals]",
                                    "(this.invocation.sequenceNumber == 3)  <==>  (this.matchers[].getClass().getName() elements == org.mockito.internal.matchers.Equals.class)",
                                    "(this.invocation.sequenceNumber == 3)  <==>  (this.invocation.rawArguments[].getClass().getName() elements == java.lang.String.class)",
                                    "this.matchers[] contains no nulls and has only one value, of length 1"
                                ]
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": [
                                    "(this.invocation.sequenceNumber == 1)  <==>  (this.invocation.rawArguments[].getClass().getName() elements == null)",
                                    "(this.invocation.sequenceNumber == 3)  <==>  (this.invocation.arguments[] elements has only one value)",
                                    "return == false",
                                    "this.invocation has only one value",
                                    "(this.invocation.sequenceNumber == 1)  <==>  (this.invocation.rawArguments[] elements == null)",
                                    "(this.invocation.sequenceNumber == 3)  <==>  (this.invocation.arguments[].getClass().getName() elements == java.lang.String.class)",
                                    "(this.invocation.sequenceNumber == 1)  <==>  (this.invocation.arguments[].getClass().getName() == [null])",
                                    "this.invocation.rawArguments[] == [null]",
                                    "(this.invocation.sequenceNumber == 3)  <==>  (this.matchers[] contains no nulls and has only one value, of length 1)",
                                    "this.invocation.arguments has only one value",
                                    "this.invocation.arguments[] elements has only one value",
                                    "actual.mock.getClass().getName() == org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest$Fun$$EnhancerByMockitoWithCGLIB$$abb6c88.class",
                                    "this.invocation.arguments[].getClass().getName() == [java.lang.String]",
                                    "(this.invocation.sequenceNumber == 3)  <==>  (this.invocation.rawArguments[].getClass().getName() == [java.lang.String])",
                                    "this.invocation.realMethod has only one value",
                                    "this.matchers[].getClass().getName() elements == org.mockito.internal.matchers.Equals.class",
                                    "this.matchers[].getClass().getName() elements == org.mockito.internal.matchers.LocalizedMatcher.class",
                                    "(this.invocation.sequenceNumber == 1)  <==>  (this.invocation.arguments[] == [null])",
                                    "this.invocation.rawArguments[] contains no nulls and has only one value, of length 1",
                                    "(this.invocation.sequenceNumber == 3)  <==>  (return == false)",
                                    "(this.invocation.sequenceNumber == 3)  <==>  (this.invocation.rawArguments[] contains no nulls and has only one value, of length 1)",
                                    "this.invocation.arguments[] elements == null",
                                    "this.invocation.arguments[].getClass().getName() == [null]",
                                    "this.invocation.rawArguments[] elements has only one value",
                                    "(this.invocation.sequenceNumber == 1)  <==>  (this.invocation.arguments[].getClass().getName() elements == null)",
                                    "this.invocation.rawArguments[].getClass().getName() elements == null",
                                    "(this.invocation.sequenceNumber == 3)  <==>  (this.invocation.arguments[] contains no nulls and has only one value, of length 1)",
                                    "this.invocation.rawArguments has only one value",
                                    "this.invocation.sequenceNumber == 1",
                                    "(this.invocation.sequenceNumber == 3)  <==>  (this.matchers[].getClass().getName() == [org.mockito.internal.matchers.Equals])",
                                    "this.invocation.arguments[].getClass().getName() elements == null",
                                    "(this.invocation.sequenceNumber == 1)  <==>  (this.matchers[].getClass().getName() elements == org.mockito.internal.matchers.LocalizedMatcher.class)",
                                    "(this.invocation.sequenceNumber == 1)  <==>  (this.invocation.rawArguments[].getClass().getName() == [null])",
                                    "(this.invocation.sequenceNumber == 1)  <==>  (this.invocation.rawArguments[] == [null])",
                                    "(this.invocation.sequenceNumber == 1)  <==>  (this.invocation.arguments[] elements == null)",
                                    "(this.invocation.sequenceNumber == 3)  <==>  (this.invocation.arguments[].getClass().getName() == [java.lang.String])",
                                    "this.invocation.sequenceNumber == 3",
                                    "this.invocation.rawArguments[] elements == null",
                                    "this.matchers[].getClass().getName() == [org.mockito.internal.matchers.LocalizedMatcher]",
                                    "this.invocation.rawArguments[].getClass().getName() == [null]",
                                    "this.invocation.location has only one value",
                                    "(this.invocation.sequenceNumber == 1)  <==>  (return == true)",
                                    "this.invocation.arguments[] contains no nulls and has only one value, of length 1",
                                    "this.matchers has only one value",
                                    "orig(this) has only one value",
                                    "(this.invocation.sequenceNumber == 1)  <==>  (this.matchers[] contains no nulls and has only one value, of length 1)",
                                    "this.invocation.location.firstTraceElement has only one value",
                                    "(this.invocation.sequenceNumber == 3)  <==>  (this.invocation.rawArguments[] elements has only one value)",
                                    "this.invocation.rawArguments[].getClass().getName() == [java.lang.String]",
                                    "this.invocation.arguments[] == [null]",
                                    "this.matchers[] elements has only one value",
                                    "this.invocation.arguments[].getClass().getName() elements == java.lang.String.class",
                                    "(this.invocation.sequenceNumber == 1)  <==>  (this.matchers[].getClass().getName() == [org.mockito.internal.matchers.LocalizedMatcher])",
                                    "this.invocation.rawArguments[].getClass().getName() elements == java.lang.String.class",
                                    "this.matchers[].getClass().getName() == [org.mockito.internal.matchers.Equals]",
                                    "(this.invocation.sequenceNumber == 3)  <==>  (this.matchers[].getClass().getName() elements == org.mockito.internal.matchers.Equals.class)",
                                    "(this.invocation.sequenceNumber == 3)  <==>  (this.invocation.rawArguments[].getClass().getName() elements == java.lang.String.class)",
                                    "this.matchers[] contains no nulls and has only one value, of length 1"
                                ]
                            }
                        },
                        {
                            "Patch179.inv.output": {
                                "invs": [
                                    "actual.mock.getClass().getName() == org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest$Fun$$EnhancerByMockitoWithCGLIB$$4038d86a.class",
                                    "actual.mock.getClass().getName() == org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest$Fun$$EnhancerByMockitoWithCGLIB$$b7c20c68.class"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "getInvocation()": [
                {
                    "ENTER": [
                        {
                            "f.inv.output": {
                                "invs": [
                                    "this.invocation.rawArguments[].getClass().getName() elements == null",
                                    "this.invocation.sequenceNumber one of { 1, 2 }",
                                    "this.invocation.arguments[] == [null]",
                                    "this.invocation.arguments[].getClass().getName() elements == null",
                                    "this.invocation.arguments[] elements == null",
                                    "this.invocation.rawArguments[] elements == null",
                                    "this.invocation.rawArguments[] == [null]",
                                    "this.invocation.arguments[].getClass().getName() == [null]",
                                    "this.invocation.rawArguments[].getClass().getName() == [null]"
                                ]
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": []
                            }
                        },
                        {
                            "Patch179.inv.output": {
                                "invs": [
                                    "this.invocation.rawArguments[].getClass().getName() elements == null",
                                    "this.invocation.sequenceNumber one of { 1, 2 }",
                                    "this.invocation.arguments[] == [null]",
                                    "this.invocation.arguments[].getClass().getName() elements == null",
                                    "this.invocation.arguments[] elements == null",
                                    "this.invocation.rawArguments[] elements == null",
                                    "this.invocation.rawArguments[] == [null]",
                                    "this.invocation.arguments[].getClass().getName() == [null]",
                                    "this.invocation.rawArguments[].getClass().getName() == [null]"
                                ]
                            }
                        }
                    ]
                },
                {
                    "EXIT": [
                        {
                            "f.inv.output": {
                                "invs": [
                                    "return.rawArguments[] elements == null",
                                    "this.invocation.sequenceNumber one of { 1, 2 }",
                                    "return.arguments[].getClass().getName() one of { [null], [java.lang.String] }",
                                    "this.invocation.rawArguments[] == [null]",
                                    "return.sequenceNumber one of { 1, 2 }",
                                    "return.rawArguments[].getClass().getName() == [null]",
                                    "return.rawArguments[].getClass().getName() elements == null",
                                    "this.invocation.arguments[] elements == null",
                                    "return.mock.getClass().getName() == org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest$Fun$$EnhancerByMockitoWithCGLIB$$b7c20c68.class",
                                    "this.invocation.arguments[].getClass().getName() == [null]",
                                    "this.invocation.rawArguments[].getClass().getName() elements == null",
                                    "return.arguments[].getClass().getName() == [null]",
                                    "this.invocation.arguments[].getClass().getName() elements == null",
                                    "this.invocation.rawArguments[] elements == null",
                                    "this.invocation.rawArguments[].getClass().getName() == [null]",
                                    "return.arguments[] == [null]",
                                    "return.arguments[] elements == null",
                                    "return.sequenceNumber one of { 1, 2, 3 }",
                                    "this.invocation.arguments[] == [null]",
                                    "return.mock.getClass().getName() == org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest$Fun$$EnhancerByMockitoWithCGLIB$$4038d86a.class",
                                    "return.arguments[].getClass().getName() elements == null",
                                    "return.rawArguments[].getClass().getName() one of { [null], [java.lang.String] }",
                                    "return.rawArguments[] == [null]"
                                ]
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": [
                                    "return.arguments[].getClass().getName() one of { [null], [java.lang.String] }",
                                    "return.mock.getClass().getName() == org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest$Fun$$EnhancerByMockitoWithCGLIB$$abb6c88.class",
                                    "return.sequenceNumber one of { 1, 2, 3 }",
                                    "return.rawArguments[].getClass().getName() one of { [null], [java.lang.String] }"
                                ]
                            }
                        },
                        {
                            "Patch179.inv.output": {
                                "invs": [
                                    "return.rawArguments[] elements == null",
                                    "this.invocation.sequenceNumber one of { 1, 2 }",
                                    "this.invocation.rawArguments[] == [null]",
                                    "return.sequenceNumber one of { 1, 2 }",
                                    "return.rawArguments[].getClass().getName() == [null]",
                                    "return.rawArguments[].getClass().getName() elements == null",
                                    "this.invocation.arguments[] elements == null",
                                    "return.mock.getClass().getName() == org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest$Fun$$EnhancerByMockitoWithCGLIB$$b7c20c68.class",
                                    "this.invocation.arguments[].getClass().getName() == [null]",
                                    "this.invocation.rawArguments[].getClass().getName() elements == null",
                                    "return.arguments[].getClass().getName() == [null]",
                                    "this.invocation.arguments[].getClass().getName() elements == null",
                                    "this.invocation.rawArguments[] elements == null",
                                    "this.invocation.rawArguments[].getClass().getName() == [null]",
                                    "return.arguments[] == [null]",
                                    "return.arguments[] elements == null",
                                    "this.invocation.arguments[] == [null]",
                                    "return.mock.getClass().getName() == org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest$Fun$$EnhancerByMockitoWithCGLIB$$4038d86a.class",
                                    "return.arguments[].getClass().getName() elements == null",
                                    "return.rawArguments[] == [null]"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "getMatchers()": [
                {
                    "ENTER": [
                        {
                            "Patch179.inv.output": {
                                "invs": [
                                    "this.invocation has only one value",
                                    "this.invocation.rawArguments[] == [null]",
                                    "this.invocation.arguments has only one value",
                                    "this.invocation.realMethod has only one value",
                                    "this.matchers[].getClass().getName() elements == org.mockito.internal.matchers.LocalizedMatcher.class",
                                    "this.invocation.arguments[] elements == null",
                                    "this.invocation.arguments[].getClass().getName() == [null]",
                                    "this.invocation.rawArguments[].getClass().getName() elements == null",
                                    "this.invocation.rawArguments has only one value",
                                    "this.invocation.sequenceNumber == 1",
                                    "this.invocation.arguments[].getClass().getName() elements == null",
                                    "this.invocation.rawArguments[] elements == null",
                                    "this.matchers[].getClass().getName() == [org.mockito.internal.matchers.LocalizedMatcher]",
                                    "this.invocation.rawArguments[].getClass().getName() == [null]",
                                    "this.invocation.location has only one value",
                                    "this.matchers has only one value",
                                    "this.invocation.location.firstTraceElement has only one value",
                                    "this has only one value",
                                    "this.invocation.arguments[] == [null]",
                                    "this.matchers[] elements has only one value",
                                    "this.matchers[] contains no nulls and has only one value, of length 1"
                                ]
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": [
                                    "this.invocation.sequenceNumber one of { 1, 3 }"
                                ]
                            }
                        }
                    ]
                },
                {
                    "EXIT": [
                        {
                            "Patch179.inv.output": {
                                "invs": [
                                    "this.invocation has only one value",
                                    "this.invocation.rawArguments[] == [null]",
                                    "return[].getClass().getName() == [org.mockito.internal.matchers.LocalizedMatcher]",
                                    "this.invocation.arguments has only one value",
                                    "this.invocation.realMethod has only one value",
                                    "this.matchers[].getClass().getName() elements == org.mockito.internal.matchers.LocalizedMatcher.class",
                                    "this.invocation.arguments[] elements == null",
                                    "this.invocation.arguments[].getClass().getName() == [null]",
                                    "this.invocation.rawArguments[].getClass().getName() elements == null",
                                    "this.invocation.rawArguments has only one value",
                                    "this.invocation.sequenceNumber == 1",
                                    "return has only one value",
                                    "this.invocation.arguments[].getClass().getName() elements == null",
                                    "return[] contains no nulls and has only one value, of length 1",
                                    "this.invocation.rawArguments[] elements == null",
                                    "this.matchers[].getClass().getName() == [org.mockito.internal.matchers.LocalizedMatcher]",
                                    "return[] elements has only one value",
                                    "this.invocation.rawArguments[].getClass().getName() == [null]",
                                    "this.invocation.location has only one value",
                                    "this.matchers has only one value",
                                    "this.invocation.location.firstTraceElement has only one value",
                                    "return[].getClass().getName() elements == org.mockito.internal.matchers.LocalizedMatcher.class",
                                    "this.invocation.arguments[] == [null]",
                                    "this.matchers[] elements has only one value",
                                    "this.matchers[] contains no nulls and has only one value, of length 1"
                                ]
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": [
                                    "return[].getClass().getName() one of { [org.mockito.internal.matchers.Equals], [org.mockito.internal.matchers.LocalizedMatcher] }",
                                    "this.invocation.sequenceNumber one of { 1, 3 }"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "argumentsMatch(java.lang.Object[])": [
                {
                    "ENTER": [
                        {
                            "Patch179.inv.output": {
                                "invs": []
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": []
                            }
                        }
                    ]
                },
                {
                    "EXIT": [
                        {
                            "Patch179.inv.output": {
                                "invs": []
                            }
                        },
                        {
                            "b.inv.output": {
                                "invs": [
                                    "(this.invocation.sequenceNumber == 1)  <==>  (this.invocation.rawArguments[].getClass().getName() elements == null)",
                                    "(this.invocation.sequenceNumber == 3)  <==>  (this.invocation.arguments[] elements has only one value)",
                                    "return == false",
                                    "this.invocation has only one value",
                                    "(this.invocation.sequenceNumber == 1)  <==>  (this.invocation.rawArguments[] elements == null)",
                                    "(this.invocation.sequenceNumber == 3)  <==>  (this.invocation.arguments[].getClass().getName() elements == java.lang.String.class)",
                                    "(this.invocation.sequenceNumber == 1)  <==>  (this.invocation.arguments[].getClass().getName() == [null])",
                                    "this.invocation.rawArguments[] == [null]",
                                    "(this.invocation.sequenceNumber == 3)  <==>  (this.matchers[] contains no nulls and has only one value, of length 1)",
                                    "this.invocation.arguments has only one value",
                                    "this.invocation.arguments[] elements has only one value",
                                    "this.invocation.arguments[].getClass().getName() == [java.lang.String]",
                                    "(this.invocation.sequenceNumber == 3)  <==>  (this.invocation.rawArguments[].getClass().getName() == [java.lang.String])",
                                    "this.invocation.realMethod has only one value",
                                    "this.matchers[].getClass().getName() elements == org.mockito.internal.matchers.Equals.class",
                                    "this.matchers[].getClass().getName() elements == org.mockito.internal.matchers.LocalizedMatcher.class",
                                    "(this.invocation.sequenceNumber == 1)  <==>  (this.invocation.arguments[] == [null])",
                                    "this.invocation.rawArguments[] contains no nulls and has only one value, of length 1",
                                    "(this.invocation.sequenceNumber == 3)  <==>  (return == false)",
                                    "(this.invocation.sequenceNumber == 3)  <==>  (this.invocation.rawArguments[] contains no nulls and has only one value, of length 1)",
                                    "this.invocation.arguments[] elements == null",
                                    "this.invocation.arguments[].getClass().getName() == [null]",
                                    "this.invocation.rawArguments[] elements has only one value",
                                    "(this.invocation.sequenceNumber == 1)  <==>  (this.invocation.arguments[].getClass().getName() elements == null)",
                                    "this.invocation.rawArguments[].getClass().getName() elements == null",
                                    "(this.invocation.sequenceNumber == 3)  <==>  (this.invocation.arguments[] contains no nulls and has only one value, of length 1)",
                                    "this.invocation.rawArguments has only one value",
                                    "this.invocation.sequenceNumber == 1",
                                    "(this.invocation.sequenceNumber == 3)  <==>  (this.matchers[].getClass().getName() == [org.mockito.internal.matchers.Equals])",
                                    "this.invocation.arguments[].getClass().getName() elements == null",
                                    "(this.invocation.sequenceNumber == 1)  <==>  (this.matchers[].getClass().getName() elements == org.mockito.internal.matchers.LocalizedMatcher.class)",
                                    "(this.invocation.sequenceNumber == 1)  <==>  (this.invocation.rawArguments[].getClass().getName() == [null])",
                                    "(this.invocation.sequenceNumber == 1)  <==>  (this.invocation.rawArguments[] == [null])",
                                    "(this.invocation.sequenceNumber == 1)  <==>  (this.invocation.arguments[] elements == null)",
                                    "(this.invocation.sequenceNumber == 3)  <==>  (this.invocation.arguments[].getClass().getName() == [java.lang.String])",
                                    "this.invocation.sequenceNumber == 3",
                                    "this.invocation.rawArguments[] elements == null",
                                    "this.matchers[].getClass().getName() == [org.mockito.internal.matchers.LocalizedMatcher]",
                                    "this.invocation.rawArguments[].getClass().getName() == [null]",
                                    "this.invocation.location has only one value",
                                    "(this.invocation.sequenceNumber == 1)  <==>  (return == true)",
                                    "this.invocation.arguments[] contains no nulls and has only one value, of length 1",
                                    "this.matchers has only one value",
                                    "this.invocation.rawArguments[].getClass().getName() == [java.lang.String]",
                                    "orig(this) has only one value",
                                    "(this.invocation.sequenceNumber == 1)  <==>  (this.matchers[] contains no nulls and has only one value, of length 1)",
                                    "this.invocation.location.firstTraceElement has only one value",
                                    "(this.invocation.sequenceNumber == 3)  <==>  (this.invocation.rawArguments[] elements has only one value)",
                                    "this.invocation.arguments[] == [null]",
                                    "this.matchers[] elements has only one value",
                                    "this.invocation.arguments[].getClass().getName() elements == java.lang.String.class",
                                    "(this.invocation.sequenceNumber == 1)  <==>  (this.matchers[].getClass().getName() == [org.mockito.internal.matchers.LocalizedMatcher])",
                                    "this.invocation.rawArguments[].getClass().getName() elements == java.lang.String.class",
                                    "this.matchers[].getClass().getName() == [org.mockito.internal.matchers.Equals]",
                                    "(this.invocation.sequenceNumber == 3)  <==>  (this.matchers[].getClass().getName() elements == org.mockito.internal.matchers.Equals.class)",
                                    "(this.invocation.sequenceNumber == 3)  <==>  (this.invocation.rawArguments[].getClass().getName() elements == java.lang.String.class)",
                                    "this.matchers[] contains no nulls and has only one value, of length 1"
                                ]
                            }
                        }
                    ]
                },
                {
                    "EXITNN": [
                        {
                            "67": [
                                {
                                    "Patch179.inv.output": {
                                        "invs": []
                                    }
                                },
                                {
                                    "b.inv.output": {
                                        "invs": [
                                            "this.invocation has only one value",
                                            "this.invocation.rawArguments[] == [null]",
                                            "this.invocation.arguments has only one value",
                                            "this.invocation.realMethod has only one value",
                                            "this.matchers[].getClass().getName() elements == org.mockito.internal.matchers.LocalizedMatcher.class",
                                            "return == true",
                                            "this.invocation.arguments[] elements == null",
                                            "this.invocation.arguments[].getClass().getName() == [null]",
                                            "this.invocation.rawArguments[].getClass().getName() elements == null",
                                            "this.invocation.rawArguments has only one value",
                                            "this.invocation.sequenceNumber == 1",
                                            "this.invocation.arguments[].getClass().getName() elements == null",
                                            "this.invocation.rawArguments[] elements == null",
                                            "this.matchers[].getClass().getName() == [org.mockito.internal.matchers.LocalizedMatcher]",
                                            "this.invocation.rawArguments[].getClass().getName() == [null]",
                                            "this.invocation.location has only one value",
                                            "this.matchers has only one value",
                                            "orig(this) has only one value",
                                            "this.invocation.location.firstTraceElement has only one value",
                                            "this.invocation.arguments[] == [null]",
                                            "this.matchers[] elements has only one value",
                                            "this.matchers[] contains no nulls and has only one value, of length 1"
                                        ]
                                    }
                                }
                            ]
                        },
                        {
                            "64": [
                                {
                                    "Patch179.inv.output": "N/A"
                                },
                                {
                                    "b.inv.output": {
                                        "invs": [
                                            "return == false",
                                            "this.invocation has only one value",
                                            "this.invocation.arguments has only one value",
                                            "this.invocation.arguments[] elements has only one value",
                                            "this.invocation.arguments[].getClass().getName() == [java.lang.String]",
                                            "this.invocation.realMethod has only one value",
                                            "this.matchers[].getClass().getName() elements == org.mockito.internal.matchers.Equals.class",
                                            "this.invocation.rawArguments[] contains no nulls and has only one value, of length 1",
                                            "this.invocation.rawArguments[] elements has only one value",
                                            "this.invocation.rawArguments has only one value",
                                            "this.invocation.sequenceNumber == 3",
                                            "this.invocation.location has only one value",
                                            "this.invocation.arguments[] contains no nulls and has only one value, of length 1",
                                            "this.invocation.rawArguments[].getClass().getName() == [java.lang.String]",
                                            "this.matchers has only one value",
                                            "orig(this) has only one value",
                                            "this.invocation.location.firstTraceElement has only one value",
                                            "this.invocation.arguments[].getClass().getName() elements == java.lang.String.class",
                                            "this.matchers[] elements has only one value",
                                            "this.invocation.rawArguments[].getClass().getName() elements == java.lang.String.class",
                                            "this.matchers[].getClass().getName() == [org.mockito.internal.matchers.Equals]",
                                            "this.matchers[] contains no nulls and has only one value, of length 1"
                                        ]
                                    }
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}