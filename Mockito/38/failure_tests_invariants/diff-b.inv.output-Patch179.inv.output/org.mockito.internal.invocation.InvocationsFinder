{"org.mockito.internal.invocation.InvocationsFinder":[{"findSimilarInvocation(java.util.List, org.mockito.internal.invocation.InvocationMatcher)":[{"EXITNN":[{"73":[{"b.inv.output":{"invs":[]}},{"Patch179.inv.output":"N/A"}]}]}]},{"findInvocations(java.util.List, org.mockito.internal.invocation.InvocationMatcher)":[{"ENTER":[{"b.inv.output":{"invs":["wanted.invocation.mock.getClass().getName() == org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest$Fun$$EnhancerByMockitoWithCGLIB$$abb6c88.class"]}},{"Patch179.inv.output":{"invs":["wanted.invocation.mock.getClass().getName() == org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest$Fun$$EnhancerByMockitoWithCGLIB$$4038d86a.class"]}}]},{"EXIT":[{"b.inv.output":{"invs":["return has only one value","return[] == []","wanted.invocation.mock.getClass().getName() == org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest$Fun$$EnhancerByMockitoWithCGLIB$$abb6c88.class","return[].getClass().getName() == []"]}},{"Patch179.inv.output":{"invs":["size(return[]) == 1","return[].getClass().getName() == [org.mockito.internal.invocation.Invocation]","return[] contains no nulls and has only one value, of length 1","wanted.invocation.mock.getClass().getName() == org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest$Fun$$EnhancerByMockitoWithCGLIB$$4038d86a.class","return[].getClass().getName() elements == org.mockito.internal.invocation.Invocation.class","return[] elements has only one value"]}}]}]}]}