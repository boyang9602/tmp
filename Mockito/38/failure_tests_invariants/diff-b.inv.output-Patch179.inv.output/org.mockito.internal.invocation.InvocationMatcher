{"org.mockito.internal.invocation.InvocationMatcher":[{"hasSimilarMethod(org.mockito.internal.invocation.Invocation)":[{"EXITNN":[{"93":[{"b.inv.output":{"invs":[]}},{"Patch179.inv.output":"N/A"}]}]},{"EXITNN":[{"93":[{"b.inv.output":{"invs":[]}},{"Patch179.inv.output":"N/A"}]}]}]},{"InvocationMatcher(org.mockito.internal.invocation.Invocation, java.util.List)":[{"ENTER":[{"b.inv.output":{"invs":["invocation.mock.getClass().getName() == org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest$Fun$$EnhancerByMockitoWithCGLIB$$abb6c88.class"]}},{"Patch179.inv.output":{"invs":["invocation.mock.getClass().getName() == org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest$Fun$$EnhancerByMockitoWithCGLIB$$4038d86a.class"]}}]},{"EXIT":[{"b.inv.output":{"invs":["invocation.mock.getClass().getName() == org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest$Fun$$EnhancerByMockitoWithCGLIB$$abb6c88.class"]}},{"Patch179.inv.output":{"invs":["invocation.mock.getClass().getName() == org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest$Fun$$EnhancerByMockitoWithCGLIB$$4038d86a.class"]}}]}]},{},{"getMatchers()":[{"ENTER":[{"b.inv.output":{"invs":["this.invocation.sequenceNumber one of { 1, 3 }"]}},{"Patch179.inv.output":{"invs":["this.invocation.rawArguments[] == [null]","this.invocation.arguments[] == [null]","this.invocation has only one value","this.invocation.arguments[].getClass().getName() elements == null","this.invocation.location.firstTraceElement has only one value","this.invocation.realMethod has only one value","this.matchers[].getClass().getName() elements == org.mockito.internal.matchers.LocalizedMatcher.class","this.invocation.rawArguments[].getClass().getName() == [null]","this.matchers[] elements has only one value","this.matchers[].getClass().getName() == [org.mockito.internal.matchers.LocalizedMatcher]","this has only one value","this.invocation.arguments[] elements == null","this.invocation.location has only one value","this.invocation.rawArguments[] elements == null","this.invocation.rawArguments[].getClass().getName() elements == null","this.invocation.sequenceNumber == 1","this.invocation.arguments has only one value","this.matchers has only one value","this.matchers[] contains no nulls and has only one value, of length 1","this.invocation.arguments[].getClass().getName() == [null]","this.invocation.rawArguments has only one value"]}}]},{"EXIT":[{"b.inv.output":{"invs":["this.invocation.sequenceNumber one of { 1, 3 }","return[].getClass().getName() one of { [org.mockito.internal.matchers.Equals], [org.mockito.internal.matchers.LocalizedMatcher] }"]}},{"Patch179.inv.output":{"invs":["this.invocation.rawArguments[] == [null]","this.invocation.arguments[] == [null]","return has only one value","return[].getClass().getName() elements == org.mockito.internal.matchers.LocalizedMatcher.class","this.invocation.rawArguments[].getClass().getName() == [null]","this.matchers[] elements has only one value","this.invocation.arguments[] elements == null","this.invocation.location has only one value","this.invocation.rawArguments[] elements == null","this.invocation.rawArguments[].getClass().getName() elements == null","this.invocation.arguments has only one value","this.matchers has only one value","this.invocation.arguments[].getClass().getName() == [null]","this.invocation.rawArguments has only one value","return[].getClass().getName() == [org.mockito.internal.matchers.LocalizedMatcher]","this.invocation has only one value","this.invocation.arguments[].getClass().getName() elements == null","this.invocation.location.firstTraceElement has only one value","this.invocation.realMethod has only one value","this.matchers[].getClass().getName() elements == org.mockito.internal.matchers.LocalizedMatcher.class","this.matchers[].getClass().getName() == [org.mockito.internal.matchers.LocalizedMatcher]","this.invocation.sequenceNumber == 1","this.matchers[] contains no nulls and has only one value, of length 1","return[] contains no nulls and has only one value, of length 1","return[] elements has only one value"]}}]}]},{"hasSameMethod(org.mockito.internal.invocation.Invocation)":[{"ENTER":[{"b.inv.output":{"invs":["candidate.mock.getClass().getName() == org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest$Fun$$EnhancerByMockitoWithCGLIB$$abb6c88.class"]}},{"Patch179.inv.output":{"invs":["candidate.mock.getClass().getName() == org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest$Fun$$EnhancerByMockitoWithCGLIB$$4038d86a.class"]}}]},{"EXIT":[{"b.inv.output":{"invs":["candidate.mock.getClass().getName() == org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest$Fun$$EnhancerByMockitoWithCGLIB$$abb6c88.class"]}},{"Patch179.inv.output":{"invs":["candidate.mock.getClass().getName() == org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest$Fun$$EnhancerByMockitoWithCGLIB$$4038d86a.class"]}}]},{"EXIT":[{"b.inv.output":{"invs":[]}},{"Patch179.inv.output":{"invs":["candidate.mock.getClass().getName() == org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest$Fun$$EnhancerByMockitoWithCGLIB$$4038d86a.class"]}}]}]},{"argumentsMatch(java.lang.Object[])":[{"ENTER":[{"b.inv.output":{"invs":[]}},{"Patch179.inv.output":{"invs":[]}}]},{"EXIT":[{"b.inv.output":{"invs":["(this.invocation.sequenceNumber == 1)  <==>  (this.invocation.rawArguments[] elements == null)","(this.invocation.sequenceNumber == 3)  <==>  (this.invocation.rawArguments[].getClass().getName() == [java.lang.String])","(this.invocation.sequenceNumber == 1)  <==>  (this.invocation.arguments[].getClass().getName() elements == null)","(this.invocation.sequenceNumber == 3)  <==>  (this.invocation.rawArguments[] contains no nulls and has only one value, of length 1)","(this.invocation.sequenceNumber == 1)  <==>  (this.matchers[].getClass().getName() elements == org.mockito.internal.matchers.LocalizedMatcher.class)","(this.invocation.sequenceNumber == 1)  <==>  (this.invocation.rawArguments[].getClass().getName() == [null])","(this.invocation.sequenceNumber == 3)  <==>  (this.invocation.rawArguments[] elements has only one value)","(this.invocation.sequenceNumber == 1)  <==>  (this.matchers[].getClass().getName() == [org.mockito.internal.matchers.LocalizedMatcher])","(this.invocation.sequenceNumber == 1)  <==>  (this.invocation.arguments[] elements == null)","(this.invocation.sequenceNumber == 1)  <==>  (this.matchers[] contains no nulls and has only one value, of length 1)","(this.invocation.sequenceNumber == 3)  <==>  (this.invocation.arguments[] contains no nulls and has only one value, of length 1)","(this.invocation.sequenceNumber == 3)  <==>  (this.invocation.arguments[].getClass().getName() == [java.lang.String])","(this.invocation.sequenceNumber == 1)  <==>  (this.invocation.rawArguments[].getClass().getName() elements == null)","(this.invocation.sequenceNumber == 1)  <==>  (return == true)","(this.invocation.sequenceNumber == 3)  <==>  (this.invocation.arguments[] elements has only one value)","(this.invocation.sequenceNumber == 3)  <==>  (this.matchers[] contains no nulls and has only one value, of length 1)","(this.invocation.sequenceNumber == 1)  <==>  (this.invocation.arguments[] == [null])","(this.invocation.sequenceNumber == 1)  <==>  (this.invocation.rawArguments[] == [null])","(this.invocation.sequenceNumber == 3)  <==>  (this.invocation.arguments[].getClass().getName() elements == java.lang.String.class)","(this.invocation.sequenceNumber == 3)  <==>  (this.matchers[].getClass().getName() == [org.mockito.internal.matchers.Equals])","(this.invocation.sequenceNumber == 1)  <==>  (this.invocation.arguments[].getClass().getName() == [null])","(this.invocation.sequenceNumber == 3)  <==>  (this.matchers[].getClass().getName() elements == org.mockito.internal.matchers.Equals.class)","(this.invocation.sequenceNumber == 3)  <==>  (this.invocation.rawArguments[].getClass().getName() elements == java.lang.String.class)","(this.invocation.sequenceNumber == 3)  <==>  (return == false)"]}},{"Patch179.inv.output":{"invs":["return == true"]}}]},{"EXIT":[{"b.inv.output":{"invs":["this.invocation.rawArguments[] == [null]","this.invocation.arguments[] == [null]","orig(this) has only one value","this.invocation has only one value","this.invocation.arguments[].getClass().getName() elements == null","this.invocation.location.firstTraceElement has only one value","this.invocation.realMethod has only one value","this.matchers[].getClass().getName() elements == org.mockito.internal.matchers.LocalizedMatcher.class","this.invocation.rawArguments[].getClass().getName() == [null]","this.matchers[] elements has only one value","this.matchers[].getClass().getName() == [org.mockito.internal.matchers.LocalizedMatcher]","this.invocation.arguments[] elements == null","return == true","this.invocation.location has only one value","this.invocation.rawArguments[] elements == null","this.invocation.rawArguments[].getClass().getName() elements == null","this.invocation.sequenceNumber == 1","this.invocation.arguments has only one value","this.matchers has only one value","this.matchers[] contains no nulls and has only one value, of length 1","this.invocation.arguments[].getClass().getName() == [null]","this.invocation.rawArguments has only one value"]}},{"Patch179.inv.output":{"invs":["return == true"]}}]},{"EXIT":[{"b.inv.output":{"invs":["this.matchers[].getClass().getName() elements == org.mockito.internal.matchers.Equals.class","this.invocation.rawArguments[] elements has only one value","this.invocation.arguments[] contains no nulls and has only one value, of length 1","orig(this) has only one value","this.invocation has only one value","this.invocation.location.firstTraceElement has only one value","this.matchers[].getClass().getName() == [org.mockito.internal.matchers.Equals]","this.invocation.realMethod has only one value","this.invocation.arguments[] elements has only one value","this.invocation.rawArguments[].getClass().getName() == [java.lang.String]","this.invocation.arguments[].getClass().getName() elements == java.lang.String.class","this.invocation.arguments[].getClass().getName() == [java.lang.String]","return == false","this.matchers[] elements has only one value","this.invocation.location has only one value","this.invocation.arguments has only one value","this.invocation.rawArguments[] contains no nulls and has only one value, of length 1","this.matchers has only one value","this.matchers[] contains no nulls and has only one value, of length 1","this.invocation.sequenceNumber == 3","this.invocation.rawArguments has only one value","this.invocation.rawArguments[].getClass().getName() elements == java.lang.String.class"]}},{"Patch179.inv.output":{"invs":["return == true"]}}]},{"EXITNN":[{"67":[{"b.inv.output":{"invs":["this.invocation.rawArguments[] == [null]","this.invocation.arguments[] == [null]","orig(this) has only one value","this.invocation has only one value","this.invocation.arguments[].getClass().getName() elements == null","this.invocation.location.firstTraceElement has only one value","this.invocation.realMethod has only one value","this.matchers[].getClass().getName() elements == org.mockito.internal.matchers.LocalizedMatcher.class","this.invocation.rawArguments[].getClass().getName() == [null]","this.matchers[] elements has only one value","this.matchers[].getClass().getName() == [org.mockito.internal.matchers.LocalizedMatcher]","this.invocation.arguments[] elements == null","return == true","this.invocation.location has only one value","this.invocation.rawArguments[] elements == null","this.invocation.rawArguments[].getClass().getName() elements == null","this.invocation.sequenceNumber == 1","this.invocation.arguments has only one value","this.matchers has only one value","this.matchers[] contains no nulls and has only one value, of length 1","this.invocation.arguments[].getClass().getName() == [null]","this.invocation.rawArguments has only one value"]}},{"Patch179.inv.output":{"invs":[]}}]}]},{"EXITNN":[{"67":[{"b.inv.output":{"invs":[]}},{"Patch179.inv.output":{"invs":[]}}]}]},{"EXITNN":[{"64":[{"b.inv.output":{"invs":["this.matchers[].getClass().getName() elements == org.mockito.internal.matchers.Equals.class","this.invocation.rawArguments[] elements has only one value","this.invocation.arguments[] contains no nulls and has only one value, of length 1","orig(this) has only one value","this.invocation has only one value","this.invocation.location.firstTraceElement has only one value","this.matchers[].getClass().getName() == [org.mockito.internal.matchers.Equals]","this.invocation.realMethod has only one value","this.invocation.arguments[] elements has only one value","this.invocation.rawArguments[].getClass().getName() == [java.lang.String]","this.invocation.arguments[].getClass().getName() elements == java.lang.String.class","this.invocation.arguments[].getClass().getName() == [java.lang.String]","return == false","this.matchers[] elements has only one value","this.invocation.location has only one value","this.invocation.arguments has only one value","this.invocation.rawArguments[] contains no nulls and has only one value, of length 1","this.matchers has only one value","this.matchers[] contains no nulls and has only one value, of length 1","this.invocation.sequenceNumber == 3","this.invocation.rawArguments has only one value","this.invocation.rawArguments[].getClass().getName() elements == java.lang.String.class"]}},{"Patch179.inv.output":"N/A"}]}]},{"EXITNN":[{"64":[{"b.inv.output":{"invs":[]}},{"Patch179.inv.output":"N/A"}]}]}]},{"matches(org.mockito.internal.invocation.Invocation)":[{"ENTER":[{"b.inv.output":{"invs":["actual.mock.getClass().getName() == org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest$Fun$$EnhancerByMockitoWithCGLIB$$abb6c88.class"]}},{"Patch179.inv.output":{"invs":["actual.mock.getClass().getName() == org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest$Fun$$EnhancerByMockitoWithCGLIB$$4038d86a.class"]}}]},{"EXIT":[{"b.inv.output":{"invs":["(this.invocation.sequenceNumber == 1)  <==>  (this.invocation.rawArguments[] elements == null)","(this.invocation.sequenceNumber == 3)  <==>  (this.invocation.rawArguments[].getClass().getName() == [java.lang.String])","(this.invocation.sequenceNumber == 1)  <==>  (this.invocation.arguments[].getClass().getName() elements == null)","(this.invocation.sequenceNumber == 3)  <==>  (this.invocation.rawArguments[] contains no nulls and has only one value, of length 1)","(this.invocation.sequenceNumber == 1)  <==>  (this.matchers[].getClass().getName() elements == org.mockito.internal.matchers.LocalizedMatcher.class)","(this.invocation.sequenceNumber == 1)  <==>  (this.invocation.rawArguments[].getClass().getName() == [null])","(this.invocation.sequenceNumber == 3)  <==>  (this.invocation.rawArguments[] elements has only one value)","(this.invocation.sequenceNumber == 1)  <==>  (this.matchers[].getClass().getName() == [org.mockito.internal.matchers.LocalizedMatcher])","(this.invocation.sequenceNumber == 1)  <==>  (this.invocation.arguments[] elements == null)","(this.invocation.sequenceNumber == 1)  <==>  (this.matchers[] contains no nulls and has only one value, of length 1)","(this.invocation.sequenceNumber == 3)  <==>  (this.invocation.arguments[] contains no nulls and has only one value, of length 1)","(this.invocation.sequenceNumber == 3)  <==>  (this.invocation.arguments[].getClass().getName() == [java.lang.String])","(this.invocation.sequenceNumber == 1)  <==>  (this.invocation.rawArguments[].getClass().getName() elements == null)","(this.invocation.sequenceNumber == 1)  <==>  (return == true)","(this.invocation.sequenceNumber == 3)  <==>  (this.invocation.arguments[] elements has only one value)","(this.invocation.sequenceNumber == 3)  <==>  (this.matchers[] contains no nulls and has only one value, of length 1)","(this.invocation.sequenceNumber == 1)  <==>  (this.invocation.arguments[] == [null])","(this.invocation.sequenceNumber == 1)  <==>  (this.invocation.rawArguments[] == [null])","(this.invocation.sequenceNumber == 3)  <==>  (this.invocation.arguments[].getClass().getName() elements == java.lang.String.class)","(this.invocation.sequenceNumber == 3)  <==>  (this.matchers[].getClass().getName() == [org.mockito.internal.matchers.Equals])","(this.invocation.sequenceNumber == 1)  <==>  (this.invocation.arguments[].getClass().getName() == [null])","(this.invocation.sequenceNumber == 3)  <==>  (this.matchers[].getClass().getName() elements == org.mockito.internal.matchers.Equals.class)","(this.invocation.sequenceNumber == 3)  <==>  (this.invocation.rawArguments[].getClass().getName() elements == java.lang.String.class)","actual.mock.getClass().getName() == org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest$Fun$$EnhancerByMockitoWithCGLIB$$abb6c88.class","(this.invocation.sequenceNumber == 3)  <==>  (return == false)"]}},{"Patch179.inv.output":{"invs":["return == true","actual.mock.getClass().getName() == org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest$Fun$$EnhancerByMockitoWithCGLIB$$4038d86a.class"]}}]},{"EXIT":[{"b.inv.output":{"invs":["this.invocation.rawArguments[] == [null]","this.invocation.arguments[] == [null]","orig(this) has only one value","this.invocation has only one value","this.invocation.arguments[].getClass().getName() elements == null","this.invocation.location.firstTraceElement has only one value","this.invocation.realMethod has only one value","this.matchers[].getClass().getName() elements == org.mockito.internal.matchers.LocalizedMatcher.class","this.invocation.rawArguments[].getClass().getName() == [null]","this.matchers[] elements has only one value","this.matchers[].getClass().getName() == [org.mockito.internal.matchers.LocalizedMatcher]","this.invocation.arguments[] elements == null","return == true","this.invocation.location has only one value","this.invocation.rawArguments[] elements == null","this.invocation.rawArguments[].getClass().getName() elements == null","this.invocation.sequenceNumber == 1","this.invocation.arguments has only one value","this.matchers has only one value","this.matchers[] contains no nulls and has only one value, of length 1","this.invocation.arguments[].getClass().getName() == [null]","this.invocation.rawArguments has only one value"]}},{"Patch179.inv.output":{"invs":["return == true","actual.mock.getClass().getName() == org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest$Fun$$EnhancerByMockitoWithCGLIB$$4038d86a.class"]}}]},{"EXIT":[{"b.inv.output":{"invs":["this.matchers[].getClass().getName() elements == org.mockito.internal.matchers.Equals.class","this.invocation.rawArguments[] elements has only one value","this.invocation.arguments[] contains no nulls and has only one value, of length 1","orig(this) has only one value","this.invocation has only one value","this.invocation.location.firstTraceElement has only one value","this.matchers[].getClass().getName() == [org.mockito.internal.matchers.Equals]","this.invocation.realMethod has only one value","this.invocation.arguments[] elements has only one value","this.invocation.rawArguments[].getClass().getName() == [java.lang.String]","this.invocation.arguments[].getClass().getName() elements == java.lang.String.class","this.invocation.arguments[].getClass().getName() == [java.lang.String]","return == false","this.matchers[] elements has only one value","this.invocation.location has only one value","this.invocation.arguments has only one value","this.invocation.rawArguments[] contains no nulls and has only one value, of length 1","this.matchers has only one value","this.matchers[] contains no nulls and has only one value, of length 1","this.invocation.sequenceNumber == 3","this.invocation.rawArguments has only one value","this.invocation.rawArguments[].getClass().getName() elements == java.lang.String.class"]}},{"Patch179.inv.output":{"invs":["return == true","actual.mock.getClass().getName() == org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest$Fun$$EnhancerByMockitoWithCGLIB$$4038d86a.class"]}}]}]},{"getInvocation()":[{"ENTER":[{"b.inv.output":{"invs":[]}},{"Patch179.inv.output":{"invs":["this.invocation.sequenceNumber one of { 1, 2 }","this.invocation.rawArguments[] == [null]","this.invocation.rawArguments[].getClass().getName() == [null]","this.invocation.arguments[] == [null]","this.invocation.arguments[] elements == null","this.invocation.arguments[].getClass().getName() elements == null","this.invocation.rawArguments[] elements == null","this.invocation.rawArguments[].getClass().getName() elements == null","this.invocation.arguments[].getClass().getName() == [null]"]}}]},{"EXIT":[{"b.inv.output":{"invs":["return.mock.getClass().getName() == org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest$Fun$$EnhancerByMockitoWithCGLIB$$abb6c88.class","return.sequenceNumber one of { 1, 2, 3 }","return.rawArguments[].getClass().getName() one of { [null], [java.lang.String] }","return.arguments[].getClass().getName() one of { [null], [java.lang.String] }"]}},{"Patch179.inv.output":{"invs":["return.arguments[].getClass().getName() elements == null","return.arguments[] == [null]","this.invocation.rawArguments[].getClass().getName() == [null]","this.invocation.rawArguments[].getClass().getName() elements == null","return.rawArguments[] == [null]","return.rawArguments[] elements == null","return.sequenceNumber one of { 1, 2 }","this.invocation.rawArguments[] == [null]","this.invocation.arguments[] == [null]","return.rawArguments[].getClass().getName() elements == null","return.arguments[].getClass().getName() == [null]","return.rawArguments[].getClass().getName() == [null]","this.invocation.arguments[] elements == null","this.invocation.rawArguments[] elements == null","this.invocation.arguments[].getClass().getName() == [null]","this.invocation.sequenceNumber one of { 1, 2 }","return.mock.getClass().getName() == org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest$Fun$$EnhancerByMockitoWithCGLIB$$4038d86a.class","this.invocation.arguments[].getClass().getName() elements == null","return.arguments[] elements == null"]}}]}]}]}